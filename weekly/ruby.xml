<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Ruby Weekly Trending</title>
    <description>Weekly Trending of Ruby in GitHub</description>
    <pubDate>Sat, 27 Sep 2025 01:46:44 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>postalserver/postal</title>
      <link>https://github.com/postalserver/postal</link>
      <description>&lt;p&gt;üìÆ A fully featured open source mail delivery platform for incoming &amp; outgoing e-mail&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://github.com/postalserver/.github/assets/4765/7a63c35d-2f47-412f-a6b3-aebc92a55310&quot; alt=&quot;GitHub Header&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Postal&lt;/strong&gt; is a complete and fully featured mail server for use by websites &amp;amp; web servers. Think Sendgrid, Mailgun or Postmark but open source and ready for you to run on your own servers.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.postalserver.io&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.postalserver.io/getting-started&quot;&gt;Installation Instructions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.postalserver.io/welcome/faqs&quot;&gt;FAQs&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://docs.postalserver.io/welcome/feature-list&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/postalserver/postal/discussions&quot;&gt;Discussions&lt;/a&gt; - ask for help or request a feature&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.postalserver.io&quot;&gt;Join us on Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>chatwoot/chatwoot</title>
      <link>https://github.com/chatwoot/chatwoot</link>
      <description>&lt;p&gt;Open-source live-chat, email support, omni-channel desk. An alternative to Intercom, Zendesk, Salesforce Service Cloud etc. üî•üí¨&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chatwoot/chatwoot/develop/.github/screenshots/header.png#gh-light-mode-only&quot; width=&quot;100%&quot; alt=&quot;Header light mode&quot; /&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/chatwoot/chatwoot/develop/.github/screenshots/header-dark.png#gh-dark-mode-only&quot; width=&quot;100%&quot; alt=&quot;Header dark mode&quot; /&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Chatwoot&lt;/h1&gt; 
&lt;p&gt;The modern customer support platform, an open-source alternative to Intercom, Zendesk, Salesforce Service Cloud etc.&lt;/p&gt; 
&lt;p&gt; &lt;a href=&quot;https://codeclimate.com/github/chatwoot/chatwoot/maintainability&quot;&gt;&lt;img src=&quot;https://api.codeclimate.com/v1/badges/e6e3f66332c91e5a4c0c/maintainability&quot; alt=&quot;Maintainability&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/circleci/build/github/chatwoot/chatwoot&quot; alt=&quot;CircleCI Badge&quot; /&gt; &lt;a href=&quot;https://hub.docker.com/r/chatwoot/chatwoot/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/chatwoot/chatwoot&quot; alt=&quot;Docker Pull Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/chatwoot/chatwoot/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/cloud/build/chatwoot/chatwoot&quot; alt=&quot;Docker Build Badge&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/chatwoot/chatwoot&quot; alt=&quot;Commits-per-month&quot; /&gt; &lt;a title=&quot;Crowdin&quot; target=&quot;_self&quot; href=&quot;https://chatwoot.crowdin.com/chatwoot&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/e/37ced7eba411064bd792feb3b7a28b16/localized.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/cJXdrwS&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/647412545203994635&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://status.chatwoot.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fchatwoot%2Fstatus%2Fmaster%2Fapi%2Fchatwoot%2Fuptime.json&quot; alt=&quot;uptime&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://status.chatwoot.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fchatwoot%2Fstatus%2Fmaster%2Fapi%2Fchatwoot%2Fresponse-time.json&quot; alt=&quot;response time&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://artifacthub.io/packages/helm/chatwoot/chatwoot&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/artifact-hub&quot; alt=&quot;Artifact HUB&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt; &lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/chatwoot/chatwoot/tree/master&quot; alt=&quot;Deploy to Heroku&quot;&gt; &lt;img width=&quot;150&quot; alt=&quot;Deploy&quot; src=&quot;https://www.herokucdn.com/deploy/button.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://marketplace.digitalocean.com/apps/chatwoot?refcode=f2238426a2a8&quot; alt=&quot;Deploy to DigitalOcean&quot;&gt; &lt;img width=&quot;200&quot; alt=&quot;Deploy to DO&quot; src=&quot;https://www.deploytodo.com/do-btn-blue.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/chatwoot/chatwoot/develop/.github/screenshots/dashboard.png#gh-light-mode-only&quot; width=&quot;100%&quot; alt=&quot;Chat dashboard dark mode&quot; /&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/chatwoot/chatwoot/develop/.github/screenshots/dashboard-dark.png#gh-dark-mode-only&quot; width=&quot;100%&quot; alt=&quot;Chat dashboard&quot; /&gt; 
&lt;hr /&gt; 
&lt;p&gt;Chatwoot is the modern, open-source, and self-hosted customer support platform designed to help businesses deliver exceptional customer support experience. Built for scale and flexibility, Chatwoot gives you full control over your customer data while providing powerful tools to manage conversations across channels.&lt;/p&gt; 
&lt;h3&gt;‚ú® Captain ‚Äì AI Agent for Support&lt;/h3&gt; 
&lt;p&gt;Supercharge your support with Captain, Chatwoot‚Äôs AI agent. Captain helps automate responses, handle common queries, and reduce agent workload‚Äîensuring customers get instant, accurate answers. With Captain, your team can focus on complex conversations while routine questions are resolved automatically. Read more about Captain &lt;a href=&quot;https://chwt.app/captain-docs&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;üí¨ Omnichannel Support Desk&lt;/h3&gt; 
&lt;p&gt;Chatwoot centralizes all customer conversations into one powerful inbox, no matter where your customers reach out from. It supports live chat on your website, email, Facebook, Instagram, Twitter, WhatsApp, Telegram, Line, SMS etc.&lt;/p&gt; 
&lt;h3&gt;üìö Help center portal&lt;/h3&gt; 
&lt;p&gt;Publish help articles, FAQs, and guides through the built-in Help Center Portal. Enable customers to find answers on their own, reduce repetitive queries, and keep your support team focused on more complex issues.&lt;/p&gt; 
&lt;h3&gt;üóÇÔ∏è Other features&lt;/h3&gt; 
&lt;h4&gt;Collaboration &amp;amp; Productivity&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Private Notes and @mentions for internal team discussions.&lt;/li&gt; 
 &lt;li&gt;Labels to organize and categorize conversations.&lt;/li&gt; 
 &lt;li&gt;Keyboard Shortcuts and a Command Bar for quick navigation.&lt;/li&gt; 
 &lt;li&gt;Canned Responses to reply faster to frequently asked questions.&lt;/li&gt; 
 &lt;li&gt;Auto-Assignment to route conversations based on agent availability.&lt;/li&gt; 
 &lt;li&gt;Multi-lingual Support to serve customers in multiple languages.&lt;/li&gt; 
 &lt;li&gt;Custom Views and Filters for better inbox organization.&lt;/li&gt; 
 &lt;li&gt;Business Hours and Auto-Responders to manage response expectations.&lt;/li&gt; 
 &lt;li&gt;Teams and Automation tools for scaling support workflows.&lt;/li&gt; 
 &lt;li&gt;Agent Capacity Management to balance workload across the team.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Customer Data &amp;amp; Segmentation&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Contact Management with profiles and interaction history.&lt;/li&gt; 
 &lt;li&gt;Contact Segments and Notes for targeted communication.&lt;/li&gt; 
 &lt;li&gt;Campaigns to proactively engage customers.&lt;/li&gt; 
 &lt;li&gt;Custom Attributes for storing additional customer data.&lt;/li&gt; 
 &lt;li&gt;Pre-Chat Forms to collect user information before starting conversations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Integrations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Slack Integration to manage conversations directly from Slack.&lt;/li&gt; 
 &lt;li&gt;Dialogflow Integration for chatbot automation.&lt;/li&gt; 
 &lt;li&gt;Dashboard Apps to embed internal tools within Chatwoot.&lt;/li&gt; 
 &lt;li&gt;Shopify Integration to view and manage customer orders right within Chatwoot.&lt;/li&gt; 
 &lt;li&gt;Use Google Translate to translate messages from your customers in realtime.&lt;/li&gt; 
 &lt;li&gt;Create and manage Linear tickets within Chatwoot.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Reports &amp;amp; Insights&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Live View of ongoing conversations for real-time monitoring.&lt;/li&gt; 
 &lt;li&gt;Conversation, Agent, Inbox, Label, and Team Reports for operational visibility.&lt;/li&gt; 
 &lt;li&gt;CSAT Reports to measure customer satisfaction.&lt;/li&gt; 
 &lt;li&gt;Downloadable Reports for offline analysis and reporting.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Detailed documentation is available at &lt;a href=&quot;https://www.chatwoot.com/help-center&quot;&gt;chatwoot.com/help-center&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Translation process&lt;/h2&gt; 
&lt;p&gt;The translation process for Chatwoot web and mobile app is managed at &lt;a href=&quot;https://translate.chatwoot.com&quot;&gt;https://translate.chatwoot.com&lt;/a&gt; using Crowdin. Please read the &lt;a href=&quot;https://www.chatwoot.com/docs/contributing/translating-chatwoot-to-your-language&quot;&gt;translation guide&lt;/a&gt; for contributing to Chatwoot.&lt;/p&gt; 
&lt;h2&gt;Branching model&lt;/h2&gt; 
&lt;p&gt;We use the &lt;a href=&quot;https://nvie.com/posts/a-successful-git-branching-model/&quot;&gt;git-flow&lt;/a&gt; branching model. The base branch is &lt;code&gt;develop&lt;/code&gt;. If you are looking for a stable version, please use the &lt;code&gt;master&lt;/code&gt; or tags labelled as &lt;code&gt;v1.x.x&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;h3&gt;Heroku one-click deploy&lt;/h3&gt; 
&lt;p&gt;Deploying Chatwoot to Heroku is a breeze. It&#39;s as simple as clicking this button:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/chatwoot/chatwoot/tree/master&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg?sanitize=true&quot; alt=&quot;Deploy&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Follow this &lt;a href=&quot;https://www.chatwoot.com/docs/environment-variables&quot;&gt;link&lt;/a&gt; to understand setting the correct environment variables for the app to work with all the features. There might be breakages if you do not set the relevant environment variables.&lt;/p&gt; 
&lt;h3&gt;DigitalOcean 1-Click Kubernetes deployment&lt;/h3&gt; 
&lt;p&gt;Chatwoot now supports 1-Click deployment to DigitalOcean as a kubernetes app.&lt;/p&gt; 
&lt;a href=&quot;https://marketplace.digitalocean.com/apps/chatwoot?refcode=f2238426a2a8&quot; alt=&quot;Deploy to DigitalOcean&quot;&gt; &lt;img width=&quot;200&quot; alt=&quot;Deploy to DO&quot; src=&quot;https://www.deploytodo.com/do-btn-blue.svg?sanitize=true&quot; /&gt; &lt;/a&gt; 
&lt;h3&gt;Other deployment options&lt;/h3&gt; 
&lt;p&gt;For other supported options, checkout our &lt;a href=&quot;https://chatwoot.com/deploy&quot;&gt;deployment page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Looking to report a vulnerability? Please refer our &lt;a href=&quot;https://raw.githubusercontent.com/chatwoot/chatwoot/develop/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;If you need help or just want to hang out, come, say hi on our &lt;a href=&quot;https://discord.gg/cJXdrwS&quot;&gt;Discord&lt;/a&gt; server.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks goes to all these &lt;a href=&quot;https://www.chatwoot.com/docs/contributors&quot;&gt;wonderful people&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chatwoot/chatwoot/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/chatwoot/contributors.svg?width=890&amp;amp;button=false&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Chatwoot&lt;/em&gt; ¬© 2017-2025, Chatwoot Inc - Released under the MIT License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jekyll/jekyll</title>
      <link>https://github.com/jekyll/jekyll</link>
      <description>&lt;p&gt;üåê Jekyll is a blog-aware static site generator in Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/jekyll&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/jekyll.svg?sanitize=true&quot; alt=&quot;Gem Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/jekyll/jekyll/actions?query=workflow%3A%22Continuous+Integration%22+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/jekyll/jekyll/workflows/Continuous%20Integration/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/jekyll/jekyll/master/#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/backers/badge.svg?sanitize=true&quot; alt=&quot;Backers on Open Collective&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/jekyll/jekyll/master/#sponsors&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsors/badge.svg?sanitize=true&quot; alt=&quot;Sponsors on Open Collective&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;, which you can use to host sites right from your GitHub repositories.&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;Jekyll does what you tell it to do&amp;nbsp;‚Äî no more, no less. It doesn&#39;t try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content.&lt;/p&gt; 
&lt;p&gt;See: &lt;a href=&quot;https://jekyllrb.com/philosophy&quot;&gt;https://jekyllrb.com/philosophy&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/&quot;&gt;Install&lt;/a&gt; the gem&lt;/li&gt; 
 &lt;li&gt;Read up about its &lt;a href=&quot;https://jekyllrb.com/docs/usage/&quot;&gt;Usage&lt;/a&gt; and &lt;a href=&quot;https://jekyllrb.com/docs/configuration/&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Take a gander at some existing &lt;a href=&quot;https://github.com/jekyll/jekyll/wiki/sites&quot;&gt;Sites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll/fork&quot;&gt;Fork&lt;/a&gt; and &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;Contribute&lt;/a&gt; your own modifications&lt;/li&gt; 
 &lt;li&gt;Have questions? Check out our official forum community &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt; and &lt;a href=&quot;https://libera.chat&quot;&gt;&lt;code&gt;#jekyll&lt;/code&gt; Channel on Libera IRC&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Diving In&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt;Migrate&lt;/a&gt; from your previous system&lt;/li&gt; 
 &lt;li&gt;Learn how &lt;a href=&quot;https://jekyllrb.com/docs/front-matter/&quot;&gt;Front Matter&lt;/a&gt; works&lt;/li&gt; 
 &lt;li&gt;Put information on your site with &lt;a href=&quot;https://jekyllrb.com/docs/variables/&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Customize the &lt;a href=&quot;https://jekyllrb.com/docs/permalinks/&quot;&gt;Permalinks&lt;/a&gt; your posts are generated with&lt;/li&gt; 
 &lt;li&gt;Use the built-in &lt;a href=&quot;https://jekyllrb.com/docs/templates/&quot;&gt;Liquid Extensions&lt;/a&gt; to make your life easier&lt;/li&gt; 
 &lt;li&gt;Use custom &lt;a href=&quot;https://jekyllrb.com/docs/plugins/&quot;&gt;Plugins&lt;/a&gt; to generate content specific to your site&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href=&quot;https://jekyllrb.com/tutorials/video-walkthroughs/&quot;&gt;video tutorials from Giraffe Academy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Need help?&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t find the answer to your problem in our &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;docs&lt;/a&gt;, or in the &lt;a href=&quot;https://jekyllrb.com/docs/troubleshooting/&quot;&gt;troubleshooting section&lt;/a&gt;, ask the &lt;a href=&quot;https://jekyllrb.com/docs/community/&quot;&gt;community&lt;/a&gt; for help.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;In order to have a more open and welcoming community, Jekyll adheres to a &lt;a href=&quot;https://jekyllrb.com/docs/conduct/&quot;&gt;code of conduct&lt;/a&gt; adapted from the Ruby on Rails code of conduct.&lt;/p&gt; 
&lt;p&gt;Please adhere to this code of conduct in any interactions you have in the Jekyll community. It is strictly enforced on all official Jekyll repositories, websites, and resources. If you encounter someone violating these terms, please let one of our &lt;a href=&quot;https://jekyllrb.com/team/#core-team&quot;&gt;core team members&lt;/a&gt; know and we will address it as soon as possible.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up in this README with a link to your website. &lt;a href=&quot;https://opencollective.com/jekyll#sponsor&quot;&gt;Become a sponsor!&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/0/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 0&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/1/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 1&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/2/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 2&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/3/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 3&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/4/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 4&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/5/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 5&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/6/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 6&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/7/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 7&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/8/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 8&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/9/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 9&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&quot;https://raw.githubusercontent.com/jekyll/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/contributors.svg?width=890&amp;amp;button=false&quot; alt=&quot;Jekyll Contributors&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! üôè &lt;a href=&quot;https://opencollective.com/jekyll#backer&quot;&gt;Become a backer&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/jekyll#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/backers.svg?width=890&quot; alt=&quot;Jekyll Backers&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/jekyll/jekyll/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/vagrant</title>
      <link>https://github.com/hashicorp/vagrant</link>
      <description>&lt;p&gt;Vagrant is a tool for building and distributing development environments.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vagrant&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;https://www.vagrantup.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Source: &lt;a href=&quot;https://github.com/hashicorp/vagrant&quot;&gt;https://github.com/hashicorp/vagrant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HashiCorp Discuss: &lt;a href=&quot;https://discuss.hashicorp.com/c/vagrant/24&quot;&gt;https://discuss.hashicorp.com/c/vagrant/24&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Vagrant is a tool for building and distributing development environments.&lt;/p&gt; 
&lt;p&gt;Development environments managed by Vagrant can run on local virtualized platforms such as VirtualBox or VMware, in the cloud via AWS or OpenStack, or in containers such as with Docker or raw LXC.&lt;/p&gt; 
&lt;p&gt;Vagrant provides the framework and configuration format to create and manage complete portable development environments. These development environments can live on your computer or in the cloud, and are portable between Windows, Mac OS X, and Linux.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Package dependencies: Vagrant requires &lt;code&gt;bsdtar&lt;/code&gt; and &lt;code&gt;curl&lt;/code&gt; to be available on your system PATH to run successfully.&lt;/p&gt; 
&lt;p&gt;For the quick-start, we&#39;ll bring up a development machine on &lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt; because it is free and works on all major platforms. Vagrant can, however, work with almost any system such as &lt;a href=&quot;https://www.openstack.org/&quot;&gt;OpenStack&lt;/a&gt;, &lt;a href=&quot;https://www.vmware.com/&quot;&gt;VMware&lt;/a&gt;, &lt;a href=&quot;https://docs.docker.com/&quot;&gt;Docker&lt;/a&gt;, etc.&lt;/p&gt; 
&lt;p&gt;First, make sure your development machine has &lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt; installed. After this, &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;download and install the appropriate Vagrant package for your OS&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To build your first virtual environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;vagrant init hashicorp/bionic64
vagrant up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: The above &lt;code&gt;vagrant up&lt;/code&gt; command will also trigger Vagrant to download the &lt;code&gt;bionic64&lt;/code&gt; box via the specified URL. Vagrant only does this if it detects that the box doesn&#39;t already exist on your system.&lt;/p&gt; 
&lt;h2&gt;Getting Started Guide&lt;/h2&gt; 
&lt;p&gt;To learn how to build a fully functional development environment, follow the &lt;a href=&quot;https://www.vagrantup.com/docs/getting-started&quot;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installing from Source&lt;/h2&gt; 
&lt;p&gt;If you want the bleeding edge version of Vagrant, we try to keep main pretty stable and you&#39;re welcome to give it a shot. Please review the installation page &lt;a href=&quot;https://www.vagrantup.com/docs/installation/source&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Vagrant&lt;/h2&gt; 
&lt;p&gt;Please take time to read the &lt;a href=&quot;https://www.hashicorp.com/community-guidelines&quot;&gt;HashiCorp Community Guidelines&lt;/a&gt; and the &lt;a href=&quot;https://github.com/hashicorp/vagrant/raw/main/.github/CONTRIBUTING.md&quot;&gt;Vagrant Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Then you&#39;re good to go!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Homebrew/homebrew-cask</title>
      <link>https://github.com/Homebrew/homebrew-cask</link>
      <description>&lt;p&gt;üçª A CLI workflow for the administration of macOS applications distributed as binaries&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Homebrew Cask&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;‚ÄúTo install, drag this icon‚Ä¶‚Äù no more!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Homebrew Cask extends &lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt; and brings its elegance, simplicity, and speed to the installation and management of GUI macOS applications such as Visual Studio Code and Google Chrome.&lt;/p&gt; 
&lt;p&gt;We do this by providing a friendly CLI workflow for the administration of macOS applications distributed as binaries.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/orgs/Homebrew/discussions/categories/casks&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/github-discussions-informational&quot; alt=&quot;Join us on GitHub discussions&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Let‚Äôs try it!&lt;/h2&gt; 
&lt;p&gt;To start using Homebrew Cask, you just need &lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt; installed.&lt;/p&gt; 
&lt;img src=&quot;https://i.imgur.com/FNNM6WL.gif&quot; width=&quot;547&quot; alt=&quot;Installing and uninstalling Alfred (animated gif)&quot; /&gt; 
&lt;p&gt;Slower, now:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ brew install alfred
==&amp;gt; Downloading https://cachefly.alfredapp.com/Alfred_4.2.1_1187.dmg
######################################################################## 100.0%
==&amp;gt; Verifying SHA-256 checksum for Cask &#39;alfred&#39;.
==&amp;gt; Installing Cask alfred
==&amp;gt; Moving App &#39;Alfred 4.app&#39; to &#39;/Applications/Alfred 4.app&#39;.
üç∫  alfred was successfully installed!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And there we have it. An application installed with one quick command: no clicking, no dragging, no dropping.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find basic documentation on using Homebrew Cask in &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/USAGE.md&quot;&gt;USAGE.md&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Want to contribute a cask? Awesome! See &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;More project-related details and discussion are available in the &lt;a href=&quot;https://docs.brew.sh/Adding-Software-to-Homebrew#casks&quot;&gt;documentation&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting Bugs&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/faq/closing_issues_without_review.md&quot;&gt;&lt;strong&gt;If you ignore this guide, your issue may be closed without review&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Before reporting a bug, run &lt;code&gt;brew update-reset &amp;amp;&amp;amp; brew update&lt;/code&gt; and try your command again. This is a fix-all that will reset the state of all your taps, ensuring the problem isn‚Äôt an outdated setup on your side.&lt;/p&gt; 
&lt;p&gt;If your issue persists, &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/search?type=Issues&quot;&gt;search for it&lt;/a&gt; before opening a new one. If you find an open issue and have any new information, add it in a comment. If you find a closed issue, try the solutions there.&lt;/p&gt; 
&lt;p&gt;If the issue is still not solved, see the guides for common problems:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/reporting_bugs/error_examples.md&quot;&gt;Examples of common errors and their solutions&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/reporting_bugs/error_examples.md#curl-error&quot;&gt;&lt;code&gt;curl&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/reporting_bugs/error_examples.md#permission-denied-error&quot;&gt;&lt;code&gt;Permission denied&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/reporting_bugs/error_examples.md#checksum-does-not-match-error&quot;&gt;&lt;code&gt;Checksum does not match&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/reporting_bugs/error_examples.md#source-is-not-there-error&quot;&gt;&lt;code&gt;source is not there&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/reporting_bugs/error_examples.md#wrong-number-of-arguments-error&quot;&gt;&lt;code&gt;wrong number of arguments&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.brew.sh/FAQ#why-arent-some-apps-included-during-brew-upgrade&quot;&gt;App isn‚Äôt included in &lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.brew.sh/FAQ#why-cant-i-open-a-mac-app-from-an-unidentified-developer&quot;&gt;The app can‚Äôt be opened because it is from an unidentified developer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/issues/new?template=01_bug_report.yml&quot;&gt;My problem isn‚Äôt listed&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requests&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Issues requesting new casks will be closed. If you want a cask added to the main repositories, &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/raw/HEAD/CONTRIBUTING.md#adding-a-cask&quot;&gt;submit a pull request&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For a feature request, &lt;a href=&quot;https://github.com/Homebrew/brew/issues/new?assignees=&amp;amp;labels=features&amp;amp;projects=&amp;amp;template=feature.yml&quot;&gt;use this template&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Questions? Wanna chat?&lt;/h2&gt; 
&lt;p&gt;We‚Äôre really rather friendly! Here are the best places to talk about the project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/issues/new/choose&quot;&gt;Open an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join us on &lt;a href=&quot;https://github.com/orgs/Homebrew/discussions/categories/casks&quot;&gt;GitHub discussions (forum)&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Code is under the &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/LICENSE&quot;&gt;BSD 2 Clause (NetBSD) license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dependabot/dependabot-core</title>
      <link>https://github.com/dependabot/dependabot-core</link>
      <description>&lt;p&gt;ü§ñ Dependabot&#39;s core logic for creating update PRs.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://user-images.githubusercontent.com/7659/174594540-5e29e523-396a-465b-9a6e-6cab5b15a568.svg&quot; /&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://user-images.githubusercontent.com/7659/174594559-0b3ddaa7-e75b-4f10-9dee-b51431a9fd4c.svg&quot; /&gt; 
  &lt;img src=&quot;https://user-images.githubusercontent.com/7659/174594540-5e29e523-396a-465b-9a6e-6cab5b15a568.svg?sanitize=true&quot; alt=&quot;Dependabot&quot; width=&quot;336&quot; /&gt; 
 &lt;/picture&gt; &lt;/h1&gt; 
&lt;p&gt;Welcome to the public home of Dependabot &lt;img alt=&quot;dependabot&quot; src=&quot;https://github.githubassets.com/images/icons/emoji/dependabot.png?v8&quot; /&gt;).&lt;/p&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#what-is-dependabot-core&quot;&gt;What is Dependabot-Core?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#how-to-run-dependabot&quot;&gt;How to run Dependabot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#contributing-to-dependabot&quot;&gt;Contributing to Dependabot&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#reporting-issues-and-feature-requests&quot;&gt;Reporting Issues and Feature Requests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#submitting-pull-requests&quot;&gt;Submitting Pull Requests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#new-ecosystems&quot;&gt;New Ecosystems&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#development-guide&quot;&gt;Development Guide&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#getting-a-development-environment-running&quot;&gt;Getting a Development Environment Running&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#debugging-problems&quot;&gt;Debugging Problems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#running-tests&quot;&gt;Running Tests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#profiling&quot;&gt;Profiling&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#architecture-and-code-layout&quot;&gt;Architecture and Code Layout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#trademarks&quot;&gt;Trademarks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#notes-for-project-maintainers&quot;&gt;Notes for Project Maintainers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h1&gt;What is Dependabot-Core?&lt;/h1&gt; 
&lt;p&gt;Dependabot-Core is the library at the heart of &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot&quot;&gt;Dependabot&lt;/a&gt; security / version updates.&lt;/p&gt; 
&lt;p&gt;Use it to generate automated pull requests updating dependencies for projects written in Ruby, JavaScript, Python, PHP, Dart, Elixir, Elm, Go, Rust, Java and .NET. It can also update git submodules, Docker files, and Terraform files. Features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check for the latest version of a dependency &lt;em&gt;that&#39;s resolvable given a project&#39;s other dependencies&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Generate updated manifest and lockfiles for a new dependency version&lt;/li&gt; 
 &lt;li&gt;Generate PR descriptions that include the updated dependency&#39;s changelogs, release notes, and commits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;How to run Dependabot&lt;/h1&gt; 
&lt;p&gt;Most people are familiar with the Dependabot service that runs on GitHub.com and GitHub Enterprise. Enabling that is as simple as &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuring-dependabot-version-updates&quot;&gt;checking a &lt;code&gt;dependabot.yml&lt;/code&gt; configuration file in to your repository&#39;s &lt;code&gt;.github&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;However, if you want to run a custom version of Dependabot or run it on another platform, you&#39;re not left out in the cold. This repo provides the logic necessary for hosting your own standalone Dependabot. It currently supports opening Pull Requests against repositories hosted on GitHub, Github Enterprise, Azure DevOps, GitLab, BitBucket, and AWS CodeCommit.&lt;/p&gt; 
&lt;p&gt;Dependabot-Core is a library, so you&#39;ll need an entrypoint script of some kind. Here are a few examples to help you get started.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you&#39;re looking to run Dependabot locally for development/debugging purposes, see the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#development-guide&quot;&gt;Development Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Dependabot-Script&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/dependabot/dependabot-script&quot;&gt;dependabot-script&lt;/a&gt; repo provides a collection of example scripts for configuring the Dependabot-Core library. It is intended as a starting point for advanced users to run a self-hosted version of Dependabot within their own projects.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We recently refactored the monolithic docker image used within the Dependabot Core library into one-image-per-ecosystem. Unfortunately, that broke dependabot-scripts, and we haven&#39;t had time to update them yet. We are aware of the problem and hope to provide a solution soon.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Dependabot CLI&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/dependabot/cli&quot;&gt;Dependabot CLI&lt;/a&gt; is a newer tool that may eventually replace &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dependabot-script&quot;&gt;&lt;code&gt;dependabot-script&lt;/code&gt;&lt;/a&gt; for standalone use cases. While it creates dependency diffs, it&#39;s currently missing the logic to turn those diffs into actual PRs. Nevertheless, it may be useful for advanced users looking for examples of how to hack on Dependabot.&lt;/p&gt; 
&lt;h2&gt;Dependabot on CI&lt;/h2&gt; 
&lt;p&gt;In an environment such as GitHub where Dependabot runs in a container, if you want to change your build or installation process depending on whether it&#39;s running within the context of the Dependabot container, you can check the existence of the &lt;code&gt;DEPENDABOT&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h1&gt;Contributing to Dependabot&lt;/h1&gt; 
&lt;h2&gt;Reporting issues and Feature Requests&lt;/h2&gt; 
&lt;p&gt;üëã Want to give us feedback on Dependabot, or contribute to it? That&#39;s great - thank you so much!&lt;/p&gt; 
&lt;h3&gt;Reproducible Example&lt;/h3&gt; 
&lt;p&gt;Most bug reports should be accompanied by a link to a public repository that reproduces the problem. Bug reports that cannot be reproduced on a public repo using the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#cli-tool&quot;&gt;CLI tool&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dry-run-script&quot;&gt;dry-run script&lt;/a&gt; may be closed as &quot;cannot reproduce&quot;.&lt;/p&gt; 
&lt;h3&gt;No &quot;+1&quot; Comments&lt;/h3&gt; 
&lt;p&gt;Our issue tracker is quite active, and as a result there&#39;s a good chance someone already filed the same issue. If so, please upvote that issue, because we use üëç reactions on issues as one signal to gauge the impact of a feature request or bug.&lt;/p&gt; 
&lt;p&gt;However, please do not leave comments that contribute nothing new to the discussion. For details, see &lt;a href=&quot;https://github.com/golang/go/wiki/NoPlusOne&quot;&gt;https://github.com/golang/go/wiki/NoPlusOne&lt;/a&gt;. This is open source, if you see something you want fixed, we are happy to coach you through contributing a pull request to fix it.&lt;/p&gt; 
&lt;h3&gt;Don&#39;t file issues about Security Alerts or Dependency Graph&lt;/h3&gt; 
&lt;p&gt;The issue-tracker is meant solely for issues related to Dependabot&#39;s updating logic. Issues about &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-alerts/about-dependabot-alerts&quot;&gt;security alerts&lt;/a&gt; or &lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-the-dependency-graph&quot;&gt;Dependency Graph&lt;/a&gt; should instead be filed as a &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/code-security&quot;&gt;Code Security discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A good rule of thumb is that if you have questions about the &lt;em&gt;diff&lt;/em&gt; in a PR, it belongs here.&lt;/p&gt; 
&lt;h3&gt;Disclosing Security Issues&lt;/h3&gt; 
&lt;p&gt;If you believe you have found a security vulnerability in Dependabot, please review &lt;a href=&quot;https://github.com/dependabot/dependabot-core/security/policy&quot;&gt;our security policy&lt;/a&gt; for details about disclosing them to the GitHub Bug Bounty program, so we can work to resolve the issue before it is disclosed publicly.&lt;/p&gt; 
&lt;h2&gt;Submitting Pull Requests&lt;/h2&gt; 
&lt;p&gt;Want to contribute to Dependabot? That&#39;s great - thank you so much!&lt;/p&gt; 
&lt;p&gt;Contribution workflow:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the project.&lt;/li&gt; 
 &lt;li&gt;Get the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#getting-a-development-environment-running&quot;&gt;development environment running&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Make your feature addition or bug fix.&lt;/li&gt; 
 &lt;li&gt;Add &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#running-tests&quot;&gt;tests for it&lt;/a&gt;. This is important so we don&#39;t break it in a future version unintentionally.&lt;/li&gt; 
 &lt;li&gt;Send a pull request. The tests will run on it automatically, so don&#39;t worry if you couldn&#39;t get them running locally.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; guidelines for more information.&lt;/p&gt; 
&lt;h2&gt;New Ecosystems&lt;/h2&gt; 
&lt;p&gt;If you&#39;re interested in contributing support for a new ecosystem, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/CONTRIBUTING.md#contributing-new-ecosystems&quot;&gt;contributing guidelines&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h1&gt;Development Guide&lt;/h1&gt; 
&lt;h2&gt;Getting a Development Environment Running&lt;/h2&gt; 
&lt;p&gt;The first step to debugging a problem or writing a new feature is getting a development environment going. We provide a custom &lt;a href=&quot;https://www.docker.com/products/docker-desktop/&quot;&gt;Docker-based&lt;/a&gt; developer shell that bakes in all required dependencies. In most cases this is the best way to work with the project.&lt;/p&gt; 
&lt;p&gt;The developer shell uses volume mounts to incorporate your local changes to Dependabot&#39;s source code. This way you can edit locally using your favorite editor and the changes are immediately reflected within the docker container for performing &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#debugging-problems&quot;&gt;dry-runs&lt;/a&gt; or executing &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#running-tests&quot;&gt;tests&lt;/a&gt;. Note: See caveat about &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#making-changes-to-native-package-manager-helpers&quot;&gt;editing the native package manager helper scripts&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Quickstart&lt;/h3&gt; 
&lt;p&gt;The script to launch the developer shell builds the docker images from scratch if it can&#39;t find them locally. This can take a while.&lt;/p&gt; 
&lt;p&gt;Skip the wait by pulling the pre-built image for the ecosystem you want to work on. The image name uses the &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file#package-ecosystem&quot;&gt;YAML ecosystem name&lt;/a&gt; to specify the ecosystem. For example, for Go Modules, the YAML name is &lt;code&gt;gomod&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ docker pull ghcr.io/dependabot/dependabot-updater-gomod
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Pre-built images are currently only available for AMD64 / Intel architecture. They &lt;em&gt;will&lt;/em&gt; run on ARM, but 2x-3x slower than if you &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#building-images-from-scratch&quot;&gt;manually build ARM-specific images&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Next, run the developer shell, specifying the desired ecosystem &lt;em&gt;using the top-level directory name of the ecosystem in this project&lt;/em&gt;. For example, for Go Modules, the top-level directory is named &lt;code&gt;go_modules&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ bin/docker-dev-shell go_modules
=&amp;gt; running docker development shell
[dependabot-core-dev] ~ $ cd go_modules &amp;amp;&amp;amp; rspec spec # to run tests for a particular package
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building Images from Scratch&lt;/h3&gt; 
&lt;p&gt;Normally the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#quickstart&quot;&gt;Quickstart&lt;/a&gt; is all you need, but occasionally you&#39;ll need to rebuild the underlying images.&lt;/p&gt; 
&lt;p&gt;For example, while we don&#39;t yet publish ARM-specific images, if you &lt;em&gt;are&lt;/em&gt; working on an ARM-based platform, we recommend manually building the images because the resulting containers run much faster.&lt;/p&gt; 
&lt;p&gt;The developer shell runs within a Dependabot Development docker image, which is built on top of an ecosystem image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;flowchart LR
    A[&quot;docker-dev-shell script&quot;] --&amp;gt; B(&quot;Dependabot Development docker image&quot;)
    B --&amp;gt; C(&quot;Dependabot Updater Ecosystem docker image (ecosystem specific)&quot;)
    C --&amp;gt; D(&quot;Dependabot Updater Core docker image&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Changes to the docker files for any of these images requires building one or more of the images locally in order to be reflected in the development shell.&lt;/p&gt; 
&lt;p&gt;The simple but slow way is to delete any existing images and then run &lt;code&gt;bin/docker-dev-shell&lt;/code&gt; which automatically builds missing images.&lt;/p&gt; 
&lt;p&gt;The faster way is to pull all the pre-built images that are dependencies of the image you actually need to build. To (re)build a specific one:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The Updater core image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ docker pull ghcr.io/dependabot/dependabot-updater-core # OR
$ docker build -f Dockerfile.updater-core . --tag=dependabot-manual-build/updater-core # recommended on ARM
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each language/ecosystem sits on top of the core image. You need to rebuild whichever one you‚Äôre working on so it picks up your new core bits. For instance, if you‚Äôre working on &lt;strong&gt;Go Modules&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The Updater ecosystem image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ docker pull ghcr.io/dependabot/dependabot-updater-gomod # OR
$ script/build go_modules # recommended on ARM
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or explicitly:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ docker build \
--platform linux/amd64 \
--file go_modules/Dockerfile \
--build-arg UPDATER_CORE_IMAGE=dependabot-manual-build/updater-core \
--tag dependabot-manual-build/updater-gomod \
.
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Spin-up the development container using the &lt;code&gt;--rebuild&lt;/code&gt; flag:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ bin/docker-dev-shell go_modules --rebuild
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If successful, you should be inside the shell:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;=&amp;gt; running docker development shell
[dependabot-core-dev] ~ $
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Once inside the shell, you can run tests, e.g.:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;rspec common/spec/dependabot/file_fetchers/base_exclude_spec.rb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Making Changes to native Package Manager helpers&lt;/h3&gt; 
&lt;p&gt;Several Dependabot packages make use of &#39;native helpers&#39;, small executables in their host language.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Changes to these files are not automatically reflected inside the development container.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Once you have made any edits to the helper files, run the appropriate build script to update the installed version with your changes like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bin/docker-dev-shell bundler
=&amp;gt; running docker development shell
$ bundler/helpers/v2/build
$ bin/dry-run.rb bundler dependabot/demo --dir=&quot;/ruby&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To view logs and stdout from the native package manager helpers, see &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#debugging-native-package-manager-helpers&quot;&gt;debugging native helpers&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Debugging Problems&lt;/h1&gt; 
&lt;p&gt;The first step to debugging is getting the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#getting-a-development-environment-running&quot;&gt;development environment running&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Within the development environment, you have two options for simulating a dependency update job: You can use the newly-developed &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#cli-tool&quot;&gt;CLI tool&lt;/a&gt; or the original &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dry-run-script&quot;&gt;Dry-run script&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;CLI tool&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/dependabot/cli&quot;&gt;Dependabot CLI&lt;/a&gt; is a newly-developed tool that incorporates the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#private-registry-credential-management&quot;&gt;GitHub Credentials Proxy&lt;/a&gt; to more realistically simulate what&#39;s happening within the Dependabot-at-GitHub service when talking to private registries.&lt;/p&gt; 
&lt;p&gt;It has a &lt;a href=&quot;https://github.com/dependabot/cli#debugging-with-the-cli&quot;&gt;dedicated debugging guide&lt;/a&gt;, including support for dropping into the Ruby debugger.&lt;/p&gt; 
&lt;h2&gt;Dry-Run Script&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Before running the dry-run script, you&#39;ll need to &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#getting-a-development-environment-running&quot;&gt;get the development environment running&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can use the &lt;code&gt;bin/dry-run.rb&lt;/code&gt; script to simulate a dependency update job, printing the diff that would be generated to the terminal. It takes two positional arguments: the &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file#package-ecosystem&quot;&gt;package manager&lt;/a&gt; and the GitHub repo name (including the account):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bin/docker-dev-shell go_modules
=&amp;gt; running docker development shell
$ bin/dry-run.rb go_modules rsc/quote
=&amp;gt; fetching dependency files
=&amp;gt; parsing dependency files
=&amp;gt; updating 2 dependencies
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Helpful options to speed up dry-run testing&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dry-run-script&quot;&gt;Dry-Run script&lt;/a&gt; supports many other options, all of which are documented at the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/bin/dry-run.rb&quot;&gt;top of the script&#39;s source code&lt;/a&gt;. For example:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;LOCAL_GITHUB_ACCESS_TOKEN=&quot;fake-GitHub-PAT&quot;&lt;/code&gt; allows specifying a &lt;a href=&quot;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token&quot;&gt;GitHub Personal Access Token (PAT)&lt;/a&gt; to avoid rate-limiting.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--dir=&quot;path/to/subdir/containing/manifest&lt;/code&gt; is required if the manifest file is located in a subdirectory.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--dep=&quot;dep-name-that-I-want-to-test&quot;&lt;/code&gt; allows specifying a single dep to try to update and all others are ignored.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--cache=files&lt;/code&gt; allows caching remote dep files locally for faster re-runs when testing local logic changes.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--updater-options=feature_flag_name&lt;/code&gt; allows passing in feature flags.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Here&#39;s an example of how to string all these together&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;  LOCAL_GITHUB_ACCESS_TOKEN=github_pat_123_fake_string \
  bin/dry-run.rb docker jeffwidman/secrets-store-driver \
  --dir &quot;/manifest_staging/charts/secrets-store-provider&quot; \
  --cache=files \
  --dep=&quot;secrets-store&quot; \
  --updater-options=kubernetes_updates
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Adding debug breakpoints&lt;/h3&gt; 
&lt;p&gt;You can add a &lt;code&gt;debugger&lt;/code&gt; statement anywhere in the ruby code, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;      def latest_resolvable_version
        debugger
        latest_version_finder.latest_version
      end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you execute the job, the Ruby debugger will open. It should look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;[11, 20] in ~/go_modules/lib/dependabot/go_modules/update_checker.rb
    11|   module GoModules
    12|     class UpdateChecker &amp;lt; Dependabot::UpdateCheckers::Base
    13|       require_relative &quot;update_checker/latest_version_finder&quot;
    14|
    15|       def latest_resolvable_version
=&amp;gt;  16|         debugger
    17|         latest_version_finder.latest_version
    18|       end
    19|
    20|       # This is currently used to short-circuit latest_resolvable_version,
=&amp;gt;#0    Dependabot::GoModules::UpdateChecker#latest_resolvable_version at ~/go_modules/lib/dependabot/go_modules/update_checker.rb:16
  #1    Dependabot::GoModules::UpdateChecker#latest_version at ~/go_modules/lib/dependabot/go_modules/update_checker.rb:24
  # and 9 frames (use `bt&#39; command for all frames)
(rdbg)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At this prompt, you can run &lt;a href=&quot;https://github.com/ruby/debug&quot;&gt;debugger commands&lt;/a&gt; to navigate around, or enter methods and variables to see what they contain. Try entering &lt;code&gt;dependency&lt;/code&gt; to see what dependency Dependabot is currently working on.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; While in the debugger, changes made to the source code will not be picked up. You will have to end your debugging session and restart it.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Debugging Native Package Manager Helpers&lt;/h3&gt; 
&lt;p&gt;When you&#39;re debugging an issue you often need to peek inside these scripts that run in a separate process.&lt;/p&gt; 
&lt;p&gt;Print all log statements from native helpers using &lt;code&gt;DEBUG_HELPERS=true&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;DEBUG_HELPERS=true bin/dry-run.rb bundler dependabot/demo --dir=&quot;/ruby&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pause execution to debug a single native helper function using &lt;code&gt;DEBUG_FUNCTION=&amp;lt;function name&amp;gt;&lt;/code&gt;. The function maps to a native helper function name, for example, one of the functions in &lt;code&gt;bundler/helpers/v2/lib/functions.rb&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;When this function is being executed a &lt;code&gt;debugger&lt;/code&gt; is inserted, pausing execution of the &lt;code&gt;bin/dry-run.rb&lt;/code&gt; script, this leaves the current updates &lt;code&gt;tmp&lt;/code&gt; directory in place allowing you to &lt;code&gt;cd&lt;/code&gt; into the directory and run the native helper function directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt; DEBUG_FUNCTION=parsed_gemfile bin/dry-run.rb bundler dependabot/demo --dir=&quot;/ruby&quot;
=&amp;gt; fetching dependency files
=&amp;gt; dumping fetched dependency files: ./dry-run/dependabot/demo/ruby
=&amp;gt; parsing dependency files
$ cd /home/dependabot/dependabot-core/tmp/dependabot_TEMP/ruby &amp;amp;&amp;amp; echo &quot;{\&quot;function\&quot;:\&quot;parsed_gemfile\&quot;,\&quot;args\&quot;:{\&quot;gemfile_name\&quot;:\&quot;Gemfile\&quot;,\&quot;lockfile_name\&quot;:\&quot;Gemfile.lock\&quot;,\&quot;dir\&quot;:\&quot;/home/dependabot/dependabot-core/tmp/dependabot_TEMP/ruby\&quot;}}&quot; | BUNDLER_VERSION=1.17.3 BUNDLE_GEMFILE=/opt/bundler/v1/Gemfile GEM_HOME=/opt/bundler/v1/.bundle bundle exec ruby /opt/bundler/v1/run.rb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Copy and run the &lt;code&gt;cd...&lt;/code&gt; command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /home/dependabot/dependabot-core/tmp/dependabot_TEMP/ruby &amp;amp;&amp;amp; echo &quot;{\&quot;function\&quot;:\&quot;parsed_gemfile\&quot;,\&quot;args\&quot;:{\&quot;gemfile_name\&quot;:\&quot;Gemfile\&quot;,\&quot;lockfile_name\&quot;:\&quot;Gemfile.lock\&quot;,\&quot;dir\&quot;:\&quot;/home/dependabot/dependabot-core/tmp/dependabot_TEMP/ruby\&quot;}}&quot; | BUNDLER_VERSION=1.17.3 BUNDLE_GEMFILE=/opt/bundler/v1/Gemfile GEM_HOME=/opt/bundler/v1/.bundle bundle exec ruby /opt/bundler/v1/run.rb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This should log out the output of the &lt;code&gt;parsed_gemfile&lt;/code&gt; function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;{&quot;result&quot;:[{&quot;name&quot;:&quot;business&quot;,&quot;requirement&quot;:&quot;~&amp;gt; 1.0.0&quot;,&quot;groups&quot;:[&quot;default&quot;],&quot;source&quot;:null,&quot;type&quot;:&quot;runtime&quot;},{&quot;name&quot;:&quot;uk_phone_numbers&quot;,&quot;requirement&quot;:&quot;~&amp;gt; 0.1.0&quot;,&quot;groups&quot;:[&quot;default&quot;],&quot;source&quot;:null,&quot;type&quot;:&quot;runtime&quot;}]}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Keep in mind that unlike changes to the ruby source, changes on your host machine to the native helpers source code are not synced to the development container. So you have two choices for editing the native helper:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can directly edit the temporary copy of the native helper within the development container, for example: &lt;code&gt;vi /opt/bundler/v1/lib/functions/file_parser.rb&lt;/code&gt;. And then re-run the &lt;code&gt;cd...&lt;/code&gt; command. This is the fastest way to debug, but any changes won&#39;t be saved outside the container.&lt;/li&gt; 
 &lt;li&gt;You can edit your local copy, and then &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#making-changes-to-native-package-manager-helpers&quot;&gt;rebuild the native helper&lt;/a&gt;. This will require re-running the dry-run script to pickup the change.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Debugging Ignore Conditions&lt;/h3&gt; 
&lt;p&gt;Most of the ecosystems in Dependabot-Core support &lt;code&gt;ignore&lt;/code&gt; conditions which allow a user to specify dependency names or versions to exclude from upgrades. The docs for the Dependabot service at GitHub &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file#ignore&quot;&gt;describe the feature in more detail&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#cli-tool&quot;&gt;Dependabot CLI&lt;/a&gt; supports passing in ignore conditions as part of the job definition. See &lt;a href=&quot;https://github.com/dependabot/cli#scenario-file&quot;&gt;the example&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dry-run-script&quot;&gt;dry-run script&lt;/a&gt; supports passing in one or more ignore conditions via the env var &lt;code&gt;IGNORE_CONDITIONS&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;IGNORE_CONDITIONS=&#39;[{&quot;dependency-name&quot;:&quot;*&quot;,&quot;update-types&quot;: [&quot;version-update:semver-major&quot;]}]&#39; \
bin/dry-run.rb docker test_org/test-dependabot`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Debugging Security Updates&lt;/h3&gt; 
&lt;p&gt;Many of the ecosystems in Dependabot-Core support &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-security-updates/about-dependabot-security-updates&quot;&gt;security updates&lt;/a&gt;. These are a special form of version update where a dependency name and range of vulnerable versions are passed in. Dependabot-Core will try to upgrade any instance of that dependency to the &lt;em&gt;minimum&lt;/em&gt; non-vulnerable version. This is in contrast to a normal version update which tries to update to the &lt;em&gt;latest&lt;/em&gt; version.&lt;/p&gt; 
&lt;p&gt;The env var &lt;code&gt;SECURITY_ADVISORIES&lt;/code&gt; allows passing one or more security alert notifications to the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dry-run-script&quot;&gt;dry-run script&lt;/a&gt; in order to simulate a security update:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;SECURITY_ADVISORIES=&#39;[{&quot;dependency-name&quot;:&quot;buffer&quot;,&quot;patched-versions&quot;:[],&quot;unaffected-versions&quot;:[],&quot;affected-versions&quot;:[&quot;&amp;lt;= 2.0.0&quot;]}]&#39; \
bin/dry-run.rb pub dart-lang/pub-dev --dir &quot;/app&quot; --cache=files --dep=&quot;buffer&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Visual Studio Code and Docker&lt;/h3&gt; 
&lt;p&gt;There&#39;s built-in support for leveraging Visual Studio Code&#39;s &lt;a href=&quot;https://code.visualstudio.com/docs/devcontainers/containers&quot;&gt;ability for debugging&lt;/a&gt; inside a Docker container. After installing the recommended &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&quot;&gt;&lt;code&gt;Dev Containers&lt;/code&gt; extension&lt;/a&gt;, simply press &lt;code&gt;Ctrl+Shift+P&lt;/code&gt; (&lt;code&gt;‚áß‚åòP&lt;/code&gt; on macOS) and select &lt;code&gt;Dev Containers: Reopen in Container&lt;/code&gt;. You can also access the dropdown by clicking on the green button in the bottom-left corner of the editor. If the development Docker image isn&#39;t present on your machine, it will be built automatically. Once that&#39;s finished, start the &lt;code&gt;Debug Dry Run&lt;/code&gt; configuration &lt;code&gt;(F5)&lt;/code&gt; and you&#39;ll be prompted to select a package manager and a repository to perform a dry run on. Feel free to place breakpoints on the code.&lt;/p&gt; 
&lt;p&gt;There is also support to debug individual test runs by running the &lt;code&gt;Debug Tests&lt;/code&gt; configuration &lt;code&gt;(F5)&lt;/code&gt; and you&#39;ll be prompted to select an ecosystem and provide an rspec path.&lt;/p&gt; 
&lt;p&gt;‚ö†Ô∏è The &lt;code&gt;Clone Repository ...&lt;/code&gt; commands of the Remote Containers extension are currently missing some functionality and are therefore not supported. You have to clone the repository manually and use the &lt;code&gt;Reopen in Container&lt;/code&gt; or &lt;code&gt;Open Folder in Container...&lt;/code&gt; command.&lt;/p&gt; 
&lt;h2&gt;Running Tests&lt;/h2&gt; 
&lt;p&gt;Once you get the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#getting-a-development-environment-running&quot;&gt;development environment for a particular ecosystem&lt;/a&gt; going, execute the tests for that ecosystem by running &lt;code&gt;rspec spec&lt;/code&gt; inside that ecosystem&#39;s folder, e.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cd go_modules
$ rspec spec
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also limit the tests to only the file you&#39;re working on, or only tests that previously failed, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ rspec spec/dependabot/file_updaters/elixir --only-failures
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Style is enforced by &lt;a href=&quot;https://rubocop.org/&quot;&gt;RuboCop&lt;/a&gt;. To check for style violations, simply run &lt;code&gt;rubocop&lt;/code&gt; in each of the packages, e.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cd go_modules
$ rubocop
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Profiling&lt;/h2&gt; 
&lt;p&gt;You can profile a &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dry-run-script&quot;&gt;dry-run&lt;/a&gt; by passing the &lt;code&gt;--profile&lt;/code&gt; flag when running it, or tag an &lt;code&gt;rspec&lt;/code&gt; test with &lt;code&gt;:profile&lt;/code&gt;. This will generate a &lt;code&gt;stackprof-&amp;lt;datetime&amp;gt;.dump&lt;/code&gt; file in the &lt;code&gt;tmp/&lt;/code&gt; folder, and you can generate a flamegraph from this by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;stackprof --d3-flamegraph tmp/stackprof-&amp;lt;data or spec name&amp;gt;.dump &amp;gt; tmp/flamegraph.html
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Architecture and Code Layout&lt;/h1&gt; 
&lt;p&gt;Dependabot-Core is a collection of Ruby packages (gems), which contain the logic for updating dependencies in several languages.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;dependabot-common&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;common&lt;/code&gt; package contains all general-purpose/shared functionality. For instance, the code for creating pull requests for the different supported platforms lives here, as does most of the logic for handling Git dependencies (as most languages support Git dependencies in one way or another). There are also base classes defined for each of the major concerns required to implement support for a language or package manager.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;dependabot-{package-manager}&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;There is a gem for each package manager or language that Dependabot supports. At a minimum, each of these gems will implement the following classes:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FileFetcher&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Fetches the relevant dependency files for a project (e.g., the &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt;). See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/common/lib/dependabot/file_fetchers/README.md&quot;&gt;README&lt;/a&gt; for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FileParser&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Parses a dependency file and extracts a list of dependencies for a project. See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/common/lib/dependabot/file_parsers/README.md&quot;&gt;README&lt;/a&gt; for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;UpdateChecker&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Checks whether a given dependency is up-to-date. See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/common/lib/dependabot/update_checkers/README.md&quot;&gt;README&lt;/a&gt; for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FileUpdater&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Updates a dependency file to use the latest version of a given dependency. See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/common/lib/dependabot/file_updaters/README.md&quot;&gt;README&lt;/a&gt; for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MetadataFinder&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Looks up metadata about a dependency, such as its GitHub URL. See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/common/lib/dependabot/metadata_finders/README.md&quot;&gt;README&lt;/a&gt; for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Describes the logic for comparing dependency versions. See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/hex/lib/dependabot/hex/version.rb&quot;&gt;hex Version class&lt;/a&gt; for an example.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Requirement&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Describes the format of a dependency requirement (e.g. &lt;code&gt;&amp;gt;= 1.2.3&lt;/code&gt;). See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/hex/lib/dependabot/hex/requirement.rb&quot;&gt;hex Requirement class&lt;/a&gt; for an example.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The high-level flow looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/architecture.svg?sanitize=true&quot; alt=&quot;Dependabot high-level architecture diagram&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;dependabot-omnibus&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This is a &quot;meta&quot; gem, that simply depends on all the others. If you want to automatically include support for all languages, you can just include this gem and you&#39;ll get all you need.&lt;/p&gt; 
&lt;h2&gt;Private Registry Credential Management&lt;/h2&gt; 
&lt;p&gt;For many ecosystems, Dependabot-Core supports private registries. Sometimes this happens by passing the private registry credentials directly to the native package managers (&lt;code&gt;npm&lt;/code&gt;, &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;bundler&lt;/code&gt;, etc), other times it happens within the Dependabot-Core Ruby code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;sequenceDiagram
    Private Registry Credentials-&amp;gt;&amp;gt;Dependabot-Core:&amp;lt;br /&amp;gt;
    Dependabot-Core-&amp;gt;&amp;gt;Native Package Managers:&amp;lt;br /&amp;gt;
    Native Package Managers-&amp;gt;&amp;gt;Package Registries:&amp;lt;br /&amp;gt;
    Dependabot-Core-&amp;gt;&amp;gt;Package Registries:&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;While simple and straightforward, this is a security risk for ecosystems that allow running untrusted code within their manifest files. For example &lt;code&gt;setup.py&lt;/code&gt; and &lt;code&gt;.gemspec&lt;/code&gt; allow running native Python and Ruby code. If a package in the dependency tree gets hacked, an attacker could push a malicious manifest that forces the native package manager to expose the creds.&lt;/p&gt; 
&lt;p&gt;To guard against this, for the Dependabot service that Github runs, we wrap Dependabot-Core with a credential proxy so those private registry secrets are never exposed to Dependabot-Core.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;sequenceDiagram
    Dependabot-Core-&amp;gt;&amp;gt;Credentials Proxy: All requests are unauthenticated
    Credentials Proxy-&amp;gt;&amp;gt;Package Registries: Creds are injected by the Proxy
    Note left of Dependabot-Core: The Dependabot Service&amp;lt;br /&amp;gt; that GitHub Runs
    Package Registries-&amp;gt;&amp;gt;Credentials Proxy: Creds are stripped by the Proxy
    Credentials Proxy-&amp;gt;&amp;gt;Dependabot-Core: Dependabot-Core never sees private registry credentials
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This also means if Dependabot-Core ever has a security vulnerability, those creds are still not at risk of being exposed.&lt;/p&gt; 
&lt;h1&gt;Trademarks&lt;/h1&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of GitHub trademarks or logos is subject to and must follow &lt;a href=&quot;https://github.com/logos&quot;&gt;GitHub Logos and Usage&lt;/a&gt;. Use of GitHub trademarks or logos in modified versions of this project must not cause confusion or imply GitHub sponsorship. Any use of third-party trademarks or logos are subject to those third-party‚Äôs policies.&lt;/p&gt; 
&lt;h1&gt;History&lt;/h1&gt; 
&lt;p&gt;Dependabot and dependabot-core started life as &lt;a href=&quot;https://github.com/gocardless/bump&quot;&gt;Bump&lt;/a&gt; and &lt;a href=&quot;https://github.com/gocardless/bump-core&quot;&gt;Bump Core&lt;/a&gt;, back when @hmarr and @greysteil were working at &lt;a href=&quot;https://gocardless.com&quot;&gt;GoCardless&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Dependabot became a part of GitHub in 2019!&lt;/p&gt; 
&lt;h1&gt;Notes for project maintainers&lt;/h1&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;span&gt;üìñ&lt;/span&gt; Release guide&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;p&gt;Publish a new release to RubyGems by running the &lt;a href=&quot;https://github.com/dependabot/dependabot-core/actions/workflows/gems-bump-version.yml&quot;&gt;&lt;code&gt;Gems - Bump Version&lt;/code&gt;&lt;/a&gt; workflow and following the instructions on the job summary.&lt;/p&gt; 
 &lt;p&gt;In a nutshell the process will be:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Run the action to generate a version bump PR.&lt;/li&gt; 
  &lt;li&gt;Merge the PR.&lt;/li&gt; 
  &lt;li&gt;Tag that merge commit as a new release using the format &lt;code&gt;v1.2.3&lt;/code&gt;. The job summary contains a URL pre-populated with the correct version for the title and tag.&lt;/li&gt; 
  &lt;li&gt;Once the release is tagged, another GitHub Action workflow automatically pushes it to RubyGems.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>crmne/ruby_llm</title>
      <link>https://github.com/crmne/ruby_llm</link>
      <description>&lt;p&gt;One beautiful Ruby API for OpenAI, Anthropic, Gemini, Bedrock, OpenRouter, DeepSeek, Ollama, VertexAI, Perplexity, Mistral, GPUStack &amp; OpenAI compatible APIs. Chat, Vision, Audio, PDF, Images, Embeddings, Tools, Streaming &amp; Rails integration.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;/docs/assets/images/logotype_dark.svg&quot; /&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/crmne/ruby_llm/main/docs/assets/images/logotype.svg?sanitize=true&quot; alt=&quot;RubyLLM&quot; height=&quot;120&quot; width=&quot;250&quot; /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;&lt;strong&gt;One &lt;em&gt;beautiful&lt;/em&gt; Ruby API for GPT, Claude, Gemini, and more.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Battle tested at &lt;a href=&quot;https://chatwithwork.com&quot;&gt;
   &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://chatwithwork.com/logotype-dark.svg&quot; /&gt;
    &lt;img src=&quot;https://chatwithwork.com/logotype.svg?sanitize=true&quot; alt=&quot;Chat with Work&quot; height=&quot;30&quot; align=&quot;absmiddle&quot; /&gt;
   &lt;/picture&gt;&lt;/a&gt; ‚Äî &lt;em&gt;Claude Code for your documents&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://badge.fury.io/rb/ruby_llm&quot;&gt;&lt;img src=&quot;https://badge.fury.io/rb/ruby_llm.svg?a=10&quot; alt=&quot;Gem Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rubocop/rubocop&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-rubocop-brightgreen.svg?sanitize=true&quot; alt=&quot;Ruby Style Guide&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://rubygems.org/gems/ruby_llm&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/dt/ruby_llm&quot; alt=&quot;Gem Downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/crmne/ruby_llm&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/crmne/ruby_llm/branch/main/graph/badge.svg?a=2&quot; alt=&quot;codecov&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://trendshift.io/repositories/13640&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13640&quot; alt=&quot;crmne%2Fruby_llm | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Using RubyLLM in production? &lt;a href=&quot;https://tally.so/r/3Na02p&quot;&gt;Share your story&lt;/a&gt;! Takes 5 minutes.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;p&gt;Build chatbots, AI agents, RAG applications. Works with OpenAI, Anthropic, Google, AWS, local models, and any OpenAI-compatible API.&lt;/p&gt; 
&lt;h2&gt;Why RubyLLM?&lt;/h2&gt; 
&lt;p&gt;Every AI provider ships their own bloated client. Different APIs. Different response formats. Different conventions. It&#39;s exhausting.&lt;/p&gt; 
&lt;p&gt;RubyLLM gives you one beautiful API for all of them. Same interface whether you&#39;re using GPT, Claude, or your local Ollama. Just three dependencies: Faraday, Zeitwerk, and Marcel. That&#39;s it.&lt;/p&gt; 
&lt;h2&gt;Show me the code&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Just ask questions
chat = RubyLLM.chat
chat.ask &quot;What&#39;s the best way to learn Ruby?&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Analyze any file type
chat.ask &quot;What&#39;s in this image?&quot;, with: &quot;ruby_conf.jpg&quot;
chat.ask &quot;What&#39;s happening in this video?&quot;, with: &quot;video.mp4&quot;
chat.ask &quot;Describe this meeting&quot;, with: &quot;meeting.wav&quot;
chat.ask &quot;Summarize this document&quot;, with: &quot;contract.pdf&quot;
chat.ask &quot;Explain this code&quot;, with: &quot;app.rb&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Multiple files at once
chat.ask &quot;Analyze these files&quot;, with: [&quot;diagram.png&quot;, &quot;report.pdf&quot;, &quot;notes.txt&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Stream responses
chat.ask &quot;Tell me a story about Ruby&quot; do |chunk|
  print chunk.content
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Generate images
RubyLLM.paint &quot;a sunset over mountains in watercolor style&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Create embeddings
RubyLLM.embed &quot;Ruby is elegant and expressive&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Moderate content for safety
RubyLLM.moderate &quot;Check if this text is safe&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Let AI use your code
class Weather &amp;lt; RubyLLM::Tool
  description &quot;Get current weather&quot;
  param :latitude
  param :longitude

  def execute(latitude:, longitude:)
    url = &quot;https://api.open-meteo.com/v1/forecast?latitude=#{latitude}&amp;amp;longitude=#{longitude}&amp;amp;current=temperature_2m,wind_speed_10m&quot;
    JSON.parse(Faraday.get(url).body)
  end
end

chat.with_tool(Weather).ask &quot;What&#39;s the weather in Berlin?&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Get structured output
class ProductSchema &amp;lt; RubyLLM::Schema
  string :name
  number :price
  array :features do
    string
  end
end

response = chat.with_schema(ProductSchema).ask &quot;Analyze this product&quot;, with: &quot;product.txt&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Chat:&lt;/strong&gt; Conversational AI with &lt;code&gt;RubyLLM.chat&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vision:&lt;/strong&gt; Analyze images and videos&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Audio:&lt;/strong&gt; Transcribe and understand speech&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documents:&lt;/strong&gt; Extract from PDFs, CSVs, JSON, any file type&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image generation:&lt;/strong&gt; Create images with &lt;code&gt;RubyLLM.paint&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Embeddings:&lt;/strong&gt; Generate embeddings with &lt;code&gt;RubyLLM.embed&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Moderation:&lt;/strong&gt; Content safety with &lt;code&gt;RubyLLM.moderate&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tools:&lt;/strong&gt; Let AI call your Ruby methods&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Structured output:&lt;/strong&gt; JSON schemas that just work&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Streaming:&lt;/strong&gt; Real-time responses with blocks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rails:&lt;/strong&gt; ActiveRecord integration with &lt;code&gt;acts_as_chat&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Async:&lt;/strong&gt; Fiber-based concurrency&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model registry:&lt;/strong&gt; 500+ models with capability detection and pricing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Providers:&lt;/strong&gt; OpenAI, Anthropic, Gemini, VertexAI, Bedrock, DeepSeek, Mistral, Ollama, OpenRouter, Perplexity, GPUStack, and any OpenAI-compatible API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Add to your Gemfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem &#39;ruby_llm&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then &lt;code&gt;bundle install&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Configure your API keys:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# config/initializers/ruby_llm.rb
RubyLLM.configure do |config|
  config.openai_api_key = ENV[&#39;OPENAI_API_KEY&#39;]
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Rails&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install Rails Integration
rails generate ruby_llm:install

# Add Chat UI (optional)
rails generate ruby_llm:chat_ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class Chat &amp;lt; ApplicationRecord
  acts_as_chat
end

chat = Chat.create! model: &quot;claude-sonnet-4&quot;
chat.ask &quot;What&#39;s in this file?&quot;, with: &quot;report.pdf&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Visit &lt;code&gt;http://localhost:3000/chats&lt;/code&gt; for a ready-to-use chat interface!&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://rubyllm.com&quot;&gt;rubyllm.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/crmne/ruby_llm/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Released under the MIT License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mastodon/mastodon</title>
      <link>https://github.com/mastodon/mastodon</link>
      <description>&lt;p&gt;Your self-hosted, globally interconnected microblogging community&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Want to learn more about Mastodon? Click below to find out more in a video.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://www.youtube.com/watch?v=IPSbNdBmWKE&quot;&gt; &lt;img alt=&quot;Mastodon hero image&quot; src=&quot;https://github.com/user-attachments/assets/ef53f5e9-c0d8-484d-9f53-00efdebb92c3&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://github.com/mastodon/mastodon/releases&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/release/mastodon/mastodon.svg?sanitize=true&quot; alt=&quot;Release&quot; /&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://github.com/mastodon/mastodon/actions/workflows/test-ruby.yml&quot;&gt; &lt;img src=&quot;https://github.com/mastodon/mastodon/actions/workflows/test-ruby.yml/badge.svg?sanitize=true&quot; alt=&quot;Ruby Testing&quot; /&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://crowdin.com/project/mastodon&quot;&gt; &lt;img src=&quot;https://d322cqt584bo4o.cloudfront.net/mastodon/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Mastodon is a &lt;strong&gt;free, open-source social network server&lt;/strong&gt; based on &lt;a href=&quot;https://www.w3.org/TR/activitypub/&quot;&gt;ActivityPub&lt;/a&gt; where users can follow friends and discover new ones. On Mastodon, users can publish anything they want: links, pictures, text, and video. All Mastodon servers are interoperable as a federated network (users on one server can seamlessly communicate with users from another one, including non-Mastodon software that implements ActivityPub!)&lt;/p&gt; 
&lt;h2&gt;Navigation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org&quot;&gt;Project homepage üêò&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org/sponsors#donate&quot;&gt;Donate to support development üéÅ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org/sponsors&quot;&gt;View sponsors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.joinmastodon.org&quot;&gt;Blog üì∞&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.joinmastodon.org&quot;&gt;Documentation üìö&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mastodon/mastodon/pkgs/container/mastodon&quot;&gt;Official container image üö¢&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/app/javascript/images/elephant_ui_working.svg?raw=true&quot; align=&quot;right&quot; width=&quot;30%&quot; /&gt; 
&lt;p&gt;&lt;strong&gt;Part of the Fediverse. Based on open standards, with no vendor lock-in.&lt;/strong&gt; - the network goes beyond just Mastodon; anything that implements ActivityPub is part of a broader social network known as &lt;a href=&quot;https://jointhefediverse.net/&quot;&gt;the Fediverse&lt;/a&gt;. You can follow and interact with users on other servers (including those running different software), and they can follow you back.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Real-time, chronological timeline updates&lt;/strong&gt; - updates of people you&#39;re following appear in real-time in the UI.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Media attachments&lt;/strong&gt; - upload and view images and videos attached to the updates. Videos with no audio track are treated like animated GIFs; normal videos loop continuously.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Safety and moderation tools&lt;/strong&gt; - Mastodon includes private posts, locked accounts, phrase filtering, muting, blocking, and many other features, along with a reporting and moderation system.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;OAuth2 and a straightforward REST API&lt;/strong&gt; - Mastodon acts as an OAuth2 provider, and third party apps can use the REST and Streaming APIs. This results in a &lt;a href=&quot;https://joinmastodon.org/apps&quot;&gt;rich app ecosystem&lt;/a&gt; with a variety of choices!&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;h3&gt;Tech stack&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rails/rails&quot;&gt;Ruby on Rails&lt;/a&gt; powers the REST API and other web pages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt; is the main database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt; and &lt;a href=&quot;https://sidekiq.org/&quot;&gt;Sidekiq&lt;/a&gt; are used for caching and queueing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; powers the streaming API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React.js&lt;/a&gt; and &lt;a href=&quot;https://redux.js.org/&quot;&gt;Redux&lt;/a&gt; are used for the dynamic parts of the interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; supports testing on real devices and browsers. (This project is tested with BrowserStack)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chromatic.com/&quot;&gt;Chromatic&lt;/a&gt; provides visual regression testing. (This project is tested with Chromatic)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Ruby&lt;/strong&gt; 3.2+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt; 13+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Redis&lt;/strong&gt; 7.0+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt; 20+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This repository includes deployment configurations for &lt;strong&gt;Docker and docker-compose&lt;/strong&gt;, as well as for other environments like Heroku and Scalingo. For Helm charts, reference the &lt;a href=&quot;https://github.com/mastodon/chart&quot;&gt;mastodon/chart repository&lt;/a&gt;. A &lt;a href=&quot;https://docs.joinmastodon.org/admin/install/&quot;&gt;&lt;strong&gt;standalone&lt;/strong&gt; installation guide&lt;/a&gt; is available in the main documentation.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Mastodon is &lt;strong&gt;free, open-source software&lt;/strong&gt; licensed under &lt;strong&gt;AGPLv3&lt;/strong&gt;. We welcome contributions and help from anyone who wants to improve the project.&lt;/p&gt; 
&lt;p&gt;You should read the overall &lt;a href=&quot;https://github.com/mastodon/.github/raw/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; guide, which covers our development processes.&lt;/p&gt; 
&lt;p&gt;You should also read and understand the &lt;a href=&quot;https://github.com/mastodon/.github/raw/main/CODE_OF_CONDUCT.md&quot;&gt;CODE OF CONDUCT&lt;/a&gt; that enables us to maintain a welcoming and inclusive community. Collaboration begins with mutual respect and understanding.&lt;/p&gt; 
&lt;p&gt;You can learn about setting up a development environment in the &lt;a href=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/docs/DEVELOPMENT.md&quot;&gt;DEVELOPMENT&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;p&gt;If you would like to help with translations üåê you can do so on &lt;a href=&quot;https://crowdin.com/project/mastodon&quot;&gt;Crowdin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2016-2025 Eugen Rochko (+ &lt;a href=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/AUTHORS.md&quot;&gt;&lt;code&gt;mastodon authors&lt;/code&gt;&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;Licensed under GNU Affero General Public License as stated in the &lt;a href=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Copyright (c) 2016-2025 Eugen Rochko &amp;amp; other Mastodon contributors

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU Affero General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option) any
later version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
details.

You should have received a copy of the GNU Affero General Public License along
with this program. If not, see https://www.gnu.org/licenses/
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>fastlane/fastlane</title>
      <link>https://github.com/fastlane/fastlane</link>
      <description>&lt;p&gt;üöÄ The easiest way to automate building and releasing your iOS and Android apps&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/fastlane/fastlane/raw/master/fastlane/assets/fastlane_text.png&quot;&gt; &lt;img src=&quot;https://github.com/fastlane/fastlane/raw/master/fastlane/assets/fastlane_text.png?raw=true&quot; alt=&quot;fastlane Logo&quot; width=&quot;500&quot; /&gt; &lt;/a&gt; &lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/FastlaneTools&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contact-@FastlaneTools-blue.svg?style=flat&quot; alt=&quot;Twitter: @FastlaneTools&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/fastlane/fastlane/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-green.svg?style=flat&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://rubygems.org/gems/fastlane&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/fastlane.svg?style=flat&quot; alt=&quot;Gem&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://formulae.brew.sh/formula/fastlane&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://formulae.brew.sh/api/formula/fastlane.json&amp;amp;query=$.versions.stable&amp;amp;label=homebrew&quot; alt=&quot;Homebrew&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/fastlane/fastlane&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/fastlane/fastlane/master.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/fastlane/fastlane/raw/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs welcome!&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;fastlane&lt;/em&gt; is a tool for iOS and Android developers to automate tedious tasks like generating screenshots, dealing with provisioning profiles, and releasing your application.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2 align=&quot;center&quot;&gt; ‚ú® All fastlane docs were moved to &lt;a href=&quot;https://docs.fastlane.tools/&quot;&gt;docs.fastlane.tools&lt;/a&gt; ‚ú® &lt;/h2&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Need Help?&lt;/h2&gt; 
&lt;p&gt;Before submitting a new GitHub issue, please make sure to&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out &lt;a href=&quot;https://docs.fastlane.tools&quot;&gt;docs.fastlane.tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Search for &lt;a href=&quot;https://github.com/fastlane/fastlane/issues&quot;&gt;existing GitHub issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the above doesn&#39;t help, please &lt;a href=&quot;https://github.com/fastlane/fastlane/issues&quot;&gt;submit an issue&lt;/a&gt; on GitHub and provide information about your setup, in particular the output of the &lt;code&gt;fastlane env&lt;/code&gt; command.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you want to report a regression in &lt;em&gt;fastlane&lt;/em&gt; (something that has worked before, but broke with a new release), please mark your issue title as such using &lt;code&gt;[Regression] Your title here&lt;/code&gt;. This enables us to quickly detect and fix regressions.&lt;/p&gt; 
&lt;h2&gt;&lt;em&gt;fastlane&lt;/em&gt; team&lt;/h2&gt; 
&lt;!-- This table is regenerated and resorted on each release --&gt; 
&lt;table id=&quot;team&quot;&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td id=&quot;iulian-onofrei&quot;&gt; &lt;a href=&quot;https://github.com/revolter&quot;&gt; &lt;img src=&quot;https://github.com/revolter.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/Revolt666&quot;&gt;Iulian Onofrei&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;daniel-jankowski&quot;&gt; &lt;a href=&quot;https://github.com/mollyIV&quot;&gt; &lt;img src=&quot;https://github.com/mollyIV.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/mollyIV&quot;&gt;Daniel Jankowski&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;danielle-tomlinson&quot;&gt; &lt;a href=&quot;https://github.com/endocrimes&quot;&gt; &lt;img src=&quot;https://github.com/endocrimes.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/endocrimes&quot;&gt;Danielle Tomlinson&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;jorge-revuelta-h&quot;&gt; &lt;a href=&quot;https://github.com/minuscorp&quot;&gt; &lt;img src=&quot;https://github.com/minuscorp.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/minuscorp&quot;&gt;Jorge Revuelta H&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;olivier-halligon&quot;&gt; &lt;a href=&quot;https://github.com/AliSoftware&quot;&gt; &lt;img src=&quot;https://github.com/AliSoftware.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/aligatr&quot;&gt;Olivier Halligon&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;satoshi-namai&quot;&gt; &lt;a href=&quot;https://github.com/ainame&quot;&gt; &lt;img src=&quot;https://github.com/ainame.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/ainame&quot;&gt;Satoshi Namai&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;luka-mirosevic&quot;&gt; &lt;a href=&quot;https://github.com/lmirosevic&quot;&gt; &lt;img src=&quot;https://github.com/lmirosevic.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/lmirosevic&quot;&gt;Luka Mirosevic&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;manu-wallner&quot;&gt; &lt;a href=&quot;https://github.com/milch&quot;&gt; &lt;img src=&quot;https://github.com/milch.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/acrooow&quot;&gt;Manu Wallner&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;kohki-miki&quot;&gt; &lt;a href=&quot;https://github.com/giginet&quot;&gt; &lt;img src=&quot;https://github.com/giginet.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/giginet&quot;&gt;Kohki Miki&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;fumiya-nakamura&quot;&gt; &lt;a href=&quot;https://github.com/nafu&quot;&gt; &lt;img src=&quot;https://github.com/nafu.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/nafu003&quot;&gt;Fumiya Nakamura&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;j√©r√¥me-lacoste&quot;&gt; &lt;a href=&quot;https://github.com/lacostej&quot;&gt; &lt;img src=&quot;https://github.com/lacostej.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/lacostej&quot;&gt;J√©r√¥me Lacoste&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;max-ott&quot;&gt; &lt;a href=&quot;https://github.com/max-ott&quot;&gt; &lt;img src=&quot;https://github.com/max-ott.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/ott_max&quot;&gt;Max Ott&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;jimmy-dee&quot;&gt; &lt;a href=&quot;https://github.com/jdee&quot;&gt; &lt;img src=&quot;https://github.com/jdee.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;Jimmy Dee&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;matthew-ellis&quot;&gt; &lt;a href=&quot;https://github.com/matthewellis&quot;&gt; &lt;img src=&quot;https://github.com/matthewellis.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/mellis1995&quot;&gt;Matthew Ellis&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;helmut-januschka&quot;&gt; &lt;a href=&quot;https://github.com/hjanuschka&quot;&gt; &lt;img src=&quot;https://github.com/hjanuschka.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/hjanuschka&quot;&gt;Helmut Januschka&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;stefan-natchev&quot;&gt; &lt;a href=&quot;https://github.com/snatchev&quot;&gt; &lt;img src=&quot;https://github.com/snatchev.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/snatchev&quot;&gt;Stefan Natchev&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;≈Çukasz-grabowski&quot;&gt; &lt;a href=&quot;https://github.com/lucgrabowski&quot;&gt; &lt;img src=&quot;https://github.com/lucgrabowski.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;≈Åukasz Grabowski&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;joshua-liebowitz&quot;&gt; &lt;a href=&quot;https://github.com/taquitos&quot;&gt; &lt;img src=&quot;https://github.com/taquitos.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/taquitos&quot;&gt;Joshua Liebowitz&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;manish-rathi&quot;&gt; &lt;a href=&quot;https://github.com/crazymanish&quot;&gt; &lt;img src=&quot;https://github.com/crazymanish.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/iammanishrathi&quot;&gt;Manish Rathi&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;aaron-brager&quot;&gt; &lt;a href=&quot;https://github.com/getaaron&quot;&gt; &lt;img src=&quot;https://github.com/getaaron.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/getaaron&quot;&gt;Aaron Brager&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;felix-krause&quot;&gt; &lt;a href=&quot;https://github.com/KrauseFx&quot;&gt; &lt;img src=&quot;https://github.com/KrauseFx.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/KrauseFx&quot;&gt;Felix Krause&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;maksym-grebenets&quot;&gt; &lt;a href=&quot;https://github.com/mgrebenets&quot;&gt; &lt;img src=&quot;https://github.com/mgrebenets.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/mgrebenets&quot;&gt;Maksym Grebenets&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;jan-piotrowski&quot;&gt; &lt;a href=&quot;https://github.com/janpio&quot;&gt; &lt;img src=&quot;https://github.com/janpio.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/Sujan&quot;&gt;Jan Piotrowski&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;josh-holtz&quot;&gt; &lt;a href=&quot;https://github.com/joshdholtz&quot;&gt; &lt;img src=&quot;https://github.com/joshdholtz.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/joshdholtz&quot;&gt;Josh Holtz&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;roger-oba&quot;&gt; &lt;a href=&quot;https://github.com/rogerluan&quot;&gt; &lt;img src=&quot;https://github.com/rogerluan.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/rogerluan_&quot;&gt;Roger Oba&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;andrew-mcburney&quot;&gt; &lt;a href=&quot;https://github.com/armcburney&quot;&gt; &lt;img src=&quot;https://github.com/armcburney.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/armcburney&quot;&gt;Andrew McBurney&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Special thanks to all &lt;a href=&quot;https://github.com/fastlane/fastlane/graphs/contributors&quot;&gt;contributors&lt;/a&gt; for extending and improving &lt;em&gt;fastlane&lt;/em&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribute to &lt;em&gt;fastlane&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://raw.githubusercontent.com/fastlane/fastlane/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on how to help with &lt;em&gt;fastlane&lt;/em&gt;.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Help us keep &lt;em&gt;fastlane&lt;/em&gt; open and inclusive. Please read and follow our &lt;a href=&quot;https://github.com/fastlane/fastlane/raw/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Metrics&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;fastlane&lt;/em&gt; tracks a few key metrics to understand how developers are using the tool and to help us know what areas need improvement. No personal/sensitive information is ever collected. Metrics that are collected include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The number of &lt;em&gt;fastlane&lt;/em&gt; runs&lt;/li&gt; 
 &lt;li&gt;A salted hash of the app identifier or package name, which helps us anonymously identify unique usage of &lt;em&gt;fastlane&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can easily opt-out of metrics collection by adding &lt;code&gt;opt_out_usage&lt;/code&gt; at the top of your &lt;code&gt;Fastfile&lt;/code&gt; or by setting the environment variable &lt;code&gt;FASTLANE_OPT_OUT_USAGE&lt;/code&gt;. &lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/fastlane_core/lib/fastlane_core/analytics&quot;&gt;Check out the metrics code on GitHub&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the MIT license. See the &lt;a href=&quot;https://raw.githubusercontent.com/fastlane/fastlane/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This project and all fastlane tools are in no way affiliated with Apple Inc. This project is open source under the MIT license, which means you have full access to the source code and can modify it to fit your own needs. All fastlane tools run on your own computer or server, so your credentials or other sensitive information will never leave your own computer. You are responsible for how you use fastlane tools.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2 align=&quot;center&quot;&gt; ‚ú® All fastlane docs were moved to &lt;a href=&quot;https://docs.fastlane.tools/&quot;&gt;docs.fastlane.tools&lt;/a&gt; ‚ú® &lt;/h2&gt; 
&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>heartcombo/devise</title>
      <link>https://github.com/heartcombo/devise</link>
      <description>&lt;p&gt;Flexible authentication solution for Rails with Warden.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.github.com/heartcombo/devise/main/devise.png&quot; alt=&quot;Devise Logo&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Devise is a flexible authentication solution for Rails based on Warden. It:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Is Rack based;&lt;/li&gt; 
 &lt;li&gt;Is a complete MVC solution based on Rails engines;&lt;/li&gt; 
 &lt;li&gt;Allows you to have multiple models signed in at the same time;&lt;/li&gt; 
 &lt;li&gt;Is based on a modularity concept: use only what you really need.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It&#39;s composed of 10 modules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rubydoc.info/gems/devise/Devise/Models/DatabaseAuthenticatable&quot;&gt;Database Authenticatable&lt;/a&gt;: hashes and stores a password in the database to validate the authenticity of a user while signing in. The authentication can be done both through POST requests or HTTP Basic Authentication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rubydoc.info/gems/devise/Devise/Models/Omniauthable&quot;&gt;Omniauthable&lt;/a&gt;: adds OmniAuth (&lt;a href=&quot;https://github.com/omniauth/omniauth&quot;&gt;https://github.com/omniauth/omniauth&lt;/a&gt;) support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rubydoc.info/gems/devise/Devise/Models/Confirmable&quot;&gt;Confirmable&lt;/a&gt;: sends emails with confirmation instructions and verifies whether an account is already confirmed during sign in.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rubydoc.info/gems/devise/Devise/Models/Recoverable&quot;&gt;Recoverable&lt;/a&gt;: resets the user password and sends reset instructions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rubydoc.info/gems/devise/Devise/Models/Registerable&quot;&gt;Registerable&lt;/a&gt;: handles signing up users through a registration process, also allowing them to edit and destroy their account.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rubydoc.info/gems/devise/Devise/Models/Rememberable&quot;&gt;Rememberable&lt;/a&gt;: manages generating and clearing a token for remembering the user from a saved cookie.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rubydoc.info/gems/devise/Devise/Models/Trackable&quot;&gt;Trackable&lt;/a&gt;: tracks sign in count, timestamps and IP address.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rubydoc.info/gems/devise/Devise/Models/Timeoutable&quot;&gt;Timeoutable&lt;/a&gt;: expires sessions that have not been active in a specified period of time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rubydoc.info/gems/devise/Devise/Models/Validatable&quot;&gt;Validatable&lt;/a&gt;: provides validations of email and password. It&#39;s optional and can be customized, so you&#39;re able to define your own validations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.rubydoc.info/gems/devise/Devise/Models/Lockable&quot;&gt;Lockable&lt;/a&gt;: locks an account after a specified number of failed sign-in attempts. Can unlock via email or after a specified time period.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- TOC depthFrom:1 depthTo:6 withLinks:1 orderedList:0 --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#information&quot;&gt;Information&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#the-devise-wiki&quot;&gt;The Devise wiki&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#bug-reports&quot;&gt;Bug reports&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#stackoverflow-and-mailing-list&quot;&gt;StackOverflow and Mailing List&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#rdocs&quot;&gt;RDocs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#example-applications&quot;&gt;Example applications&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#extensions&quot;&gt;Extensions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#starting-with-rails&quot;&gt;Starting with Rails?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#getting-started&quot;&gt;Getting started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#controller-filters-and-helpers&quot;&gt;Controller filters and helpers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-models&quot;&gt;Configuring Models&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#strong-parameters&quot;&gt;Strong Parameters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-views&quot;&gt;Configuring views&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-controllers&quot;&gt;Configuring controllers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-routes&quot;&gt;Configuring routes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#i18n&quot;&gt;I18n&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#test-helpers&quot;&gt;Test helpers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#controller-tests&quot;&gt;Controller tests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#integration-tests&quot;&gt;Integration tests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#omniauth&quot;&gt;OmniAuth&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#configuring-multiple-models&quot;&gt;Configuring multiple models&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#active-job-integration&quot;&gt;Active Job Integration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#password-reset-tokens-and-rails-logs&quot;&gt;Password reset tokens and Rails logs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#other-orms&quot;&gt;Other ORMs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#rails-api-mode&quot;&gt;Rails API mode&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#additional-information&quot;&gt;Additional information&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#warden&quot;&gt;Warden&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- /TOC --&gt; 
&lt;h2&gt;Information&lt;/h2&gt; 
&lt;h3&gt;The Devise wiki&lt;/h3&gt; 
&lt;p&gt;The Devise Wiki has lots of additional information about Devise including many &quot;how-to&quot; articles and answers to the most frequently asked questions. Please browse the Wiki after finishing this README:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/heartcombo/devise/wiki&quot;&gt;https://github.com/heartcombo/devise/wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Bug reports&lt;/h3&gt; 
&lt;p&gt;If you discover a problem with Devise, we would like to know about it. However, we ask that you please review these guidelines before submitting a bug report:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/heartcombo/devise/wiki/Bug-reports&quot;&gt;https://github.com/heartcombo/devise/wiki/Bug-reports&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you have discovered a security related bug, please do &lt;em&gt;NOT&lt;/em&gt; use the GitHub issue tracker. Send an email to &lt;a href=&quot;mailto:heartcombo@googlegroups.com&quot;&gt;heartcombo@googlegroups.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;StackOverflow and Mailing List&lt;/h3&gt; 
&lt;p&gt;If you have any questions, comments, or concerns, please use StackOverflow instead of the GitHub issue tracker:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/devise&quot;&gt;http://stackoverflow.com/questions/tagged/devise&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The deprecated mailing list can still be read on&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://groups.google.com/group/plataformatec-devise&quot;&gt;https://groups.google.com/group/plataformatec-devise&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;RDocs&lt;/h3&gt; 
&lt;p&gt;You can view the Devise documentation in RDoc format here:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://rubydoc.info/github/heartcombo/devise/main/frames&quot;&gt;http://rubydoc.info/github/heartcombo/devise/main/frames&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you need to use Devise with previous versions of Rails, you can always run &quot;gem server&quot; from the command line after you install the gem to access the old documentation.&lt;/p&gt; 
&lt;h3&gt;Example applications&lt;/h3&gt; 
&lt;p&gt;There are a few example applications available on GitHub that demonstrate various features of Devise with different versions of Rails. You can view them here:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/heartcombo/devise/wiki/Example-Applications&quot;&gt;https://github.com/heartcombo/devise/wiki/Example-Applications&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Extensions&lt;/h3&gt; 
&lt;p&gt;Our community has created a number of extensions that add functionality above and beyond what is included with Devise. You can view a list of available extensions and add your own here:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/heartcombo/devise/wiki/Extensions&quot;&gt;https://github.com/heartcombo/devise/wiki/Extensions&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;We hope that you will consider contributing to Devise. Please read this short overview for some information about how to get started:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/heartcombo/devise/wiki/Contributing&quot;&gt;https://github.com/heartcombo/devise/wiki/Contributing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You will usually want to write tests for your changes. To run the test suite, go into Devise&#39;s top-level directory and run &lt;code&gt;bundle install&lt;/code&gt; and &lt;code&gt;bin/test&lt;/code&gt;. Devise works with multiple Ruby and Rails versions, and ActiveRecord and Mongoid ORMs, which means you can run the test suite with some modifiers: &lt;code&gt;DEVISE_ORM&lt;/code&gt; and &lt;code&gt;BUNDLE_GEMFILE&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;DEVISE_ORM&lt;/h3&gt; 
&lt;p&gt;Since Devise supports both Mongoid and ActiveRecord, we rely on this variable to run specific code for each ORM. The default value of &lt;code&gt;DEVISE_ORM&lt;/code&gt; is &lt;code&gt;active_record&lt;/code&gt;. To run the tests for Mongoid, you can pass &lt;code&gt;mongoid&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;DEVISE_ORM=mongoid bin/test

==&amp;gt; Devise.orm = :mongoid
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When running the tests for Mongoid, you will need to have a MongoDB server (version 2.0 or newer) running on your system.&lt;/p&gt; 
&lt;p&gt;Please note that the command output will show the variable value being used.&lt;/p&gt; 
&lt;h3&gt;BUNDLE_GEMFILE&lt;/h3&gt; 
&lt;p&gt;We can use this variable to tell bundler what Gemfile it should use (instead of the one in the current directory). Inside the &lt;a href=&quot;https://github.com/heartcombo/devise/tree/main/gemfiles&quot;&gt;gemfiles&lt;/a&gt; directory, we have one for each version of Rails we support. When you send us a pull request, it may happen that the test suite breaks using some of them. If that&#39;s the case, you can simulate the same environment using the &lt;code&gt;BUNDLE_GEMFILE&lt;/code&gt; variable. For example, if the tests broke using Ruby 3.0.0 and Rails 6.0, you can do the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;rbenv shell 3.0.0 # or rvm use 3.0.0
BUNDLE_GEMFILE=gemfiles/Gemfile-rails-6-0 bundle install
BUNDLE_GEMFILE=gemfiles/Gemfile-rails-6-0 bin/test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also combine both of them if the tests broke for Mongoid:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;BUNDLE_GEMFILE=gemfiles/Gemfile-rails-6-0 bundle install
BUNDLE_GEMFILE=gemfiles/Gemfile-rails-6-0 DEVISE_ORM=mongoid bin/test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running tests&lt;/h3&gt; 
&lt;p&gt;Devise uses &lt;a href=&quot;https://github.com/seattlerb/minitest&quot;&gt;Mini Test&lt;/a&gt; as test framework.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Running all tests:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bin/test
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Running tests for an specific file:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bin/test test/models/trackable_test.rb
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Running a specific test given a regex:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bin/test test/models/trackable_test.rb:16
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Starting with Rails?&lt;/h2&gt; 
&lt;p&gt;If you are building your first Rails application, we recommend you &lt;em&gt;do not&lt;/em&gt; use Devise. Devise requires a good understanding of the Rails Framework. In such cases, we advise you to start a simple authentication system from scratch. Here&#39;s a few resources that should help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Michael Hartl&#39;s online book: &lt;a href=&quot;https://www.railstutorial.org/book/modeling_users&quot;&gt;https://www.railstutorial.org/book/modeling_users&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ryan Bates&#39; Railscasts: &lt;a href=&quot;http://railscasts.com/episodes/250-authentication-from-scratch&quot;&gt;http://railscasts.com/episodes/250-authentication-from-scratch&lt;/a&gt; and &lt;a href=&quot;http://railscasts.com/episodes/250-authentication-from-scratch-revised&quot;&gt;http://railscasts.com/episodes/250-authentication-from-scratch-revised&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Codecademy&#39;s Ruby on Rails: Authentication and Authorization: &lt;a href=&quot;https://www.codecademy.com/learn/rails-auth&quot;&gt;https://www.codecademy.com/learn/rails-auth&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Once you have solidified your understanding of Rails and authentication mechanisms, we assure you Devise will be very pleasant to work with. &lt;span&gt;üòÉ&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Devise 4.0 works with Rails 6.0 onwards. Run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;bundle add devise
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, you need to run the generator:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;rails generate devise:install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At this point, a number of instructions will appear in the console. Among these instructions, you&#39;ll need to set up the default URL options for the Devise mailer in each environment. Here is a possible configuration for &lt;code&gt;config/environments/development.rb&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;config.action_mailer.default_url_options = { host: &#39;localhost&#39;, port: 3000 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The generator will install an initializer which describes ALL of Devise&#39;s configuration options. It is &lt;em&gt;imperative&lt;/em&gt; that you take a look at it. When you are done, you are ready to add Devise to any of your models using the generator.&lt;/p&gt; 
&lt;p&gt;In the following command you will replace &lt;code&gt;MODEL&lt;/code&gt; with the class name used for the application‚Äôs users (it‚Äôs frequently &lt;code&gt;User&lt;/code&gt; but could also be &lt;code&gt;Admin&lt;/code&gt;). This will create a model (if one does not exist) and configure it with the default Devise modules. The generator also configures your &lt;code&gt;config/routes.rb&lt;/code&gt; file to point to the Devise controller.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;rails generate devise MODEL
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, check the MODEL for any additional configuration options you might want to add, such as confirmable or lockable. If you add an option, be sure to inspect the migration file (created by the generator if your ORM supports them) and uncomment the appropriate section. For example, if you add the confirmable option in the model, you&#39;ll need to uncomment the Confirmable section in the migration.&lt;/p&gt; 
&lt;p&gt;Then run &lt;code&gt;rails db:migrate&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You should restart your application after changing Devise&#39;s configuration options (this includes stopping spring). Otherwise, you will run into strange errors, for example, users being unable to login and route helpers being undefined.&lt;/p&gt; 
&lt;h3&gt;Controller filters and helpers&lt;/h3&gt; 
&lt;p&gt;Devise will create some helpers to use inside your controllers and views. To set up a controller with user authentication, just add this before_action (assuming your devise model is &#39;User&#39;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;before_action :authenticate_user!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Rails 5, note that &lt;code&gt;protect_from_forgery&lt;/code&gt; is no longer prepended to the &lt;code&gt;before_action&lt;/code&gt; chain, so if you have set &lt;code&gt;authenticate_user&lt;/code&gt; before &lt;code&gt;protect_from_forgery&lt;/code&gt;, your request will result in &quot;Can&#39;t verify CSRF token authenticity.&quot; To resolve this, either change the order in which you call them, or use &lt;code&gt;protect_from_forgery prepend: true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If your devise model is something other than User, replace &quot;_user&quot; with &quot;_yourmodel&quot;. The same logic applies to the instructions below.&lt;/p&gt; 
&lt;p&gt;To verify if a user is signed in, use the following helper:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;user_signed_in?
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the current signed-in user, this helper is available:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;current_user
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can access the session for this scope:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;user_session
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After signing in a user, confirming the account or updating the password, Devise will look for a scoped root path to redirect to. For instance, when using a &lt;code&gt;:user&lt;/code&gt; resource, the &lt;code&gt;user_root_path&lt;/code&gt; will be used if it exists; otherwise, the default &lt;code&gt;root_path&lt;/code&gt; will be used. This means that you need to set the root inside your routes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;root to: &#39;home#index&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also override &lt;code&gt;after_sign_in_path_for&lt;/code&gt; and &lt;code&gt;after_sign_out_path_for&lt;/code&gt; to customize your redirect hooks.&lt;/p&gt; 
&lt;p&gt;Notice that if your Devise model is called &lt;code&gt;Member&lt;/code&gt; instead of &lt;code&gt;User&lt;/code&gt;, for example, then the helpers available are:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;before_action :authenticate_member!

member_signed_in?

current_member

member_session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuring Models&lt;/h3&gt; 
&lt;p&gt;The Devise method in your models also accepts some options to configure its modules. For example, you can choose the cost of the hashing algorithm with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;devise :database_authenticatable, :registerable, :confirmable, :recoverable, stretches: 13
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Besides &lt;code&gt;:stretches&lt;/code&gt;, you can define &lt;code&gt;:pepper&lt;/code&gt;, &lt;code&gt;:encryptor&lt;/code&gt;, &lt;code&gt;:confirm_within&lt;/code&gt;, &lt;code&gt;:remember_for&lt;/code&gt;, &lt;code&gt;:timeout_in&lt;/code&gt;, &lt;code&gt;:unlock_in&lt;/code&gt; among other options. For more details, see the initializer file that was created when you invoked the &quot;devise:install&quot; generator described above. This file is usually located at &lt;code&gt;/config/initializers/devise.rb&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Strong Parameters&lt;/h3&gt; 
&lt;p&gt;The Parameter Sanitizer API has changed for Devise 4 &lt;span&gt;‚ö†&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;For previous Devise versions see &lt;a href=&quot;https://github.com/heartcombo/devise/tree/3-stable#strong-parameters&quot;&gt;https://github.com/heartcombo/devise/tree/3-stable#strong-parameters&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;When you customize your own views, you may end up adding new attributes to forms. Rails 4 moved the parameter sanitization from the model to the controller, causing Devise to handle this concern at the controller as well.&lt;/p&gt; 
&lt;p&gt;There are just three actions in Devise that allow any set of parameters to be passed down to the model, therefore requiring sanitization. Their names and default permitted parameters are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;sign_in&lt;/code&gt; (&lt;code&gt;Devise::SessionsController#create&lt;/code&gt;) - Permits only the authentication keys (like &lt;code&gt;email&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sign_up&lt;/code&gt; (&lt;code&gt;Devise::RegistrationsController#create&lt;/code&gt;) - Permits authentication keys plus &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;password_confirmation&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;account_update&lt;/code&gt; (&lt;code&gt;Devise::RegistrationsController#update&lt;/code&gt;) - Permits authentication keys plus &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;password_confirmation&lt;/code&gt; and &lt;code&gt;current_password&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In case you want to permit additional parameters (the lazy way‚Ñ¢), you can do so using a simple before action in your &lt;code&gt;ApplicationController&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class ApplicationController &amp;lt; ActionController::Base
  before_action :configure_permitted_parameters, if: :devise_controller?

  protected

  def configure_permitted_parameters
    devise_parameter_sanitizer.permit(:sign_up, keys: [:username])
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above works for any additional fields where the parameters are simple scalar types. If you have nested attributes (say you&#39;re using &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;), then you will need to tell devise about those nestings and types:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class ApplicationController &amp;lt; ActionController::Base
  before_action :configure_permitted_parameters, if: :devise_controller?

  protected

  def configure_permitted_parameters
    devise_parameter_sanitizer.permit(:sign_up, keys: [:first_name, :last_name, address_attributes: [:country, :state, :city, :area, :postal_code]])
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Devise allows you to completely change Devise defaults or invoke custom behavior by passing a block:&lt;/p&gt; 
&lt;p&gt;To permit simple scalar values for username and email, use this&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;def configure_permitted_parameters
  devise_parameter_sanitizer.permit(:sign_in) do |user_params|
    user_params.permit(:username, :email)
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have some checkboxes that express the roles a user may take on registration, the browser will send those selected checkboxes as an array. An array is not one of Strong Parameters&#39; permitted scalars, so we need to configure Devise in the following way:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;def configure_permitted_parameters
  devise_parameter_sanitizer.permit(:sign_up) do |user_params|
    user_params.permit({ roles: [] }, :email, :password, :password_confirmation)
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the list of permitted scalars, and how to declare permitted keys in nested hashes and arrays, see&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rails/strong_parameters#nested-parameters&quot;&gt;https://github.com/rails/strong_parameters#nested-parameters&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you have multiple Devise models, you may want to set up a different parameter sanitizer per model. In this case, we recommend inheriting from &lt;code&gt;Devise::ParameterSanitizer&lt;/code&gt; and adding your own logic:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class User::ParameterSanitizer &amp;lt; Devise::ParameterSanitizer
  def initialize(*)
    super
    permit(:sign_up, keys: [:username, :email])
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then configure your controllers to use it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class ApplicationController &amp;lt; ActionController::Base
  protected

  def devise_parameter_sanitizer
    if resource_class == User
      User::ParameterSanitizer.new(User, :user, params)
    else
      super # Use the default one
    end
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The example above overrides the permitted parameters for the user to be both &lt;code&gt;:username&lt;/code&gt; and &lt;code&gt;:email&lt;/code&gt;. The non-lazy way to configure parameters would be by defining the before filter above in a custom controller. We detail how to configure and customize controllers in some sections below.&lt;/p&gt; 
&lt;h3&gt;Configuring views&lt;/h3&gt; 
&lt;p&gt;We built Devise to help you quickly develop an application that uses authentication. However, we don&#39;t want to be in your way when you need to customize it.&lt;/p&gt; 
&lt;p&gt;Since Devise is an engine, all its views are packaged inside the gem. These views will help you get started, but after some time you may want to change them. If this is the case, you just need to invoke the following generator, and it will copy all views to your application:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;rails generate devise:views
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have more than one Devise model in your application (such as &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Admin&lt;/code&gt;), you will notice that Devise uses the same views for all models. Fortunately, Devise offers an easy way to customize views. All you need to do is set &lt;code&gt;config.scoped_views = true&lt;/code&gt; inside the &lt;code&gt;config/initializers/devise.rb&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;After doing so, you will be able to have views based on the role like &lt;code&gt;users/sessions/new&lt;/code&gt; and &lt;code&gt;admins/sessions/new&lt;/code&gt;. If no view is found within the scope, Devise will use the default view at &lt;code&gt;devise/sessions/new&lt;/code&gt;. You can also use the generator to generate scoped views:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;rails generate devise:views users
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you would like to generate only a few sets of views, like the ones for the &lt;code&gt;registerable&lt;/code&gt; and &lt;code&gt;confirmable&lt;/code&gt; module, you can pass a list of views to the generator with the &lt;code&gt;-v&lt;/code&gt; flag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;rails generate devise:views -v registrations confirmations
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuring controllers&lt;/h3&gt; 
&lt;p&gt;If the customization at the views level is not enough, you can customize each controller by following these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create your custom controllers using the generator which requires a scope:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;rails generate devise:controllers [scope]
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you specify &lt;code&gt;users&lt;/code&gt; as the scope, controllers will be created in &lt;code&gt;app/controllers/users/&lt;/code&gt;. And the sessions controller will look like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class Users::SessionsController &amp;lt; Devise::SessionsController
  # GET /resource/sign_in
  # def new
  #   super
  # end
  ...
end
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Use the &lt;code&gt;-c&lt;/code&gt; flag to specify one or more controllers, for example: &lt;code&gt;rails generate devise:controllers users -c sessions&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Tell the router to use this controller:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;devise_for :users, controllers: { sessions: &#39;users/sessions&#39; }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Recommended but not required: copy (or move) the views from &lt;code&gt;devise/sessions&lt;/code&gt; to &lt;code&gt;users/sessions&lt;/code&gt;. Rails will continue using the views from &lt;code&gt;devise/sessions&lt;/code&gt; due to inheritance if you skip this step, but having the views matching the controller(s) keeps things consistent.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Finally, change or extend the desired controller actions.&lt;/p&gt; &lt;p&gt;You can completely override a controller action:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class Users::SessionsController &amp;lt; Devise::SessionsController
  def create
    # custom sign-in code
  end
end
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or you can simply add new behavior to it:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class Users::SessionsController &amp;lt; Devise::SessionsController
  def create
    super do |resource|
      BackgroundWorker.trigger(resource)
    end
  end
end
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is useful for triggering background jobs or logging events during certain actions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Remember that Devise uses flash messages to let users know if sign in was successful or unsuccessful. Devise expects your application to call &lt;code&gt;flash[:notice]&lt;/code&gt; and &lt;code&gt;flash[:alert]&lt;/code&gt; as appropriate. Do not print the entire flash hash, print only specific keys. In some circumstances, Devise adds a &lt;code&gt;:timedout&lt;/code&gt; key to the flash hash, which is not meant for display. Remove this key from the hash if you intend to print the entire hash.&lt;/p&gt; 
&lt;h3&gt;Configuring routes&lt;/h3&gt; 
&lt;p&gt;Devise also ships with default routes. If you need to customize them, you should probably be able to do it through the devise_for method. It accepts several options like :class_name, :path_prefix and so on, including the possibility to change path names for I18n:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;devise_for :users, path: &#39;auth&#39;, path_names: { sign_in: &#39;login&#39;, sign_out: &#39;logout&#39;, password: &#39;secret&#39;, confirmation: &#39;verification&#39;, unlock: &#39;unblock&#39;, registration: &#39;register&#39;, sign_up: &#39;cmon_let_me_in&#39; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be sure to check &lt;code&gt;devise_for&lt;/code&gt; &lt;a href=&quot;https://www.rubydoc.info/gems/devise/ActionDispatch/Routing/Mapper#devise_for-instance_method&quot;&gt;documentation&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;If you have the need for more deep customization, for instance to also allow &quot;/sign_in&quot; besides &quot;/users/sign_in&quot;, all you need to do is create your routes normally and wrap them in a &lt;code&gt;devise_scope&lt;/code&gt; block in the router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;devise_scope :user do
  get &#39;sign_in&#39;, to: &#39;devise/sessions#new&#39;
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This way, you tell Devise to use the scope &lt;code&gt;:user&lt;/code&gt; when &quot;/sign_in&quot; is accessed. Notice &lt;code&gt;devise_scope&lt;/code&gt; is also aliased as &lt;code&gt;as&lt;/code&gt; in your router.&lt;/p&gt; 
&lt;p&gt;Please note: You will still need to add &lt;code&gt;devise_for&lt;/code&gt; in your routes in order to use helper methods such as &lt;code&gt;current_user&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;devise_for :users, skip: :all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hotwire/Turbo&lt;/h3&gt; 
&lt;p&gt;Devise integrates with Hotwire/Turbo by treating such requests as navigational, and configuring certain responses for errors and redirects to match the expected behavior. New apps are generated with the following response configuration by default, and existing apps may opt-in by adding the config to their Devise initializers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;Devise.setup do |config|
  # ...
  # When using Devise with Hotwire/Turbo, the http status for error responses
  # and some redirects must match the following. The default in Devise for existing
  # apps is `200 OK` and `302 Found` respectively, but new apps are generated with
  # these new defaults that match Hotwire/Turbo behavior.
  # Note: These might become the new default in future versions of Devise.
  config.responder.error_status = :unprocessable_entity
  config.responder.redirect_status = :see_other
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: these custom responses require the &lt;code&gt;responders&lt;/code&gt; gem version to be &lt;code&gt;3.1.0&lt;/code&gt; or higher, please make sure you update it if you&#39;re going to use this configuration. Check &lt;a href=&quot;https://github.com/heartcombo/devise/wiki/How-To:-Upgrade-to-Devise-4.9.0-%5BHotwire-Turbo-integration%5D&quot;&gt;this upgrade guide&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: the above statuses configuration may become the default for Devise in a future release.&lt;/p&gt; 
&lt;p&gt;There are a couple other changes you might need to make in your app to work with Hotwire/Turbo, if you&#39;re migrating from rails-ujs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;data-confirm&lt;/code&gt; option that adds a confirmation modal to buttons/forms before submission needs to change to &lt;code&gt;data-turbo-confirm&lt;/code&gt;, so that Turbo handles those appropriately.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;data-method&lt;/code&gt; option that sets the request method for link submissions needs to change to &lt;code&gt;data-turbo-method&lt;/code&gt;. This is not necessary for &lt;code&gt;button_to&lt;/code&gt; or &lt;code&gt;form&lt;/code&gt;s since Turbo can handle those.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you&#39;re setting up Devise to sign out via &lt;code&gt;:delete&lt;/code&gt;, and you&#39;re using links (instead of buttons wrapped in a form) to sign out with the &lt;code&gt;method: :delete&lt;/code&gt; option, they will need to be updated as described above. (Devise does not provide sign out links/buttons in its shared views.)&lt;/p&gt; 
&lt;p&gt;Make sure to inspect your views looking for those, and change appropriately.&lt;/p&gt; 
&lt;h3&gt;I18n&lt;/h3&gt; 
&lt;p&gt;Devise uses flash messages with I18n, in conjunction with the flash keys :notice and :alert. To customize your app, you can set up your locale file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;en:
  devise:
    sessions:
      signed_in: &#39;Signed in successfully.&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also create distinct messages based on the resource you&#39;ve configured using the singular name given in routes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;en:
  devise:
    sessions:
      user:
        signed_in: &#39;Welcome user, you are signed in.&#39;
      admin:
        signed_in: &#39;Hello admin!&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Devise mailer uses a similar pattern to create subject messages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;en:
  devise:
    mailer:
      confirmation_instructions:
        subject: &#39;Hello everybody!&#39;
        user_subject: &#39;Hello User! Please confirm your email&#39;
      reset_password_instructions:
        subject: &#39;Reset instructions&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take a look at our locale file to check all available messages. You may also be interested in one of the many translations that are available on our wiki:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/heartcombo/devise/wiki/I18n&quot;&gt;https://github.com/heartcombo/devise/wiki/I18n&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Caution: Devise Controllers inherit from ApplicationController. If your app uses multiple locales, you should be sure to set I18n.locale in ApplicationController.&lt;/p&gt; 
&lt;h3&gt;Test helpers&lt;/h3&gt; 
&lt;p&gt;Devise includes some test helpers for controller and integration tests. In order to use them, you need to include the respective module in your test cases/specs.&lt;/p&gt; 
&lt;h3&gt;Controller tests&lt;/h3&gt; 
&lt;p&gt;Controller tests require that you include &lt;code&gt;Devise::Test::IntegrationHelpers&lt;/code&gt; on your test case or its parent &lt;code&gt;ActionController::TestCase&lt;/code&gt; superclass. For Rails versions prior to 5, include &lt;code&gt;Devise::Test::ControllerHelpers&lt;/code&gt; instead, since the superclass for controller tests was changed to ActionDispatch::IntegrationTest (for more details, see the &lt;a href=&quot;https://raw.githubusercontent.com/heartcombo/devise/main/#integration-tests&quot;&gt;Integration tests&lt;/a&gt; section).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class PostsControllerTest &amp;lt; ActionController::TestCase
  include Devise::Test::IntegrationHelpers # Rails &amp;gt;= 5
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class PostsControllerTest &amp;lt; ActionController::TestCase
  include Devise::Test::ControllerHelpers # Rails &amp;lt; 5
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;re using RSpec, you can put the following inside a file named &lt;code&gt;spec/support/devise.rb&lt;/code&gt; or in your &lt;code&gt;spec/spec_helper.rb&lt;/code&gt; (or &lt;code&gt;spec/rails_helper.rb&lt;/code&gt; if you are using &lt;code&gt;rspec-rails&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;RSpec.configure do |config|
  config.include Devise::Test::ControllerHelpers, type: :controller
  config.include Devise::Test::ControllerHelpers, type: :view
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Just be sure that this inclusion is made &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;require &#39;rspec/rails&#39;&lt;/code&gt; directive.&lt;/p&gt; 
&lt;p&gt;Now you are ready to use the &lt;code&gt;sign_in&lt;/code&gt; and &lt;code&gt;sign_out&lt;/code&gt; methods on your controller tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;sign_in @user
sign_in @user, scope: :admin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are testing Devise internal controllers or a controller that inherits from Devise&#39;s, you need to tell Devise which mapping should be used before a request. This is necessary because Devise gets this information from the router, but since controller tests do not pass through the router, it needs to be stated explicitly. For example, if you are testing the user scope, simply use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;test &#39;GET new&#39; do
  # Mimic the router behavior of setting the Devise scope through the env.
  @request.env[&#39;devise.mapping&#39;] = Devise.mappings[:user]

  # Use the sign_in helper to sign in a fixture `User` record.
  sign_in users(:alice)

  get :new

  # assert something
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Integration tests&lt;/h3&gt; 
&lt;p&gt;Integration test helpers are available by including the &lt;code&gt;Devise::Test::IntegrationHelpers&lt;/code&gt; module.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class PostsTests &amp;lt; ActionDispatch::IntegrationTest
  include Devise::Test::IntegrationHelpers
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can use the following &lt;code&gt;sign_in&lt;/code&gt; and &lt;code&gt;sign_out&lt;/code&gt; methods in your integration tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;sign_in users(:bob)
sign_in users(:bob), scope: :admin

sign_out :user
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;RSpec users can include the &lt;code&gt;IntegrationHelpers&lt;/code&gt; module on their &lt;code&gt;:feature&lt;/code&gt; specs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;RSpec.configure do |config|
  config.include Devise::Test::IntegrationHelpers, type: :feature
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unlike controller tests, integration tests do not need to supply the &lt;code&gt;devise.mapping&lt;/code&gt; &lt;code&gt;env&lt;/code&gt; value, as the mapping can be inferred by the routes that are executed in your tests.&lt;/p&gt; 
&lt;p&gt;You can read more about testing your Rails controllers with RSpec in the wiki:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/heartcombo/devise/wiki/How-To:-Test-controllers-with-Rails-(and-RSpec)&quot;&gt;https://github.com/heartcombo/devise/wiki/How-To:-Test-controllers-with-Rails-(and-RSpec)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;OmniAuth&lt;/h3&gt; 
&lt;p&gt;Devise comes with OmniAuth support out of the box to authenticate with other providers. To use it, simply specify your OmniAuth configuration in &lt;code&gt;config/initializers/devise.rb&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;config.omniauth :github, &#39;APP_ID&#39;, &#39;APP_SECRET&#39;, scope: &#39;user,public_repo&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can read more about OmniAuth support in the wiki:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/heartcombo/devise/wiki/OmniAuth:-Overview&quot;&gt;https://github.com/heartcombo/devise/wiki/OmniAuth:-Overview&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configuring multiple models&lt;/h3&gt; 
&lt;p&gt;Devise allows you to set up as many Devise models as you want. If you want to have an Admin model with just authentication and timeout features, in addition to the User model above, just run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Create a migration with the required fields
create_table :admins do |t|
  t.string :email
  t.string :encrypted_password
  t.timestamps null: false
end

# Inside your Admin model
devise :database_authenticatable, :timeoutable

# Inside your routes
devise_for :admins

# Inside your protected controller
before_action :authenticate_admin!

# Inside your controllers and views
admin_signed_in?
current_admin
admin_session
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can simply run the Devise generator.&lt;/p&gt; 
&lt;p&gt;Keep in mind that those models will have completely different routes. They &lt;strong&gt;do not&lt;/strong&gt; and &lt;strong&gt;cannot&lt;/strong&gt; share the same controller for sign in, sign out and so on. In case you want to have different roles sharing the same actions, we recommend that you use a role-based approach, by either providing a role column or using a dedicated gem for authorization.&lt;/p&gt; 
&lt;h3&gt;Active Job Integration&lt;/h3&gt; 
&lt;p&gt;If you are using Active Job to deliver Action Mailer messages in the background through a queuing back-end, you can send Devise emails through your existing queue by overriding the &lt;code&gt;send_devise_notification&lt;/code&gt; method in your model.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;def send_devise_notification(notification, *args)
  devise_mailer.send(notification, self, *args).deliver_later
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Password reset tokens and Rails logs&lt;/h3&gt; 
&lt;p&gt;If you enable the &lt;a href=&quot;https://www.rubydoc.info/gems/devise/Devise/Models/Recoverable&quot;&gt;Recoverable&lt;/a&gt; module, note that a stolen password reset token could give an attacker access to your application. Devise takes effort to generate random, secure tokens, and stores only token digests in the database, never plaintext. However the default logging behavior in Rails can cause plaintext tokens to leak into log files:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Action Mailer logs the entire contents of all outgoing emails to the DEBUG level. Password reset tokens delivered to users in email will be leaked.&lt;/li&gt; 
 &lt;li&gt;Active Job logs all arguments to every enqueued job at the INFO level. If you configure Devise to use &lt;code&gt;deliver_later&lt;/code&gt; to send password reset emails, password reset tokens will be leaked.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Rails sets the production logger level to INFO by default. Consider changing your production logger level to WARN if you wish to prevent tokens from being leaked into your logs. In &lt;code&gt;config/environments/production.rb&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;config.log_level = :warn
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other ORMs&lt;/h3&gt; 
&lt;p&gt;Devise supports ActiveRecord (default) and Mongoid. To select another ORM, simply require it in the initializer file.&lt;/p&gt; 
&lt;h3&gt;Rails API Mode&lt;/h3&gt; 
&lt;p&gt;Rails 5+ has a built-in &lt;a href=&quot;https://edgeguides.rubyonrails.org/api_app.html&quot;&gt;API Mode&lt;/a&gt; which optimizes Rails for use as an API (only). Devise is &lt;em&gt;somewhat&lt;/em&gt; able to handle applications that are built in this mode without additional modifications in the sense that it should not raise exceptions and the like. But some issues may still arise during &lt;code&gt;development&lt;/code&gt;/&lt;code&gt;testing&lt;/code&gt;, as we still don&#39;t know the full extent of this compatibility. (For more information, see &lt;a href=&quot;https://github.com/heartcombo/devise/issues/4947/&quot;&gt;issue #4947&lt;/a&gt;)&lt;/p&gt; 
&lt;h4&gt;Supported Authentication Strategies&lt;/h4&gt; 
&lt;p&gt;API-only applications don&#39;t support browser-based authentication via cookies, which is devise&#39;s default. Yet, devise can still provide authentication out of the box in those cases with the &lt;code&gt;http_authenticatable&lt;/code&gt; strategy, which uses HTTP Basic Auth and authenticates the user on each request. (For more info, see this wiki article for &lt;a href=&quot;https://github.com/heartcombo/devise/wiki/How-To:-Use-HTTP-Basic-Authentication&quot;&gt;How To: Use HTTP Basic Authentication&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;The devise default for HTTP Auth is disabled, so it will need to be enabled in the devise initializer for the database strategy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;config.http_authenticatable = [:database]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This restriction does not limit you from implementing custom warden strategies, either in your application or via gem-based extensions for devise. A common authentication strategy for APIs is token-based authentication. For more information on extending devise to support this type of authentication and others, see the wiki article for &lt;a href=&quot;https://github.com/heartcombo/devise/wiki/How-To:-Simple-Token-Authentication-Example#alternatives&quot;&gt;Simple Token Authentication Examples and alternatives&lt;/a&gt; or this blog post on &lt;a href=&quot;http://blog.plataformatec.com.br/2019/01/custom-authentication-methods-with-devise/&quot;&gt;Custom authentication methods with Devise&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Testing&lt;/h4&gt; 
&lt;p&gt;API Mode changes the order of the middleware stack, and this can cause problems for &lt;code&gt;Devise::Test::IntegrationHelpers&lt;/code&gt;. This problem usually surfaces as an &lt;code&gt;undefined method `[]=&#39; for nil:NilClass&lt;/code&gt; error when using integration test helpers, such as &lt;code&gt;#sign_in&lt;/code&gt;. The solution is simply to reorder the middlewares by adding the following to test.rb:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;Rails.application.config.middleware.insert_before Warden::Manager, ActionDispatch::Cookies
Rails.application.config.middleware.insert_before Warden::Manager, ActionDispatch::Session::CookieStore
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For a deeper understanding of this, review &lt;a href=&quot;https://github.com/heartcombo/devise/issues/4696&quot;&gt;this issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally be mindful that without views supported, some email-based flows from Confirmable, Recoverable and Lockable are not supported directly at this time.&lt;/p&gt; 
&lt;h2&gt;Additional information&lt;/h2&gt; 
&lt;h3&gt;Warden&lt;/h3&gt; 
&lt;p&gt;Devise is based on Warden, which is a general Rack authentication framework created by Daniel Neighman. We encourage you to read more about Warden here:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/wardencommunity/warden&quot;&gt;https://github.com/wardencommunity/warden&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;We have a long list of valued contributors. Check them all at:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/heartcombo/devise/graphs/contributors&quot;&gt;https://github.com/heartcombo/devise/graphs/contributors&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License. Copyright 2020-2024 Rafael Fran√ßa, Leonardo Tegon, Carlos Ant√¥nio da Silva. Copyright 2009-2019 Plataformatec.&lt;/p&gt; 
&lt;p&gt;The Devise logo is licensed under &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot;&gt;Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rails/rails</title>
      <link>https://github.com/rails/rails</link>
      <description>&lt;p&gt;Ruby on Rails&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Rails&lt;/h1&gt; 
&lt;h2&gt;What&#39;s Rails?&lt;/h2&gt; 
&lt;p&gt;Rails is a web-application framework that includes everything needed to create database-backed web applications according to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Model-view-controller&quot;&gt;Model-View-Controller (MVC)&lt;/a&gt; pattern.&lt;/p&gt; 
&lt;p&gt;Understanding the MVC pattern is key to understanding Rails. MVC divides your application into three layers: Model, View, and Controller, each with a specific responsibility.&lt;/p&gt; 
&lt;h2&gt;Model layer&lt;/h2&gt; 
&lt;p&gt;The &lt;em&gt;&lt;strong&gt;Model layer&lt;/strong&gt;&lt;/em&gt; represents the domain model (such as Account, Product, Person, Post, etc.) and encapsulates the business logic specific to your application. In Rails, database-backed model classes are derived from &lt;code&gt;ActiveRecord::Base&lt;/code&gt;. &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activerecord/README.rdoc&quot;&gt;Active Record&lt;/a&gt; allows you to present the data from database rows as objects and embellish these data objects with business logic methods. Although most Rails models are backed by a database, models can also be ordinary Ruby classes, or Ruby classes that implement a set of interfaces as provided by the &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activemodel/README.rdoc&quot;&gt;Active Model&lt;/a&gt; module.&lt;/p&gt; 
&lt;h2&gt;View layer&lt;/h2&gt; 
&lt;p&gt;The &lt;em&gt;&lt;strong&gt;View layer&lt;/strong&gt;&lt;/em&gt; is composed of &quot;templates&quot; that are responsible for providing appropriate representations of your application&#39;s resources. Templates can come in a variety of formats, but most view templates are HTML with embedded Ruby code (ERB files). Views are typically rendered to generate a controller response or to generate the body of an email. In Rails, View generation is handled by &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionview/README.rdoc&quot;&gt;Action View&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Controller layer&lt;/h2&gt; 
&lt;p&gt;The &lt;em&gt;&lt;strong&gt;Controller layer&lt;/strong&gt;&lt;/em&gt; is responsible for handling incoming HTTP requests and providing a suitable response. Usually, this means returning HTML, but Rails controllers can also generate XML, JSON, PDFs, mobile-specific views, and more. Controllers load and manipulate models, and render view templates in order to generate the appropriate HTTP response. In Rails, incoming requests are routed by Action Dispatch to an appropriate controller, and controller classes are derived from &lt;code&gt;ActionController::Base&lt;/code&gt;. Action Dispatch and Action Controller are bundled together in &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionpack/README.rdoc&quot;&gt;Action Pack&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Frameworks and libraries&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activerecord/README.rdoc&quot;&gt;Active Record&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activemodel/README.rdoc&quot;&gt;Active Model&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionpack/README.rdoc&quot;&gt;Action Pack&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionview/README.rdoc&quot;&gt;Action View&lt;/a&gt; can each be used independently outside Rails.&lt;/p&gt; 
&lt;p&gt;In addition to that, Rails also comes with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionmailer/README.rdoc&quot;&gt;Action Mailer&lt;/a&gt;, a library to generate and send emails&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionmailbox/README.md&quot;&gt;Action Mailbox&lt;/a&gt;, a library to receive emails within a Rails application&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activejob/README.md&quot;&gt;Active Job&lt;/a&gt;, a framework for declaring jobs and making them run on a variety of queuing backends&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actioncable/README.md&quot;&gt;Action Cable&lt;/a&gt;, a framework to integrate WebSockets with a Rails application&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activestorage/README.md&quot;&gt;Active Storage&lt;/a&gt;, a library to attach cloud and local files to Rails applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actiontext/README.md&quot;&gt;Action Text&lt;/a&gt;, a library to handle rich text content&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activesupport/README.rdoc&quot;&gt;Active Support&lt;/a&gt;, a collection of utility classes and standard library extensions that are useful for Rails, and may also be used independently outside Rails&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install Rails at the command prompt if you haven&#39;t yet:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gem install rails
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;At the command prompt, create a new Rails application:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ rails new myapp
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;where &quot;myapp&quot; is the application name.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Change directory to &lt;code&gt;myapp&lt;/code&gt; and start the web server:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cd myapp
$ bin/rails server
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Run with &lt;code&gt;--help&lt;/code&gt; or &lt;code&gt;-h&lt;/code&gt; for options.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Go to &lt;code&gt;http://localhost:3000&lt;/code&gt; and you&#39;ll see the Rails bootscreen with your Rails and Ruby versions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the guidelines to start developing your application. You may find the following resources handy:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://guides.rubyonrails.org/getting_started.html&quot;&gt;Getting Started with Rails&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://guides.rubyonrails.org&quot;&gt;Ruby on Rails Guides&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://api.rubyonrails.org&quot;&gt;The API Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We encourage you to contribute to Ruby on Rails! Please check out the &lt;a href=&quot;https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html&quot;&gt;Contributing to Ruby on Rails guide&lt;/a&gt; for guidelines about how to proceed. &lt;a href=&quot;https://contributors.rubyonrails.org&quot;&gt;Join us!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Trying to report a possible security vulnerability in Rails? Please check out our &lt;a href=&quot;https://rubyonrails.org/security&quot;&gt;security policy&lt;/a&gt; for guidelines about how to proceed.&lt;/p&gt; 
&lt;p&gt;Everyone interacting in Rails and its sub-projects&#39; codebases, issue trackers, chat rooms, and mailing lists is expected to follow the Rails &lt;a href=&quot;https://rubyonrails.org/conduct&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Ruby on Rails is released under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openstreetmap/openstreetmap-website</title>
      <link>https://github.com/openstreetmap/openstreetmap-website</link>
      <description>&lt;p&gt;The Rails application that powers OpenStreetMap&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;openstreetmap-website&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/openstreetmap/openstreetmap-website/actions/workflows/lint.yml?query=branch%3Amaster+event%3Apush&quot;&gt;&lt;img src=&quot;https://github.com/openstreetmap/openstreetmap-website/actions/workflows/lint.yml/badge.svg?branch=master&amp;amp;event=push&quot; alt=&quot;Lint&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/openstreetmap/openstreetmap-website/actions/workflows/tests.yml?query=branch%3Amaster+event%3Apush&quot;&gt;&lt;img src=&quot;https://github.com/openstreetmap/openstreetmap-website/actions/workflows/tests.yml/badge.svg?branch=master&amp;amp;event=push&quot; alt=&quot;Tests&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/r/openstreetmap/openstreetmap-website?branch=master&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/openstreetmap/openstreetmap-website/badge.svg?branch=master&quot; alt=&quot;Coverage Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is &lt;code&gt;openstreetmap-website&lt;/code&gt;, the &lt;a href=&quot;https://rubyonrails.org/&quot;&gt;Ruby on Rails&lt;/a&gt; application that powers the &lt;a href=&quot;https://www.openstreetmap.org&quot;&gt;OpenStreetMap&lt;/a&gt; website and API.&lt;/p&gt; 
&lt;p&gt;This repository consists of:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The web site, including user accounts, diary entries, user-to-user messaging.&lt;/li&gt; 
 &lt;li&gt;The XML- and JSON-based editing &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/API_v0.6&quot;&gt;API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The integrated version of the &lt;a href=&quot;https://wiki.openstreetmap.org/wiki/ID&quot;&gt;iD&lt;/a&gt; editor.&lt;/li&gt; 
 &lt;li&gt;The Browse pages - a web front-end to the OpenStreetMap data.&lt;/li&gt; 
 &lt;li&gt;The GPX uploads, browsing and API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A fully-functional &lt;code&gt;openstreetmap-website&lt;/code&gt; installation depends on other services, including map tile servers and geocoding services, that are provided by other software. The default installation uses publicly-available services to help with development and testing.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;This software is licensed under the &lt;a href=&quot;https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt&quot;&gt;GNU General Public License 2.0&lt;/a&gt;, a copy of which can be found in the &lt;a href=&quot;https://raw.githubusercontent.com/openstreetmap/openstreetmap-website/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;openstreetmap-website&lt;/code&gt; is a Ruby on Rails application that uses PostgreSQL as its database, and has a large number of dependencies for installation. For full details please see &lt;a href=&quot;https://raw.githubusercontent.com/openstreetmap/openstreetmap-website/master/INSTALL.md&quot;&gt;INSTALL.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;p&gt;We&#39;re always keen to have more developers! Pull requests are very welcome.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bugs are recorded in the &lt;a href=&quot;https://github.com/openstreetmap/openstreetmap-website/issues&quot;&gt;issue tracker&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Translation is managed by &lt;a href=&quot;https://translatewiki.net/wiki/Translating:OpenStreetMap&quot;&gt;Translatewiki&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Local Chapters shown on the Communities page, and their translations, come from &lt;a href=&quot;https://github.com/osmlab/osm-community-index&quot;&gt;osm-community-index&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;There is a &lt;a href=&quot;https://lists.openstreetmap.org/listinfo/rails-dev&quot;&gt;rails-dev@openstreetmap.org&lt;/a&gt; mailing list for development discussion.&lt;/li&gt; 
 &lt;li&gt;IRC - there is the #osm-dev channel on irc.oftc.net.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;More details on contributing to the code are in the &lt;a href=&quot;https://raw.githubusercontent.com/openstreetmap/openstreetmap-website/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h1&gt;Maintainers&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tom Hughes &lt;a href=&quot;https://github.com/tomhughes/&quot;&gt;@tomhughes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Andy Allan &lt;a href=&quot;https://github.com/gravitystorm/&quot;&gt;@gravitystorm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Anton Khorev &lt;a href=&quot;https://github.com/AntonKhorev/&quot;&gt;@AntonKhorev&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>obie/claude-on-rails</title>
      <link>https://github.com/obie/claude-on-rails</link>
      <description>&lt;p&gt;A development framework for Ruby on Rails developers using Claude Code, inspired by SuperClaude&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ClaudeOnRails&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://badge.fury.io/rb/claude-on-rails&quot;&gt;&lt;img src=&quot;https://badge.fury.io/rb/claude-on-rails.svg?cache_bust=0.1.4&quot; alt=&quot;Gem Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/obie/claude-on-rails/actions/workflows/main.yml&quot;&gt;&lt;img src=&quot;https://github.com/obie/claude-on-rails/actions/workflows/main.yml/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A Rails development framework that leverages &lt;a href=&quot;https://github.com/parruda/claude-swarm&quot;&gt;claude-swarm&lt;/a&gt; to create an intelligent team of AI agents specialized in different aspects of Rails development.&lt;/p&gt; 
&lt;p&gt;Instead of managing personas manually, ClaudeOnRails automatically orchestrates a swarm of specialized agents that work together like a real development team. Simply describe what you want to build, and the swarm handles the rest.&lt;/p&gt; 
&lt;h2&gt;How It Works&lt;/h2&gt; 
&lt;p&gt;ClaudeOnRails creates a team of specialized AI agents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Architect&lt;/strong&gt;: Coordinates development and makes high-level decisions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Models&lt;/strong&gt;: Handles ActiveRecord, migrations, and database design&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Controllers&lt;/strong&gt;: Manages routing and request handling&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Views&lt;/strong&gt;: Creates UI templates and manages assets&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Services&lt;/strong&gt;: Implements business logic and service objects&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tests&lt;/strong&gt;: Ensures comprehensive test coverage&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DevOps&lt;/strong&gt;: Handles deployment and infrastructure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each agent works in their specific domain (directory) and can collaborate with other agents to implement complex features.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Add to your Rails application&#39;s Gemfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;group :development do
  gem &#39;claude-on-rails&#39;
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bundle install
rails generate claude_on_rails:swarm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;During generation, you&#39;ll be offered to set up Rails MCP Server for enhanced documentation access. Simply press Y when prompted!&lt;/p&gt; 
&lt;p&gt;This will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Analyze your Rails project structure&lt;/li&gt; 
 &lt;li&gt;Optionally set up Rails MCP Server (recommended)&lt;/li&gt; 
 &lt;li&gt;Generate a customized swarm configuration&lt;/li&gt; 
 &lt;li&gt;Create agent-specific prompts&lt;/li&gt; 
 &lt;li&gt;Set up your development environment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed setup instructions, see &lt;a href=&quot;https://raw.githubusercontent.com/obie/claude-on-rails/main/SETUP.md&quot;&gt;SETUP.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Start Your Development Swarm&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# In your Rails project directory
claude-swarm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Natural Language Development&lt;/h3&gt; 
&lt;p&gt;Once the swarm is running, just describe what you want to build in the Claude interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; Add user authentication with email confirmation
[The architect coordinates the implementation across all agents]

&amp;gt; Create a shopping cart with Stripe payment integration
[Complex features are automatically broken down and implemented]

&amp;gt; Optimize the dashboard - it&#39;s loading too slowly
[Performance improvements across the stack]

&amp;gt; Build a RESTful API for our mobile app with JWT auth
[API development with authentication]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The swarm automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Analyzes your request&lt;/li&gt; 
 &lt;li&gt;Delegates to appropriate specialists&lt;/li&gt; 
 &lt;li&gt;Implements across all layers (models, controllers, views, tests)&lt;/li&gt; 
 &lt;li&gt;Follows Rails best practices&lt;/li&gt; 
 &lt;li&gt;Ensures test coverage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How It&#39;s Different&lt;/h2&gt; 
&lt;h3&gt;Traditional Rails Development with AI&lt;/h3&gt; 
&lt;p&gt;When using AI assistants for Rails development, you typically need to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Manually coordinate different aspects of implementation&lt;/li&gt; 
 &lt;li&gt;Switch contexts between models, controllers, views, and tests&lt;/li&gt; 
 &lt;li&gt;Ensure consistency across different parts of your application&lt;/li&gt; 
 &lt;li&gt;Remember to implement tests, security, and performance considerations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ClaudeOnRails Approach&lt;/h3&gt; 
&lt;p&gt;With ClaudeOnRails, you simply describe what you want in natural language:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; Create a user system with social login
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The swarm automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Creates models with proper validations and associations&lt;/li&gt; 
 &lt;li&gt;Implements controllers with authentication logic&lt;/li&gt; 
 &lt;li&gt;Builds views with forms and UI components&lt;/li&gt; 
 &lt;li&gt;Adds comprehensive test coverage&lt;/li&gt; 
 &lt;li&gt;Handles security considerations&lt;/li&gt; 
 &lt;li&gt;Optimizes database queries&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All coordinated by specialized agents working together.&lt;/p&gt; 
&lt;h2&gt;Project Structure&lt;/h2&gt; 
&lt;p&gt;After running the generator, you&#39;ll have:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;your-rails-app/
‚îú‚îÄ‚îÄ claude-swarm.yml             # Swarm configuration
‚îú‚îÄ‚îÄ CLAUDE.md                    # Project-specific Claude config (imports context.md)
‚îî‚îÄ‚îÄ .claude-on-rails/
    ‚îú‚îÄ‚îÄ context.md               # Rails project context imported by CLAUDE.md
    ‚îî‚îÄ‚îÄ prompts/                 # Agent-specific prompts
        ‚îú‚îÄ‚îÄ architect.md
        ‚îú‚îÄ‚îÄ models.md
        ‚îú‚îÄ‚îÄ controllers.md
        ‚îî‚îÄ‚îÄ ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Customization&lt;/h2&gt; 
&lt;h3&gt;Swarm Configuration&lt;/h3&gt; 
&lt;p&gt;The generated &lt;code&gt;claude-swarm.yml&lt;/code&gt; can be customized:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;instances:
  architect:
    description: &quot;Your project-specific architect description&quot;
    connections: [models, controllers, custom_agent]

  custom_agent:
    description: &quot;Specialized agent for your domain&quot;
    directory: ./app/custom
    prompt_file: .claude-on-rails/prompts/custom.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Agent Prompts&lt;/h3&gt; 
&lt;p&gt;Customize agent behavior by editing prompts in &lt;code&gt;.claude-on-rails/prompts/&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add project-specific conventions&lt;/li&gt; 
 &lt;li&gt;Include domain knowledge&lt;/li&gt; 
 &lt;li&gt;Define coding standards&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic Agent Selection&lt;/strong&gt;: No need to choose which persona to use&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Collaborative Implementation&lt;/strong&gt;: Agents work together like a real team&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rails-Aware&lt;/strong&gt;: Deep understanding of Rails conventions and best practices&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Project Adaptation&lt;/strong&gt;: Detects your project structure and adapts accordingly&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Test-Driven&lt;/strong&gt;: Automatic test generation for all code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Focus&lt;/strong&gt;: Built-in optimization capabilities&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Enhanced Documentation with Rails MCP Server&lt;/h2&gt; 
&lt;p&gt;ClaudeOnRails integrates with &lt;a href=&quot;https://github.com/maquina-app/rails-mcp-server&quot;&gt;Rails MCP Server&lt;/a&gt; to provide your AI agents with real-time access to Rails documentation and best practices.&lt;/p&gt; 
&lt;h3&gt;Benefits&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Up-to-date Documentation&lt;/strong&gt;: Agents access current Rails guides matching your version&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Framework Resources&lt;/strong&gt;: Includes Turbo, Stimulus, and Kamal documentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Consistent Standards&lt;/strong&gt;: All agents share the same documentation source&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reduced Hallucination&lt;/strong&gt;: Agents verify patterns against official documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Automated Setup&lt;/h3&gt; 
&lt;p&gt;When you run &lt;code&gt;rails generate claude_on_rails:swarm&lt;/code&gt;, you&#39;ll be prompted to set up Rails MCP Server automatically. Just press Y!&lt;/p&gt; 
&lt;p&gt;If you skipped it initially, you can set it up anytime:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bundle exec rake claude_on_rails:setup_mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This interactive command will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the Rails MCP Server gem&lt;/li&gt; 
 &lt;li&gt;Configure your environment for enhanced documentation access&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Check Status&lt;/h3&gt; 
&lt;p&gt;To verify your Rails MCP Server installation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;bundle exec rake claude_on_rails:mcp_status
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How It Works&lt;/h3&gt; 
&lt;p&gt;When Rails MCP Server is available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Each agent can query Rails documentation in real-time&lt;/li&gt; 
 &lt;li&gt;Version-specific guidance ensures compatibility&lt;/li&gt; 
 &lt;li&gt;Agents reference canonical implementations&lt;/li&gt; 
 &lt;li&gt;Complex features follow official patterns&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ruby 2.7+&lt;/li&gt; 
 &lt;li&gt;Rails 6.0+&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/parruda/claude-swarm&quot;&gt;claude-swarm&lt;/a&gt; gem (automatically installed as a dependency)&lt;/li&gt; 
 &lt;li&gt;Claude Code CLI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/obie/claude-on-rails/main/examples&quot;&gt;examples&lt;/a&gt; directory for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;E-commerce platform development&lt;/li&gt; 
 &lt;li&gt;API-only applications&lt;/li&gt; 
 &lt;li&gt;Real-time features with Turbo/Stimulus&lt;/li&gt; 
 &lt;li&gt;Performance optimization workflows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Please see &lt;a href=&quot;https://raw.githubusercontent.com/obie/claude-on-rails/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for guidelines.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href=&quot;https://raw.githubusercontent.com/obie/claude-on-rails/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Powered by &lt;a href=&quot;https://github.com/parruda/claude-swarm&quot;&gt;claude-swarm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Built for &lt;a href=&quot;https://github.com/anthropics/claude-code&quot;&gt;Claude Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Integrates with &lt;a href=&quot;https://github.com/maquina-app/rails-mcp-server&quot;&gt;Rails MCP Server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>sidekiq/sidekiq</title>
      <link>https://github.com/sidekiq/sidekiq</link>
      <description>&lt;p&gt;Simple, efficient background processing for Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sidekiq&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/sidekiq&quot;&gt;&lt;img src=&quot;https://badge.fury.io/rb/sidekiq.svg?sanitize=true&quot; alt=&quot;Gem Version&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/sidekiq/sidekiq/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;Build&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Simple, efficient background jobs for Ruby.&lt;/p&gt; 
&lt;p&gt;Sidekiq uses threads to handle many jobs at the same time in the same process. Sidekiq can be used by any Ruby application.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Redis: Redis 7.0+, Valkey 7.2+ or Dragonfly 1.27+&lt;/li&gt; 
 &lt;li&gt;Ruby: MRI 3.2+ or JRuby 9.4+.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Sidekiq 8.0 supports Rails and Active Job 7.0+.&lt;/p&gt; 
&lt;p&gt;Sidekiq supports &lt;a href=&quot;https://valkey.io&quot;&gt;Valkey&lt;/a&gt; and &lt;a href=&quot;https://www.dragonflydb.io&quot;&gt;Dragonfly&lt;/a&gt; as Redis alternatives. Redis 7.2.4 is considered to be the canonical implementation. Incompatibilities with that version are considered bugs.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;bundle add sidekiq
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/sidekiq/sidekiq/wiki/Getting-Started&quot;&gt;Getting Started wiki page&lt;/a&gt; and follow the simple setup process. You can watch &lt;a href=&quot;https://www.youtube.com/playlist?list=PLjeHh2LSCFrWGT5uVjUuFKAcrcj5kSai1&quot;&gt;this YouTube playlist&lt;/a&gt; to learn all about Sidekiq and see its features in action. Here&#39;s the Web UI:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/sidekiq/sidekiq/raw/main/examples/web-ui.png&quot; alt=&quot;Web UI&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;p&gt;The benchmark in &lt;code&gt;bin/sidekiqload&lt;/code&gt; creates 500,000 no-op jobs and drains them as fast as possible, assuming a fixed Redis network latency of 1ms. This requires a lot of Redis network I/O and JSON parsing. This benchmark is IO-bound so we increase the concurrency to 25. If your application is sending lots of emails or performing other network-intensive work, you could see a similar benefit but be careful not to saturate the CPU. Real world applications will rarely if ever need to use concurrency greater than 10.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;Time to process 500k jobs&lt;/th&gt; 
   &lt;th&gt;Throughput (jobs/sec)&lt;/th&gt; 
   &lt;th&gt;Ruby&lt;/th&gt; 
   &lt;th&gt;Concurrency&lt;/th&gt; 
   &lt;th&gt;Job Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sidekiq 7.0.3&lt;/td&gt; 
   &lt;td&gt;21.3 sec&lt;/td&gt; 
   &lt;td&gt;23,500&lt;/td&gt; 
   &lt;td&gt;3.2.0+yjit&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;Sidekiq::Job&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sidekiq 7.0.3&lt;/td&gt; 
   &lt;td&gt;33.8 sec&lt;/td&gt; 
   &lt;td&gt;14,700&lt;/td&gt; 
   &lt;td&gt;3.2.0+yjit&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;ActiveJob 7.0.4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sidekiq 7.0.3&lt;/td&gt; 
   &lt;td&gt;23.5 sec&lt;/td&gt; 
   &lt;td&gt;21,300&lt;/td&gt; 
   &lt;td&gt;3.2.0&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;Sidekiq::Job&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sidekiq 7.0.3&lt;/td&gt; 
   &lt;td&gt;46.5 sec&lt;/td&gt; 
   &lt;td&gt;10,700&lt;/td&gt; 
   &lt;td&gt;3.2.0&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;ActiveJob 7.0.4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sidekiq 7.0.3&lt;/td&gt; 
   &lt;td&gt;23.0 sec&lt;/td&gt; 
   &lt;td&gt;21,700&lt;/td&gt; 
   &lt;td&gt;2.7.5&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;Sidekiq::Job&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sidekiq 7.0.3&lt;/td&gt; 
   &lt;td&gt;46.5 sec&lt;/td&gt; 
   &lt;td&gt;10,850&lt;/td&gt; 
   &lt;td&gt;2.7.5&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;ActiveJob 7.0.4&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Most of Sidekiq&#39;s overhead is Redis network I/O. ActiveJob adds a notable amount of CPU overhead due to argument deserialization and callbacks. Concurrency of 30 was determined experimentally to maximize one CPU without saturating it.&lt;/p&gt; 
&lt;h2&gt;Want to Upgrade?&lt;/h2&gt; 
&lt;p&gt;Use &lt;code&gt;bundle up sidekiq&lt;/code&gt; to upgrade Sidekiq and all its dependencies. Upgrade notes between each major version can be found in the &lt;code&gt;docs/&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;I also sell &lt;a href=&quot;https://billing.contribsys.com/spro/&quot;&gt;Sidekiq Pro&lt;/a&gt; and &lt;a href=&quot;https://billing.contribsys.com/sent/new.cgi&quot;&gt;Sidekiq Enterprise&lt;/a&gt;, extensions to Sidekiq which provide more features, a commercial-friendly license and allow you to support high quality open source development all at the same time. Please see the &lt;a href=&quot;https://sidekiq.org/&quot;&gt;Sidekiq&lt;/a&gt; homepage for more detail.&lt;/p&gt; 
&lt;h2&gt;Problems?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Do not directly email any Sidekiq committers with questions or problems.&lt;/strong&gt; A community is best served when discussions are held in public.&lt;/p&gt; 
&lt;p&gt;If you have a problem, please review the &lt;a href=&quot;https://github.com/sidekiq/sidekiq/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt; and &lt;a href=&quot;https://github.com/sidekiq/sidekiq/wiki/Problems-and-Troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt; wiki pages. Searching the &lt;a href=&quot;https://github.com/sidekiq/sidekiq/issues&quot;&gt;issues&lt;/a&gt; for your problem is also a good idea.&lt;/p&gt; 
&lt;p&gt;Sidekiq Pro and Sidekiq Enterprise customers get private email support. You can purchase at &lt;a href=&quot;https://sidekiq.org&quot;&gt;https://sidekiq.org&lt;/a&gt;; email &lt;a href=&quot;mailto:support@contribsys.com&quot;&gt;support@contribsys.com&lt;/a&gt; for help.&lt;/p&gt; 
&lt;p&gt;Useful resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Product documentation is in the &lt;a href=&quot;https://github.com/sidekiq/sidekiq/wiki&quot;&gt;wiki&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Occasional announcements are made to the &lt;a href=&quot;https://ruby.social/@sidekiq&quot;&gt;@sidekiq&lt;/a&gt; Mastodon account.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://stackoverflow.com/questions/tagged/sidekiq&quot;&gt;Sidekiq tag&lt;/a&gt; on Stack Overflow has lots of useful Q &amp;amp; A.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Every Thursday morning is Sidekiq Office Hour: I video chat and answer questions. See the &lt;a href=&quot;https://sidekiq.org/support.html&quot;&gt;Sidekiq support page&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/sidekiq/sidekiq/raw/main/.github/contributing.md&quot;&gt;the contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/sidekiq/sidekiq/raw/main/LICENSE.txt&quot;&gt;LICENSE.txt&lt;/a&gt; for licensing details. The license for Sidekiq Pro and Sidekiq Enterprise can be found in &lt;a href=&quot;https://github.com/sidekiq/sidekiq/raw/main/COMM-LICENSE.txt&quot;&gt;COMM-LICENSE.txt&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;Mike Perham, &lt;a href=&quot;https://ruby.social/@getajobmike&quot;&gt;mastodon&lt;/a&gt;, &lt;a href=&quot;https://www.mikeperham.com&quot;&gt;https://www.mikeperham.com&lt;/a&gt; / &lt;a href=&quot;https://www.contribsys.com&quot;&gt;https://www.contribsys.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>forem/forem</title>
      <link>https://github.com/forem/forem</link>
      <description>&lt;p&gt;For empowering community üå±&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;br /&gt; 
 &lt;h1&gt;Forem üå±&lt;/h1&gt; 
 &lt;strong&gt;For Empowering Community&lt;/strong&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/forem/forem/actions/workflows/ci.yml&quot;&gt; &lt;img src=&quot;https://github.com/forem/forem/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/forem/forem/actions/workflows/cd.yml&quot;&gt; &lt;img src=&quot;https://github.com/forem/forem/actions/workflows/cd.yml/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt; &lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/commit-activity/w/forem/forem&quot; alt=&quot;GitHub commit activity&quot; /&gt; &lt;a href=&quot;https://github.com/forem/forem/issues?q=is%3Aissue+is%3Aopen+label%3A%22ready+for+dev%22&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/issues/forem/forem/ready for dev&quot; alt=&quot;GitHub issues ready for dev&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://gitpod.io/#https://github.com/forem/forem&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/setup-automated-blue?logo=gitpod&quot; alt=&quot;GitPod badge&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Welcome to the &lt;a href=&quot;https://forem.com&quot;&gt;Forem&lt;/a&gt; codebase, the platform that powers &lt;a href=&quot;https://dev.to&quot;&gt;dev.to&lt;/a&gt;. We are so excited to have you. With your help, we can build out Forem‚Äôs usability, scalability, and stability to better serve our communities.&lt;/p&gt; 
&lt;h2&gt;What is Forem?&lt;/h2&gt; 
&lt;p&gt;Forem is open source software for building communities. Communities for your peers, customers, fanbases, families, friends, and any other time and space where people need to come together to be part of a collective. &lt;a href=&quot;https://dev.to/devteam/for-empowering-community-2k6h&quot;&gt;See our announcement post&lt;/a&gt; for a high-level overview of what Forem is.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://dev.to&quot;&gt;dev.to&lt;/a&gt; (or just DEV) is hosted by Forem. It is a community of software developers who write articles, take part in discussions, and build their professional profiles. We value supportive and constructive dialogue in the pursuit of great code and career growth for all members. The ecosystem spans from beginner to advanced developers, and all are welcome to find their place within our community. ‚ù§Ô∏è&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/forem/forem/main/#what-is-forem&quot;&gt;What is Forem?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/forem/forem/main/#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/forem/forem/main/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/forem/forem/main/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/forem/forem/main/#getting-started&quot;&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/forem/forem/main/#installation-documentation&quot;&gt;Installation Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/forem/forem/main/#developer-documentation&quot;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/forem/forem/main/#vulnerability-disclosure&quot;&gt;Vulnerability Disclosure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/forem/forem/main/#acknowledgements&quot;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/forem/forem/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;For a place to have open discussions on features, voice your ideas, or get help with general questions please visit the &lt;a href=&quot;https://github.com/forem/forem/discussions&quot;&gt;discussions&lt;/a&gt; section.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We encourage you to contribute to Forem! Please check out the &lt;a href=&quot;https://developers.forem.com/contributing-guide/forem&quot;&gt;Contributing to Forem guide&lt;/a&gt; for guidelines on how to proceed.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;This section provides a high-level quick start guide. If you&#39;re looking for a more thorough installation guide (for example &lt;a href=&quot;https://developers.forem.com/getting-started/installation/mac&quot;&gt;with macOS&lt;/a&gt;), you&#39;ll want to refer to our complete &lt;a href=&quot;https://developers.forem.com/&quot;&gt;Developer Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We run on a &lt;a href=&quot;https://rubyonrails.org/&quot;&gt;Rails&lt;/a&gt; backend, and we are currently transitioning to a &lt;a href=&quot;https://preactjs.com/&quot;&gt;Preact&lt;/a&gt;-first frontend.&lt;/p&gt; 
&lt;p&gt;A more complete overview of our stack is available in &lt;a href=&quot;https://developers.forem.com/technical-overview/stack&quot;&gt;our docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To &lt;strong&gt;launch Forem in Gitpod&lt;/strong&gt;, navigate to &lt;a href=&quot;https://gitpod.io/#https://github.com/%7Byour_github_username%7D/forem&quot;&gt;https://gitpod.io/#https://github.com/{your_github_username}/forem&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To &lt;strong&gt;launch Forem in Ona&lt;/strong&gt; (formerly Gitpod), the project is fully configured for Ona development environments. Simply open the project in Ona and the environment will be automatically configured with all necessary services and dependencies.&lt;/p&gt; 
&lt;h3&gt;Installation Documentation&lt;/h3&gt; 
&lt;p&gt;Please see our installation guides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.forem.com/getting-started/installation/mac&quot;&gt;MacOS, without containers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developers.forem.com/getting-started/installation/linux&quot;&gt;Linux, without containers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Developer Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://developers.forem.com&quot;&gt;Check out our dedicated docs page for more technical documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Vulnerability Disclosure&lt;/h2&gt; 
&lt;p&gt;Forem is the open source software which powers &lt;a href=&quot;https://dev.to&quot;&gt;DEV&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We welcome security research on DEV under the terms of our &lt;a href=&quot;https://dev.to/security&quot;&gt;vulnerability disclosure policy&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Thank you to the &lt;a href=&quot;https://github.com/twitter/twemoji&quot;&gt;Twemoji project&lt;/a&gt; for the usage of their emojis.&lt;/p&gt; 
&lt;p&gt;Thank you to &lt;a href=&quot;https://www.uffizzi.com&quot;&gt;Uffizzi&lt;/a&gt; for providing ephemeral environments to preview pull requests.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. Please see the &lt;a href=&quot;https://raw.githubusercontent.com/forem/forem/main/LICENSE.md&quot;&gt;LICENSE&lt;/a&gt; file in our repository for the full text.&lt;/p&gt; 
&lt;p&gt;Like many open source projects, we require that contributors provide us with a Contributor License Agreement (CLA). By submitting code to the Forem project, you are granting us a right to use that code under the terms of the CLA.&lt;/p&gt; 
&lt;p&gt;Our version of the CLA was adapted from the Microsoft Contributor License Agreement, which they generously made available to the public domain under Creative Commons CC0 1.0 Universal.&lt;/p&gt; 
&lt;p&gt;Any questions, please refer to our &lt;a href=&quot;https://developers.forem.com/licensing/&quot;&gt;license FAQ&lt;/a&gt; doc or email &lt;a href=&quot;mailto:support@dev.to&quot;&gt;support@dev.to&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Sloan, the sloth mascot&quot; width=&quot;250px&quot; src=&quot;https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/31047/af153cd6-9994-4a68-83f4-8ddf3e13f0bf.jpg&quot; /&gt; &lt;br /&gt; &lt;strong&gt;Happy Coding&lt;/strong&gt; ‚ù§Ô∏è &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/forem/forem/main/#table-of-contents&quot;&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>endoflife-date/endoflife.date</title>
      <link>https://github.com/endoflife-date/endoflife.date</link>
      <description>&lt;p&gt;Informative site with EoL dates of everything&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;endoflife.date&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.netlify.com/sites/endoflife-date/deploys&quot;&gt;&lt;img src=&quot;https://api.netlify.com/api/v1/badges/92f7a2a9-3cca-4916-a75e-f9db4ec39d48/deploy-status&quot; alt=&quot;Netlify Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.guide/how-to-contribute/#opening-a-pull-request&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/powered_by-Jekyll-blue.svg?sanitize=true&quot; alt=&quot;powered by Jekyll&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://endoflife.date/&quot;&gt;&lt;img src=&quot;https://img.shields.io/website-up-down-green-red/https/endoflife.date.svg?sanitize=true&quot; alt=&quot;Website shields.io&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://commonmark.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Made%20with-Markdown-1f425f.svg?sanitize=true&quot; alt=&quot;made-with-Markdown&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/endoflife-date/endoflife.date/master/CODE-OF-CONDUCT.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Contributor%20Covenant-2.0-4baaaa.svg?sanitize=true&quot; alt=&quot;Contributor Covenant&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/endoflife-date/community&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/endoflife-date/community.svg?sanitize=true&quot; alt=&quot;Gitter&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/endoflife_date&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/url.svg?label=@endoflife_date&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fendoflife_date&quot; alt=&quot;Twitter Follow Badge&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Keep track of various End of Life dates and support lifecycles for various products. Visit &lt;a href=&quot;https://endoflife.date&quot;&gt;https://endoflife.date&lt;/a&gt; for a list of supported products. This information is very often &lt;a href=&quot;https://twitter.com/captn3m0/status/1110504412064239617&quot;&gt;hard to track or badly presented&lt;/a&gt;. This project collates this data and presents it in an easily accessible format, with URLs that are easy to guess and remember.&lt;/p&gt; 
&lt;p&gt;If you maintain release information (end-of-life dates, or support information) for a product, we have a &lt;a href=&quot;https://endoflife.date/recommendations&quot;&gt;set of recommendations&lt;/a&gt; along with a checklist on some best practices for publishing this information.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://endoflife.date/contribute&quot;&gt;the contributing guide&lt;/a&gt; for details. While participating in the project, you must abide by its &lt;a href=&quot;https://raw.githubusercontent.com/endoflife-date/endoflife.date/master/CODE-OF-CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;p&gt;An API is available for integration with CI platforms. API documentation is available at &lt;a href=&quot;https://endoflife.date/docs/api/v1/&quot;&gt;https://endoflife.date/docs/api/v1/&lt;/a&gt;. The API is currently in Beta, and breaking changes can happen.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/endoflife-date/endoflife.date/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;endoflife.date is relying on various amazing software and components :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;, an Internet hosting service for software development and version control.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, a static site generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt;, a dynamic and open source programming language with a focus on simplicity and productivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/just-the-docs/just-the-docs&quot;&gt;Just the Docs&lt;/a&gt;, a documentation theme for Jekyll.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swagger.io/tools/swagger-ui/&quot;&gt;Swagger UI&lt;/a&gt;, a documentation generator for OpenAPI Specification.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://simpleicons.org/&quot;&gt;Simple Icons&lt;/a&gt;, free SVG icons for popular brands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tabler/tabler-icons&quot;&gt;Tabler Icons&lt;/a&gt;, a complete icon set with perfect line weights and spacing - ready for Figma, apps, and design systems.&lt;/li&gt; 
 &lt;li&gt;Our icon is derived from &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Hourglass_icon_%28orange%29.svg&quot;&gt;Hourglass icon (orange)&lt;/a&gt; by David Abi√°n and Serhio Magpie on the English Wikipedia, remixed under the CC-BY-SA-4.0 license.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realfavicongenerator.net/&quot;&gt;RealFaviconGenerator&lt;/a&gt;, a favicon Generator, for real.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;, an all-in-one platform for automating modern web projects.&lt;/li&gt; 
 &lt;li&gt;Product descriptions are adapted from the &lt;a href=&quot;https://en.wikipedia.org/&quot;&gt;English Wikipedia&lt;/a&gt;, under &lt;a href=&quot;https://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License&quot;&gt;CC BY-SA 3.0&lt;/a&gt; license.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>rapid7/metasploit-framework</title>
      <link>https://github.com/rapid7/metasploit-framework</link>
      <description>&lt;p&gt;Metasploit Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Metasploit Framework&lt;/h1&gt; 
&lt;p&gt;The Metasploit Framework is an open-source tool released under a BSD-style license. For detailed licensing information, refer to the &lt;code&gt;COPYING&lt;/code&gt; file.&lt;/p&gt; 
&lt;h2&gt;Latest Version&lt;/h2&gt; 
&lt;p&gt;Access the latest version of Metasploit from the &lt;a href=&quot;https://docs.metasploit.com/docs/using-metasploit/getting-started/nightly-installers.html&quot;&gt;Nightly Installers&lt;/a&gt; page.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Comprehensive documentation, including usage guides, is available at &lt;a href=&quot;https://docs.metasploit.com/&quot;&gt;Metasploit Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development Environment&lt;/h2&gt; 
&lt;p&gt;To set up a development environment, visit the &lt;a href=&quot;https://docs.metasploit.com/docs/development/get-started/setting-up-a-metasploit-development-environment.html&quot;&gt;Development Setup Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Bug and Feature Requests&lt;/h2&gt; 
&lt;p&gt;Submit bugs and feature requests via the &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/issues&quot;&gt;GitHub Issues&lt;/a&gt; tracker. New submissions can be made through the &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/issues/new/choose&quot;&gt;MSF-BUGv1 form&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;API Documentation&lt;/h2&gt; 
&lt;p&gt;For information on writing modules, refer to the &lt;a href=&quot;https://docs.metasploit.com/api/&quot;&gt;API Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support and Communication&lt;/h2&gt; 
&lt;p&gt;For questions and suggestions, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Join our &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/discussions&quot;&gt;GitHub Discussions&lt;/a&gt; for community support and general questions&lt;/li&gt; 
 &lt;li&gt;Join the &lt;a href=&quot;https://join.slack.com/t/metasploit/shared_invite/zt-30i688it0-mJsFGT44IMtdeZi1DraamQ&quot;&gt;Metasploit Slack&lt;/a&gt; for real-time chat&lt;/li&gt; 
 &lt;li&gt;Submit &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/issues&quot;&gt;GitHub Issues&lt;/a&gt; for bug reports and feature requests&lt;/li&gt; 
 &lt;li&gt;Follow &lt;a href=&quot;https://x.com/metasploit&quot;&gt;@metasploit&lt;/a&gt; on X or &lt;a href=&quot;https://infosec.exchange/@metasploit&quot;&gt;@metasploit@infosec.exchange&lt;/a&gt; on Mastodon for updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some community members may still use IRC channels and the metasploit-hackers mailing list, though the primary support channels are now GitHub Discussions and Slack.&lt;/p&gt; 
&lt;h2&gt;Installing Metasploit&lt;/h2&gt; 
&lt;h3&gt;Recommended Installation&lt;/h3&gt; 
&lt;p&gt;We recommend installation with the &lt;a href=&quot;https://docs.metasploit.com/docs/using-metasploit/getting-started/nightly-installers.html#installing-metasploit-on-linux--macos&quot;&gt;official Metasploit installers&lt;/a&gt; on Linux or macOS. Metasploit is also pre-installed with Kali.&lt;/p&gt; 
&lt;p&gt;For a manual setup, consult the &lt;a href=&quot;https://docs.metasploit.com/docs/development/get-started/setting-up-a-metasploit-development-environment.html&quot;&gt;Dev Environment Setup&lt;/a&gt; guide.&lt;/p&gt; 
&lt;h2&gt;Using Metasploit&lt;/h2&gt; 
&lt;p&gt;To get started with Metasploit:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Start &lt;code&gt;msfconsole&lt;/code&gt;:&lt;/strong&gt; This is the primary interface for interacting with Metasploit.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Explore Resources:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Visit the &lt;a href=&quot;https://docs.metasploit.com/docs/using-metasploit/getting-started/index.html&quot;&gt;Using Metasploit&lt;/a&gt; section of the documentation.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;To contribute to Metasploit:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Setup Development Environment:&lt;/strong&gt; Follow the instructions in the &lt;a href=&quot;https://docs.metasploit.com/docs/development/get-started/setting-up-a-metasploit-development-environment.html&quot;&gt;Development Setup Guide&lt;/a&gt; on GitHub.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Clone the Repository:&lt;/strong&gt; Obtain the source code from the official repository.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Submit a Pull Request:&lt;/strong&gt; After making changes, submit a pull request for review. Additional details can be found in the &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/raw/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Homebrew/brew</title>
      <link>https://github.com/Homebrew/brew</link>
      <description>&lt;p&gt;üç∫ The missing package manager for macOS (or Linux)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Homebrew&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Homebrew/brew/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/Homebrew/brew.svg?sanitize=true&quot; alt=&quot;GitHub release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Homebrew/brew/raw/HEAD/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/Homebrew/brew&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Features, usage and installation instructions are &lt;a href=&quot;https://brew.sh&quot;&gt;summarised on the homepage&lt;/a&gt;. Terminology (e.g. the difference between a Cellar, Tap, Cask and so forth) is &lt;a href=&quot;https://docs.brew.sh/Formula-Cookbook#homebrew-terminology&quot;&gt;explained here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;What Packages Are Available?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Type &lt;code&gt;brew formulae&lt;/code&gt; for a list.&lt;/li&gt; 
 &lt;li&gt;Or visit &lt;a href=&quot;https://formulae.brew.sh&quot;&gt;formulae.brew.sh&lt;/a&gt; to browse packages online.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;More Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;brew help&lt;/code&gt;, &lt;code&gt;man brew&lt;/code&gt; or check &lt;a href=&quot;https://docs.brew.sh/&quot;&gt;our documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;First, please run &lt;code&gt;brew update&lt;/code&gt; and &lt;code&gt;brew doctor&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Second, read the &lt;a href=&quot;https://docs.brew.sh/Troubleshooting&quot;&gt;Troubleshooting Checklist&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If you don&#39;t read these it will take us far longer to help you with your problem.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;Homebrew is a non-profit project run entirely by unpaid volunteers. We need your funds to pay for software, hardware and hosting around continuous integration and future improvements to the project. Every donation will be spent on making Homebrew better for our users.&lt;/p&gt; 
&lt;p&gt;Please consider a regular donation through &lt;a href=&quot;https://github.com/sponsors/Homebrew&quot;&gt;GitHub Sponsors&lt;/a&gt;, &lt;a href=&quot;https://opencollective.com/homebrew&quot;&gt;Open Collective&lt;/a&gt; or &lt;a href=&quot;https://www.patreon.com/homebrew&quot;&gt;Patreon&lt;/a&gt;. Homebrew is fiscally hosted by the &lt;a href=&quot;https://opencollective.com/opensource&quot;&gt;Open Source Collective&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For questions about donations, including corporate giving, please email the Homebrew PLC at &lt;a href=&quot;mailto:plc@brew.sh&quot;&gt;plc@brew.sh&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/orgs/Homebrew/discussions&quot;&gt;Homebrew/discussions (forum)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fosstodon.org/@homebrew&quot;&gt;@homebrew@fosstodon.org (Mastodon)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bsky.app/profile/brew.sh&quot;&gt;@brew.sh (Bluesky)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://x.com/MacHomebrew&quot;&gt;@MacHomebrew (ùïè (formerly known as Twitter))&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We&#39;d love you to contribute to Homebrew. First, please read our &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/brew/main/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/.github/raw/HEAD/CODE_OF_CONDUCT.md#code-of-conduct&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We explicitly welcome contributions from people who have never contributed to open-source before: we were all beginners once! We can help build on a partially working pull request with the aim of getting it merged. We are also actively seeking to diversify our contributors and especially welcome contributions from women from all backgrounds and people of colour.&lt;/p&gt; 
&lt;p&gt;A good starting point for contributing is to first &lt;a href=&quot;https://docs.brew.sh/FAQ#can-i-edit-formulae-myself&quot;&gt;tap &lt;code&gt;homebrew/core&lt;/code&gt;&lt;/a&gt;, then run &lt;code&gt;brew audit --strict&lt;/code&gt; with some of the packages you use (e.g. &lt;code&gt;brew audit --strict wget&lt;/code&gt; if you use &lt;code&gt;wget&lt;/code&gt;) and read through the warnings. Try to fix them until &lt;code&gt;brew audit --strict&lt;/code&gt; shows no results and &lt;a href=&quot;https://docs.brew.sh/How-To-Open-a-Homebrew-Pull-Request&quot;&gt;submit a pull request&lt;/a&gt;. If no formulae you use have warnings you can run &lt;code&gt;brew audit --strict&lt;/code&gt; without arguments to have it run on all packages and pick one.&lt;/p&gt; 
&lt;p&gt;Alternatively, for something more substantial, check out one of the issues labelled &lt;code&gt;help wanted&lt;/code&gt; in &lt;a href=&quot;https://github.com/homebrew/brew/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22&quot;&gt;Homebrew/brew&lt;/a&gt; or &lt;a href=&quot;https://github.com/homebrew/homebrew-core/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22&quot;&gt;Homebrew/homebrew-core&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Good luck!&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Please report security issues by filling in &lt;a href=&quot;https://github.com/homebrew/brew/security/advisories/new&quot;&gt;the security advisory form&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Who We Are&lt;/h2&gt; 
&lt;p&gt;Homebrew&#39;s &lt;a href=&quot;https://docs.brew.sh/Homebrew-Governance#6-project-leader&quot;&gt;Project Leader&lt;/a&gt; is &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;Mike McQuaid&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Homebrew&#39;s &lt;a href=&quot;https://docs.brew.sh/Homebrew-Governance#4-project-leadership-committee&quot;&gt;Project Leadership Committee&lt;/a&gt; is &lt;a href=&quot;https://github.com/colindean&quot;&gt;Colin Dean&lt;/a&gt;, &lt;a href=&quot;https://github.com/iMichka&quot;&gt;Michka Popoff&lt;/a&gt;, &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;Mike McQuaid&lt;/a&gt;, &lt;a href=&quot;https://github.com/p-linnane&quot;&gt;Patrick Linnane&lt;/a&gt; and &lt;a href=&quot;https://github.com/mozzadrella&quot;&gt;Vanessa Gennarelli&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Homebrew&#39;s &lt;a href=&quot;https://docs.brew.sh/Homebrew-Governance#7-technical-steering-committee&quot;&gt;Technical Steering Committee&lt;/a&gt; is &lt;a href=&quot;https://github.com/Bo98&quot;&gt;Bo Anderson&lt;/a&gt;, &lt;a href=&quot;https://github.com/issyl0&quot;&gt;Issy Long&lt;/a&gt;, &lt;a href=&quot;https://github.com/cho-m&quot;&gt;Michael Cho&lt;/a&gt;, &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;Mike McQuaid&lt;/a&gt; and &lt;a href=&quot;https://github.com/ZhongRuoyu&quot;&gt;Ruoyu Zhong&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Homebrew&#39;s maintainers are &lt;a href=&quot;https://github.com/bevanjkay&quot;&gt;Bevan Kay&lt;/a&gt;, &lt;a href=&quot;https://github.com/Bo98&quot;&gt;Bo Anderson&lt;/a&gt;, &lt;a href=&quot;https://github.com/branchvincent&quot;&gt;Branch Vincent&lt;/a&gt;, &lt;a href=&quot;https://github.com/alebcay&quot;&gt;Caleb Xu&lt;/a&gt;, &lt;a href=&quot;https://github.com/carlocab&quot;&gt;Carlo Cabrera&lt;/a&gt;, &lt;a href=&quot;https://github.com/daeho-ro&quot;&gt;Daeho Ro&lt;/a&gt;, &lt;a href=&quot;https://github.com/dduugg&quot;&gt;Douglas Eichelberger&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtrodrigues&quot;&gt;Dustin Rodrigues&lt;/a&gt;, &lt;a href=&quot;https://github.com/EricFromCanada&quot;&gt;Eric Knibbe&lt;/a&gt;, &lt;a href=&quot;https://github.com/fxcoudert&quot;&gt;FX Coudert&lt;/a&gt;, &lt;a href=&quot;https://github.com/issyl0&quot;&gt;Issy Long&lt;/a&gt;, &lt;a href=&quot;https://github.com/krehel&quot;&gt;Justin Krehel&lt;/a&gt;, &lt;a href=&quot;https://github.com/khipp&quot;&gt;Klaus Hipp&lt;/a&gt;, &lt;a href=&quot;https://github.com/reitermarkus&quot;&gt;Markus Reiter&lt;/a&gt;, &lt;a href=&quot;https://github.com/cho-m&quot;&gt;Michael Cho&lt;/a&gt;, &lt;a href=&quot;https://github.com/iMichka&quot;&gt;Michka Popoff&lt;/a&gt;, &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;Mike McQuaid&lt;/a&gt;, &lt;a href=&quot;https://github.com/nandahkrishna&quot;&gt;Nanda H Krishna&lt;/a&gt;, &lt;a href=&quot;https://github.com/p-linnane&quot;&gt;Patrick Linnane&lt;/a&gt;, &lt;a href=&quot;https://github.com/chenrui333&quot;&gt;Rui Chen&lt;/a&gt;, &lt;a href=&quot;https://github.com/ZhongRuoyu&quot;&gt;Ruoyu Zhong&lt;/a&gt;, &lt;a href=&quot;https://github.com/Rylan12&quot;&gt;Rylan Polster&lt;/a&gt;, &lt;a href=&quot;https://github.com/samford&quot;&gt;Sam Ford&lt;/a&gt;, &lt;a href=&quot;https://github.com/SMillerDev&quot;&gt;Sean Molenaar&lt;/a&gt;, &lt;a href=&quot;https://github.com/stefanb&quot;&gt;≈†tefan Baebler&lt;/a&gt;, &lt;a href=&quot;https://github.com/Moisan&quot;&gt;Thierry Moisan&lt;/a&gt; and &lt;a href=&quot;https://github.com/woodruffw&quot;&gt;William Woodruff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Former maintainers with significant contributions include &lt;a href=&quot;https://github.com/bayandin&quot;&gt;Alexander Bayandin&lt;/a&gt;, &lt;a href=&quot;https://github.com/miccal&quot;&gt;Miccal Matthews&lt;/a&gt;, &lt;a href=&quot;https://github.com/mistydemeo&quot;&gt;Misty De M√©o&lt;/a&gt;, &lt;a href=&quot;https://github.com/sjackman&quot;&gt;Shaun Jackman&lt;/a&gt;, &lt;a href=&quot;https://github.com/vitorgalvao&quot;&gt;V√≠tor Galv√£o&lt;/a&gt;, &lt;a href=&quot;https://github.com/claui&quot;&gt;Claudia Pellegrino&lt;/a&gt;, &lt;a href=&quot;https://github.com/SeekingMeaning&quot;&gt;Seeker&lt;/a&gt;, &lt;a href=&quot;https://github.com/javian&quot;&gt;Jan Viljanen&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcount&quot;&gt;JCount&lt;/a&gt;, &lt;a href=&quot;https://github.com/commitay&quot;&gt;commitay&lt;/a&gt;, &lt;a href=&quot;https://github.com/DomT4&quot;&gt;Dominyk Tiller&lt;/a&gt;, &lt;a href=&quot;https://github.com/tdsmith&quot;&gt;Tim Smith&lt;/a&gt;, &lt;a href=&quot;https://github.com/bfontaine&quot;&gt;Baptiste Fontaine&lt;/a&gt;, &lt;a href=&quot;https://github.com/xu-cheng&quot;&gt;Xu Cheng&lt;/a&gt;, &lt;a href=&quot;https://github.com/UniqMartin&quot;&gt;Martin Afanasjew&lt;/a&gt;, &lt;a href=&quot;https://github.com/asparagui&quot;&gt;Brett Koonce&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sharpie&quot;&gt;Charlie Sharpsteen&lt;/a&gt;, &lt;a href=&quot;https://github.com/jacknagel&quot;&gt;Jack Nagel&lt;/a&gt;, &lt;a href=&quot;https://github.com/adamv&quot;&gt;Adam Vandenberg&lt;/a&gt;, &lt;a href=&quot;https://github.com/apjanke&quot;&gt;Andrew Janke&lt;/a&gt;, &lt;a href=&quot;https://github.com/dunn&quot;&gt;Alex Dunn&lt;/a&gt;, &lt;a href=&quot;https://github.com/neutric&quot;&gt;neutric&lt;/a&gt;, &lt;a href=&quot;https://github.com/nijikon&quot;&gt;Tomasz Pajor&lt;/a&gt;, &lt;a href=&quot;https://github.com/vladshablinsky&quot;&gt;Uladzislau Shablinski&lt;/a&gt;, &lt;a href=&quot;https://github.com/alyssais&quot;&gt;Alyssa Ross&lt;/a&gt;, &lt;a href=&quot;https://github.com/ilovezfs&quot;&gt;ilovezfs&lt;/a&gt;, &lt;a href=&quot;https://github.com/lembacon&quot;&gt;Chongyu Zhu&lt;/a&gt; and Homebrew&#39;s creator: &lt;a href=&quot;https://github.com/mxcl&quot;&gt;Max Howell&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Code is under the &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/brew/main/LICENSE.txt&quot;&gt;BSD 2-clause &quot;Simplified&quot; License&lt;/a&gt;. Documentation is under the &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Our macOS continuous integration infrastructure is hosted by &lt;a href=&quot;https://www.macstadium.com/customers/homebrew&quot;&gt;MacStadium&#39;s Orka&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.macstadium.com&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/125011/22776032/097557ac-eea6-11e6-8ba8-eff22dfd58f1.png&quot; alt=&quot;Powered by MacStadium&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Secure password storage and syncing is provided by &lt;a href=&quot;https://1password.com/teams/&quot;&gt;1Password for Teams&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://1password.com&quot;&gt;&lt;img src=&quot;https://i.1password.com/akb/featured/1password-icon.svg?sanitize=true&quot; alt=&quot;1Password&quot; height=&quot;64&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://brew.sh&quot;&gt;https://brew.sh&lt;/a&gt;&#39;s DNS is &lt;a href=&quot;https://dnsimple.com/resolving/homebrew&quot;&gt;resolving with DNSimple&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://dnsimple.com/resolving/homebrew#gh-light-mode-only&quot;&gt;&lt;img src=&quot;https://cdn.dnsimple.com/assets/resolving-with-us/logo-light.png&quot; alt=&quot;DNSimple&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://dnsimple.com/resolving/homebrew#gh-dark-mode-only&quot;&gt;&lt;img src=&quot;https://cdn.dnsimple.com/assets/resolving-with-us/logo-dark.png&quot; alt=&quot;DNSimple&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Homebrew is generously supported by &lt;a href=&quot;https://github.com/github&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;https://github.com/customink&quot;&gt;Custom Ink&lt;/a&gt;, &lt;a href=&quot;https://github.com/ydnar&quot;&gt;Randy Reddig&lt;/a&gt;, &lt;a href=&quot;https://github.com/Codecademy&quot;&gt;Codecademy&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikadelbert&quot;&gt;mikadelbert&lt;/a&gt;, &lt;a href=&quot;https://github.com/Workbrew&quot;&gt;Workbrew&lt;/a&gt; and many other users and organisations via &lt;a href=&quot;https://github.com/sponsors/Homebrew&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/github&quot;&gt;&lt;img src=&quot;https://github.com/github.png?size=64&quot; alt=&quot;GitHub&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rubygems/rubygems</title>
      <link>https://github.com/rubygems/rubygems</link>
      <description>&lt;p&gt;Library packaging and distribution for Ruby.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RubyGems&lt;/h1&gt; 
&lt;p&gt;RubyGems is a package management framework for Ruby.&lt;/p&gt; 
&lt;p&gt;A package (also known as a library) contains a set of functionality that can be invoked by a Ruby program, such as reading and parsing an XML file. We call these packages &quot;gems&quot; and RubyGems is a tool to install, create, manage and load these packages in your Ruby environment.&lt;/p&gt; 
&lt;p&gt;RubyGems is also a client for &lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems.org&lt;/a&gt;, a public repository of Gems that allows you to publish a Gem that can be shared and used by other developers. See our guide on publishing a Gem at &lt;a href=&quot;https://guides.rubygems.org/publishing/&quot;&gt;guides.rubygems.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Installing and managing a Gem is done through the &lt;code&gt;gem&lt;/code&gt; command. To install a Gem such as &lt;a href=&quot;https://github.com/lostisland/faraday?tab=readme-ov-file&quot;&gt;Faraday&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gem install faraday
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;RubyGems will download the Faraday Gem from RubyGems.org and install it into your Ruby environment.&lt;/p&gt; 
&lt;p&gt;Finally, inside your Ruby program, load the Faraday gem and start hacking:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;require &#39;faraday&#39;
response = Faraday.get(&#39;https://rubygems.org&#39;)
# do something with `response`...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information about how to use RubyGems, see our RubyGems basics guide at &lt;a href=&quot;https://guides.rubygems.org/rubygems-basics/&quot;&gt;guides.rubygems.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;RubyGems supports Ruby 3.0 or later.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;RubyGems is already installed in your Ruby environment, you can check the version you have installed by running &lt;code&gt;gem --version&lt;/code&gt; in your terminal emulator.&lt;/p&gt; 
&lt;p&gt;In some cases Ruby &amp;amp; RubyGems may be provided as OS packages. This is not a recommended way to use Ruby &amp;amp; RubyGems. It&#39;s better to use a Ruby Version Manager, such as &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt; or &lt;a href=&quot;https://github.com/postmodern/chruby&quot;&gt;chruby&lt;/a&gt;. If you still want to use the version provided by your OS package manager, please also use your OS package manager to upgrade rubygems, and disregard any other installation instructions given below.&lt;/p&gt; 
&lt;p&gt;If you would like to manually install RubyGems:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download from &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;https://rubygems.org/pages/download&lt;/a&gt;, unpack, and &lt;code&gt;cd&lt;/code&gt; into RubyGems&#39; src&lt;/li&gt; 
 &lt;li&gt;OR clone this repository and &lt;code&gt;cd&lt;/code&gt; into the repository&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Install RubyGems by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ruby setup.rb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details and other options, see:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ ruby setup.rb --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Upgrading RubyGems&lt;/h2&gt; 
&lt;p&gt;To upgrade to the latest RubyGems, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ gem update --system
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/rubygems/rubygems/master/doc/rubygems/UPGRADING.md&quot;&gt;UPGRADING&lt;/a&gt; for more details and alternative instructions.&lt;/p&gt; 
&lt;h2&gt;Release policy&lt;/h2&gt; 
&lt;p&gt;RubyGems and Bundler are released in sync, although they do not share their major version number. It is planned that also their major version numbers will be sync&#39;ed in the future.&lt;/p&gt; 
&lt;p&gt;The release policy is somewhat similar to the release policy of Ruby itself:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Frequent patch releases (every 2-4 weeks) including bug fixes, minor enhancements, small features, or even medium sized features declared as experimental for battle testing.&lt;/li&gt; 
 &lt;li&gt;Yearly minor releases including bigger features, and minor breaking changes (affecting only edge cases and a very small set of users).&lt;/li&gt; 
 &lt;li&gt;Occasional major releases (replacing yearly minors) including major breaking changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;RubyGems uses &lt;a href=&quot;https://github.com/rdoc/rdoc&quot;&gt;rdoc&lt;/a&gt; for documentation. A compiled set of the docs can be viewed online at &lt;a href=&quot;https://docs.ruby-lang.org/en/master/Gem.html&quot;&gt;docs.ruby-lang.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;RubyGems also provides a comprehensive set of guides which covers numerous topics such as creating a new gem, security practices and other resources at &lt;a href=&quot;https://guides.rubygems.org&quot;&gt;https://guides.rubygems.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;h3&gt;Filing Tickets&lt;/h3&gt; 
&lt;p&gt;Got a bug and you&#39;re not sure? You&#39;re sure you have a bug, but don&#39;t know what to do next? In any case, let us know about it! The best place for letting the RubyGems team know about bugs or problems you&#39;re having is &lt;a href=&quot;https://github.com/rubygems/rubygems/issues&quot;&gt;on the RubyGems issues page at GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Bundler Compatibility&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://bundler.io/compatibility&quot;&gt;https://bundler.io/compatibility&lt;/a&gt; for known issues.&lt;/p&gt; 
&lt;h3&gt;Supporting&lt;/h3&gt; 
&lt;p&gt;RubyGems is managed by &lt;a href=&quot;https://rubycentral.org&quot;&gt;Ruby Central&lt;/a&gt;, a non-profit organization that supports the Ruby community through projects like this one, as well as &lt;a href=&quot;https://rubyconf.org&quot;&gt;RubyConf&lt;/a&gt;, &lt;a href=&quot;https://railsconf.org&quot;&gt;RailsConf&lt;/a&gt;, and &lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems.org&lt;/a&gt;. You can support Ruby Central by attending or &lt;a href=&quot;https://raw.githubusercontent.com/rubygems/rubygems/master/sponsors@rubycentral.org&quot;&gt;sponsoring&lt;/a&gt; a conference, or by &lt;a href=&quot;https://rubycentral.org/#/portal/signup&quot;&gt;joining as a supporting member&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;If you&#39;d like to contribute to RubyGems, that&#39;s awesome, and we &amp;lt;3 you. Check out our &lt;a href=&quot;https://raw.githubusercontent.com/rubygems/rubygems/master/doc/rubygems/CONTRIBUTING.md&quot;&gt;guide to contributing&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Code of Conduct&lt;/h3&gt; 
&lt;p&gt;Everyone interacting in the RubyGems project‚Äôs codebases, issue trackers, chat rooms, and mailing lists is expected to follow the &lt;a href=&quot;https://github.com/rubygems/rubygems/raw/master/CODE_OF_CONDUCT.md&quot;&gt;contributor code of conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CMSgov/price-transparency-guide</title>
      <link>https://github.com/CMSgov/price-transparency-guide</link>
      <description>&lt;p&gt;The technical implementation guide for the tri-departmental price transparency rule.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://www.cms.gov/healthplan-price-transparency&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/CMSgov/price-transparency-guide/master/resources/images/TiC_banner.png?raw=true&quot; alt=&quot;CMS Transparency in Coverage&quot; title=&quot;Transparency in Coverage&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Transparency in Coverage&lt;/h1&gt; 
&lt;p&gt;This is the technical implementation guide for the machine readable files as required by the &lt;a href=&quot;https://www.federalregister.gov/documents/2020/11/12/2020-24591/transparency-in-coverage&quot;&gt;Transparency in Coverage&lt;/a&gt; final rules (85 FR 72158).&lt;/p&gt; 
&lt;p&gt;If you are looking for the technical implementation guide for the machine readable files required by the &lt;a href=&quot;https://www.cms.gov/priorities/key-initiatives/hospital-price-transparency&quot;&gt;Hospital Price Transparency&lt;/a&gt; final rules (45 CFR 180), please go to &lt;a href=&quot;https://github.com/CMSgov/hospital-price-transparency&quot;&gt;https://github.com/CMSgov/hospital-price-transparency&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Overview&lt;/h1&gt; 
&lt;p&gt;This repository contains a set of schemas describing a data format (example implementations are encoded as JSON and XML) for the Transparency in Coverage final rule. All machine-readable files must conform to a non-proprietary, open standards format that is platform independent and made available to the public without restrictions that would impede the re-use of that information.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Consistent with the Departments‚Äô August 20, 2021 guidance (see below ‚ÄúGuidance‚Äù section), the Departments have not promulgated any final guidance with respect to the form and manner for the Prescription Drug File.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Any material currently or previously published on this site with respect to the form and manner of the Prescription Drug File has been superseded and is not guidance of the Departments.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Background&lt;/h1&gt; 
&lt;p&gt;The Departments of the Treasury, Labor, and Health and Human Services (the Departments) have issued the Transparency in Coverage final rules (85 FR 72158) on November 12, 2020. The final rules require non-grandfathered group health plans and health insurance issuers in the individual and group markets (plans and issuers) to disclose certain pricing information. Under the final rules a plan or issuer must disclose in-network negotiated rates, and billed and out-of-network allowed through two machine-readable files posted on an internet website.&lt;/p&gt; 
&lt;p&gt;Plans and issuers are required to make these files public for plan or policy years beginning on or after July 1, 2022.&lt;/p&gt; 
&lt;h1&gt;Keeping Up To Date&lt;/h1&gt; 
&lt;p&gt;Github allows for people to track and keep up-to-date with any changes for any repository. If you wish to follow and track the changes that happen on this repo, please leverage the &quot;Watch&quot; feature found at the top of the repository and select &quot;All activity&quot;. This will email the user that has &quot;watched&quot; the specific repository.&lt;/p&gt; 
&lt;h1&gt;Guidance&lt;/h1&gt; 
&lt;p&gt;Transparency in Coverage rule guidance is released on &lt;a href=&quot;https://www.cms.gov&quot;&gt;CMS&#39;&lt;/a&gt; website. You can find recently released guidance here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cms.gov/CCIIO/Resources/Fact-Sheets-and-FAQs#Affordable_Care_Act&quot;&gt;https://www.cms.gov/CCIIO/Resources/Fact-Sheets-and-FAQs#Affordable_Care_Act&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cms.gov/CCIIO/Resources/Fact-Sheets-and-FAQs/Downloads/FAQs-Part-49.pdf&quot;&gt;https://www.cms.gov/CCIIO/Resources/Fact-Sheets-and-FAQs/Downloads/FAQs-Part-49.pdf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cms.gov/sites/default/files/2022-04/FAQ-Affordable-Care-Act-Implementation-Part-53.pdf&quot;&gt;https://www.cms.gov/sites/default/files/2022-04/FAQ-Affordable-Care-Act-Implementation-Part-53.pdf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cms.gov/files/document/faqs-about-affordable-care-act-implementation-part-61.pdf&quot;&gt;https://www.cms.gov/files/document/faqs-about-affordable-care-act-implementation-part-61.pdf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.cms.gov/files/document/aca-faqs-part-70.pdf&quot;&gt;https://www.cms.gov/files/document/aca-faqs-part-70.pdf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Developer Documentation&lt;/h1&gt; 
&lt;h2&gt;Transport mechanism - HTTPS&lt;/h2&gt; 
&lt;p&gt;All machine-readable files must be made available via HTTPS.&lt;/p&gt; 
&lt;h2&gt;Content type - Non-Proprietary, Open Format&lt;/h2&gt; 
&lt;p&gt;There are plenty of great formats to work with that will meet the needs for Transparency in Coverage:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.xml.org/&quot;&gt;XML&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://yaml.org/&quot;&gt;YAML&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Examples of proprietary formats that do &lt;em&gt;not&lt;/em&gt; meet this definition would be:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/PDF&quot;&gt;PDF&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Microsoft_Excel#File_formats&quot;&gt;XLS/XLSX&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Public Discoverability&lt;/h2&gt; 
&lt;p&gt;These machine-readable files must be made available to the public without restrictions that would impede the re-use of that information.&lt;/p&gt; 
&lt;p&gt;The location of the these URLs &lt;em&gt;must&lt;/em&gt; be provided over HTTPS to ensure the integrity of the data.&lt;/p&gt; 
&lt;h2&gt;Robots.txt&lt;/h2&gt; 
&lt;p&gt;To allow for search engine discoverability, neither a &lt;code&gt;robots.txt&lt;/code&gt; file nor &lt;code&gt;meta&lt;/code&gt; tag on the page where the files are hosted will have rules such that give instructions to web crawlers to not index the page.&lt;/p&gt; 
&lt;p&gt;This is typically follows the format of &lt;code&gt;&amp;lt;meta name=&quot;robots&quot; content=&quot;noindex, nofollow&quot;&amp;gt;&lt;/code&gt; or for a &lt;code&gt;robots.txt&lt;/code&gt; file using the &lt;code&gt;Disallow&lt;/code&gt; directive.&lt;/p&gt; 
&lt;h2&gt;Special Data Types&lt;/h2&gt; 
&lt;p&gt;Dates should be strings in &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601 format&lt;/a&gt; (i.e. YYYY-MM-DD).&lt;/p&gt; 
&lt;h2&gt;Different Machine-Readable Files&lt;/h2&gt; 
&lt;p&gt;There are two required machine-readable files associated with Transparency in Coverage:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CMSgov/price-transparency-guide/tree/master/schemas/in-network-rates&quot;&gt;In-Network Negotiated Rates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CMSgov/price-transparency-guide/tree/master/schemas/allowed-amounts&quot;&gt;Out-Of-Network Allowed Amounts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;In-Network Negotiated Rates File&lt;/strong&gt; Under the finalized rules, a plan or issuer must disclose in-network provider negotiated rates for all items and services through a machine-readable file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Out-Of-Network Allowed Amounts File&lt;/strong&gt; Under the finalized rules, a plan or issuer must disclose certain data elements to the public, including the billed and allowed amounts for out-of-network providers, through a machine-readable file.&lt;/p&gt; 
&lt;p&gt;The associated names for those files are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;in-network-rates&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;allowed-amounts&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are also two optional machine-readable files that can be leveraged to significantly decrease file sizes of the required machine-readable files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CMSgov/price-transparency-guide/tree/master/schemas/table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CMSgov/price-transparency-guide/tree/master/schemas/provider-reference&quot;&gt;Provider Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Table of Contents File&lt;/strong&gt; The Table of Contents file can be leveraged to combine common negotiated rates across multiple in-network files. By breaking out &lt;a href=&quot;https://github.com/CMSgov/price-transparency-guide/raw/master/README.md#multiple-plans-per-file&quot;&gt;common negotiated rates into separate files&lt;/a&gt; to use in multiple In-Network files, plans can avoid having to duplicate data.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Provider Reference&lt;/strong&gt; Defining provider networks outside of the In-Network file can have significant benefits in the overall file size that is produced. The provider reference file allows the user to define common provider networks externally to the In-Network file that can be referenced from within the In-Network file. This allows large provider networks to be defined once and be used in multiple locations.&lt;/p&gt; 
&lt;h2&gt;Timing Updates For Machine-Readable Files&lt;/h2&gt; 
&lt;p&gt;According to the &lt;a href=&quot;https://www.federalregister.gov/d/2020-24591/p-1516&quot;&gt;TiC Final Rules&lt;/a&gt; and the schema requirements, plans and issuers are required to update the machine-readable files monthly and populate the attribute &lt;code&gt;last_updated_on&lt;/code&gt;. The Departments consider ‚Äúmonthly‚Äù to refer to reasonably consistent periods of approximately 30 days, but are not specifying a particular day of the month.&lt;/p&gt; 
&lt;h2&gt;File Naming Convention&lt;/h2&gt; 
&lt;p&gt;There are scenarios where multiple plans have exactly the same negotiated rates with the same group of providers for the same items and services. This would lead to a large duplication of reporting. Also, there are plans that will be unique in their negotiated rates that would require a separate file.&lt;/p&gt; 
&lt;p&gt;The producers of the files have the option to group multiple plans together with the same negotiated data (or allowed amounts). If plans are to be grouped together, a &lt;code&gt;table-of-contents&lt;/code&gt; file will be required to capture all the different plan data along with a URL location on where to download the appropriate files.&lt;/p&gt; 
&lt;p&gt;Payer/Issuers are still allowed to build both in-network and allowed-amount files for a single plan. The naming conventions will be different for each.&lt;/p&gt; 
&lt;p&gt;For payer or issuer&#39;s names that have spaces, those spaces would be replaced with dashes &lt;code&gt;-&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Only alphanumeric characters are allowed in the file name. No special characters such as &lt;code&gt;&#39;&lt;/code&gt; are allowed. Special characters are either to be removed completely or replaced with &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Single Plan Files&lt;/h4&gt; 
&lt;p&gt;The following is the required naming standard for each file: &lt;code&gt;&amp;lt;YYYY-MM-DD&amp;gt;_&amp;lt;payer or issuer name&amp;gt;_&amp;lt;plan name&amp;gt;_&amp;lt;file type name&amp;gt;.&amp;lt;file extension&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For example, the following would be the required naming for CMS building a JSON file:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;2020-01-05_cms_medicare_in-network-rates.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2020-01-05_cms_medicare_allowed-amounts.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;An example of a plan named &lt;code&gt;healthcare 100&lt;/code&gt; with an issuer&#39;s name &lt;code&gt;issuer abc&lt;/code&gt; producing a JSON file, the following would be the naming output:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;2020-01-05_issuer-abc_healthcare-100_in-network-rates.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2020-01-05_issuer-abc_healthcare-100_allowed-amounts.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Multiple Plans Per File&lt;/h4&gt; 
&lt;p&gt;If multiple plans are to be included in a single file, a &lt;code&gt;table-of-contents&lt;/code&gt; file will be required. The naming standard will be applied to the &lt;code&gt;table-of-contents&lt;/code&gt; file and both the &lt;code&gt;in-network&lt;/code&gt; and &lt;code&gt;allowed-amounts&lt;/code&gt; files will not have any naming standards.&lt;/p&gt; 
&lt;p&gt;The following is the required naming standard for the &lt;code&gt;table-of-contents&lt;/code&gt; file: &lt;code&gt;&amp;lt;YYYY-MM-DD&amp;gt;_&amp;lt;payer or issuer name&amp;gt;_index.&amp;lt;file extension&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For example, the following would be the required naming for CMS building a JSON file that includes Medicare and Medicaid plans:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;2020-01-05_cms_index.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Schema Validator Tool&lt;/h1&gt; 
&lt;p&gt;CMS developed a &lt;a href=&quot;https://github.com/CMSgov/price-transparency-guide-validator&quot;&gt;downloadable schema validator tool&lt;/a&gt; that plans and developers can use to assess whether their machine readable files are compliant with the Transparency in Coverage JSON schema. The validator tool and instructions can be accessed here. The tool can be used to validate in-network and allowed amount files, as well as provider references and table of contents files. Note that the tool tests for attributes required under version 1.0 of the JSON schema and for syntax errors, but does not test the accuracy of the data in the schema. It is designed to run on local computers and can be used to validate files of any size (there is no file size limit). At this point in time, the validator tool can only be used to validate JSON files.&lt;/p&gt; 
&lt;h1&gt;Schemas&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CMSgov/price-transparency-guide/tree/master/schemas/in-network-rates&quot;&gt;In-Network Rates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CMSgov/price-transparency-guide/tree/master/schemas/allowed-amounts&quot;&gt;Allowed Amounts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CMSgov/price-transparency-guide/tree/master/schemas/table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CMSgov/price-transparency-guide/tree/master/schemas/provider-reference&quot;&gt;Provider Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Examples&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CMSgov/price-transparency-guide/tree/master/examples&quot;&gt;Implementation Examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Getting Involved&lt;/h1&gt; 
&lt;p&gt;The healthcare ecosystem is complex with what seems like an infinite amount of plan and issuer implementations. There are no doubt going to be questions for these various situations and the requirements found in the Transparency in Coverage rule. Currently, there are two ways in which the community can get involved:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://guides.github.com/features/issues/&quot;&gt;Github Issues&lt;/a&gt; - Where people discuss issues related to the project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CMSgov/price-transparency-guide/discussions&quot;&gt;Github Discussions&lt;/a&gt; - Use these channels for conversational topics (for example, &quot;How do I‚Ä¶&quot; or &quot;What do you think about‚Ä¶&quot; instead of bug reports or feature requests).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Before posting a comment, issue, or question, please search through existing discussions and issues. There is a good chance that the topic in questions is already being discussed.&lt;/p&gt; 
&lt;h1&gt;Versioning&lt;/h1&gt; 
&lt;p&gt;With any type software development, progression happens through bug fixes, new content, or changing requirements. The technical development of this schema is no different. CMS will be following the standard versioning found in many software development projects with including a major, minor, and patch number to represent the current version of the schema. The following is the guiding principles for version updates:&lt;/p&gt; 
&lt;p&gt;MAJOR version when incompatible changes are introduced, MINOR version when attributes/values are introduced or removed in a backwards compatible manner, and PATCH version when backwards compatible bug fixes are introduced.&lt;/p&gt; 
&lt;p&gt;The major version will be finalized to 1.0.0 for the schema to adhere to the July 2022 implementation date. Versioning of the schema can be tracked in the VERSION.md file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>modelcontextprotocol/ruby-sdk</title>
      <link>https://github.com/modelcontextprotocol/ruby-sdk</link>
      <description>&lt;p&gt;The official Ruby SDK for the Model Context Protocol. Maintained in collaboration with Shopify.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Ruby SDK &lt;a href=&quot;https://rubygems.org/gems/mcp&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/mcp&quot; alt=&quot;Gem Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/modelcontextprotocol/ruby-sdk/raw/main/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-green&quot; alt=&quot;MIT licensed&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/modelcontextprotocol/ruby-sdk/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/modelcontextprotocol/ruby-sdk/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;The official Ruby SDK for Model Context Protocol servers and clients.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Add this line to your application&#39;s Gemfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem &#39;mcp&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then execute:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ bundle install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or install it yourself as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ gem install mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may need to add additional dependencies depending on which features you wish to access.&lt;/p&gt; 
&lt;h2&gt;Building an MCP Server&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;MCP::Server&lt;/code&gt; class is the core component that handles JSON-RPC requests and responses. It implements the Model Context Protocol specification, handling model context requests and responses.&lt;/p&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implements JSON-RPC 2.0 message handling&lt;/li&gt; 
 &lt;li&gt;Supports protocol initialization and capability negotiation&lt;/li&gt; 
 &lt;li&gt;Manages tool registration and invocation&lt;/li&gt; 
 &lt;li&gt;Supports prompt registration and execution&lt;/li&gt; 
 &lt;li&gt;Supports resource registration and retrieval&lt;/li&gt; 
 &lt;li&gt;Supports stdio &amp;amp; Streamable HTTP (including SSE) transports&lt;/li&gt; 
 &lt;li&gt;Supports notifications for list changes (tools, prompts, resources)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported Methods&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;initialize&lt;/code&gt; - Initializes the protocol and returns server capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ping&lt;/code&gt; - Simple health check&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tools/list&lt;/code&gt; - Lists all registered tools and their schemas&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tools/call&lt;/code&gt; - Invokes a specific tool with provided arguments&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;prompts/list&lt;/code&gt; - Lists all registered prompts and their schemas&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;prompts/get&lt;/code&gt; - Retrieves a specific prompt by name&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resources/list&lt;/code&gt; - Lists all registered resources and their schemas&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resources/read&lt;/code&gt; - Retrieves a specific resource by name&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resources/templates/list&lt;/code&gt; - Lists all registered resource templates and their schemas&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Custom Methods&lt;/h3&gt; 
&lt;p&gt;The server allows you to define custom JSON-RPC methods beyond the standard MCP protocol methods using the &lt;code&gt;define_custom_method&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server = MCP::Server.new(name: &quot;my_server&quot;)

# Define a custom method that returns a result
server.define_custom_method(method_name: &quot;add&quot;) do |params|
  params[:a] + params[:b]
end

# Define a custom notification method (returns nil)
server.define_custom_method(method_name: &quot;notify&quot;) do |params|
  # Process notification
  nil
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Accepts any method name as a string&lt;/li&gt; 
 &lt;li&gt;Block receives the request parameters as a hash&lt;/li&gt; 
 &lt;li&gt;Can handle both regular methods (with responses) and notifications&lt;/li&gt; 
 &lt;li&gt;Prevents overriding existing MCP protocol methods&lt;/li&gt; 
 &lt;li&gt;Supports instrumentation callbacks for monitoring&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Usage Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Client request
{
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;id&quot;: 1,
  &quot;method&quot;: &quot;add&quot;,
  &quot;params&quot;: { &quot;a&quot;: 5, &quot;b&quot;: 3 }
}

# Server response
{
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;id&quot;: 1,
  &quot;result&quot;: 8
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Error Handling:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Raises &lt;code&gt;MCP::Server::MethodAlreadyDefinedError&lt;/code&gt; if trying to override an existing method&lt;/li&gt; 
 &lt;li&gt;Supports the same exception reporting and instrumentation as standard methods&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Notifications&lt;/h3&gt; 
&lt;p&gt;The server supports sending notifications to clients when lists of tools, prompts, or resources change. This enables real-time updates without polling.&lt;/p&gt; 
&lt;h4&gt;Notification Methods&lt;/h4&gt; 
&lt;p&gt;The server provides three notification methods:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;notify_tools_list_changed&lt;/code&gt; - Send a notification when the tools list changes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;notify_prompts_list_changed&lt;/code&gt; - Send a notification when the prompts list changes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;notify_resources_list_changed&lt;/code&gt; - Send a notification when the resources list changes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Notification Format&lt;/h4&gt; 
&lt;p&gt;Notifications follow the JSON-RPC 2.0 specification and use these method names:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;notifications/tools/list_changed&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;notifications/prompts/list_changed&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;notifications/resources/list_changed&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Transport Support&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;stdio&lt;/strong&gt;: Notifications are sent as JSON-RPC 2.0 messages to stdout&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Streamable HTTP&lt;/strong&gt;: Notifications are sent as JSON-RPC 2.0 messages over HTTP with streaming (chunked transfer or SSE)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Usage Example&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server = MCP::Server.new(name: &quot;my_server&quot;)
transport = MCP::Transports::HTTP.new(server)
server.transport = transport

# When tools change, notify clients
server.define_tool(name: &quot;new_tool&quot;) { |**args| { result: &quot;ok&quot; } }
server.notify_tools_list_changed
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unsupported Features ( to be implemented in future versions )&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Log Level&lt;/li&gt; 
 &lt;li&gt;Resource subscriptions&lt;/li&gt; 
 &lt;li&gt;Completions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;h4&gt;Rails Controller&lt;/h4&gt; 
&lt;p&gt;When added to a Rails controller on a route that handles POST requests, your server will be compliant with non-streaming &lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/basic/transports#streamable-http&quot;&gt;Streamable HTTP&lt;/a&gt; transport requests.&lt;/p&gt; 
&lt;p&gt;You can use the &lt;code&gt;Server#handle_json&lt;/code&gt; method to handle requests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class ApplicationController &amp;lt; ActionController::Base
  def index
    server = MCP::Server.new(
      name: &quot;my_server&quot;,
      title: &quot;Example Server Display Name&quot;, # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
      version: &quot;1.0.0&quot;,
      instructions: &quot;Use the tools of this server as a last resort&quot;,
      tools: [SomeTool, AnotherTool],
      prompts: [MyPrompt],
      server_context: { user_id: current_user.id },
    )
    render(json: server.handle_json(request.body.read))
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Stdio Transport&lt;/h4&gt; 
&lt;p&gt;If you want to build a local command-line application, you can use the stdio transport:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;require &quot;mcp&quot;
require &quot;mcp/server/transports/stdio_transport&quot;

# Create a simple tool
class ExampleTool &amp;lt; MCP::Tool
  description &quot;A simple example tool that echoes back its arguments&quot;
  input_schema(
    properties: {
      message: { type: &quot;string&quot; },
    },
    required: [&quot;message&quot;]
  )

  class &amp;lt;&amp;lt; self
    def call(message:, server_context:)
      MCP::Tool::Response.new([{
        type: &quot;text&quot;,
        text: &quot;Hello from example tool! Message: #{message}&quot;,
      }])
    end
  end
end

# Set up the server
server = MCP::Server.new(
  name: &quot;example_server&quot;,
  tools: [ExampleTool],
)

# Create and start the transport
transport = MCP::Server::Transports::StdioTransport.new(server)
transport.open
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can run this script and then type in requests to the server at the command line.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ ruby examples/stdio_server.rb
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:&quot;1&quot;,&quot;method&quot;:&quot;ping&quot;}
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:&quot;2&quot;,&quot;method&quot;:&quot;tools/list&quot;}
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:&quot;3&quot;,&quot;method&quot;:&quot;tools/call&quot;,&quot;params&quot;:{&quot;name&quot;:&quot;example_tool&quot;,&quot;arguments&quot;:{&quot;message&quot;:&quot;Hello&quot;}}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;The gem can be configured using the &lt;code&gt;MCP.configure&lt;/code&gt; block:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;MCP.configure do |config|
  config.exception_reporter = -&amp;gt;(exception, server_context) {
    # Your exception reporting logic here
    # For example with Bugsnag:
    Bugsnag.notify(exception) do |report|
      report.add_metadata(:model_context_protocol, server_context)
    end
  }

  config.instrumentation_callback = -&amp;gt;(data) {
    puts &quot;Got instrumentation data #{data.inspect}&quot;
  }
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or by creating an explicit configuration and passing it into the server. This is useful for systems where an application hosts more than one MCP server but they might require different instrumentation callbacks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;configuration = MCP::Configuration.new
configuration.exception_reporter = -&amp;gt;(exception, server_context) {
  # Your exception reporting logic here
  # For example with Bugsnag:
  Bugsnag.notify(exception) do |report|
    report.add_metadata(:model_context_protocol, server_context)
  end
}

configuration.instrumentation_callback = -&amp;gt;(data) {
  puts &quot;Got instrumentation data #{data.inspect}&quot;
}

server = MCP::Server.new(
  # ... all other options
  configuration:,
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Server Context and Configuration Block Data&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;server_context&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;server_context&lt;/code&gt; is a user-defined hash that is passed into the server instance and made available to tools, prompts, and exception/instrumentation callbacks. It can be used to provide contextual information such as authentication state, user IDs, or request-specific data.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Type:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server_context: { [String, Symbol] =&amp;gt; Any }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server = MCP::Server.new(
  name: &quot;my_server&quot;,
  server_context: { user_id: current_user.id, request_id: request.uuid }
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This hash is then passed as the &lt;code&gt;server_context&lt;/code&gt; argument to tool and prompt calls, and is included in exception and instrumentation callbacks.&lt;/p&gt; 
&lt;h4&gt;Configuration Block Data&lt;/h4&gt; 
&lt;h5&gt;Exception Reporter&lt;/h5&gt; 
&lt;p&gt;The exception reporter receives:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;exception&lt;/code&gt;: The Ruby exception object that was raised&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;server_context&lt;/code&gt;: The context hash provided to the server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Signature:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;exception_reporter = -&amp;gt;(exception, server_context) { ... }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Instrumentation Callback&lt;/h5&gt; 
&lt;p&gt;The instrumentation callback receives a hash with the following possible keys:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;method&lt;/code&gt;: (String) The protocol method called (e.g., &quot;ping&quot;, &quot;tools/list&quot;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tool_name&lt;/code&gt;: (String, optional) The name of the tool called&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;prompt_name&lt;/code&gt;: (String, optional) The name of the prompt called&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resource_uri&lt;/code&gt;: (String, optional) The URI of the resource called&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;error&lt;/code&gt;: (String, optional) Error code if a lookup failed&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;duration&lt;/code&gt;: (Float) Duration of the call in seconds&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Type:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;instrumentation_callback = -&amp;gt;(data) { ... }
# where data is a Hash with keys as described above
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;config.instrumentation_callback = -&amp;gt;(data) {
  puts &quot;Instrumentation: #{data.inspect}&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Server Protocol Version&lt;/h3&gt; 
&lt;p&gt;The server&#39;s protocol version can be overridden using the &lt;code&gt;protocol_version&lt;/code&gt; keyword argument:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;configuration = MCP::Configuration.new(protocol_version: &quot;2024-11-05&quot;)
MCP::Server.new(name: &quot;test_server&quot;, configuration: configuration)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will make all new server instances use the specified protocol version instead of the default version. The protocol version can be reset to the default by setting it to &lt;code&gt;nil&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;MCP::Configuration.new(protocol_version: nil)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If an invalid &lt;code&gt;protocol_version&lt;/code&gt; value is set, an &lt;code&gt;ArgumentError&lt;/code&gt; is raised.&lt;/p&gt; 
&lt;p&gt;Be sure to check the &lt;a href=&quot;https://modelcontextprotocol.io/specification/versioning&quot;&gt;MCP spec&lt;/a&gt; for the protocol version to understand the supported features for the version being set.&lt;/p&gt; 
&lt;h3&gt;Exception Reporting&lt;/h3&gt; 
&lt;p&gt;The exception reporter receives two arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;exception&lt;/code&gt;: The Ruby exception object that was raised&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;server_context&lt;/code&gt;: A hash containing contextual information about where the error occurred&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The server_context hash includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For tool calls: &lt;code&gt;{ tool_name: &quot;name&quot;, arguments: { ... } }&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For general request handling: &lt;code&gt;{ request: { ... } }&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When an exception occurs:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The exception is reported via the configured reporter&lt;/li&gt; 
 &lt;li&gt;For tool calls, a generic error response is returned to the client: &lt;code&gt;{ error: &quot;Internal error occurred&quot;, isError: true }&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For other requests, the exception is re-raised after reporting&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If no exception reporter is configured, a default no-op reporter is used that silently ignores exceptions.&lt;/p&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;p&gt;MCP spec includes &lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/server/tools&quot;&gt;Tools&lt;/a&gt; which provide functionality to LLM apps.&lt;/p&gt; 
&lt;p&gt;This gem provides a &lt;code&gt;MCP::Tool&lt;/code&gt; class that can be used to create tools in three ways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;As a class definition:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class MyTool &amp;lt; MCP::Tool
  title &quot;My Tool&quot; # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
  description &quot;This tool performs specific functionality...&quot;
  input_schema(
    properties: {
      message: { type: &quot;string&quot; },
    },
    required: [&quot;message&quot;]
  )
  output_schema(
    properties: {
      result: { type: &quot;string&quot; },
      success: { type: &quot;boolean&quot; },
      timestamp: { type: &quot;string&quot;, format: &quot;date-time&quot; }
    },
    required: [&quot;result&quot;, &quot;success&quot;, &quot;timestamp&quot;]
  )
  annotations(
    read_only_hint: true,
    destructive_hint: false,
    idempotent_hint: true,
    open_world_hint: false,
    title: &quot;My Tool&quot;
  )

  def self.call(message:, server_context:)
    MCP::Tool::Response.new([{ type: &quot;text&quot;, text: &quot;OK&quot; }])
  end
end

tool = MyTool
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;By using the &lt;code&gt;MCP::Tool.define&lt;/code&gt; method with a block:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;tool = MCP::Tool.define(
  name: &quot;my_tool&quot;,
  title: &quot;My Tool&quot;, # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
  description: &quot;This tool performs specific functionality...&quot;,
  annotations: {
    read_only_hint: true,
    title: &quot;My Tool&quot;
  }
) do |args, server_context|
  MCP::Tool::Response.new([{ type: &quot;text&quot;, text: &quot;OK&quot; }])
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;By using the &lt;code&gt;MCP::Server#define_tool&lt;/code&gt; method with a block:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server = MCP::Server.new
server.define_tool(
  name: &quot;my_tool&quot;,
  description: &quot;This tool performs specific functionality...&quot;,
  annotations: {
    title: &quot;My Tool&quot;,
    read_only_hint: true
  }
) do |args, server_context|
  Tool::Response.new([{ type: &quot;text&quot;, text: &quot;OK&quot; }])
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The server_context parameter is the server_context passed into the server and can be used to pass per request information, e.g. around authentication state.&lt;/p&gt; 
&lt;h3&gt;Tool Annotations&lt;/h3&gt; 
&lt;p&gt;Tools can include annotations that provide additional metadata about their behavior. The following annotations are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;destructive_hint&lt;/code&gt;: Indicates if the tool performs destructive operations. Defaults to true&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;idempotent_hint&lt;/code&gt;: Indicates if the tool&#39;s operations are idempotent. Defaults to false&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;open_world_hint&lt;/code&gt;: Indicates if the tool operates in an open world context. Defaults to true&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;read_only_hint&lt;/code&gt;: Indicates if the tool only reads data (doesn&#39;t modify state). Defaults to false&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;title&lt;/code&gt;: A human-readable title for the tool&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Annotations can be set either through the class definition using the &lt;code&gt;annotations&lt;/code&gt; class method or when defining a tool using the &lt;code&gt;define&lt;/code&gt; method.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This &lt;strong&gt;Tool Annotations&lt;/strong&gt; feature is supported starting from &lt;code&gt;protocol_version: &#39;2025-03-26&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Tool Output Schemas&lt;/h3&gt; 
&lt;p&gt;Tools can optionally define an &lt;code&gt;output_schema&lt;/code&gt; to specify the expected structure of their results. This works similarly to how &lt;code&gt;input_schema&lt;/code&gt; is defined and can be used in three ways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Class definition with output_schema:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class WeatherTool &amp;lt; MCP::Tool
  tool_name &quot;get_weather&quot;
  description &quot;Get current weather for a location&quot;

  input_schema(
    properties: {
      location: { type: &quot;string&quot; },
      units: { type: &quot;string&quot;, enum: [&quot;celsius&quot;, &quot;fahrenheit&quot;] }
    },
    required: [&quot;location&quot;]
  )

  output_schema(
    properties: {
      temperature: { type: &quot;number&quot; },
      condition: { type: &quot;string&quot; },
      humidity: { type: &quot;integer&quot; }
    },
    required: [&quot;temperature&quot;, &quot;condition&quot;, &quot;humidity&quot;]
  )

  def self.call(location:, units: &quot;celsius&quot;, server_context:)
    # Call weather API and structure the response
    api_response = WeatherAPI.fetch(location, units)
    weather_data = {
      temperature: api_response.temp,
      condition: api_response.description,
      humidity: api_response.humidity_percent
    }

    output_schema.validate_result(weather_data)

    MCP::Tool::Response.new([{
      type: &quot;text&quot;,
      text: weather_data.to_json
    }])
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Using Tool.define with output_schema:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;tool = MCP::Tool.define(
  name: &quot;calculate_stats&quot;,
  description: &quot;Calculate statistics for a dataset&quot;,
  input_schema: {
    properties: {
      numbers: { type: &quot;array&quot;, items: { type: &quot;number&quot; } }
    },
    required: [&quot;numbers&quot;]
  },
  output_schema: {
    properties: {
      mean: { type: &quot;number&quot; },
      median: { type: &quot;number&quot; },
      count: { type: &quot;integer&quot; }
    },
    required: [&quot;mean&quot;, &quot;median&quot;, &quot;count&quot;]
  }
) do |args, server_context|
  # Calculate statistics and validate against schema
  MCP::Tool::Response.new([{ type: &quot;text&quot;, text: &quot;Statistics calculated&quot; }])
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Using OutputSchema objects:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class DataTool &amp;lt; MCP::Tool
  output_schema MCP::Tool::OutputSchema.new(
    properties: {
      success: { type: &quot;boolean&quot; },
      data: { type: &quot;object&quot; }
    },
    required: [&quot;success&quot;]
  )
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;MCP spec for the &lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/server/tools#output-schema&quot;&gt;Output Schema&lt;/a&gt; specifies that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Server Validation&lt;/strong&gt;: Servers MUST provide structured results that conform to the output schema&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Client Validation&lt;/strong&gt;: Clients SHOULD validate structured results against the output schema&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Better Integration&lt;/strong&gt;: Enables strict schema validation, type information, and improved developer experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backward Compatibility&lt;/strong&gt;: Tools returning structured content SHOULD also include serialized JSON in a TextContent block&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The output schema follows standard JSON Schema format and helps ensure consistent data exchange between MCP servers and clients.&lt;/p&gt; 
&lt;h3&gt;Prompts&lt;/h3&gt; 
&lt;p&gt;MCP spec includes &lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/server/prompts&quot;&gt;Prompts&lt;/a&gt;, which enable servers to define reusable prompt templates and workflows that clients can easily surface to users and LLMs.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;MCP::Prompt&lt;/code&gt; class provides three ways to create prompts:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;As a class definition with metadata:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class MyPrompt &amp;lt; MCP::Prompt
  prompt_name &quot;my_prompt&quot;  # Optional - defaults to underscored class name
  title &quot;My Prompt&quot; # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
  description &quot;This prompt performs specific functionality...&quot;
  arguments [
    MCP::Prompt::Argument.new(
      name: &quot;message&quot;,
      description: &quot;Input message&quot;,
      required: true
    )
  ]

  class &amp;lt;&amp;lt; self
    def template(args, server_context:)
      MCP::Prompt::Result.new(
        description: &quot;Response description&quot;,
        messages: [
          MCP::Prompt::Message.new(
            role: &quot;user&quot;,
            content: MCP::Content::Text.new(&quot;User message&quot;)
          ),
          MCP::Prompt::Message.new(
            role: &quot;assistant&quot;,
            content: MCP::Content::Text.new(args[&quot;message&quot;])
          )
        ]
      )
    end
  end
end

prompt = MyPrompt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Using the &lt;code&gt;MCP::Prompt.define&lt;/code&gt; method:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;prompt = MCP::Prompt.define(
  name: &quot;my_prompt&quot;,
  title: &quot;My Prompt&quot;, # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
  description: &quot;This prompt performs specific functionality...&quot;,
  arguments: [
    MCP::Prompt::Argument.new(
      name: &quot;message&quot;,
      description: &quot;Input message&quot;,
      required: true
    )
  ]
) do |args, server_context:|
  MCP::Prompt::Result.new(
    description: &quot;Response description&quot;,
    messages: [
      MCP::Prompt::Message.new(
        role: &quot;user&quot;,
        content: MCP::Content::Text.new(&quot;User message&quot;)
      ),
      MCP::Prompt::Message.new(
        role: &quot;assistant&quot;,
        content: MCP::Content::Text.new(args[&quot;message&quot;])
      )
    ]
  )
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Using the &lt;code&gt;MCP::Server#define_prompt&lt;/code&gt; method:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server = MCP::Server.new
server.define_prompt(
  name: &quot;my_prompt&quot;,
  description: &quot;This prompt performs specific functionality...&quot;,
  arguments: [
    Prompt::Argument.new(
      name: &quot;message&quot;,
      description: &quot;Input message&quot;,
      required: true
    )
  ]
) do |args, server_context:|
  Prompt::Result.new(
    description: &quot;Response description&quot;,
    messages: [
      Prompt::Message.new(
        role: &quot;user&quot;,
        content: Content::Text.new(&quot;User message&quot;)
      ),
      Prompt::Message.new(
        role: &quot;assistant&quot;,
        content: Content::Text.new(args[&quot;message&quot;])
      )
    ]
  )
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The server_context parameter is the server_context passed into the server and can be used to pass per request information, e.g. around authentication state or user preferences.&lt;/p&gt; 
&lt;h3&gt;Key Components&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;MCP::Prompt::Argument&lt;/code&gt; - Defines input parameters for the prompt template&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MCP::Prompt::Message&lt;/code&gt; - Represents a message in the conversation with a role and content&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MCP::Prompt::Result&lt;/code&gt; - The output of a prompt template containing description and messages&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MCP::Content::Text&lt;/code&gt; - Text content for messages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Register prompts with the MCP server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server = MCP::Server.new(
  name: &quot;my_server&quot;,
  prompts: [MyPrompt],
  server_context: { user_id: current_user.id },
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The server will handle prompt listing and execution through the MCP protocol methods:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;prompts/list&lt;/code&gt; - Lists all registered prompts and their schemas&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;prompts/get&lt;/code&gt; - Retrieves and executes a specific prompt with arguments&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Instrumentation&lt;/h3&gt; 
&lt;p&gt;The server allows registering a callback to receive information about instrumentation. To register a handler pass a proc/lambda to as &lt;code&gt;instrumentation_callback&lt;/code&gt; into the server constructor.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;MCP.configure do |config|
  config.instrumentation_callback = -&amp;gt;(data) {
    puts &quot;Got instrumentation data #{data.inspect}&quot;
  }
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The data contains the following keys:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;method&lt;/code&gt;: the method called, e.g. &lt;code&gt;ping&lt;/code&gt;, &lt;code&gt;tools/list&lt;/code&gt;, &lt;code&gt;tools/call&lt;/code&gt; etc&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tool_name&lt;/code&gt;: the name of the tool called&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;prompt_name&lt;/code&gt;: the name of the prompt called&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resource_uri&lt;/code&gt;: the uri of the resource called&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;error&lt;/code&gt;: if looking up tools/prompts etc failed, e.g. &lt;code&gt;tool_not_found&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;duration&lt;/code&gt;: the duration of the call in seconds&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;tool_name&lt;/code&gt;, &lt;code&gt;prompt_name&lt;/code&gt; and &lt;code&gt;resource_uri&lt;/code&gt; are only populated if a matching handler is registered. This is to avoid potential issues with metric cardinality&lt;/p&gt; 
&lt;h3&gt;Resources&lt;/h3&gt; 
&lt;p&gt;MCP spec includes &lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/server/resources&quot;&gt;Resources&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Reading Resources&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;MCP::Resource&lt;/code&gt; class provides a way to register resources with the server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;resource = MCP::Resource.new(
  uri: &quot;https://example.com/my_resource&quot;,
  name: &quot;my-resource&quot;,
  title: &quot;My Resource&quot;, # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
  description: &quot;Lorem ipsum dolor sit amet&quot;,
  mime_type: &quot;text/html&quot;,
)

server = MCP::Server.new(
  name: &quot;my_server&quot;,
  resources: [resource],
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The server must register a handler for the &lt;code&gt;resources/read&lt;/code&gt; method to retrieve a resource dynamically.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server.resources_read_handler do |params|
  [{
    uri: params[:uri],
    mimeType: &quot;text/plain&quot;,
    text: &quot;Hello from example resource! URI: #{params[:uri]}&quot;
  }]
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;otherwise &lt;code&gt;resources/read&lt;/code&gt; requests will be a no-op.&lt;/p&gt; 
&lt;h3&gt;Resource Templates&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;MCP::ResourceTemplate&lt;/code&gt; class provides a way to register resource templates with the server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;resource_template = MCP::ResourceTemplate.new(
  uri_template: &quot;https://example.com/my_resource_template&quot;,
  name: &quot;my-resource-template&quot;,
  title: &quot;My Resource Template&quot;, # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
  description: &quot;Lorem ipsum dolor sit amet&quot;,
  mime_type: &quot;text/html&quot;,
)

server = MCP::Server.new(
  name: &quot;my_server&quot;,
  resource_templates: [resource_template],
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building an MCP Client&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;MCP::Client&lt;/code&gt; class provides an interface for interacting with MCP servers.&lt;/p&gt; 
&lt;p&gt;This class supports:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tool listing via the &lt;code&gt;tools/list&lt;/code&gt; method&lt;/li&gt; 
 &lt;li&gt;Tool invocation via the &lt;code&gt;tools/call&lt;/code&gt; method&lt;/li&gt; 
 &lt;li&gt;Automatic JSON-RPC 2.0 message formatting&lt;/li&gt; 
 &lt;li&gt;UUID request ID generation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Clients are initialized with a transport layer instance that handles the low-level communication mechanics. Authorization is handled by the transport layer.&lt;/p&gt; 
&lt;h2&gt;Transport Layer Interface&lt;/h2&gt; 
&lt;p&gt;If the transport layer you need is not included in the gem, you can build and pass your own instances so long as they conform to the following interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class CustomTransport
  # Sends a JSON-RPC request to the server and returns the raw response.
  #
  # @param request [Hash] A complete JSON-RPC request object.
  #     https://www.jsonrpc.org/specification#request_object
  # @return [Hash] A hash modeling a JSON-RPC response object.
  #     https://www.jsonrpc.org/specification#response_object
  def send_request(request:)
    # Your transport-specific logic here
    # - HTTP: POST to endpoint with JSON body
    # - WebSocket: Send message over WebSocket
    # - stdio: Write to stdout, read from stdin
    # - etc.
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTP Transport Layer&lt;/h3&gt; 
&lt;p&gt;Use the &lt;code&gt;MCP::Client::HTTP&lt;/code&gt; transport to interact with MCP servers using simple HTTP requests.&lt;/p&gt; 
&lt;p&gt;You&#39;ll need to add &lt;code&gt;faraday&lt;/code&gt; as a dependency in order to use the HTTP transport layer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem &#39;mcp&#39;
gem &#39;faraday&#39;, &#39;&amp;gt;= 2.0&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;http_transport = MCP::Client::HTTP.new(url: &quot;https://api.example.com/mcp&quot;)
client = MCP::Client.new(transport: http_transport)

# List available tools
tools = client.tools
tools.each do |tool|
  puts &amp;lt;&amp;lt;~TOOL_INFORMATION
    Tool: #{tool.name}
    Description: #{tool.description}
    Input Schema: #{tool.input_schema}
  TOOL_INFORMATION
end

# Call a specific tool
response = client.call_tool(
  tool: tools.first,
  arguments: { message: &quot;Hello, world!&quot; }
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;HTTP Authorization&lt;/h4&gt; 
&lt;p&gt;By default, the HTTP transport layer provides no authentication to the server, but you can provide custom headers if you need authentication. For example, to use Bearer token authentication:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;http_transport = MCP::Client::HTTP.new(
  url: &quot;https://api.example.com/mcp&quot;,
  headers: {
    &quot;Authorization&quot; =&amp;gt; &quot;Bearer my_token&quot;
  }
)

client = MCP::Client.new(transport: http_transport)
client.tools # will make the call using Bearer auth
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can add any custom headers needed for your authentication scheme, or for any other purpose. The client will include these headers on every request.&lt;/p&gt; 
&lt;h3&gt;Tool Objects&lt;/h3&gt; 
&lt;p&gt;The client provides a wrapper class for tools returned by the server:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;MCP::Client::Tool&lt;/code&gt; - Represents a single tool with its metadata&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This class provides easy access to tool properties like name, description, input schema, and output schema.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;This gem is published to &lt;a href=&quot;https://rubygems.org/gems/mcp&quot;&gt;RubyGems.org&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Releases are triggered by PRs to the &lt;code&gt;main&lt;/code&gt; branch updating the version number in &lt;code&gt;lib/mcp/version.rb&lt;/code&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Update the version number&lt;/strong&gt; in &lt;code&gt;lib/mcp/version.rb&lt;/code&gt;, following &lt;a href=&quot;https://semver.org/&quot;&gt;semver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Update CHANGELOG.md&lt;/strong&gt;, backfilling the changes since the last release if necessary, and adding a new section for the new version, clearing out the Unreleased section&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a PR and get approval from a maintainer&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Merge your PR to the main branch&lt;/strong&gt; - This will automatically trigger the release workflow via GitHub Actions&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;When changes are merged to the &lt;code&gt;main&lt;/code&gt; branch, the GitHub Actions workflow (&lt;code&gt;.github/workflows/release.yml&lt;/code&gt;) is triggered and the gem is published to RubyGems.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chef/chef</title>
      <link>https://github.com/chef/chef</link>
      <description>&lt;p&gt;Chef Infra, a powerful automation platform that transforms infrastructure into code automating how infrastructure is configured, deployed and managed across any environment, at any scale&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chef Infra&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://codeclimate.com/github/chef/chef&quot;&gt;&lt;img src=&quot;https://codeclimate.com/github/chef/chef.svg?sanitize=true&quot; alt=&quot;Code Climate&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://buildkite.com/chef-oss/chef-chef-main-verify&quot;&gt;&lt;img src=&quot;https://badge.buildkite.com/c82093430ceec7d27af05febb9dcafe3aa331fff9d74c0ab9d.svg?branch=main&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://badge.fury.io/rb/chef&quot;&gt;&lt;img src=&quot;https://badge.fury.io/rb/chef.svg?sanitize=true&quot; alt=&quot;Gem Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/chef/chef/raw/main/docs/dev/design_documents/client_release_cadence.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Release%20Policy-Cadence%20Release-brightgreen.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Umbrella Project&lt;/strong&gt;: &lt;a href=&quot;https://github.com/chef/chef-oss-practices/raw/main/projects/chef-infra.md&quot;&gt;Chef Infra&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project State&lt;/strong&gt;: &lt;a href=&quot;https://github.com/chef/chef-oss-practices/raw/main/repo-management/repo-states.md#active&quot;&gt;Active&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Issues &lt;a href=&quot;https://github.com/chef/chef-oss-practices/raw/main/repo-management/repo-states.md&quot;&gt;Response Time Maximum&lt;/a&gt;&lt;/strong&gt;: 14 days&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Pull Request &lt;a href=&quot;https://github.com/chef/chef-oss-practices/raw/main/repo-management/repo-states.md&quot;&gt;Response Time Maximum&lt;/a&gt;&lt;/strong&gt;: 14 days&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Chef Infra is a configuration management tool designed to bring automation to your entire infrastructure.&lt;/p&gt; 
&lt;h3&gt;Want to try Chef Infra?&lt;/h3&gt; 
&lt;p&gt;For Chef Infra usage, please refer to &lt;a href=&quot;https://learn.chef.io/&quot;&gt;Learn Chef&lt;/a&gt;, our self-paced, entirely free learning platform. Learn Chef also includes module-based training for Chef Infra, as well as Chef Automate, Chef Habitat, and Chef InSpec.&lt;/p&gt; 
&lt;p&gt;Other useful resources for Chef Infra users:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation: &lt;a href=&quot;https://docs.chef.io/&quot;&gt;https://docs.chef.io/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Source: &lt;a href=&quot;https://github.com/chef/chef/tree/main&quot;&gt;https://github.com/chef/chef/tree/main&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tickets/Issues: &lt;a href=&quot;https://github.com/chef/chef/issues&quot;&gt;https://github.com/chef/chef/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Slack: &lt;a href=&quot;https://community-slack.chef.io/&quot;&gt;Chef Community Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mailing list/Forum: &lt;a href=&quot;https://discourse.chef.io&quot;&gt;https://discourse.chef.io&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting Issues&lt;/h2&gt; 
&lt;p&gt;Issues can be reported by using &lt;a href=&quot;https://github.com/chef/chef/issues&quot;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Note that this repository is primarily for reporting issues in the chef-client itself. For reporting issues against other Chef projects, please look up the appropriate repository. If you&#39;re unsure where to submit an issue, please ask in the #chef-dev channel in &lt;a href=&quot;https://community-slack.chef.io/&quot;&gt;Chef Community Slack&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How We Build &amp;amp; Release Chef&lt;/h2&gt; 
&lt;p&gt;For information on how a contribution goes from PR to released package, see &lt;a href=&quot;https://raw.githubusercontent.com/chef/chef/main/docs/dev/design_documents/how_chef_is_tested_and_built.md&quot;&gt;How Chef Infra Is Built&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To learn more about our monthly feature releases and yearly major releases, see &lt;a href=&quot;https://raw.githubusercontent.com/chef/chef/main/docs/dev/policy/release_and_support_schedule.md&quot;&gt;Chef Infra Release and Support Schedule&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Involved&lt;/h2&gt; 
&lt;p&gt;We&#39;d love to have your help developing Chef Infra. See our &lt;a href=&quot;https://raw.githubusercontent.com/chef/chef/main/CONTRIBUTING.md&quot;&gt;Contributing Document&lt;/a&gt; for more information on getting started.&lt;/p&gt; 
&lt;h3&gt;Community PR Reviews&lt;/h3&gt; 
&lt;p&gt;Want to raise, review, and help merge a PR with the community and the engineering staff? Please see: &lt;a href=&quot;https://raw.githubusercontent.com/chef/chef/main/docs/dev/how_to/community_pr_review_checklist.md&quot;&gt;Community Pr Review&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License and Copyright&lt;/h2&gt; 
&lt;p&gt;Copyright 2008-2020, Chef Software, Inc.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
