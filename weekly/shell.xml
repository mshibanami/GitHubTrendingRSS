<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Shell Weekly Trending</title>
    <description>Weekly Trending of Shell in GitHub</description>
    <pubDate>Sat, 27 Sep 2025 01:49:10 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>deevus/zed-windows-builds</title>
      <link>https://github.com/deevus/zed-windows-builds</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unofficial builds of Zed for Windows&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/deevus/zed-windows-builds/actions/workflows/test.yml&quot;&gt;&lt;img src=&quot;https://github.com/deevus/zed-windows-builds/actions/workflows/test.yml/badge.svg?sanitize=true&quot; alt=&quot;Test Scripts&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/deevus/zed-windows-builds/actions/workflows/test-integration.yml&quot;&gt;&lt;img src=&quot;https://github.com/deevus/zed-windows-builds/actions/workflows/test-integration.yml/badge.svg?sanitize=true&quot; alt=&quot;Test Integration&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/deevus/zed-windows-builds/actions/workflows/nightly.yml&quot;&gt;&lt;img src=&quot;https://github.com/deevus/zed-windows-builds/actions/workflows/nightly.yml/badge.svg?sanitize=true&quot; alt=&quot;Scheduled Nightly Build&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/deevus/zed-windows-builds/actions/workflows/stable.yml&quot;&gt;&lt;img src=&quot;https://github.com/deevus/zed-windows-builds/actions/workflows/stable.yml/badge.svg?sanitize=true&quot; alt=&quot;Scheduled Stable Build&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE: This is not a support channel for Zed on Windows.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;These builds are for those who want to live on the bleeding edge or just want to test Zed out on Windows.&lt;/p&gt; 
&lt;p&gt;Any issues with the Windows build should go through official channels, as this repository does not concern itself with the source code of Zed or issues found therein.&lt;/p&gt; 
&lt;p&gt;If you have suggestions for improvements to the build process, please start a discussion or make a PR.&lt;/p&gt; 
&lt;p&gt;All installation instructions below require that &lt;a href=&quot;https://scoop.sh/&quot;&gt;Scoop&lt;/a&gt; is installed on your system.&lt;/p&gt; 
&lt;h2&gt;Stable builds&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-pwsh&quot;&gt;scoop bucket add extras
scoop install extras/zed
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Nightly builds&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-pwsh&quot;&gt;scoop bucket add versions
scoop install versions/zed-nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Vulkan doesn&#39;t work for you?&lt;/h2&gt; 
&lt;p&gt;Install the OpenGL version&lt;/p&gt; 
&lt;h3&gt;Stable OpenGL version&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-pwsh&quot;&gt;scoop bucket add extras
scoop install extras/zed-opengl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nightly OpenGL version&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-pwsh&quot;&gt;scoop bucket add versions
scoop install versions/zed-opengl-nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;For Windows 10 users&lt;/h3&gt; 
&lt;p&gt;Zed may not start unless you install the &lt;a href=&quot;https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170#visual-studio-2015-2017-2019-and-2022&quot;&gt;Microsoft Visual C++ Redistributable 2022&lt;/a&gt; package. If you are using Scoop, you can install it using the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-pwsh&quot;&gt;scoop bucket add extras
scoop install vcredist2022
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Updates&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-pwsh&quot;&gt;# Stable version
scoop update zed
# Stable OpenGL version
scoop update zed-opengl
# Nightly version
scoop update zed-nightly
# Nightly OpenGL version
scoop update zed-opengl-nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Is it safe?&lt;/h2&gt; 
&lt;p&gt;This repository is just a &lt;a href=&quot;https://raw.githubusercontent.com/deevus/zed-windows-builds/main/.github/workflows/build.yml&quot;&gt;simple GitHub workflow&lt;/a&gt; that builds Zed from &lt;code&gt;main&lt;/code&gt; and publishes a release every night at UTC+0000. (Additionally on push for testing).&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://zed.dev/&quot;&gt;Zed homepage&lt;/a&gt; or &lt;a href=&quot;https://github.com/zed-industries/zed&quot;&gt;official repository&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Build Process&lt;/h2&gt; 
&lt;p&gt;The build process is designed to be robust and handle partial failures gracefully:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Resilient Builds&lt;/strong&gt;: If one build variant (Vulkan or OpenGL) fails, the other will still complete and create a release&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive Testing&lt;/strong&gt;: All build scripts are thoroughly tested with automated test suites&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Quality Assurance&lt;/strong&gt;: Each release includes SHA256 checksums for integrity verification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;p&gt;The build and release scripts are automatically tested with every change:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Script Tests&lt;/strong&gt;: Unit tests for the release preparation logic&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integration Tests&lt;/strong&gt;: End-to-end testing of the build and release workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Failure Scenarios&lt;/strong&gt;: Testing of partial build failures to ensure robust handling&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/deevus/zed-windows-builds/main/scripts/&quot;&gt;scripts directory&lt;/a&gt; for more details about the testing infrastructure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MichaelCade/90DaysOfDevOps</title>
      <link>https://github.com/MichaelCade/90DaysOfDevOps</link>
      <description>&lt;p&gt;This repository started out as a learning in public project for myself and has now become a structured learning map for many in the community. We have 3 years under our belt covering all things DevOps, including Principles, Processes, Tooling and Use Cases surrounding this vast topic.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;90DaysOfDevOps&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/logo.png?raw=true&quot; alt=&quot;90DaysOfDevOps Logo&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.90daysofdevops.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/website?url=https%3A%2F%2Fwww.90daysofdevops.com&quot; alt=&quot;Website&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/MichaelCade/90DaysOfDevOps&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/MichaelCade/90DaysOfDevOps&quot; alt=&quot;GitHub Repo stars&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/MichaelCade/90DaysOfDevOps&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/MichaelCade/90DaysOfDevOps&quot; alt=&quot;GitHub Repo stars&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/MichaelCade/90DaysOfDevOps&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/MichaelCade/90DaysOfDevOps&quot; alt=&quot;GitHub Repo issues&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository started as a way to document my journey on getting a better foundational knowledge of &quot;DevOps&quot;. It was started on the 1st January 2022 and ran to the 31st March 2022 which is 90 Days!&lt;/p&gt; 
&lt;p&gt;What started off as a learning in public project has quickly become a structured way of learning the foundations of DevOps principles, processes and tooling. Maybe you can help contribute some resources you have found useful to the project.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;DevOps - Written content by myself but then translated and corrected and enhanced by the community&lt;/li&gt; 
 &lt;li&gt;DevSecOps - Focus on Security and other topics we did not get to in 2022, Perspectives from communinty subject matter experts.&lt;/li&gt; 
 &lt;li&gt;Community Edition - Community Sessions by the community, 91 Sessions shared on YouTube. Different Media with intent to build out resources here as well.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This will &lt;strong&gt;not cover all things&lt;/strong&gt; &quot;DevOps&quot; but it will cover some of the areas that will benefit your learning and understanding overall in this space. The encouragement here is to read &amp;amp; watch the content, be curious, provide feedback and discuss within the community your findings.&lt;/p&gt; 
&lt;p&gt;The project is not a sponsored operation by any vendors and everything is accessible using free, community and open source software.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://ko-fi.com/N4N33YRCS&quot;&gt;&lt;img src=&quot;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&quot; alt=&quot;ko-fi&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/vqwPrNQsyK&quot;&gt;&lt;img src=&quot;https://dcbadge.vercel.app/api/server/vqwPrNQsyK&quot; alt=&quot;Discord Invite Link&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/stars/michaelcade/90daysofdevops?style=social?&quot; alt=&quot;GitHub Repo Stars&quot; /&gt;&lt;/p&gt; 
&lt;div style=&quot;display: flex; justify-content: center; align-items: center;&quot;&gt; 
 &lt;div style=&quot;margin: 10px; text-align: center;&quot;&gt; 
  &lt;a href=&quot;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/2022.md&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/DevOps.jpg?raw=true&quot; alt=&quot;DevOps&quot; style=&quot;border: 2px solid #555; border-radius: 8px; width: 100%; max-width: 400px;&quot; /&gt; &lt;/a&gt; 
  &lt;br /&gt; 
  &lt;em&gt;DevOps - This is where we start, 90Days, 110k words! &lt;/em&gt; 
 &lt;/div&gt; 
 &lt;div style=&quot;margin: 10px; text-align: center;&quot;&gt; 
  &lt;a href=&quot;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/2023.md&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/DevSecOps.jpg?raw=true&quot; alt=&quot;DevSecOps&quot; style=&quot;border: 2px solid #555; border-radius: 8px; width: 100%; max-width: 400px;&quot; /&gt; &lt;/a&gt; 
  &lt;br /&gt; 
  &lt;em&gt;DevSecOps - Continues... Some help from my friends&lt;/em&gt; 
 &lt;/div&gt; 
 &lt;div style=&quot;margin: 10px; text-align: center;&quot;&gt; 
  &lt;a href=&quot;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/2024.md&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/MichaelCade/90DaysOfDevOps/main/2024.png?raw=true&quot; alt=&quot;2024&quot; style=&quot;border: 2px solid #555; border-radius: 8px; width: 100%; max-width: 400px;&quot; /&gt; &lt;/a&gt; 
  &lt;br /&gt; 
  &lt;em&gt;Community Edition: 90 Sessions&lt;/em&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;The quickest way to get in touch is going to be via Twitter, my handle is &lt;a href=&quot;https://twitter.com/MichaelCade1&quot;&gt;@MichaelCade1&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Shield: &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg?sanitize=true&quot; alt=&quot;CC BY-NC-SA 4.0&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This work is licensed under a &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&gt;&lt;img src=&quot;https://licensebuttons.net/l/by-nc-sa/4.0/88x31.png&quot; alt=&quot;CC BY-NC-SA 4.0&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://star-history.com/#MichaelCade/90DaysOfDevOps&amp;amp;Timeline&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=MichaelCade/90DaysOfDevOps&amp;amp;type=Timeline&quot; alt=&quot;Star History Chart&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>basecamp/omarchy</title>
      <link>https://github.com/basecamp/omarchy</link>
      <description>&lt;p&gt;Opinionated Arch/Hyprland Setup&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Omarchy&lt;/h1&gt; 
&lt;p&gt;Turn a fresh Arch installation into a fully-configured, beautiful, and modern web development system based on Hyprland by running a single command. That&#39;s the one-line pitch for Omarchy (like it was for Omakub). No need to write bespoke configs for every essential tool just to get started or to be up on all the latest command-line tools. Omarchy is an opinionated take on what Linux can be at its best.&lt;/p&gt; 
&lt;p&gt;Read more at &lt;a href=&quot;https://omarchy.org&quot;&gt;omarchy.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Omarchy is released under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>testssl/testssl.sh</title>
      <link>https://github.com/testssl/testssl.sh</link>
      <description>&lt;p&gt;Testing TLS/SSL encryption anywhere on any port&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Intro&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/v/tag/testssl/testssl.sh&quot; alt=&quot;GitHub Tag&quot; /&gt; &lt;img src=&quot;https://img.shields.io/badge/%2Fbin%2Fbash_-blue&quot; alt=&quot;Static Badge&quot; /&gt; &lt;img src=&quot;https://img.shields.io/badge/Libre+OpenSSL_-blue&quot; alt=&quot;Static Badge&quot; /&gt; &lt;a href=&quot;https://github.com/testssl/testssl.sh/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/testssl/testssl.sh&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/created-at/testssl/testssl.sh&quot; alt=&quot;GitHub Created At&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/last-commit/testssl/testssl.sh&quot; alt=&quot;GitHub last commit&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/testssl/testssl.sh&quot; alt=&quot;GitHub commit activity&quot; /&gt; &lt;a href=&quot;https://github.com/testssl/testssl.sh/actions/workflows/unit_tests_ubuntu.yml?branch=3.3dev&quot;&gt;&lt;img src=&quot;https://github.com/testssl/testssl.sh/actions/workflows/unit_tests_ubuntu.yml/badge.svg?sanitize=true&quot; alt=&quot;CI test Ubuntu&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/testssl/testssl.sh/actions/workflows/unit_tests_macos.yml?branch=3.3dev&quot;&gt;&lt;img src=&quot;https://github.com/testssl/testssl.sh/actions/workflows/unit_tests_macos.yml/badge.svg?sanitize=true&quot; alt=&quot;CI test MacOS&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/testssl/testssl.sh/raw/3.2/Dockerfile.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/drwetter/testssl.sh&quot; alt=&quot;Docker&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/mastodon/follow/109319848143024146?domain=infosec.exchange&quot; alt=&quot;Mastodon Follow&quot; /&gt; [&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fpublic.api.bsky.app%2Fxrpc%2Fapp.bsky.actor.getProfile%2F%3Factor%3Dtestssl.bsky.social&amp;amp;query=%24.followersCount&amp;amp;style=social&amp;amp;logo=bluesky&amp;amp;label=Follow%20%40testssl.sh&quot; alt=&quot;Bluesky&quot; /&gt; &lt;a href=&quot;https://gitter.im/testssl/testssl.sh?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;testssl.sh&lt;/code&gt; is a free command line tool which checks a server&#39;s service on any port for the support of TLS/SSL ciphers, protocols as well as some cryptographic flaws.&lt;/p&gt; 
&lt;h3&gt;Key features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clear output: you can tell easily whether anything is good or bad.&lt;/li&gt; 
 &lt;li&gt;Machine readable output (CSV, two JSON formats), also HTML output.&lt;/li&gt; 
 &lt;li&gt;No need to install or to configure something. No gems, CPAN, pip or the like.&lt;/li&gt; 
 &lt;li&gt;Works out of the box: Linux, MacOS, FreeBSD, NetBSD, WSL2, MSYS2/Cygwin, OpenBSD needs bash.&lt;/li&gt; 
 &lt;li&gt;A Dockerfile is provided, there&#39;s also an official container build @ dockerhub and GHCR.&lt;/li&gt; 
 &lt;li&gt;Flexibility: You can test any SSL/TLS enabled and STARTTLS service, not only web servers at port 443.&lt;/li&gt; 
 &lt;li&gt;Toolbox: Several command line options help you to run &lt;em&gt;your&lt;/em&gt; test and configure &lt;em&gt;your&lt;/em&gt; output.&lt;/li&gt; 
 &lt;li&gt;Reliability: features are tested thoroughly.&lt;/li&gt; 
 &lt;li&gt;Privacy: It&#39;s only you who sees the result, not a third party.&lt;/li&gt; 
 &lt;li&gt;Freedom: It&#39;s 100% open source. You can look at the code, see what&#39;s going on.&lt;/li&gt; 
 &lt;li&gt;The development is free and open @ GitHub and participation is welcome.&lt;/li&gt; 
 &lt;li&gt;Unit tests ensure maturity (output is consistent, JSON is valid, runs under Linux+MacOS etc)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;This software is free. You can use it under the terms of GPLv2, see LICENSE.&lt;/p&gt; 
&lt;p&gt;Attribution is important for the future of this project -- also in the internet. Thus if you&#39;re offering a scanner based on testssl.sh as a public and/or paid service in the internet you are strongly encouraged to mention to your audience that you&#39;re using this program and where to get this program from. That helps us to get bugfixes, other feedback and more contributions.&lt;/p&gt; 
&lt;h3&gt;Compatibility&lt;/h3&gt; 
&lt;p&gt;Testssl.sh is working on every Linux/BSD distribution and MacOS out of the box. Latest by 2.9dev most of the limitations of disabled features from the openssl client are gone due to bash-socket-based checks. An old OpenSSL-bad version is supplied but but you can also use any LibreSSL or OpenSSL version. testssl.sh also works on other unixoid systems out of the box, supposed they have &lt;code&gt;/bin/bash&lt;/code&gt; &amp;gt;= version 3.2 and standard tools like sed and awk installed. An implicit (silent) check for binaries is done when you start testssl.sh . System V needs probably to have GNU grep installed. Windows (using MSYS2, Cygwin or WSL) work too.&lt;/p&gt; 
&lt;p&gt;Update notifications can be found at &lt;a href=&quot;https://github.com/testssl/testssl.sh&quot;&gt;github&lt;/a&gt; or most important ones @ &lt;a href=&quot;https://infosec.exchange/@testssl&quot;&gt;mastodon&lt;/a&gt; or &lt;a href=&quot;https://bsky.app/profile/testssl.bsky.social&quot;&gt;bluesky&lt;/a&gt;. &lt;a href=&quot;https://twitter.com/drwetter&quot;&gt;twitter&lt;/a&gt; is not being used anymore.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;You can download testssl.sh branch 3.3dev just by cloning this git repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/testssl/testssl.sh.git --branch 3.3dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;3.3dev is the latest development branch which evolved from 3.2 stable. We&#39;re trying not to do big experiments in the dev branch, however the point of development is that there will be changes and changes might need a bit time to mature.&lt;/p&gt; 
&lt;h4&gt;Docker&lt;/h4&gt; 
&lt;p&gt;Testssl.sh has minimal requirements. As stated you don&#39;t have to install or build anything. You can just run it from the pulled/cloned directory. Still if you don&#39;t want to pull the GitHub repo to your directory of choice you can pull a container from dockerhub and run it:&lt;/p&gt; 
&lt;!--

#FIXME: 3.3dev @ dockerhib to be created

```
docker run --rm -ti  drwetter/testssl.sh &lt;your_cmd_line&gt;
```

or from GHCR (GitHub Container Registry which supports more platforms: linux/amd64, linux/386, linux/arm64, linux/arm/v7, linux/arm/v6, linux/ppc64le):

--&gt; 
&lt;pre&gt;&lt;code&gt;docker run --rm -it ghcr.io/testssl/testssl.sh &amp;lt;your_cmd_line&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or if you have cloned this repo you also can just &lt;code&gt;cd&lt;/code&gt; to the INSTALLDIR and run&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker build . -t imagefoo &amp;amp;&amp;amp; docker run --rm -t imagefoo testssl.net
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more please consult &lt;a href=&quot;https://github.com/testssl/testssl.sh/raw/3.3dev/Dockerfile.md&quot;&gt;Dockerfile.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;No Warranty&lt;/h3&gt; 
&lt;p&gt;Usage of the program is without any warranty. Use it at your own risk.&lt;/p&gt; 
&lt;p&gt;Testssl.sh is intended to be used as a standalone CLI tool. While we tried to apply best practise security measures and sanitize external input, we can&#39;t guarantee that the program is without any vulnerabilities. Running as a web service may pose security risks and you&#39;re advised to apply additional security measures. Validate input from the user and from all services which are queried.&lt;/p&gt; 
&lt;h3&gt;Status&lt;/h3&gt; 
&lt;p&gt;Given the current manpower we only support n-1 versions. You&#39;re looking at the 3.3.dev branch where further development takes place before 3.4 becomes the stable version and 3.2 becomes old-stable. If you are hestitant with respect to changes, you need to use 3.2. The version 3.0.10 was the last one, there will not be any updates.&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;.. it is there for reading. Please do so :-) -- at least before asking questions. See man page in groff, html and markdown format in &lt;code&gt;~/doc/&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://testssl.sh/&quot;&gt;https://testssl.sh/&lt;/a&gt; will help to get you started.&lt;/li&gt; 
 &lt;li&gt;There&#39;s also an &lt;a href=&quot;https://deepwiki.com/testssl/testssl.sh&quot;&gt;AI generated doc&lt;/a&gt;, see also below.&lt;/li&gt; 
 &lt;li&gt;Will Hunt provides a longer &lt;a href=&quot;https://www.4armed.com/blog/doing-your-own-ssl-tls-testing/&quot;&gt;description&lt;/a&gt; for an older version (2.8), including useful background information.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;A lot of contributors already helped to push the project where it currently is, see &lt;a href=&quot;https://github.com/testssl/testssl.sh/raw/3.2/CREDITS.md&quot;&gt;CREDITS.md&lt;/a&gt;. Your contribution would be also welcome! There&#39;s an &lt;a href=&quot;https://github.com/testssl/testssl.sh/issues&quot;&gt;issue list&lt;/a&gt;. To get started look for issues which are labeled as &lt;a href=&quot;https://github.com/testssl/testssl.sh/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;good first issue&lt;/a&gt;, &lt;a href=&quot;https://github.com/testssl/testssl.sh/issues?q=is%3Aissue+is%3Aopen+label%3A%22for+grabs%22&quot;&gt;for grabs&lt;/a&gt; or &lt;a href=&quot;https://github.com/testssl/testssl.sh/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;help wanted&lt;/a&gt;. The latter is more advanced. You can also lookout for &lt;a href=&quot;https://github.com/testssl/testssl.sh/issues?q=is%3Aissue%20state%3Aopen%20label%3Adocumentation&quot;&gt;documentation issues&lt;/a&gt;, or you can help with &lt;a href=&quot;https://github.com/testssl/testssl.sh/issues?q=is%3Aissue%20state%3Aopen%20label%3A%22unit%20test%22&quot;&gt;unit testing&lt;/a&gt; or improving github actions.&lt;/p&gt; 
&lt;p&gt;It is recommended to read &lt;a href=&quot;https://github.com/testssl/testssl.sh/raw/3.2/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; and please also have a look at he &lt;a href=&quot;https://github.com/testssl/testssl.sh/raw/3.2/Coding_Convention.md&quot;&gt;Coding Convention&lt;/a&gt;. Before you start writing PRs with hundreds of lines, better create an issue first.&lt;/p&gt; 
&lt;p&gt;In general there&#39;s also some maintenance burden, like maintaining handshakes and CA stores etc. . If you believe you can contribute and be responsible to one of those maintenance task, please speak up. That would free resources that we could use for development.&lt;/p&gt; 
&lt;h3&gt;Bug reports&lt;/h3&gt; 
&lt;p&gt;Bug reports are important. It makes this project more robust.&lt;/p&gt; 
&lt;p&gt;Please file bugs in the issue tracker @ GitHub. Do not forget to provide detailed information, see the template for issues, and further details @ &lt;a href=&quot;https://github.com/testssl/testssl.sh/wiki/Bug-reporting&quot;&gt;https://github.com/testssl/testssl.sh/wiki/Bug-reporting&lt;/a&gt;. Nobody can read your thoughts -- yet. And only agencies your screen ;-)&lt;/p&gt; 
&lt;p&gt;You can also debug yourself, see &lt;a href=&quot;https://github.com/testssl/testssl.sh/wiki/Findings-and-HowTo-Fix-them&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;External/related projects&lt;/h3&gt; 
&lt;p&gt;Please address questions not specifically to the code of testssl.sh to the respective projects below.&lt;/p&gt; 
&lt;h4&gt;AI powered docs @ DeepWiki&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://deepwiki.com/testssl/testssl.sh&quot;&gt;https://deepwiki.com/testssl/testssl.sh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Web frontend&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/johannesschaefer/webnettools&quot;&gt;https://github.com/johannesschaefer/webnettools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TKCERT/testssl.sh-webfrontend&quot;&gt;https://github.com/TKCERT/testssl.sh-webfrontend&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Mass scanner w parallel scans and elastic searching the results&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TKCERT/testssl.sh-masscan&quot;&gt;https://github.com/TKCERT/testssl.sh-masscan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Privacy checker using testssl.sh&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://privacyscore.org&quot;&gt;https://privacyscore.org&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Nagios / Icinga Plugins&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dnmvisser/nagios-testssl&quot;&gt;https://github.com/dnmvisser/nagios-testssl&lt;/a&gt; (Python 3)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitgud.malvager.net/Wazakindjes/icinga2_plugins/src/master/check_testssl.sh&quot;&gt;https://gitgud.malvager.net/Wazakindjes/icinga2_plugins/src/master/check_testssl.sh&lt;/a&gt; (Shell)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;pentest2xlsx: generate Excel sheets from CSV&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AresS31/pentest2xlsx&quot;&gt;https://github.com/AresS31/pentest2xlsx&lt;/a&gt; (python)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Brew package&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;see &lt;a href=&quot;https://github.com/testssl/testssl.sh/issues/233&quot;&gt;#233&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/homebrew&quot;&gt;https://github.com/Homebrew/homebrew&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Daemon for batch execution of testssl.sh command files&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bitsofinfo/testssl.sh-processor&quot;&gt;https://github.com/bitsofinfo/testssl.sh-processor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Daemon for batch processing of testssl.sh JSON result files for sending Slack alerts, reactive copying etc&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bitsofinfo/testssl.sh-alerts&quot;&gt;https://github.com/bitsofinfo/testssl.sh-alerts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;GitHub Actions&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marketplace/actions/testssl-sh-scan&quot;&gt;https://github.com/marketplace/actions/testssl-sh-scan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>d3/d3</title>
      <link>https://github.com/d3/d3</link>
      <description>&lt;p&gt;Bring data to life with SVG, Canvas and HTML. 📊📈🎉&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;D3: Data-Driven Documents&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://d3js.org&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/d3/d3/main/docs/public/logo.svg?sanitize=true&quot; width=&quot;256&quot; height=&quot;256&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;D3&lt;/strong&gt; (or &lt;strong&gt;D3.js&lt;/strong&gt;) is a free, open-source JavaScript library for visualizing data. Its low-level approach built on web standards offers unparalleled flexibility in authoring dynamic, data-driven graphics. For more than a decade D3 has powered groundbreaking and award-winning visualizations, become a foundational building block of higher-level chart libraries, and fostered a vibrant community of data practitioners around the world.&lt;/p&gt; 
&lt;a href=&quot;https://observablehq.observablehq.cloud/oss-analytics/@d3/d3&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://observablehq.observablehq.cloud/oss-analytics/d3/downloads-dark.svg&quot; /&gt; 
  &lt;img alt=&quot;Daily downloads of Observable Framework&quot; src=&quot;https://observablehq.observablehq.cloud/oss-analytics/d3/downloads.svg?sanitize=true&quot; /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;p&gt;&lt;sub&gt;Daily downloads of D3 · &lt;a href=&quot;https://observablehq.observablehq.cloud/oss-analytics/&quot;&gt;oss-analytics&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://d3js.org&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://observablehq.com/@d3/gallery&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/d3/d3/releases&quot;&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://d3js.org/community&quot;&gt;Getting help&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ROCm/ROCm</title>
      <link>https://github.com/ROCm/ROCm</link>
      <description>&lt;p&gt;AMD ROCm™ Software - GitHub Home&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AMD ROCm Software&lt;/h1&gt; 
&lt;p&gt;ROCm is an open-source stack, composed primarily of open-source software, designed for graphics processing unit (GPU) computation. ROCm consists of a collection of drivers, development tools, and APIs that enable GPU programming from low-level kernel to end-user applications.&lt;/p&gt; 
&lt;p&gt;With ROCm, you can customize your GPU software to meet your specific needs. You can develop, collaborate, test, and deploy your applications in a free, open source, integrated, and secure software ecosystem. ROCm is particularly well-suited to GPU-accelerated high-performance computing (HPC), artificial intelligence (AI), scientific computing, and computer aided design (CAD).&lt;/p&gt; 
&lt;p&gt;ROCm is powered by AMD’s &lt;a href=&quot;https://github.com/ROCm/HIP&quot;&gt;Heterogeneous-computing Interface for Portability (HIP)&lt;/a&gt;, an open-source software C++ GPU programming environment and its corresponding runtime. HIP allows ROCm developers to create portable applications on different platforms by deploying code on a range of platforms, from dedicated gaming GPUs to exascale HPC clusters.&lt;/p&gt; 
&lt;p&gt;ROCm supports programming models, such as OpenMP and OpenCL, and includes all necessary open source software compilers, debuggers, and libraries. ROCm is fully integrated into machine learning (ML) frameworks, such as PyTorch and TensorFlow.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] A new open source build platform for ROCm is under development at &lt;a href=&quot;https://github.com/ROCm/TheRock&quot;&gt;https://github.com/ROCm/TheRock&lt;/a&gt;, featuring a unified CMake build with bundled dependencies, Windows support, and more.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Getting and Building ROCm from Source&lt;/h2&gt; 
&lt;p&gt;Please use &lt;a href=&quot;https://github.com/ROCm/TheRock&quot;&gt;TheRock&lt;/a&gt; build system to build ROCm from source.&lt;/p&gt; 
&lt;h2&gt;ROCm documentation&lt;/h2&gt; 
&lt;p&gt;This repository contains the &lt;a href=&quot;https://gerrit.googlesource.com/git-repo/+/HEAD/docs/manifest-format.md&quot;&gt;manifest file&lt;/a&gt; for ROCm releases, changelogs, and release information.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;default.xml&lt;/code&gt; file contains information for all repositories and the associated commit used to build the current ROCm release; &lt;code&gt;default.xml&lt;/code&gt; uses the &lt;a href=&quot;https://gerrit.googlesource.com/git-repo/&quot;&gt;Manifest Format repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Source code for our documentation is located in the &lt;code&gt;/docs&lt;/code&gt; folder of most ROCm repositories. The &lt;code&gt;develop&lt;/code&gt; branch of our repositories contains content for the next ROCm release.&lt;/p&gt; 
&lt;p&gt;The ROCm documentation homepage is &lt;a href=&quot;https://rocm.docs.amd.com&quot;&gt;rocm.docs.amd.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For information on how to contribute to the ROCm documentation, see &lt;a href=&quot;https://rocm.docs.amd.com/en/latest/contribute/contributing.html&quot;&gt;Contributing to the ROCm documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Older ROCm releases&lt;/h2&gt; 
&lt;p&gt;For release information for older ROCm releases, refer to the &lt;a href=&quot;https://rocm.docs.amd.com/en/latest/release/versions.html&quot;&gt;ROCm release history&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>acmesh-official/acme.sh</title>
      <link>https://github.com/acmesh-official/acme.sh</link>
      <description>&lt;p&gt;A pure Unix shell script implementing ACME client protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;An ACME Shell script: acme.sh&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;FreeBSD&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;OpenBSD&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;NetBSD&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml/badge.svg?sanitize=true&quot; alt=&quot;MacOS&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml/badge.svg?sanitize=true&quot; alt=&quot;Ubuntu&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml/badge.svg?sanitize=true&quot; alt=&quot;Windows&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml/badge.svg?sanitize=true&quot; alt=&quot;Solaris&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;DragonFlyBSD&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml/badge.svg?sanitize=true&quot; alt=&quot;Omnios&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/workflows/Shellcheck/badge.svg?sanitize=true&quot; alt=&quot;Shellcheck&quot; /&gt; &lt;img src=&quot;https://github.com/acmesh-official/acme.sh/workflows/PebbleStrict/badge.svg?sanitize=true&quot; alt=&quot;PebbleStrict&quot; /&gt; &lt;img src=&quot;https://github.com/acmesh-official/acme.sh/workflows/Build%20DockerHub/badge.svg?sanitize=true&quot; alt=&quot;DockerHub&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/acmesh&quot; alt=&quot;Financial Contributors on Open Collective&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/all/badge.svg?label=financial+contributors&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/acme-sh/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/acme-sh/Lobby.svg?sanitize=true&quot; alt=&quot;Join the chat at https://gitter.im/acme-sh/Lobby&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/neilpang/acme.sh&quot; title=&quot;Click to view the image on Docker Hub&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/stars/neilpang/acme.sh.svg?sanitize=true&quot; alt=&quot;Docker stars&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/neilpang/acme.sh&quot; title=&quot;Click to view the image on Docker Hub&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/neilpang/acme.sh.svg?sanitize=true&quot; alt=&quot;Docker pulls&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An ACME protocol client written purely in Shell (Unix shell) language.&lt;/li&gt; 
 &lt;li&gt;Full ACME protocol implementation.&lt;/li&gt; 
 &lt;li&gt;Support ECDSA certs&lt;/li&gt; 
 &lt;li&gt;Support SAN and wildcard certs&lt;/li&gt; 
 &lt;li&gt;Simple, powerful and very easy to use. You only need 3 minutes to learn it.&lt;/li&gt; 
 &lt;li&gt;Bash, dash and sh compatible.&lt;/li&gt; 
 &lt;li&gt;Purely written in Shell with no dependencies on python.&lt;/li&gt; 
 &lt;li&gt;Just one script to issue, renew and install your certificates automatically.&lt;/li&gt; 
 &lt;li&gt;DOES NOT require &lt;code&gt;root/sudoer&lt;/code&gt; access.&lt;/li&gt; 
 &lt;li&gt;Docker ready&lt;/li&gt; 
 &lt;li&gt;IPv6 ready&lt;/li&gt; 
 &lt;li&gt;Cron job notifications for renewal or error etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It&#39;s probably the &lt;code&gt;easiest &amp;amp; smartest&lt;/code&gt; shell script to automatically issue &amp;amp; renew the free certificates.&lt;/p&gt; 
&lt;p&gt;Wiki: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For Docker Fans: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Run-acme.sh-in-docker&quot;&gt;acme.sh &lt;span&gt;💕&lt;/span&gt; Docker &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Twitter: &lt;a href=&quot;https://twitter.com/neilpangxa&quot;&gt;@neilpangxa&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E&quot;&gt;中文说明&lt;/a&gt;&lt;/h1&gt; 
&lt;h1&gt;Who:&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.crashed.org/letsencrypt-in-freebsd-org/&quot;&gt;FreeBSD.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://ruby-china.org/topics/31983&quot;&gt;ruby-china.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pve.proxmox.com/wiki/Certificate_Management&quot;&gt;Proxmox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pfsense/FreeBSD-ports/pull/89&quot;&gt;pfsense&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.loadbalancer.org/blog/loadbalancer-org-with-lets-encrypt-quick-and-dirty&quot;&gt;Loadbalancer.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://meta.discourse.org/t/setting-up-lets-encrypt/40709&quot;&gt;discourse.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://centminmod.com/letsencrypt-acmetool-https.html&quot;&gt;Centminmod&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forum.splynx.com/t/free-ssl-cert-for-splynx-lets-encrypt/297&quot;&gt;splynx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/opnsense/plugins/tree/master/security/acme-client/src/opnsense/scripts/OPNsense/AcmeClient&quot;&gt;opnsense.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://control-webpanel.com&quot;&gt;CentOS Web Panel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lnmp.org/&quot;&gt;lnmp.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Blogs-and-tutorials&quot;&gt;more...&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Tested OS&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;NO&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/MacOS.yml/badge.svg?sanitize=true&quot; alt=&quot;MacOS&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mac OSX&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Windows.yml/badge.svg?sanitize=true&quot; alt=&quot;Windows&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Windows (cygwin with curl, openssl and crontab included)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/FreeBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;FreeBSD&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;FreeBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Solaris.yml/badge.svg?sanitize=true&quot; alt=&quot;Solaris&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Solaris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Ubuntu.yml/badge.svg?sanitize=true&quot; alt=&quot;Ubuntu&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;NA&lt;/td&gt; 
   &lt;td&gt;pfsense&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/OpenBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;OpenBSD&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;OpenBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/NetBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;NetBSD&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;NetBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/DragonFlyBSD.yml/badge.svg?sanitize=true&quot; alt=&quot;DragonFlyBSD&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;DragonFlyBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Omnios.yml/badge.svg?sanitize=true&quot; alt=&quot;Omnios&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Omnios&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Debian&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;CentOS&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;openSUSE&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Alpine Linux (with curl)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Archlinux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;fedora&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Kali Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Oracle Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mageia&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Gentoo Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml&quot;&gt;&lt;img src=&quot;https://github.com/acmesh-official/acme.sh/actions/workflows/Linux.yml/badge.svg?sanitize=true&quot; alt=&quot;Linux&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ClearLinux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td&gt;-----&lt;/td&gt; 
   &lt;td&gt;Cloud Linux &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/issues/111&quot;&gt;https://github.com/acmesh-official/acme.sh/issues/111&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td&gt;-----&lt;/td&gt; 
   &lt;td&gt;OpenWRT: Tested and working. See &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-run-on-OpenWRT&quot;&gt;wiki page&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/acmesh-official/letest#here-are-the-latest-status&quot;&gt;&lt;img src=&quot;https://acmesh-official.github.io/acmetest/status/proxmox.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Proxmox: See Proxmox VE Wiki. Version &lt;a href=&quot;https://pve.proxmox.com/wiki/HTTPS_Certificate_Configuration_(Version_4.x,_5.0_and_5.1)#Let.27s_Encrypt_using_acme.sh&quot;&gt;4.x, 5.0, 5.1&lt;/a&gt;, version &lt;a href=&quot;https://pve.proxmox.com/wiki/Certificate_Management&quot;&gt;5.2 and up&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Check our &lt;a href=&quot;https://github.com/acmesh-official/acmetest&quot;&gt;testing project&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acmetest&quot;&gt;https://github.com/acmesh-official/acmetest&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Supported CA&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA&quot;&gt;ZeroSSL.com CA&lt;/a&gt;(default)&lt;/li&gt; 
 &lt;li&gt;Letsencrypt.org CA&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/SSL.com-CA&quot;&gt;SSL.com CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Google-Public-CA&quot;&gt;Google.com Public CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/letsencrypt/pebble&quot;&gt;Pebble strict Mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Any other &lt;a href=&quot;https://tools.ietf.org/html/rfc8555&quot;&gt;RFC8555&lt;/a&gt;-compliant CA&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Supported modes&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Webroot mode&lt;/li&gt; 
 &lt;li&gt;Standalone mode&lt;/li&gt; 
 &lt;li&gt;Standalone tls-alpn mode&lt;/li&gt; 
 &lt;li&gt;Apache mode&lt;/li&gt; 
 &lt;li&gt;Nginx mode&lt;/li&gt; 
 &lt;li&gt;DNS mode&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/DNS-alias-mode&quot;&gt;DNS alias mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Stateless-Mode&quot;&gt;Stateless mode&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;1. How to install&lt;/h1&gt; 
&lt;h3&gt;1. Install online&lt;/h3&gt; 
&lt;p&gt;Check this project: &lt;a href=&quot;https://github.com/acmesh-official/get.acme.sh&quot;&gt;https://github.com/acmesh-official/get.acme.sh&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl https://get.acme.sh | sh -s email=my@example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;wget -O -  https://get.acme.sh | sh -s email=my@example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Or, Install from git&lt;/h3&gt; 
&lt;p&gt;Clone this project and launch installation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/acmesh-official/acme.sh.git
cd ./acme.sh
./acme.sh --install -m my@example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You &lt;code&gt;don&#39;t have to be root&lt;/code&gt; then, although &lt;code&gt;it is recommended&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Advanced Installation: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-install&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-install&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The installer will perform 3 actions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create and copy &lt;code&gt;acme.sh&lt;/code&gt; to your home dir (&lt;code&gt;$HOME&lt;/code&gt;): &lt;code&gt;~/.acme.sh/&lt;/code&gt;. All certs will be placed in this folder too.&lt;/li&gt; 
 &lt;li&gt;Create alias for: &lt;code&gt;acme.sh=~/.acme.sh/acme.sh&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Create daily cron job to check and renew the certs if needed.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Cron entry example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;0 0 * * * &quot;/home/user/.acme.sh&quot;/acme.sh --cron --home &quot;/home/user/.acme.sh&quot; &amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After the installation, you must close the current terminal and reopen it to make the alias take effect.&lt;/p&gt; 
&lt;p&gt;Ok, you are ready to issue certs now.&lt;/p&gt; 
&lt;p&gt;Show help message:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;root@v1:~# acme.sh -h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;2. Just issue a cert&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt; Single domain.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -d example.com -w /home/wwwroot/example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -d example.com -w /home/username/public_html
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -d example.com -w /var/www/html
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt; Multiple domains in the same cert.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -d example.com -d www.example.com -d cp.example.com -w /home/wwwroot/example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The parameter &lt;code&gt;/home/wwwroot/example.com&lt;/code&gt; or &lt;code&gt;/home/username/public_html&lt;/code&gt; or &lt;code&gt;/var/www/html&lt;/code&gt; is the web root folder where you host your website files. You &lt;strong&gt;MUST&lt;/strong&gt; have &lt;code&gt;write access&lt;/code&gt; to this folder.&lt;/p&gt; 
&lt;p&gt;Second argument &lt;strong&gt;&quot;example.com&quot;&lt;/strong&gt; is the main domain you want to issue the cert for. You must have at least one domain there.&lt;/p&gt; 
&lt;p&gt;You must point and bind all the domains to the same webroot dir: &lt;code&gt;/home/wwwroot/example.com&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The certs will be placed in &lt;code&gt;~/.acme.sh/example.com/&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The certs will be renewed automatically every &lt;strong&gt;60&lt;/strong&gt; days.&lt;/p&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;3. Install the cert to Apache/Nginx etc.&lt;/h1&gt; 
&lt;p&gt;After the cert is generated, you probably want to install/copy the cert to your Apache/Nginx or other servers. You &lt;strong&gt;MUST&lt;/strong&gt; use this command to copy the certs to the target files, &lt;strong&gt;DO NOT&lt;/strong&gt; use the certs files in &lt;strong&gt;~/.acme.sh/&lt;/strong&gt; folder, they are for internal use only, the folder structure may change in the future.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Apache&lt;/strong&gt; example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --install-cert -d example.com \
--cert-file      /path/to/certfile/in/apache/cert.pem  \
--key-file       /path/to/keyfile/in/apache/key.pem  \
--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \
--reloadcmd     &quot;service apache2 force-reload&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Nginx&lt;/strong&gt; example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --install-cert -d example.com \
--key-file       /path/to/keyfile/in/nginx/key.pem  \
--fullchain-file /path/to/fullchain/nginx/cert.pem \
--reloadcmd     &quot;service nginx force-reload&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Only the domain is required, all the other parameters are optional.&lt;/p&gt; 
&lt;p&gt;The ownership and permission info of existing files are preserved. You can pre-create the files to define the ownership and permission.&lt;/p&gt; 
&lt;p&gt;Install/copy the cert/key to the production Apache or Nginx path.&lt;/p&gt; 
&lt;p&gt;The cert will be renewed every &lt;strong&gt;60&lt;/strong&gt; days by default (which is configurable). Once the cert is renewed, the Apache/Nginx service will be reloaded automatically by the command: &lt;code&gt;service apache2 force-reload&lt;/code&gt; or &lt;code&gt;service nginx force-reload&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please take care: The reloadcmd is very important. The cert can be automatically renewed, but, without a correct &#39;reloadcmd&#39; the cert may not be flushed to your server(like nginx or apache), then your website will not be able to show renewed cert in 60 days.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;4. Use Standalone server to issue cert&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer or have permission to listen on port 80 (TCP))&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Port &lt;code&gt;80&lt;/code&gt; (TCP) &lt;strong&gt;MUST&lt;/strong&gt; be free to listen on, otherwise you will be prompted to free it and try again.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue --standalone -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;5. Use Standalone ssl server to issue cert&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer or have permission to listen on port 443 (TCP))&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Port &lt;code&gt;443&lt;/code&gt; (TCP) &lt;strong&gt;MUST&lt;/strong&gt; be free to listen on, otherwise you will be prompted to free it and try again.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue --alpn -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;6. Use Apache mode&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer, since it is required to interact with Apache server)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you are running a web server, it is recommended to use the &lt;code&gt;Webroot mode&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Particularly, if you are running an Apache server, you can use Apache mode instead. This mode doesn&#39;t write any files to your web root folder.&lt;/p&gt; 
&lt;p&gt;Just set string &quot;apache&quot; as the second argument and it will force use of apache plugin automatically.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --issue --apache -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;This apache mode is only to issue the cert, it will not change your apache config files. You will need to configure your website config files to use the cert by yourself. We don&#39;t want to mess with your apache server, don&#39;t worry.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;7. Use Nginx mode&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;(requires you to be root/sudoer, since it is required to interact with Nginx server)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you are running a web server, it is recommended to use the &lt;code&gt;Webroot mode&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Particularly, if you are running an nginx server, you can use nginx mode instead. This mode doesn&#39;t write any files to your web root folder.&lt;/p&gt; 
&lt;p&gt;Just set string &quot;nginx&quot; as the second argument.&lt;/p&gt; 
&lt;p&gt;It will configure nginx server automatically to verify the domain and then restore the nginx config to the original version.&lt;/p&gt; 
&lt;p&gt;So, the config is not changed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --issue --nginx -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;This nginx mode is only to issue the cert, it will not change your nginx config files. You will need to configure your website config files to use the cert by yourself. We don&#39;t want to mess with your nginx server, don&#39;t worry.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;More examples: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;8. Automatic DNS API integration&lt;/h1&gt; 
&lt;p&gt;If your DNS provider supports API access, we can use that API to automatically issue the certs.&lt;/p&gt; 
&lt;p&gt;You don&#39;t have to do anything manually!&lt;/p&gt; 
&lt;h3&gt;Currently acme.sh supports most of the dns providers:&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;9. Use DNS manual mode:&lt;/h1&gt; 
&lt;p&gt;See: &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/dns-manual-mode&lt;/a&gt; first.&lt;/p&gt; 
&lt;p&gt;If your dns provider doesn&#39;t support any api access, you can add the txt record by hand.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue --dns -d example.com -d www.example.com -d cp.example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should get an output like below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Add the following txt record:
Domain:_acme-challenge.example.com
Txt value:9ihDbjYfTExAYeDs4DBUeuTo18KBzwvTEjUnSwd32-c

Add the following txt record:
Domain:_acme-challenge.www.example.com
Txt value:9ihDbjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Please add those txt records to the domains. Waiting for the dns to take effect.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then just rerun with &lt;code&gt;renew&lt;/code&gt; argument:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --renew -d example.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ok, it&#39;s done.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Take care, this is dns manual mode, it can not be renewed automatically. you will have to add a new txt record to your domain by your hand when you renew your cert.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please use dns api mode instead.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;10. Issue ECC certificates&lt;/h1&gt; 
&lt;p&gt;Just set the &lt;code&gt;keylength&lt;/code&gt; parameter with a prefix &lt;code&gt;ec-&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;h3&gt;Single domain ECC certificate&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -w /home/wwwroot/example.com -d example.com --keylength ec-256
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SAN multi domain ECC certificate&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;acme.sh --issue -w /home/wwwroot/example.com -d example.com -d www.example.com --keylength ec-256
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please look at the &lt;code&gt;keylength&lt;/code&gt; parameter above.&lt;/p&gt; 
&lt;p&gt;Valid values are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ec-256 (prime256v1, &quot;ECDSA P-256&quot;, which is the default key type)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ec-384 (secp384r1, &quot;ECDSA P-384&quot;)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ec-521 (secp521r1, &quot;ECDSA P-521&quot;, which is not supported by Let&#39;s Encrypt yet.)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2048 (RSA2048)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;3072 (RSA3072)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4096 (RSA4096)&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;11. Issue Wildcard certificates&lt;/h1&gt; 
&lt;p&gt;It&#39;s simple, just give a wildcard domain as the &lt;code&gt;-d&lt;/code&gt; parameter.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh  --issue -d example.com  -d &#39;*.example.com&#39;  --dns dns_cf
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;12. How to renew the certs&lt;/h1&gt; 
&lt;p&gt;No, you don&#39;t need to renew the certs manually. All the certs will be renewed automatically every &lt;strong&gt;60&lt;/strong&gt; days.&lt;/p&gt; 
&lt;p&gt;However, you can also force to renew a cert:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --renew -d example.com --force
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, for ECC cert:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --renew -d example.com --force --ecc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;13. How to stop cert renewal&lt;/h1&gt; 
&lt;p&gt;To stop renewal of a cert, you can execute the following to remove the cert from the renewal list:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --remove -d example.com [--ecc]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The cert/key file is not removed from the disk.&lt;/p&gt; 
&lt;p&gt;You can remove the respective directory (e.g. &lt;code&gt;~/.acme.sh/example.com&lt;/code&gt;) by yourself.&lt;/p&gt; 
&lt;h1&gt;14. How to upgrade &lt;code&gt;acme.sh&lt;/code&gt;&lt;/h1&gt; 
&lt;p&gt;acme.sh is in constant development, so it&#39;s strongly recommended to use the latest code.&lt;/p&gt; 
&lt;p&gt;You can update acme.sh to the latest code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --upgrade
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also enable auto upgrade:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --upgrade --auto-upgrade
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then &lt;strong&gt;acme.sh&lt;/strong&gt; will be kept up to date automatically.&lt;/p&gt; 
&lt;p&gt;Disable auto upgrade:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;acme.sh --upgrade --auto-upgrade 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;15. Issue a cert from an existing CSR&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Issue-a-cert-from-existing-CSR&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/Issue-a-cert-from-existing-CSR&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;16. Send notifications in cronjob&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/notify&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/notify&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;17. Under the Hood&lt;/h1&gt; 
&lt;p&gt;Speak ACME language using shell, directly to &quot;Let&#39;s Encrypt&quot;.&lt;/p&gt; 
&lt;p&gt;TODO:&lt;/p&gt; 
&lt;h1&gt;18. Acknowledgments&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;Acme-tiny: &lt;a href=&quot;https://github.com/diafygi/acme-tiny&quot;&gt;https://github.com/diafygi/acme-tiny&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ACME protocol: &lt;a href=&quot;https://github.com/ietf-wg-acme/acme&quot;&gt;https://github.com/ietf-wg-acme/acme&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;h3&gt;Code Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/contributors.svg?width=890&amp;amp;button=false&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Financial Contributors&lt;/h3&gt; 
&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href=&quot;https://opencollective.com/acmesh/contribute&quot;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;h4&gt;Individuals&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/acmesh&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/individuals.svg?width=890&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Organizations&lt;/h4&gt; 
&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href=&quot;https://opencollective.com/acmesh/contribute&quot;&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/acmesh/organization/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/0/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/1/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/2/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/3/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/4/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/5/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/6/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/7/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/8/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/acmesh/organization/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/acmesh/organization/9/avatar.svg?sanitize=true&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;19. License &amp;amp; Others&lt;/h1&gt; 
&lt;p&gt;License is GPLv3&lt;/p&gt; 
&lt;p&gt;Please Star and Fork me.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/issues&quot;&gt;Issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/acmesh-official/acme.sh/pulls&quot;&gt;pull requests&lt;/a&gt; are welcome.&lt;/p&gt; 
&lt;h1&gt;20. Donate&lt;/h1&gt; 
&lt;p&gt;Your donation makes &lt;strong&gt;acme.sh&lt;/strong&gt; better:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;PayPal/Alipay(支付宝)/Wechat(微信): &lt;a href=&quot;https://donate.acme.sh/&quot;&gt;https://donate.acme.sh/&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/Donate-list&quot;&gt;Donate List&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kodekloudhub/certified-kubernetes-administrator-course</title>
      <link>https://github.com/kodekloudhub/certified-kubernetes-administrator-course</link>
      <description>&lt;p&gt;Certified Kubernetes Administrator - CKA Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Certified Kubernetes Administrator (CKA) Course&lt;/h1&gt; 
&lt;p&gt;These are notes from the &lt;a href=&quot;https://kodekloud.com/courses/certified-kubernetes-administrator-cka/&quot;&gt;Certified Kubernetes Administrator Course&lt;/a&gt; hosted on KodeKloud.&lt;/p&gt; 
&lt;h1&gt;Sections&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/01-Introduction&quot;&gt;01-Introduction&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/01-Introduction/01-Course-Introduction.md&quot;&gt;01-Course-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/01-Introduction/02-Certification.md&quot;&gt;02-Certification&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts&quot;&gt;02-Core-Concepts&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/01-Core-Concepts-Section-Introduction.md&quot;&gt;01-Core-Concepts-Section-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/02-Cluster-Architecture.md&quot;&gt;02-Cluster-Architecture&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/03-Docker-vs-ContainerD.md&quot;&gt;03-Docker-vs-ContainerD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/04-ETCD-For-Beginners.md&quot;&gt;04-ETCD-For-Beginners&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/05-ETCD-in-Kubernetes.md&quot;&gt;05-ETCD-in-Kubernetes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/06-Kube-API-Server.md&quot;&gt;06-Kube-API-Server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/07-Kube-Controller-Manager.md&quot;&gt;07-Kube-Controller-Manager&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/08-Kube-Scheduler.md&quot;&gt;08-Kube-Scheduler&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/09-Kubelet.md&quot;&gt;09-Kubelet&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/10-Kube-Proxy.md&quot;&gt;10-Kube-Proxy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/11-Pods.md&quot;&gt;11-Pods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/12-Practice-Test-Introduction.md&quot;&gt;12-Practice-Test-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/13-Practice-Test-PODs.md&quot;&gt;13-Practice-Test-PODs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/14-ReplicaSets.md&quot;&gt;14-ReplicaSets&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/15-Practice-Tests-ReplicaSet.md&quot;&gt;15-Practice-Tests-ReplicaSet&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/16-Deployments.md&quot;&gt;16-Deployments&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/17-Practice-Tests-Deployments.md&quot;&gt;17-Practice-Tests-Deployments&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/18-Namespaces.md&quot;&gt;18-Namespaces&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/19-Practice-Test-Namespaces.md&quot;&gt;19-Practice-Test-Namespaces&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/20-Services.md&quot;&gt;20-Services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/21-Services-ClusterIP.md&quot;&gt;21-Services-ClusterIP&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/22-Practice-Test-Services.md&quot;&gt;22-Practice-Test-Services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/23-Imperative-Commands-with-kubectl.md&quot;&gt;23-Imperative-Commands-with-kubectl&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/24-Practice-Test-Imperative-Commands.md&quot;&gt;24-Practice-Test-Imperative-Commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/02-Core-Concepts/25-Attachments.md&quot;&gt;25-Attachments&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling&quot;&gt;03-Scheduling&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/01-Scheduling-Section-Introduction.md&quot;&gt;01-Scheduling-Section-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/02-Manual-Scheduling.md&quot;&gt;02-Manual-Scheduling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/03-Practice-Test-Manual-Scheduling.md&quot;&gt;03-Practice-Test-Manual-Scheduling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/04-Labels-and-Selectors.md&quot;&gt;04-Labels-and-Selectors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/05-Practice-Test-Labels-and-Selectors.md&quot;&gt;05-Practice-Test-Labels-and-Selectors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/06-Taints-and-Tolerations.md&quot;&gt;06-Taints-and-Tolerations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/07-Practice-Test-Taints-and-Tolerations.md&quot;&gt;07-Practice-Test-Taints-and-Tolerations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/08-Node-Selectors.md&quot;&gt;08-Node-Selectors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/09-Node-Affinity.md&quot;&gt;09-Node-Affinity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/10-Practice-Test-Node-Affinity.md&quot;&gt;10-Practice-Test-Node-Affinity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/11.Taints-and-Tolerations-vs-Node-Affinity.md&quot;&gt;11.Taints-and-Tolerations-vs-Node-Affinity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/12-Resource-Limits.md&quot;&gt;12-Resource-Limits&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/13-Practice-Test-Resource-Limits.md&quot;&gt;13-Practice-Test-Resource-Limits&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/14-DaemonSets.md&quot;&gt;14-DaemonSets&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/15-Practice-Test-DaemonSets.md&quot;&gt;15-Practice-Test-DaemonSets&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/16-Static-Pods.md&quot;&gt;16-Static-Pods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/17-Practice-Test-StaticPods.md&quot;&gt;17-Practice-Test-StaticPods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/18-Multiple-Schedulers.md&quot;&gt;18-Multiple-Schedulers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/19-Practice-Test-Multiple-Schedulers.md&quot;&gt;19-Practice-Test-Multiple-Schedulers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/20-Configuring-Kubernetes-Schedulers.md&quot;&gt;20-Configuring-Kubernetes-Schedulers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/03-Scheduling/21-Download-Presentation-Deck.md&quot;&gt;21-Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring&quot;&gt;04-Logging-and-Monitoring&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring/01-Logging-and-Monitoring-Section-Introduction.md&quot;&gt;01-Logging-and-Monitoring-Section-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring/02-Monitor-Cluster-Components.md&quot;&gt;02-Monitor-Cluster-Components&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring/03-Practice-Test-Monitor-Cluster-Components.md&quot;&gt;03-Practice-Test-Monitor-Cluster-Components&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring/04-Managing-Application-Logs.md&quot;&gt;04-Managing-Application-Logs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring/05-Download-Presentation-Deck.md&quot;&gt;05-Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/04-Logging-and-Monitoring/06-Practice-Test-Managing-Application-Logs.md&quot;&gt;06-Practice-Test-Managing-Application-Logs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management&quot;&gt;05-Application-Lifecycle-Management&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/01-Application-Lifecycle-Management--Section-Introduction.md&quot;&gt;01-Application-Lifecycle-Management--Section-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/02-RollingUpdates-and-Rollback.md&quot;&gt;02-RollingUpdates-and-Rollback&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/03-Practice-Test-RollingUpdates-Rollback.md&quot;&gt;03-Practice-Test-RollingUpdates-Rollback&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/04-Commands-and-Arguments-in-Docker.md&quot;&gt;04-Commands-and-Arguments-in-Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/05-Commands-and-Arguments-in-Kubernetes.md&quot;&gt;05-Commands-and-Arguments-in-Kubernetes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/06-Practice-Test-Commands-and-Arguments.md&quot;&gt;06-Practice-Test-Commands-and-Arguments&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/07.Configure-Environment-Variables-in-Applications.md&quot;&gt;07.Configure-Environment-Variables-in-Applications&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/08-Configure-ConfigMaps-in-Applications.md&quot;&gt;08-Configure-ConfigMaps-in-Applications&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/09-Practice-Test-Env-Variables.md&quot;&gt;09-Practice-Test-Env-Variables&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/10.Secrets.md&quot;&gt;10.Secrets&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/11.Practice-Test-Secrets.md&quot;&gt;11.Practice-Test-Secrets&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/12.Multi-Containers-PODs.md&quot;&gt;12.Multi-Containers-PODs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/13-Practice-Test-Multi-Container-Pods.md&quot;&gt;13-Practice-Test-Multi-Container-Pods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/14-Multi-Container-Pods-Design-Patterns.md&quot;&gt;14-Multi-Container-Pods-Design-Patterns&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/15.Init-Containers.md&quot;&gt;15.Init-Containers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/16-Practice-Test-Init-Containers.md&quot;&gt;16-Practice-Test-Init-Containers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/17.Self-Healing-Applications.md&quot;&gt;17.Self-Healing-Applications&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/05-Application-Lifecycle-Management/18.Download-Presentation-Deck.md&quot;&gt;18.Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance&quot;&gt;06-Cluster-Maintenance&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/01-Cluster-Maintenance-Section-Introduction.md&quot;&gt;01-Cluster-Maintenance-Section-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/02-OS-Upgrades.md&quot;&gt;02-OS-Upgrades&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/03-Practice-Test-OS-Upgrades.md&quot;&gt;03-Practice-Test-OS-Upgrades&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/04-Kubernetes-Software-Versions.md&quot;&gt;04-Kubernetes-Software-Versions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/05-Cluster-Upgrade-Introduction.md&quot;&gt;05-Cluster-Upgrade-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/06-Practice-Test-Cluster-Upgrade-Process.md&quot;&gt;06-Practice-Test-Cluster-Upgrade-Process&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/07-Backup-and-Restore-Methods.md&quot;&gt;07-Backup-and-Restore-Methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/08-Working-With-ETCDCTL.md&quot;&gt;08-Working-With-ETCDCTL&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/09-Practice-Test-Backup-and-Restore-Methods.md&quot;&gt;09-Practice-Test-Backup-and-Restore-Methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/10-Practice-Test-Backup-and-Restore-Methods-2.md&quot;&gt;10-Practice-Test-Backup-and-Restore-Methods 2&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/06-Cluster-Maintenance/11-Download-Presentation-Deck.md&quot;&gt;11-Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security&quot;&gt;07-Security&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/01-Security-Section-Introduction.md&quot;&gt;01-Security-Section-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/02-Kubernetes-Security-Primitives.md&quot;&gt;02-Kubernetes-Security-Primitives&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/03-Authentication.md&quot;&gt;03-Authentication&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/04-TLS-Certificates.md&quot;&gt;04-TLS-Certificates&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/05-TLS-Basics.md&quot;&gt;05-TLS-Basics&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/06-TLS-in-Kubernetes.md&quot;&gt;06-TLS-in-Kubernetes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/07-TLS-in-Kubernetes-Certificate-Creation.md&quot;&gt;07-TLS-in-Kubernetes-Certificate-Creation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/08-View-Certificate-Details.md&quot;&gt;08-View-Certificate-Details&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/09-Certificate-Health-Check-Spreadsheet.md&quot;&gt;09-Certificate-Health-Check-Spreadsheet&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/10-Practice-Test-View-Certificate-Details.md&quot;&gt;10-Practice-Test-View-Certificate-Details&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/11-Certificate-API.md&quot;&gt;11-Certificate-API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/12-Practice-Test-Certificates-API.md&quot;&gt;12-Practice-Test-Certificates-API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/13-kubeconfig.md&quot;&gt;13-kubeconfig&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/14-Practice-Test-KubeConfig.md&quot;&gt;14-Practice-Test-KubeConfig&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/15-API-Groups.md&quot;&gt;15-API-Groups&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/16-Authorization.md&quot;&gt;16-Authorization&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/17-RBAC.md&quot;&gt;17-RBAC&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/18-Practice-Test-RBAC.md&quot;&gt;18-Practice-Test-RBAC&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/19-Cluster-Roles.md&quot;&gt;19-Cluster-Roles&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/20-Practice-Test-Cluster-Roles.md&quot;&gt;20-Practice-Test-Cluster-Roles&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/23-Image-Security.md&quot;&gt;23-Image-Security&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/24-Practice-Test-Image-Security.md&quot;&gt;24-Practice-Test-Image-Security&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/25-Security-Context.md&quot;&gt;25-Security-Context&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/26-Practice-Test-Security-Context.md&quot;&gt;26-Practice-Test-Security-Context&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/27-Network-Policies.md&quot;&gt;27-Network-Policies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/28-Practice-Test-Network-Policies.md&quot;&gt;28-Practice-Test-Network-Policies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/29-kubectx-and-kubens-commands.md&quot;&gt;29-kubectx-and-kubens-commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/07-Security/30-Download-Presentation-Deck.md&quot;&gt;30-Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage&quot;&gt;08-Storage&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/01-Storage-Section-Introduction.md&quot;&gt;01-Storage-Section-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/02-Introduction-to-Docker-Storage.md&quot;&gt;02-Introduction-to-Docker-Storage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/03-Storage-in-Docker.md&quot;&gt;03-Storage-in-Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/04-Volume-Driver-Plugins-in-Docker.md&quot;&gt;04-Volume-Driver-Plugins-in-Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/05-Container.Storage-Interface.md&quot;&gt;05-Container.Storage-Interface&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/06-Volumes.md&quot;&gt;06-Volumes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/07-Persistent-Volumes.md&quot;&gt;07-Persistent-Volumes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/08-Persistent-Volume-Claims.md&quot;&gt;08-Persistent-Volume-Claims&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/09-Using-PVC-in-PODs.md&quot;&gt;09-Using-PVC-in-PODs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/10-Practice-Test-Persistent-Volume-Claims.md&quot;&gt;10-Practice-Test-Persistent-Volume-Claims&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/11-Download-Presentation-Deck.md&quot;&gt;11-Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/12-Storage-Class.md&quot;&gt;12-Storage-Class&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/08-Storage/13-Practice-Test-Storage-Class.md&quot;&gt;13-Practice-Test-Storage-Class&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking&quot;&gt;09-Networking&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/01-Networking-Introduction.md&quot;&gt;01-Networking-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/02-Pre-requisite-Switching-Routing-Gateways.md&quot;&gt;02-Pre-requisite-Switching-Routing-Gateways&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/03-Pre-requisite-DNS.md&quot;&gt;03-Pre-requisite-DNS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/04-Pre-requisite-CoreDNS.md&quot;&gt;04-Pre-requisite-CoreDNS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/05-Pre-requisite-Network-Namespace.md&quot;&gt;05-Pre-requisite-Network-Namespace&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/06-Pre-requisite-Docker-Networking.md&quot;&gt;06-Pre-requisite-Docker-Networking&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/07-Pre-requisite-CNI.md&quot;&gt;07-Pre-requisite-CNI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/08-Cluster-Networking.md&quot;&gt;08-Cluster-Networking&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/09-Practice-Test-Explore-Env.md&quot;&gt;09-Practice-Test-Explore-Env&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/10-Pod-Networking.md&quot;&gt;10-Pod-Networking&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/11-CNI-in-Kubernetes.md&quot;&gt;11-CNI-in-Kubernetes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/12-CNI-weave.md&quot;&gt;12-CNI-weave&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/13-Practice-Test-CNI-weave.md&quot;&gt;13-Practice-Test-CNI-weave&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/14-Practice-Test-Deploy-Network-Solution.md&quot;&gt;14-Practice-Test-Deploy-Network-Solution&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/15-ipam-weave.md&quot;&gt;15-ipam-weave&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/16-Practice-Test-Networking-weave.md&quot;&gt;16-Practice-Test-Networking-weave&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/17-Service-Networking.md&quot;&gt;17-Service-Networking&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/18-Practice-Test-Service-Networking.md&quot;&gt;18-Practice-Test-Service-Networking&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/19-DNS-in-kubernetes.md&quot;&gt;19-DNS-in-kubernetes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/20-CoreDNS-in-Kubernetes.md&quot;&gt;20-CoreDNS-in-Kubernetes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/21-Practice-Test-CoreDNS-in-Kubernetes.md&quot;&gt;21-Practice-Test-CoreDNS-in-Kubernetes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/22-Ingress.md&quot;&gt;22-Ingress&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/23-Ingress-Annotations-and-rewrite-target.md&quot;&gt;23-Ingress-Annotations-and-rewrite-target&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/24-Practice-Test-CKA-Ingress-Net-1.md&quot;&gt;24-Practice-Test-CKA-Ingress-Net-1&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/25-Practice-Test-CKA-Ingress-Net-2.md&quot;&gt;25-Practice-Test-CKA-Ingress-Net-2&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/09-Networking/26-Dowload-Presentation-Deck.md&quot;&gt;26-Dowload-Presentation-Deck&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster&quot;&gt;10-Design-and-Install-Kubernetes-Cluster&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster/01-Designing-a-Kubernetes-Cluster.md&quot;&gt;01-Designing-a-Kubernetes-Cluster&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster/02-Choosing-Kubernetes-Infrastructure.md&quot;&gt;02-Choosing-Kubernetes-Infrastructure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster/03-Configure-High-Availability.md&quot;&gt;03-Configure-High-Availability&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster/04-ETCD-in-HA.md&quot;&gt;04-ETCD-in-HA&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster/05-Important-update-kubernetes-the-hard-way.md&quot;&gt;05-Important-update-k8s-hard-way&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/10-Design-and-Install-Kubernetes-Cluster/06-Download-Presentation-Deck.md&quot;&gt;06-Download-Presentation-Deck&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/11-Install-Kubernetes-the-kubeadm-way&quot;&gt;11-Install-Kubernetes-the-kubeadm-way&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/11-Install-Kubernetes-the-kubeadm-way/01-Introduction-to-Deployment-with-kubeadm.md&quot;&gt;01-Introduction-to-Deployment-with-kubeadm&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/11-Install-Kubernetes-the-kubeadm-way/02-Resources.md&quot;&gt;02-Resources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/11-Install-Kubernetes-the-kubeadm-way/03-Provision-VMs-with-Vagrant.md&quot;&gt;03-Provision-VMs-with-Vagrant&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/11-Install-Kubernetes-the-kubeadm-way/04-Demo-Deployment-with-Kubeadm.md&quot;&gt;04-Demo-Deployment-with-Kubeadm&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/11-Install-Kubernetes-the-kubeadm-way/05-Practice-Test-Deploy-Kubernetes-Cluster-using-Kubeadm.md&quot;&gt;05-Practice-Test-Deploy-Kubernetes-Cluster-using-Kubeadm&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/kubeadm-clusters&quot;&gt;BONUS 1 - Various kubeadm cluster configurations&lt;/a&gt; - Including for Apple M1/M2!&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/managed-clusters/&quot;&gt;BONUS 2 - Installing Managed Clusters in Cloud Playgrounds&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting&quot;&gt;12-Troubleshooting&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/01-Troubelshooting-Section-Introduction.md&quot;&gt;01-Troubelshooting-Section-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/02-Application-Failure.md&quot;&gt;02-Application-Failure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/03-Solution-Application-Failure.md&quot;&gt;03-Solution-Application-Failure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/04-Control-Plane-Failure.md&quot;&gt;04-Control-Plane-Failure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/05-Practice-Test-Control-Plane-Failure.md&quot;&gt;05-Practice-Test-Control-Plane-Failure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/06-Solution-Control-Plane-Failure.md&quot;&gt;06-Solution-Control-Plane-Failure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/07-Worker-Node-Failure.md&quot;&gt;07-Worker-Node-Failure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/08-Practice-Test-Worker-Node-Failure.md&quot;&gt;08-Practice-Test-Worker-Node-Failure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/09-Solution-Worker-Node-Failure.md&quot;&gt;09-Solution-Worker-Node-Failure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/12-Troubleshooting/10-Practice-Test-Troubleshoot-Network.md&quot;&gt;10-Practice-Test-Troubleshoot-Network&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/13-Other-Topics&quot;&gt;13-Other-Topics&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/13-Other-Topics/01-Labs-JSON-PATH.md&quot;&gt;01-Labs-JSON-PATH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/13-Other-Topics/02-Pre-Requisites-JSON-PATH.md&quot;&gt;02-Pre-Requisites-JSON-PATH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/13-Other-Topics/03-Advance-Kubectl-Commands.md&quot;&gt;03-Advance-Kubectl-Commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/13-Other-Topics/04-Practice-Test-Advance-Kubectl-Commands.md&quot;&gt;04-Practice-Test-Advance-Kubectl-Commands&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/14-Lightning-Labs&quot;&gt;14-Lightning-Labs&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/14-Lightning-Labs/01-Lightning-Labs-Introduction.md&quot;&gt;01-Lightning-Labs-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/14-Lightning-Labs/02-Lightning-Lab-1.md&quot;&gt;02-Lightning-Lab-1&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams&quot;&gt;15-Mock-Exams&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams/01-Introduction.md&quot;&gt;01-Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams/02-Mock-Exam-1.md&quot;&gt;02-Mock-Exam-1&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams/03-Mock-Exam-2.md&quot;&gt;03-Mock-Exam-2&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams/04-CKA-MockExam-2-Solution.md&quot;&gt;04-CKA-MockExam-2-Solution&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams/05-Mock-Exam-3.md&quot;&gt;05-Mock-Exam-3&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/15-Mock-Exams/06-CKA-MockExam-3-Solution.md&quot;&gt;06-CKA-MockExam-3-Solution&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/16-Ultimate-Mocks/&quot;&gt;16-Ultimate-Mocks&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/17-tips-and-tricks/&quot;&gt;17-Tips-and-Tricks&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/17-tips-and-tricks/docs/01-server-for-testing-network-policies.md&quot;&gt;01-Server for testing network policies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kodekloudhub/certified-kubernetes-administrator-course/master/docs/17-tips-and-tricks/docs/02-client--for-testing-network-things.md&quot;&gt;02-Client-for-testing-network-things&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>nvm-sh/nvm</title>
      <link>https://github.com/nvm-sh/nvm</link>
      <description>&lt;p&gt;Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions&lt;/p&gt;&lt;hr&gt;&lt;a href=&quot;https://github.com/nvm-sh/logos&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/nvm-sh/logos/HEAD/nvm-logo-white.svg&quot; /&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/nvm-sh/logos/HEAD/nvm-logo-color.svg?sanitize=true&quot; height=&quot;50&quot; alt=&quot;nvm project logo&quot; /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h1&gt;Node Version Manager &lt;a href=&quot;https://app.travis-ci.com/nvm-sh/nvm&quot;&gt;&lt;img src=&quot;https://app.travis-ci.com/nvm-sh/nvm.svg?branch=master&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/nvm-sh/nvm/releases/tag/v0.40.3&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/version-v0.40.3-yellow.svg?sanitize=true&quot; alt=&quot;nvm version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://bestpractices.dev/projects/684&quot;&gt;&lt;img src=&quot;https://bestpractices.dev/projects/684/badge&quot; alt=&quot;CII Best Practices&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;!-- To update this table of contents, ensure you have run `npm install` then `npm run doctoc` --&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#intro&quot;&gt;Intro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-and-updating&quot;&gt;Installing and Updating&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#install--update-script&quot;&gt;Install &amp;amp; Update Script&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#additional-notes&quot;&gt;Additional Notes&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-in-docker&quot;&gt;Installing in Docker&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-in-docker-for-cicd-jobs&quot;&gt;Installing in Docker for CICD-Jobs&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#troubleshooting-on-linux&quot;&gt;Troubleshooting on Linux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#troubleshooting-on-macos&quot;&gt;Troubleshooting on macOS&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#ansible&quot;&gt;Ansible&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#verify-installation&quot;&gt;Verify Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#important-notes&quot;&gt;Important Notes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#git-install&quot;&gt;Git Install&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-install&quot;&gt;Manual Install&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-upgrade&quot;&gt;Manual Upgrade&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage&quot;&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#long-term-support&quot;&gt;Long-term Support&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#migrating-global-packages-while-installing&quot;&gt;Migrating Global Packages While Installing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#default-global-packages-from-file-while-installing&quot;&gt;Default Global Packages From File While Installing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#iojs&quot;&gt;io.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#system-version-of-node&quot;&gt;System Version of Node&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#listing-versions&quot;&gt;Listing Versions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#setting-custom-colors&quot;&gt;Setting Custom Colors&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#persisting-custom-colors&quot;&gt;Persisting custom colors&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#suppressing-colorized-output&quot;&gt;Suppressing colorized output&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#restoring-path&quot;&gt;Restoring PATH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#set-default-node-version&quot;&gt;Set default node version&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#use-a-mirror-of-node-binaries&quot;&gt;Use a mirror of node binaries&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#pass-authorization-header-to-mirror&quot;&gt;Pass Authorization header to mirror&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#nvmrc&quot;&gt;.nvmrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#deeper-shell-integration&quot;&gt;Deeper Shell Integration&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#calling-nvm-use-automatically-in-a-directory-with-a-nvmrc-file&quot;&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#bash&quot;&gt;bash&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#zsh&quot;&gt;zsh&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#fish&quot;&gt;fish&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#running-tests&quot;&gt;Running Tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#environment-variables&quot;&gt;Environment variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#bash-completion&quot;&gt;Bash Completion&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage-1&quot;&gt;Usage&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#compatibility-issues&quot;&gt;Compatibility Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-nvm-on-alpine-linux&quot;&gt;Installing nvm on Alpine Linux&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#alpine-linux-313&quot;&gt;Alpine Linux 3.13+&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#alpine-linux-35---312&quot;&gt;Alpine Linux 3.5 - 3.12&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#uninstalling--removal&quot;&gt;Uninstalling / Removal&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-uninstall&quot;&gt;Manual Uninstall&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#docker-for-development-environment&quot;&gt;Docker For Development Environment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#problems&quot;&gt;Problems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#macos-troubleshooting&quot;&gt;macOS Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#wsl-troubleshooting&quot;&gt;WSL Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#maintainers&quot;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#project-support&quot;&gt;Project Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#enterprise-support&quot;&gt;Enterprise Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#copyright-notice&quot;&gt;Copyright notice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;Intro&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; allows you to quickly install and use different versions of node via the command line.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm use 16
Now using node v16.9.1 (npm v7.21.1)
$ node -v
v16.9.1
$ nvm use 14
Now using node v14.18.0 (npm v6.14.15)
$ node -v
v14.18.0
$ nvm install 12
Now using node v12.22.6 (npm v6.14.5)
$ node -v
v12.22.6
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Simple as that!&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;nvm is a version manager for &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;, designed to be installed per-user, and invoked per-shell. &lt;code&gt;nvm&lt;/code&gt; works on any POSIX-compliant shell (sh, dash, ksh, zsh, bash), in particular on these platforms: unix, macOS, and &lt;a href=&quot;https://github.com/nvm-sh/nvm#important-notes&quot;&gt;windows WSL&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;installation-and-update&quot;&gt;&lt;/a&gt; &lt;a id=&quot;install-script&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installing and Updating&lt;/h2&gt; 
&lt;h3&gt;Install &amp;amp; Update Script&lt;/h3&gt; 
&lt;p&gt;To &lt;strong&gt;install&lt;/strong&gt; or &lt;strong&gt;update&lt;/strong&gt; nvm, you should run the &lt;a href=&quot;https://github.com/nvm-sh/nvm/raw/v0.40.3/install.sh&quot;&gt;install script&lt;/a&gt;. To do that, you may either download and run the script manually, or use the following cURL or Wget command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running either of the above commands downloads a script and runs it. The script clones the nvm repository to &lt;code&gt;~/.nvm&lt;/code&gt;, and attempts to add the source lines from the snippet below to the correct profile file (&lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, or &lt;code&gt;~/.profile&lt;/code&gt;). If you find the install script is updating the wrong profile file, set the &lt;code&gt;$PROFILE&lt;/code&gt; env var to the profile file’s path, and then rerun the installation script.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;profile_snippet&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$([ -z &quot;${XDG_CONFIG_HOME-}&quot; ] &amp;amp;&amp;amp; printf %s &quot;${HOME}/.nvm&quot; || printf %s &quot;${XDG_CONFIG_HOME}/nvm&quot;)&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Additional Notes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If the environment variable &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is present, it will place the &lt;code&gt;nvm&lt;/code&gt; files there.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can add &lt;code&gt;--no-use&lt;/code&gt; to the end of the above script to postpone using &lt;code&gt;nvm&lt;/code&gt; until you manually &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; it:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$([ -z &quot;${XDG_CONFIG_HOME-}&quot; ] &amp;amp;&amp;amp; printf %s &quot;${HOME}/.nvm&quot; || printf %s &quot;${XDG_CONFIG_HOME}/nvm&quot;)&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot; --no-use # This loads nvm, without auto-using the default version
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;You can customize the install source, directory, profile, and version using the &lt;code&gt;NVM_SOURCE&lt;/code&gt;, &lt;code&gt;NVM_DIR&lt;/code&gt;, &lt;code&gt;PROFILE&lt;/code&gt;, and &lt;code&gt;NODE_VERSION&lt;/code&gt; variables. Eg: &lt;code&gt;curl ... | NVM_DIR=&quot;path/to/nvm&quot;&lt;/code&gt;. Ensure that the &lt;code&gt;NVM_DIR&lt;/code&gt; does not contain a trailing slash.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The installer can use &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, or &lt;code&gt;wget&lt;/code&gt; to download &lt;code&gt;nvm&lt;/code&gt;, whichever is available.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can instruct the installer to not edit your shell config (for example if you already get completions via a &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/nvm&quot;&gt;zsh nvm plugin&lt;/a&gt;) by setting &lt;code&gt;PROFILE=/dev/null&lt;/code&gt; before running the &lt;code&gt;install.sh&lt;/code&gt; script. Here&#39;s an example one-line command to do that: &lt;code&gt;PROFILE=/dev/null bash -c &#39;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash&#39;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Installing in Docker&lt;/h4&gt; 
&lt;p&gt;When invoking bash as a non-interactive shell, like in a Docker container, none of the regular profile files are sourced. In order to use &lt;code&gt;nvm&lt;/code&gt;, &lt;code&gt;node&lt;/code&gt;, and &lt;code&gt;npm&lt;/code&gt; like normal, you can instead specify the special &lt;code&gt;BASH_ENV&lt;/code&gt; variable, which bash sources when invoked non-interactively.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;# Use bash for the shell
SHELL [&quot;/bin/bash&quot;, &quot;-o&quot;, &quot;pipefail&quot;, &quot;-c&quot;]

# Create a script file sourced by both interactive and non-interactive bash shells
ENV BASH_ENV /home/user/.bash_env
RUN touch &quot;${BASH_ENV}&quot;
RUN echo &#39;. &quot;${BASH_ENV}&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc

# Download and install nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | PROFILE=&quot;${BASH_ENV}&quot; bash
RUN echo node &amp;gt; .nvmrc
RUN nvm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Installing in Docker for CICD-Jobs&lt;/h5&gt; 
&lt;p&gt;More robust, works in CI/CD-Jobs. Can be run in interactive and non-interactive containers. See &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/3531&quot;&gt;https://github.com/nvm-sh/nvm/issues/3531&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-Dockerfile&quot;&gt;FROM ubuntu:latest
ARG NODE_VERSION=20

# install curl
RUN apt update &amp;amp;&amp;amp; apt install curl -y

# install nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash

# set env
ENV NVM_DIR=/root/.nvm

# install node
RUN bash -c &quot;source $NVM_DIR/nvm.sh &amp;amp;&amp;amp; nvm install $NODE_VERSION&quot;

# set ENTRYPOINT for reloading nvm-environment
ENTRYPOINT [&quot;bash&quot;, &quot;-c&quot;, &quot;source $NVM_DIR/nvm.sh &amp;amp;&amp;amp; exec \&quot;$@\&quot;&quot;, &quot;--&quot;]

# set cmd to bash
CMD [&quot;/bin/bash&quot;]

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example defaults to installation of nodejs version 20.x.y. Optionally you can easily override the version with docker build args like:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker build -t nvmimage --build-arg NODE_VERSION=19 .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After creation of the image you can start container interactively and run commands, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --rm -it nvmimage

root@0a6b5a237c14:/# nvm -v
0.40.3

root@0a6b5a237c14:/# node -v
v19.9.0

root@0a6b5a237c14:/# npm -v
9.6.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Noninteractive example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;user@host:/tmp/test $ docker run --rm -it nvmimage node -v
v19.9.0
user@host:/tmp/test $ docker run --rm -it nvmimage npm -v
9.6.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Troubleshooting on Linux&lt;/h4&gt; 
&lt;p&gt;On Linux, after running the install script, if you get &lt;code&gt;nvm: command not found&lt;/code&gt; or see no feedback from your terminal after you type &lt;code&gt;command -v nvm&lt;/code&gt;, simply close your current terminal, open a new terminal, and try verifying again. Alternatively, you can run the following commands for the different shells on the command line:&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;bash&lt;/em&gt;: &lt;code&gt;source ~/.bashrc&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;zsh&lt;/em&gt;: &lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;ksh&lt;/em&gt;: &lt;code&gt;. ~/.profile&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;These should pick up the &lt;code&gt;nvm&lt;/code&gt; command.&lt;/p&gt; 
&lt;h4&gt;Troubleshooting on macOS&lt;/h4&gt; 
&lt;p&gt;Since OS X 10.9, &lt;code&gt;/usr/bin/git&lt;/code&gt; has been preset by Xcode command line tools, which means we can&#39;t properly detect if Git is installed or not. You need to manually install the Xcode command line tools before running the install script, otherwise, it&#39;ll fail. (see &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/1782&quot;&gt;#1782&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;If you get &lt;code&gt;nvm: command not found&lt;/code&gt; after running the install script, one of the following might be the reason:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Since macOS 10.15, the default shell is &lt;code&gt;zsh&lt;/code&gt; and nvm will look for &lt;code&gt;.zshrc&lt;/code&gt; to update, none is installed by default. Create one with &lt;code&gt;touch ~/.zshrc&lt;/code&gt; and run the install script again.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you use bash, the previous default shell, your system may not have &lt;code&gt;.bash_profile&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt; files where the command is set up. Create one of them with &lt;code&gt;touch ~/.bash_profile&lt;/code&gt; or &lt;code&gt;touch ~/.bashrc&lt;/code&gt; and run the install script again. Then, run &lt;code&gt;. ~/.bash_profile&lt;/code&gt; or &lt;code&gt;. ~/.bashrc&lt;/code&gt; to pick up the &lt;code&gt;nvm&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You have previously used &lt;code&gt;bash&lt;/code&gt;, but you have &lt;code&gt;zsh&lt;/code&gt; installed. You need to manually add &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-install&quot;&gt;these lines&lt;/a&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt; and run &lt;code&gt;. ~/.zshrc&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You might need to restart your terminal instance or run &lt;code&gt;. ~/.nvm/nvm.sh&lt;/code&gt;. Restarting your terminal/opening a new tab/window, or running the source command will load the command and the new configuration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If the above didn&#39;t help, you might need to restart your terminal instance. Try opening a new tab/window in your terminal and retry.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the above doesn&#39;t fix the problem, you may try the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you use bash, it may be that your &lt;code&gt;.bash_profile&lt;/code&gt; (or &lt;code&gt;~/.profile&lt;/code&gt;) does not source your &lt;code&gt;~/.bashrc&lt;/code&gt; properly. You could fix this by adding &lt;code&gt;source ~/&amp;lt;your_profile_file&amp;gt;&lt;/code&gt; to it or following the next step below.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Try adding &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/#profile_snippet&quot;&gt;the snippet from the install section&lt;/a&gt;, that finds the correct nvm directory and loads nvm, to your usual profile (&lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information about this issue and possible workarounds, please &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/576&quot;&gt;refer here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; For Macs with the Apple Silicon chip, node started offering &lt;strong&gt;arm64&lt;/strong&gt; arch Darwin packages since v16.0.0 and experimental &lt;strong&gt;arm64&lt;/strong&gt; support when compiling from source since v14.17.0. If you are facing issues installing node using &lt;code&gt;nvm&lt;/code&gt;, you may want to update to one of those versions or later.&lt;/p&gt; 
&lt;h4&gt;Ansible&lt;/h4&gt; 
&lt;p&gt;You can use a task:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;- name: Install nvm
  ansible.builtin.shell: &amp;gt;
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
  args:
    creates: &quot;{{ ansible_env.HOME }}/.nvm/nvm.sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Verify Installation&lt;/h3&gt; 
&lt;p&gt;To verify that nvm has been installed, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;command -v nvm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;which should output &lt;code&gt;nvm&lt;/code&gt; if the installation was successful. Please note that &lt;code&gt;which nvm&lt;/code&gt; will not work, since &lt;code&gt;nvm&lt;/code&gt; is a sourced shell function, not an executable binary.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On Linux, after running the install script, if you get &lt;code&gt;nvm: command not found&lt;/code&gt; or see no feedback from your terminal after you type &lt;code&gt;command -v nvm&lt;/code&gt;, simply close your current terminal, open a new terminal, and try verifying again.&lt;/p&gt; 
&lt;h3&gt;Important Notes&lt;/h3&gt; 
&lt;p&gt;If you&#39;re running a system without prepackaged binary available, which means you&#39;re going to install node or io.js from its source code, you need to make sure your system has a C++ compiler. For OS X, Xcode will work, for Debian/Ubuntu based GNU/Linux, the &lt;code&gt;build-essential&lt;/code&gt; and &lt;code&gt;libssl-dev&lt;/code&gt; packages work.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;nvm&lt;/code&gt; also supports Windows in some cases. It should work through WSL (Windows Subsystem for Linux) depending on the version of WSL. It should also work with &lt;a href=&quot;https://gitforwindows.org/&quot;&gt;GitBash&lt;/a&gt; (MSYS) or &lt;a href=&quot;https://cygwin.com&quot;&gt;Cygwin&lt;/a&gt;. Otherwise, for Windows, a few alternatives exist, which are neither supported nor developed by us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/coreybutler/nvm-windows&quot;&gt;nvm-windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marcelklehr/nodist&quot;&gt;nodist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jasongin/nvs&quot;&gt;nvs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;nvm&lt;/code&gt; does not support &lt;a href=&quot;https://fishshell.com&quot;&gt;Fish&lt;/a&gt; either (see &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/303&quot;&gt;#303&lt;/a&gt;). Alternatives exist, which are neither supported nor developed by us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/edc/bass&quot;&gt;bass&lt;/a&gt; allows you to use utilities written for Bash in fish shell&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/brigand/fast-nvm-fish&quot;&gt;fast-nvm-fish&lt;/a&gt; only works with version numbers (not aliases) but doesn&#39;t significantly slow your shell startup&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/derekstavis/plugin-nvm&quot;&gt;plugin-nvm&lt;/a&gt; plugin for &lt;a href=&quot;https://github.com/oh-my-fish/oh-my-fish&quot;&gt;Oh My Fish&lt;/a&gt;, which makes nvm and its completions available in fish shell&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jorgebucaran/nvm.fish&quot;&gt;nvm.fish&lt;/a&gt; - The Node.js version manager you&#39;ll adore, crafted just for Fish&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FabioAntunes/fish-nvm&quot;&gt;fish-nvm&lt;/a&gt; - Wrapper around nvm for fish, delays sourcing nvm until it&#39;s actually used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We still have some problems with FreeBSD, because there is no official pre-built binary for FreeBSD, and building from source may need &lt;a href=&quot;https://www.freshports.org/www/node/files/patch-deps_v8_src_base_platform_platform-posix.cc&quot;&gt;patches&lt;/a&gt;; see the issue ticket:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/900&quot;&gt;[#900] [Bug] node on FreeBSD may need to be patched&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/3716&quot;&gt;nodejs/node#3716&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On OS X, if you do not have Xcode installed and you do not wish to download the ~4.3GB file, you can install the &lt;code&gt;Command Line Tools&lt;/code&gt;. You can check out this blog post on how to just that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/&quot;&gt;How to Install Command Line Tools in OS X Mavericks &amp;amp; Yosemite (Without Xcode)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On OS X, if you have/had a &quot;system&quot; node installed and want to install modules globally, keep in mind that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When using &lt;code&gt;nvm&lt;/code&gt; you do not need &lt;code&gt;sudo&lt;/code&gt; to globally install a module with &lt;code&gt;npm -g&lt;/code&gt;, so instead of doing &lt;code&gt;sudo npm install -g grunt&lt;/code&gt;, do instead &lt;code&gt;npm install -g grunt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;If you have an &lt;code&gt;~/.npmrc&lt;/code&gt; file, make sure it does not contain any &lt;code&gt;prefix&lt;/code&gt; settings (which is not compatible with &lt;code&gt;nvm&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;You can (but should not?) keep your previous &quot;system&quot; node install, but &lt;code&gt;nvm&lt;/code&gt; will only be available to your user account (the one used to install nvm). This might cause version mismatches, as other users will be using &lt;code&gt;/usr/local/lib/node_modules/*&lt;/code&gt; VS your user account using &lt;code&gt;~/.nvm/versions/node/vX.X.X/lib/node_modules/*&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Homebrew installation is not supported. If you have issues with homebrew-installed &lt;code&gt;nvm&lt;/code&gt;, please &lt;code&gt;brew uninstall&lt;/code&gt; it, and install it using the instructions below, before filing an issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you&#39;re using &lt;code&gt;zsh&lt;/code&gt; you can easily install &lt;code&gt;nvm&lt;/code&gt; as a zsh plugin. Install &lt;a href=&quot;https://github.com/lukechilds/zsh-nvm&quot;&gt;&lt;code&gt;zsh-nvm&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;nvm upgrade&lt;/code&gt; to upgrade (&lt;a href=&quot;https://github.com/lukechilds/zsh-nvm#auto-use&quot;&gt;you can set&lt;/a&gt; &lt;code&gt;NVM_AUTO_USE=true&lt;/code&gt; to have it automatically detect and use &lt;code&gt;.nvmrc&lt;/code&gt; files).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Git versions before v1.7 may face a problem of cloning &lt;code&gt;nvm&lt;/code&gt; source from GitHub via https protocol, and there is also different behavior of git before v1.6, and git prior to &lt;a href=&quot;https://github.com/git/git/commit/5a7d5b683f869d3e3884a89775241afa515da9e7&quot;&gt;v1.17.10&lt;/a&gt; can not clone tags, so the minimum required git version is v1.7.10. If you are interested in the problem we mentioned here, please refer to GitHub&#39;s &lt;a href=&quot;https://help.github.com/articles/https-cloning-errors/&quot;&gt;HTTPS cloning errors&lt;/a&gt; article.&lt;/p&gt; 
&lt;h3&gt;Git Install&lt;/h3&gt; 
&lt;p&gt;If you have &lt;code&gt;git&lt;/code&gt; installed (requires git v1.7.10+):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;clone this repo in the root of your user profile 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;cd ~/&lt;/code&gt; from anywhere then &lt;code&gt;git clone https://github.com/nvm-sh/nvm.git .nvm&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd ~/.nvm&lt;/code&gt; and check out the latest version with &lt;code&gt;git checkout v0.40.3&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;activate &lt;code&gt;nvm&lt;/code&gt; by sourcing it from your shell: &lt;code&gt;. ./nvm.sh&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Now add these lines to your &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.zshrc&lt;/code&gt; file to have it automatically sourced upon login: (you may have to add to more than one of the above files)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm
[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Install&lt;/h3&gt; 
&lt;p&gt;For a fully manual install, execute the following lines to first clone the &lt;code&gt;nvm&lt;/code&gt; repository into &lt;code&gt;$HOME/.nvm&lt;/code&gt;, and then load &lt;code&gt;nvm&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot; &amp;amp;&amp;amp; (
  git clone https://github.com/nvm-sh/nvm.git &quot;$NVM_DIR&quot;
  cd &quot;$NVM_DIR&quot;
  git checkout `git describe --abbrev=0 --tags --match &quot;v[0-9]*&quot; $(git rev-list --tags --max-count=1)`
) &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now add these lines to your &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.zshrc&lt;/code&gt; file to have it automatically sourced upon login: (you may have to add to more than one of the above files)&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm
[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Upgrade&lt;/h3&gt; 
&lt;p&gt;For manual upgrade with &lt;code&gt;git&lt;/code&gt; (requires git v1.7.10+):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;change to the &lt;code&gt;$NVM_DIR&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;pull down the latest changes&lt;/li&gt; 
 &lt;li&gt;check out the latest version&lt;/li&gt; 
 &lt;li&gt;activate the new version&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;(
  cd &quot;$NVM_DIR&quot;
  git fetch --tags origin
  git checkout `git describe --abbrev=0 --tags --match &quot;v[0-9]*&quot; $(git rev-list --tags --max-count=1)`
) &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To download, compile, and install the latest release of node, do this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install node # &quot;node&quot; is an alias for the latest version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install a specific version of node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install 14.7.0 # or 16.3.0, 12.22.1, etc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To set an alias:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm alias my_alias v14.4.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Make sure that your alias does not contain any spaces or slashes.&lt;/p&gt; 
&lt;p&gt;The first version installed becomes the default. New shells will start with the default version of node (e.g., &lt;code&gt;nvm alias default&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;You can list available versions using &lt;code&gt;ls-remote&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm ls-remote
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then in any new shell just use the installed version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm use node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can just run it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm run node --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, you can run any arbitrary command in a subshell with the desired version of node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm exec 4.2 node --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also get the path to the executable to where it was installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm which 12.22
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In place of a version pointer like &quot;14.7&quot; or &quot;16.3&quot; or &quot;12.22.1&quot;, you can use the following special default aliases with &lt;code&gt;nvm install&lt;/code&gt;, &lt;code&gt;nvm use&lt;/code&gt;, &lt;code&gt;nvm run&lt;/code&gt;, &lt;code&gt;nvm exec&lt;/code&gt;, &lt;code&gt;nvm which&lt;/code&gt;, etc:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;node&lt;/code&gt;: this installs the latest version of &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;&lt;code&gt;node&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;iojs&lt;/code&gt;: this installs the latest version of &lt;a href=&quot;https://iojs.org/en/&quot;&gt;&lt;code&gt;io.js&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stable&lt;/code&gt;: this alias is deprecated, and only truly applies to &lt;code&gt;node&lt;/code&gt; &lt;code&gt;v0.12&lt;/code&gt; and earlier. Currently, this is an alias for &lt;code&gt;node&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;unstable&lt;/code&gt;: this alias points to &lt;code&gt;node&lt;/code&gt; &lt;code&gt;v0.11&lt;/code&gt; - the last &quot;unstable&quot; node release, since post-1.0, all node versions are stable. (in SemVer, versions communicate breakage, not stability).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Long-term Support&lt;/h3&gt; 
&lt;p&gt;Node has a &lt;a href=&quot;https://github.com/nodejs/Release#release-schedule&quot;&gt;schedule&lt;/a&gt; for long-term support (LTS) You can reference LTS versions in aliases and &lt;code&gt;.nvmrc&lt;/code&gt; files with the notation &lt;code&gt;lts/*&lt;/code&gt; for the latest LTS, and &lt;code&gt;lts/argon&lt;/code&gt; for LTS releases from the &quot;argon&quot; line, for example. In addition, the following commands support LTS arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;nvm install --lts&lt;/code&gt; / &lt;code&gt;nvm install --lts=argon&lt;/code&gt; / &lt;code&gt;nvm install &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm install lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm uninstall --lts&lt;/code&gt; / &lt;code&gt;nvm uninstall --lts=argon&lt;/code&gt; / &lt;code&gt;nvm uninstall &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm uninstall lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm use --lts&lt;/code&gt; / &lt;code&gt;nvm use --lts=argon&lt;/code&gt; / &lt;code&gt;nvm use &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm use lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm exec --lts&lt;/code&gt; / &lt;code&gt;nvm exec --lts=argon&lt;/code&gt; / &lt;code&gt;nvm exec &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm exec lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm run --lts&lt;/code&gt; / &lt;code&gt;nvm run --lts=argon&lt;/code&gt; / &lt;code&gt;nvm run &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm run lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm ls-remote --lts&lt;/code&gt; / &lt;code&gt;nvm ls-remote --lts=argon&lt;/code&gt; &lt;code&gt;nvm ls-remote &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm ls-remote lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm version-remote --lts&lt;/code&gt; / &lt;code&gt;nvm version-remote --lts=argon&lt;/code&gt; / &lt;code&gt;nvm version-remote &#39;lts/*&#39;&lt;/code&gt; / &lt;code&gt;nvm version-remote lts/argon&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Any time your local copy of &lt;code&gt;nvm&lt;/code&gt; connects to &lt;a href=&quot;https://nodejs.org&quot;&gt;https://nodejs.org&lt;/a&gt;, it will re-create the appropriate local aliases for all available LTS lines. These aliases (stored under &lt;code&gt;$NVM_DIR/alias/lts&lt;/code&gt;), are managed by &lt;code&gt;nvm&lt;/code&gt;, and you should not modify, remove, or create these files - expect your changes to be undone, and expect meddling with these files to cause bugs that will likely not be supported.&lt;/p&gt; 
&lt;p&gt;To get the latest LTS version of node and migrate your existing installed packages, use&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=current &#39;lts/*&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Migrating Global Packages While Installing&lt;/h3&gt; 
&lt;p&gt;If you want to install a new version of Node.js and migrate npm packages from a previous version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=node node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will first use &quot;nvm version node&quot; to identify the current version you&#39;re migrating packages from. Then it resolves the new version to install from the remote server and installs it. Lastly, it runs &quot;nvm reinstall-packages&quot; to reinstall the npm packages from your prior version of Node to the new one.&lt;/p&gt; 
&lt;p&gt;You can also install and migrate npm packages from specific versions of Node like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=5 6
nvm install --reinstall-packages-from=iojs v4.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that reinstalling packages &lt;em&gt;explicitly does not update the npm version&lt;/em&gt; — this is to ensure that npm isn&#39;t accidentally upgraded to a broken version for the new node version.&lt;/p&gt; 
&lt;p&gt;To update npm at the same time add the &lt;code&gt;--latest-npm&lt;/code&gt; flag, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=default --latest-npm &#39;lts/*&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, you can at any time run the following command to get the latest supported npm version on the current node version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install-latest-npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;ve already gotten an error to the effect of &quot;npm does not support Node.js&quot;, you&#39;ll need to (1) revert to a previous node version (&lt;code&gt;nvm ls&lt;/code&gt; &amp;amp; &lt;code&gt;nvm use &amp;lt;your latest _working_ version from the ls&amp;gt;&lt;/code&gt;), (2) delete the newly created node version (&lt;code&gt;nvm uninstall &amp;lt;your _broken_ version of node from the ls&amp;gt;&lt;/code&gt;), then (3) rerun your &lt;code&gt;nvm install&lt;/code&gt; with the &lt;code&gt;--latest-npm&lt;/code&gt; flag.&lt;/p&gt; 
&lt;h3&gt;Default Global Packages From File While Installing&lt;/h3&gt; 
&lt;p&gt;If you have a list of default packages you want installed every time you install a new version, we support that too -- just add the package names, one per line, to the file &lt;code&gt;$NVM_DIR/default-packages&lt;/code&gt;. You can add anything npm would accept as a package argument on the command line.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# $NVM_DIR/default-packages

rimraf
object-inspect@1.0.2
stevemao/left-pad
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;io.js&lt;/h3&gt; 
&lt;p&gt;If you want to install &lt;a href=&quot;https://github.com/iojs/io.js/&quot;&gt;io.js&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install iojs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to install a new version of io.js and migrate npm packages from a previous version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install --reinstall-packages-from=iojs iojs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The same guidelines mentioned for migrating npm packages in node are applicable to io.js.&lt;/p&gt; 
&lt;h3&gt;System Version of Node&lt;/h3&gt; 
&lt;p&gt;If you want to use the system-installed version of node, you can use the special default alias &quot;system&quot;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm use system
nvm run system --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Listing Versions&lt;/h3&gt; 
&lt;p&gt;If you want to see what versions are installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm ls
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to see what versions are available to install:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm ls-remote
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Setting Custom Colors&lt;/h3&gt; 
&lt;p&gt;You can set five colors that will be used to display version and alias information. These colors replace the default colors. Initial colors are: g b y r e&lt;/p&gt; 
&lt;p&gt;Color codes:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;r/R = red / bold red

g/G = green / bold green

b/B = blue / bold blue

c/C = cyan / bold cyan

m/M = magenta / bold magenta

y/Y = yellow / bold yellow

k/K = black / bold black

e/W = light grey / white
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm set-colors rgBcm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Persisting custom colors&lt;/h4&gt; 
&lt;p&gt;If you want the custom colors to persist after terminating the shell, export the &lt;code&gt;NVM_COLORS&lt;/code&gt; variable in your shell profile. For example, if you want to use cyan, magenta, green, bold red and bold yellow, add the following line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_COLORS=&#39;cmgRY&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Suppressing colorized output&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;nvm help (or -h or --help)&lt;/code&gt;, &lt;code&gt;nvm ls&lt;/code&gt;, &lt;code&gt;nvm ls-remote&lt;/code&gt; and &lt;code&gt;nvm alias&lt;/code&gt; usually produce colorized output. You can disable colors with the &lt;code&gt;--no-colors&lt;/code&gt; option (or by setting the environment variable &lt;code&gt;TERM=dumb&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm ls --no-colors
nvm help --no-colors
TERM=dumb nvm ls
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Restoring PATH&lt;/h3&gt; 
&lt;p&gt;To restore your PATH, you can deactivate it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm deactivate
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Set default node version&lt;/h3&gt; 
&lt;p&gt;To set a default Node version to be used in any new shell, use the alias &#39;default&#39;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm alias default node # this refers to the latest installed version of node
nvm alias default 18 # this refers to the latest installed v18.x version of node
nvm alias default 18.12  # this refers to the latest installed v18.12.x version of node
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Use a mirror of node binaries&lt;/h3&gt; 
&lt;p&gt;To use a mirror of the node binaries, set &lt;code&gt;$NVM_NODEJS_ORG_MIRROR&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist
nvm install node

NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist nvm install 4.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use a mirror of the io.js binaries, set &lt;code&gt;$NVM_IOJS_ORG_MIRROR&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_IOJS_ORG_MIRROR=https://iojs.org/dist
nvm install iojs-v1.0.3

NVM_IOJS_ORG_MIRROR=https://iojs.org/dist nvm install iojs-v1.0.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;nvm use&lt;/code&gt; will not, by default, create a &quot;current&quot; symlink. Set &lt;code&gt;$NVM_SYMLINK_CURRENT&lt;/code&gt; to &quot;true&quot; to enable this behavior, which is sometimes useful for IDEs. Note that using &lt;code&gt;nvm&lt;/code&gt; in multiple shell tabs with this environment variable enabled can cause race conditions.&lt;/p&gt; 
&lt;h4&gt;Pass Authorization header to mirror&lt;/h4&gt; 
&lt;p&gt;To pass an Authorization header through to the mirror url, set &lt;code&gt;$NVM_AUTH_HEADER&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;NVM_AUTH_HEADER=&quot;Bearer secret-token&quot; nvm install node
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;.nvmrc&lt;/h3&gt; 
&lt;p&gt;You can create a &lt;code&gt;.nvmrc&lt;/code&gt; file containing a node version number (or any other string that &lt;code&gt;nvm&lt;/code&gt; understands; see &lt;code&gt;nvm --help&lt;/code&gt; for details) in the project root directory (or any parent directory). Afterwards, &lt;code&gt;nvm use&lt;/code&gt;, &lt;code&gt;nvm install&lt;/code&gt;, &lt;code&gt;nvm exec&lt;/code&gt;, &lt;code&gt;nvm run&lt;/code&gt;, and &lt;code&gt;nvm which&lt;/code&gt; will use the version specified in the &lt;code&gt;.nvmrc&lt;/code&gt; file if no version is supplied on the command line.&lt;/p&gt; 
&lt;p&gt;For example, to make nvm default to the latest 5.9 release, the latest LTS version, or the latest node version for the current directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ echo &quot;5.9&quot; &amp;gt; .nvmrc

$ echo &quot;lts/*&quot; &amp;gt; .nvmrc # to default to the latest LTS version

$ echo &quot;node&quot; &amp;gt; .nvmrc # to default to the latest version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[NB these examples assume a POSIX-compliant shell version of &lt;code&gt;echo&lt;/code&gt;. If you use a Windows &lt;code&gt;cmd&lt;/code&gt; development environment, eg the &lt;code&gt;.nvmrc&lt;/code&gt; file is used to configure a remote Linux deployment, then keep in mind the &lt;code&gt;&quot;&lt;/code&gt;s will be copied leading to an invalid file. Remove them.]&lt;/p&gt; 
&lt;p&gt;Then when you run nvm use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm use
Found &#39;/path/to/project/.nvmrc&#39; with version &amp;lt;5.9&amp;gt;
Now using node v5.9.1 (npm v3.7.3)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running nvm install will also switch over to the correct version, but if the correct node version isn&#39;t already installed, it will install it for you.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm install
Found &#39;/path/to/project/.nvmrc&#39; with version &amp;lt;5.9&amp;gt;
Downloading and installing node v5.9.1...
Downloading https://nodejs.org/dist/v5.9.1/node-v5.9.1-linux-x64.tar.xz...
#################################################################################### 100.0%
Computing checksum with sha256sum
Checksums matched!
Now using node v5.9.1 (npm v3.7.3)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;nvm use&lt;/code&gt; et. al. will traverse directory structure upwards from the current directory looking for the &lt;code&gt;.nvmrc&lt;/code&gt; file. In other words, running &lt;code&gt;nvm use&lt;/code&gt; et. al. in any subdirectory of a directory with an &lt;code&gt;.nvmrc&lt;/code&gt; will result in that &lt;code&gt;.nvmrc&lt;/code&gt; being utilized.&lt;/p&gt; 
&lt;p&gt;The contents of a &lt;code&gt;.nvmrc&lt;/code&gt; file &lt;strong&gt;must&lt;/strong&gt; contain precisely one &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; (as described by &lt;code&gt;nvm --help&lt;/code&gt;) followed by a newline. &lt;code&gt;.nvmrc&lt;/code&gt; files may also have comments. The comment delimiter is &lt;code&gt;#&lt;/code&gt;, and it and any text after it, as well as blank lines, and leading and trailing white space, will be ignored when parsing.&lt;/p&gt; 
&lt;p&gt;Key/value pairs using &lt;code&gt;=&lt;/code&gt; are also allowed and ignored, but are reserved for future use, and may cause validation errors in the future.&lt;/p&gt; 
&lt;p&gt;Run &lt;a href=&quot;https://npmjs.com/nvmrc&quot;&gt;&lt;code&gt;npx nvmrc&lt;/code&gt;&lt;/a&gt; to validate an &lt;code&gt;.nvmrc&lt;/code&gt; file. If that tool’s results do not agree with nvm, one or the other has a bug - please file an issue.&lt;/p&gt; 
&lt;h3&gt;Deeper Shell Integration&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://github.com/iamogbz/nvshim&quot;&gt;&lt;code&gt;nvshim&lt;/code&gt;&lt;/a&gt; to shim the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;npm&lt;/code&gt;, and &lt;code&gt;npx&lt;/code&gt; bins to automatically use the &lt;code&gt;nvm&lt;/code&gt; config in the current directory. &lt;code&gt;nvshim&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; supported by the &lt;code&gt;nvm&lt;/code&gt; maintainers. Please &lt;a href=&quot;https://github.com/iamogbz/nvshim/issues/new&quot;&gt;report issues to the &lt;code&gt;nvshim&lt;/code&gt; team&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you prefer a lighter-weight solution, the recipes below have been contributed by &lt;code&gt;nvm&lt;/code&gt; users. They are &lt;strong&gt;not&lt;/strong&gt; supported by the &lt;code&gt;nvm&lt;/code&gt; maintainers. We are, however, accepting pull requests for more examples.&lt;/p&gt; 
&lt;h4&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/h4&gt; 
&lt;p&gt;In your profile (&lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt;), add the following to &lt;code&gt;nvm use&lt;/code&gt; whenever you enter a new directory:&lt;/p&gt; 
&lt;h5&gt;bash&lt;/h5&gt; 
&lt;p&gt;Put the following at the end of your &lt;code&gt;$HOME/.bashrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cdnvm() {
    command cd &quot;$@&quot; || return $?
    nvm_path=&quot;$(nvm_find_up .nvmrc | command tr -d &#39;\n&#39;)&quot;

    # If there are no .nvmrc file, use the default nvm version
    if [[ ! $nvm_path = *[^[:space:]]* ]]; then

        declare default_version
        default_version=&quot;$(nvm version default)&quot;

        # If there is no default version, set it to `node`
        # This will use the latest version on your machine
        if [ $default_version = &#39;N/A&#39; ]; then
            nvm alias default node
            default_version=$(nvm version default)
        fi

        # If the current version is not the default version, set it to use the default version
        if [ &quot;$(nvm current)&quot; != &quot;${default_version}&quot; ]; then
            nvm use default
        fi
    elif [[ -s &quot;${nvm_path}/.nvmrc&quot; &amp;amp;&amp;amp; -r &quot;${nvm_path}/.nvmrc&quot; ]]; then
        declare nvm_version
        nvm_version=$(&amp;lt;&quot;${nvm_path}&quot;/.nvmrc)

        declare locally_resolved_nvm_version
        # `nvm ls` will check all locally-available versions
        # If there are multiple matching versions, take the latest one
        # Remove the `-&amp;gt;` and `*` characters and spaces
        # `locally_resolved_nvm_version` will be `N/A` if no local versions are found
        locally_resolved_nvm_version=$(nvm ls --no-colors &quot;${nvm_version}&quot; | command tail -1 | command tr -d &#39;\-&amp;gt;*&#39; | command tr -d &#39;[:space:]&#39;)

        # If it is not already installed, install it
        # `nvm install` will implicitly use the newly-installed version
        if [ &quot;${locally_resolved_nvm_version}&quot; = &#39;N/A&#39; ]; then
            nvm install &quot;${nvm_version}&quot;;
        elif [ &quot;$(nvm current)&quot; != &quot;${locally_resolved_nvm_version}&quot; ]; then
            nvm use &quot;${nvm_version}&quot;;
        fi
    fi
}

alias cd=&#39;cdnvm&#39;
cdnvm &quot;$PWD&quot; || exit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This alias would search &#39;up&#39; from your current directory in order to detect a &lt;code&gt;.nvmrc&lt;/code&gt; file. If it finds it, it will switch to that version; if not, it will use the default version.&lt;/p&gt; 
&lt;h5&gt;zsh&lt;/h5&gt; 
&lt;p&gt;This shell function will install (if needed) and &lt;code&gt;nvm use&lt;/code&gt; the specified Node version when an &lt;code&gt;.nvmrc&lt;/code&gt; is found, and &lt;code&gt;nvm use default&lt;/code&gt; otherwise.&lt;/p&gt; 
&lt;p&gt;Put this into your &lt;code&gt;$HOME/.zshrc&lt;/code&gt; to call &lt;code&gt;nvm use&lt;/code&gt; automatically whenever you enter a directory that contains an &lt;code&gt;.nvmrc&lt;/code&gt; file with a string telling nvm which node to &lt;code&gt;use&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;# place this after nvm initialization!
autoload -U add-zsh-hook

load-nvmrc() {
  local nvmrc_path
  nvmrc_path=&quot;$(nvm_find_nvmrc)&quot;

  if [ -n &quot;$nvmrc_path&quot; ]; then
    local nvmrc_node_version
    nvmrc_node_version=$(nvm version &quot;$(cat &quot;${nvmrc_path}&quot;)&quot;)

    if [ &quot;$nvmrc_node_version&quot; = &quot;N/A&quot; ]; then
      nvm install
    elif [ &quot;$nvmrc_node_version&quot; != &quot;$(nvm version)&quot; ]; then
      nvm use
    fi
  elif [ -n &quot;$(PWD=$OLDPWD nvm_find_nvmrc)&quot; ] &amp;amp;&amp;amp; [ &quot;$(nvm version)&quot; != &quot;$(nvm version default)&quot; ]; then
    echo &quot;Reverting to nvm default version&quot;
    nvm use default
  fi
}

add-zsh-hook chpwd load-nvmrc
load-nvmrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After saving the file, run &lt;code&gt;source ~/.zshrc&lt;/code&gt; to reload the configuration with the latest changes made.&lt;/p&gt; 
&lt;h5&gt;fish&lt;/h5&gt; 
&lt;p&gt;This requires that you have &lt;a href=&quot;https://github.com/edc/bass&quot;&gt;bass&lt;/a&gt; installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-fish&quot;&gt;# ~/.config/fish/functions/nvm.fish
function nvm
  bass source ~/.nvm/nvm.sh --no-use &#39;;&#39; nvm $argv
end

# ~/.config/fish/functions/nvm_find_nvmrc.fish
function nvm_find_nvmrc
  bass source ~/.nvm/nvm.sh --no-use &#39;;&#39; nvm_find_nvmrc
end

# ~/.config/fish/functions/load_nvm.fish
function load_nvm --on-variable=&quot;PWD&quot;
  set -l default_node_version (nvm version default)
  set -l node_version (nvm version)
  set -l nvmrc_path (nvm_find_nvmrc)
  if test -n &quot;$nvmrc_path&quot;
    set -l nvmrc_node_version (nvm version (cat $nvmrc_path))
    if test &quot;$nvmrc_node_version&quot; = &quot;N/A&quot;
      nvm install (cat $nvmrc_path)
    else if test &quot;$nvmrc_node_version&quot; != &quot;$node_version&quot;
      nvm use $nvmrc_node_version
    end
  else if test &quot;$node_version&quot; != &quot;$default_node_version&quot;
    echo &quot;Reverting to default Node version&quot;
    nvm use default
  end
end

# ~/.config/fish/config.fish
# You must call it on initialization or listening to directory switching won&#39;t work
load_nvm &amp;gt; /dev/stderr
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running Tests&lt;/h2&gt; 
&lt;p&gt;Tests are written in &lt;a href=&quot;https://git.sdf.org/tlevine/urchin&quot;&gt;Urchin&lt;/a&gt;. Install Urchin (and other dependencies) like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are slow tests and fast tests. The slow tests do things like install node and check that the right versions are used. The fast tests fake this to test things like aliases and uninstalling. From the root of the nvm git repository, run the fast tests like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run test/fast
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the slow tests like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run test/slow
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run all of the tests like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Nota bene: Avoid running nvm while the tests are running.&lt;/p&gt; 
&lt;h2&gt;Environment variables&lt;/h2&gt; 
&lt;p&gt;nvm exposes the following environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;NVM_DIR&lt;/code&gt; - nvm&#39;s installation directory.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_BIN&lt;/code&gt; - where node, npm, and global packages for the active version of node are installed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_INC&lt;/code&gt; - node&#39;s include file directory (useful for building C/C++ addons for node).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_CD_FLAGS&lt;/code&gt; - used to maintain compatibility with zsh.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_RC_VERSION&lt;/code&gt; - version from .nvmrc file if being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Additionally, nvm modifies &lt;code&gt;PATH&lt;/code&gt;, and, if present, &lt;code&gt;MANPATH&lt;/code&gt; and &lt;code&gt;NODE_PATH&lt;/code&gt; when changing versions.&lt;/p&gt; 
&lt;h2&gt;Bash Completion&lt;/h2&gt; 
&lt;p&gt;To activate, you need to source &lt;code&gt;bash_completion&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;[[ -r $NVM_DIR/bash_completion ]] &amp;amp;&amp;amp; \. $NVM_DIR/bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Put the above sourcing line just below the sourcing line for nvm in your profile (&lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.bash_profile&lt;/code&gt;).&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;nvm:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;alias               deactivate          install             list-remote         reinstall-packages  uninstall           version
cache               exec                install-latest-npm  ls                  run                 unload              version-remote
current             help                list                ls-remote           unalias             use                 which
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;nvm alias:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm alias&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;default      iojs         lts/*        lts/argon    lts/boron    lts/carbon   lts/dubnium  lts/erbium   node         stable       unstable
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm alias my_alias&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;v10.22.0       v12.18.3      v14.8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;nvm use:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm use&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;my_alias        default        v10.22.0       v12.18.3      v14.8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;nvm uninstall:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm uninstall&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;my_alias        default        v10.22.0       v12.18.3      v14.8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Compatibility Issues&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; will encounter some issues if you have some non-default settings set. (see &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/606&quot;&gt;#606&lt;/a&gt;) The following are known to cause issues:&lt;/p&gt; 
&lt;p&gt;Inside &lt;code&gt;~/.npmrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;prefix=&#39;some/path&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Environment Variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$NPM_CONFIG_PREFIX
$PREFIX
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Shell settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;set -e
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installing nvm on Alpine Linux&lt;/h2&gt; 
&lt;p&gt;In order to provide the best performance (and other optimizations), nvm will download and install pre-compiled binaries for Node (and npm) when you run &lt;code&gt;nvm install X&lt;/code&gt;. The Node project compiles, tests and hosts/provides these pre-compiled binaries which are built for mainstream/traditional Linux distributions (such as Debian, Ubuntu, CentOS, RedHat et al).&lt;/p&gt; 
&lt;p&gt;Alpine Linux, unlike mainstream/traditional Linux distributions, is based on &lt;a href=&quot;https://www.busybox.net/&quot;&gt;BusyBox&lt;/a&gt;, a very compact (~5MB) Linux distribution. BusyBox (and thus Alpine Linux) uses a different C/C++ stack to most mainstream/traditional Linux distributions - &lt;a href=&quot;https://www.musl-libc.org/&quot;&gt;musl&lt;/a&gt;. This makes binary programs built for such mainstream/traditional incompatible with Alpine Linux, thus we cannot simply &lt;code&gt;nvm install X&lt;/code&gt; on Alpine Linux and expect the downloaded binary to run correctly - you&#39;ll likely see &quot;...does not exist&quot; errors if you try that.&lt;/p&gt; 
&lt;p&gt;There is a &lt;code&gt;-s&lt;/code&gt; flag for &lt;code&gt;nvm install&lt;/code&gt; which requests nvm download Node source and compile it locally.&lt;/p&gt; 
&lt;p&gt;If installing nvm on Alpine Linux &lt;em&gt;is&lt;/em&gt; still what you want or need to do, you should be able to achieve this by running the following from you Alpine Linux shell, depending on which version you are using:&lt;/p&gt; 
&lt;h3&gt;Alpine Linux 3.13+&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;apk add -U curl bash ca-certificates openssl ncurses coreutils python3 make gcc g++ libgcc linux-headers grep util-linux binutils findutils
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Alpine Linux 3.5 - 3.12&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;apk add -U curl bash ca-certificates openssl ncurses coreutils python2 make gcc g++ libgcc linux-headers grep util-linux binutils findutils
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: Alpine 3.5 can only install NodeJS versions up to v6.9.5, Alpine 3.6 can only install versions up to v6.10.3, Alpine 3.7 installs versions up to v8.9.3, Alpine 3.8 installs versions up to v8.14.0, Alpine 3.9 installs versions up to v10.19.0, Alpine 3.10 installs versions up to v10.24.1, Alpine 3.11 installs versions up to v12.22.6, Alpine 3.12 installs versions up to v12.22.12, Alpine 3.13 &amp;amp; 3.14 install versions up to v14.20.0, Alpine 3.15 &amp;amp; 3.16 install versions up to v16.16.0 (&lt;strong&gt;These are all versions on the main branch&lt;/strong&gt;). Alpine 3.5 - 3.12 required the package &lt;code&gt;python2&lt;/code&gt; to build NodeJS, as they are older versions to build. Alpine 3.13+ requires &lt;code&gt;python3&lt;/code&gt; to successfully build newer NodeJS versions, but you can use &lt;code&gt;python2&lt;/code&gt; with Alpine 3.13+ if you need to build versions of node supported in Alpine 3.5 - 3.15, you just need to specify what version of NodeJS you need to install in the package install script.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The Node project has some desire but no concrete plans (due to the overheads of building, testing and support) to offer Alpine-compatible binaries.&lt;/p&gt; 
&lt;p&gt;As a potential alternative, @mhart (a Node contributor) has some &lt;a href=&quot;https://github.com/mhart/alpine-node&quot;&gt;Docker images for Alpine Linux with Node and optionally, npm, pre-installed&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a id=&quot;removal&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Uninstalling / Removal&lt;/h2&gt; 
&lt;h3&gt;Manual Uninstall&lt;/h3&gt; 
&lt;p&gt;To remove &lt;code&gt;nvm&lt;/code&gt; manually, execute the following:&lt;/p&gt; 
&lt;p&gt;First, use &lt;code&gt;nvm unload&lt;/code&gt; to remove the nvm command from your terminal session and delete the installation directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm_dir=&quot;${NVM_DIR:-~/.nvm}&quot;
$ nvm unload
$ rm -rf &quot;$nvm_dir&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Edit &lt;code&gt;~/.bashrc&lt;/code&gt; (or other shell resource config) and remove the lines below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm
[[ -r $NVM_DIR/bash_completion ]] &amp;amp;&amp;amp; \. $NVM_DIR/bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Docker For Development Environment&lt;/h2&gt; 
&lt;p&gt;To make the development and testing work easier, we have a Dockerfile for development usage, which is based on Ubuntu 18.04 base image, prepared with essential and useful tools for &lt;code&gt;nvm&lt;/code&gt; development, to build the docker image of the environment, run the docker command at the root of &lt;code&gt;nvm&lt;/code&gt; repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ docker build -t nvm-dev .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will package your current nvm repository with our pre-defined development environment into a docker image named &lt;code&gt;nvm-dev&lt;/code&gt;, once it&#39;s built with success, validate your image via &lt;code&gt;docker images&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ docker images

REPOSITORY         TAG                 IMAGE ID            CREATED             SIZE
nvm-dev            latest              9ca4c57a97d8        7 days ago          650 MB
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you got no error message, now you can easily involve in:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ docker run -h nvm-dev -it nvm-dev

nvm@nvm-dev:~/.nvm$
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that it&#39;ll take about 8 minutes to build the image and the image size would be about 650MB, so it&#39;s not suitable for production usage.&lt;/p&gt; 
&lt;p&gt;For more information and documentation about docker, please refer to its official website:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;https://www.docker.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/&quot;&gt;https://docs.docker.com/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Problems&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you try to install a node version and the installation fails, be sure to run &lt;code&gt;nvm cache clear&lt;/code&gt; to delete cached node downloads, or you might get an error like the following:&lt;/p&gt; &lt;p&gt;curl: (33) HTTP server doesn&#39;t seem to support byte ranges. Cannot resume.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Where&#39;s my &lt;code&gt;sudo node&lt;/code&gt;? Check out &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/43&quot;&gt;#43&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After the v0.8.6 release of node, nvm tries to install from binary packages. But in some systems, the official binary packages don&#39;t work due to incompatibility of shared libs. In such cases, use &lt;code&gt;-s&lt;/code&gt; option to force install from source:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;nvm install -s 0.8.6
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;If setting the &lt;code&gt;default&lt;/code&gt; alias does not establish the node version in new shells (i.e. &lt;code&gt;nvm current&lt;/code&gt; yields &lt;code&gt;system&lt;/code&gt;), ensure that the system&#39;s node &lt;code&gt;PATH&lt;/code&gt; is set before the &lt;code&gt;nvm.sh&lt;/code&gt; source line in your shell profile (see &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/658&quot;&gt;#658&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;macOS Troubleshooting&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;nvm node version not found in vim shell&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you set node version to a version other than your system node version &lt;code&gt;nvm use 6.2.1&lt;/code&gt; and open vim and run &lt;code&gt;:!node -v&lt;/code&gt; you should see &lt;code&gt;v6.2.1&lt;/code&gt; if you see your system version &lt;code&gt;v0.12.7&lt;/code&gt;. You need to run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sudo chmod ugo-x /usr/libexec/path_helper
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More on this issue in &lt;a href=&quot;https://github.com/dotphiles/dotzsh#mac-os-x&quot;&gt;dotphiles/dotzsh&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;nvm is not compatible with the npm config &quot;prefix&quot; option&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Some solutions for this issue can be found &lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/1245&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;There is one more edge case causing this issue, and that&#39;s a &lt;strong&gt;mismatch between the &lt;code&gt;$HOME&lt;/code&gt; path and the user&#39;s home directory&#39;s actual name&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;You have to make sure that the user directory name in &lt;code&gt;$HOME&lt;/code&gt; and the user directory name you&#39;d see from running &lt;code&gt;ls /Users/&lt;/code&gt; &lt;strong&gt;are capitalized the same way&lt;/strong&gt; (&lt;a href=&quot;https://github.com/nvm-sh/nvm/issues/2261&quot;&gt;See this issue&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;To change the user directory and/or account name follow the instructions &lt;a href=&quot;https://support.apple.com/en-us/HT201548&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Homebrew makes zsh directories unsecure&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;zsh compinit: insecure directories, run compaudit for list.
Ignore insecure directories and continue [y] or abort compinit [n]? y
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Homebrew causes insecure directories like &lt;code&gt;/usr/local/share/zsh/site-functions&lt;/code&gt; and &lt;code&gt;/usr/local/share/zsh&lt;/code&gt;. This is &lt;strong&gt;not&lt;/strong&gt; an &lt;code&gt;nvm&lt;/code&gt; problem - it is a homebrew problem. Refer &lt;a href=&quot;https://github.com/zsh-users/zsh-completions/issues/680&quot;&gt;here&lt;/a&gt; for some solutions related to the issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Macs with Apple Silicon chips&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Experimental support for the Apple Silicon chip architecture was added in node.js v15.3 and full support was added in v16.0. Because of this, if you try to install older versions of node as usual, you will probably experience either compilation errors when installing node or out-of-memory errors while running your code.&lt;/p&gt; 
&lt;p&gt;So, if you want to run a version prior to v16.0 on an Apple Silicon Mac, it may be best to compile node targeting the &lt;code&gt;x86_64&lt;/code&gt; Intel architecture so that Rosetta 2 can translate the &lt;code&gt;x86_64&lt;/code&gt; processor instructions to ARM-based Apple Silicon instructions. Here&#39;s what you will need to do:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Install Rosetta, if you haven&#39;t already done so&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ softwareupdate --install-rosetta
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You might wonder, &quot;how will my Apple Silicon Mac know to use Rosetta for a version of node compiled for an Intel chip?&quot;. If an executable contains only Intel instructions, macOS will automatically use Rosetta to translate the instructions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open a shell that&#39;s running using Rosetta&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ arch -x86_64 zsh
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: This same thing can also be accomplished by finding the Terminal or iTerm App in Finder, right clicking, selecting &quot;Get Info&quot;, and then checking the box labeled &quot;Open using Rosetta&quot;.&lt;/p&gt; &lt;p&gt;Note: This terminal session is now running in &lt;code&gt;zsh&lt;/code&gt;. If &lt;code&gt;zsh&lt;/code&gt; is not the shell you typically use, &lt;code&gt;nvm&lt;/code&gt; may not be &lt;code&gt;source&lt;/code&gt;&#39;d automatically like it probably is for your usual shell through your dotfiles. If that&#39;s the case, make sure to source &lt;code&gt;nvm&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ source &quot;${NVM_DIR}/nvm.sh&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install whatever older version of node you are interested in. Let&#39;s use 12.22.1 as an example. This will fetch the node source code and compile it, which will take several minutes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ nvm install v12.22.1 --shared-zlib
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: You&#39;re probably curious why &lt;code&gt;--shared-zlib&lt;/code&gt; is included. There&#39;s a bug in recent versions of Apple&#39;s system &lt;code&gt;clang&lt;/code&gt; compiler. If one of these broken versions is installed on your system, the above step will likely still succeed even if you didn&#39;t include the &lt;code&gt;--shared-zlib&lt;/code&gt; flag. However, later, when you attempt to &lt;code&gt;npm install&lt;/code&gt; something using your old version of node.js, you will see &lt;code&gt;incorrect data check&lt;/code&gt; errors. If you want to avoid the possible hassle of dealing with this, include that flag. For more details, see &lt;a href=&quot;https://github.com/nodejs/node/issues/39313&quot;&gt;this issue&lt;/a&gt; and &lt;a href=&quot;https://github.com/nodejs/node/issues/39313#issuecomment-90.40.376&quot;&gt;this comment&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Exit back to your native shell.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ exit
$ arch
arm64
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: If you selected the box labeled &quot;Open using Rosetta&quot; rather than running the CLI command in the second step, you will see &lt;code&gt;i386&lt;/code&gt; here. Unless you have another reason to have that box selected, you can deselect it now.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Check to make sure the architecture is correct. &lt;code&gt;x64&lt;/code&gt; is the abbreviation for &lt;code&gt;x86_64&lt;/code&gt;, which is what you want to see.&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ node -p process.arch
x64
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Now you should be able to use node as usual.&lt;/p&gt; 
&lt;h2&gt;WSL Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you&#39;ve encountered this error on WSL-2:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                Dload  Upload  Total   Spent    Left  Speed
0     0    0     0    0     0      0      0 --:--:--  0:00:09 --:--:--     0curl: (6) Could not resolve host: raw.githubusercontent.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It may be due to your antivirus, VPN, or other reasons.&lt;/p&gt; 
&lt;p&gt;Where you can &lt;code&gt;ping 8.8.8.8&lt;/code&gt; while you can&#39;t &lt;code&gt;ping google.com&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This could simply be solved by running this in your root directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo rm /etc/resolv.conf
sudo bash -c &#39;echo &quot;nameserver 8.8.8.8&quot; &amp;gt; /etc/resolv.conf&#39;
sudo bash -c &#39;echo &quot;[network]&quot; &amp;gt; /etc/wsl.conf&#39;
sudo bash -c &#39;echo &quot;generateResolvConf = false&quot; &amp;gt;&amp;gt; /etc/wsl.conf&#39;
sudo chattr +i /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This deletes your &lt;code&gt;resolv.conf&lt;/code&gt; file that is automatically generated when you run WSL, creates a new file and puts &lt;code&gt;nameserver 8.8.8.8&lt;/code&gt;, then creates a &lt;code&gt;wsl.conf&lt;/code&gt; file and adds &lt;code&gt;[network]&lt;/code&gt; and &lt;code&gt;generateResolveConf = false&lt;/code&gt; to prevent auto-generation of that file.&lt;/p&gt; 
&lt;p&gt;You can check the contents of the file by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cat /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;Currently, the sole maintainer is &lt;a href=&quot;https://github.com/ljharb&quot;&gt;@ljharb&lt;/a&gt; - more maintainers are quite welcome, and we hope to add folks to the team over time. &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/GOVERNANCE.md&quot;&gt;Governance&lt;/a&gt; will be re-evaluated as the project evolves.&lt;/p&gt; 
&lt;h2&gt;Project Support&lt;/h2&gt; 
&lt;p&gt;Only the latest version (v0.40.3 at this time) is supported.&lt;/p&gt; 
&lt;h2&gt;Enterprise Support&lt;/h2&gt; 
&lt;p&gt;If you are unable to update to the latest version of &lt;code&gt;nvm&lt;/code&gt;, our &lt;a href=&quot;https://openjsf.org/ecosystem-sustainability-program&quot;&gt;partners&lt;/a&gt; provide commercial security fixes for all unsupported versions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.herodevs.com/support?utm_source=OpenJS&amp;amp;utm_medium=Link&amp;amp;utm_campaign=nvm_openjs&quot;&gt;HeroDevs Never-Ending Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nvm-sh/nvm/master/LICENSE.md&quot;&gt;LICENSE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Copyright notice&lt;/h2&gt; 
&lt;p&gt;Copyright &lt;a href=&quot;https://openjsf.org&quot;&gt;OpenJS Foundation&lt;/a&gt; and &lt;code&gt;nvm&lt;/code&gt; contributors. All rights reserved. The &lt;a href=&quot;https://openjsf.org&quot;&gt;OpenJS Foundation&lt;/a&gt; has registered trademarks and uses trademarks. For a list of trademarks of the &lt;a href=&quot;https://openjsf.org&quot;&gt;OpenJS Foundation&lt;/a&gt;, please see our &lt;a href=&quot;https://trademark-policy.openjsf.org/&quot;&gt;Trademark Policy&lt;/a&gt; and &lt;a href=&quot;https://trademark-list.openjsf.org/&quot;&gt;Trademark List&lt;/a&gt;. Trademarks and logos not indicated on the &lt;a href=&quot;https://trademark-list.openjsf.org&quot;&gt;list of OpenJS Foundation trademarks&lt;/a&gt; are trademarks™ or registered® trademarks of their respective holders. Use of them does not imply any affiliation with or endorsement by them. &lt;a href=&quot;https://openjsf.org/&quot;&gt;The OpenJS Foundation&lt;/a&gt; | &lt;a href=&quot;https://terms-of-use.openjsf.org/&quot;&gt;Terms of Use&lt;/a&gt; | &lt;a href=&quot;https://privacy-policy.openjsf.org/&quot;&gt;Privacy Policy&lt;/a&gt; | &lt;a href=&quot;https://bylaws.openjsf.org/&quot;&gt;Bylaws&lt;/a&gt; | &lt;a href=&quot;https://code-of-conduct.openjsf.org&quot;&gt;Code of Conduct&lt;/a&gt; | &lt;a href=&quot;https://trademark-policy.openjsf.org/&quot;&gt;Trademark Policy&lt;/a&gt; | &lt;a href=&quot;https://trademark-list.openjsf.org/&quot;&gt;Trademark List&lt;/a&gt; | &lt;a href=&quot;https://www.linuxfoundation.org/cookies/&quot;&gt;Cookie Policy&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>InfinityLoop1308/PipePipe</title>
      <link>https://github.com/InfinityLoop1308/PipePipe</link>
      <description>&lt;p&gt;An open-source Android app to let you browse YouTube, NicoNico and BiliBili freely.&lt;/p&gt;&lt;hr&gt;&lt;hr /&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/assets/logo.png&quot; width=&quot;150&quot; /&gt;&lt;/p&gt; 
&lt;h2 align=&quot;center&quot;&gt;&lt;b&gt;PipePipe&lt;/b&gt;&lt;/h2&gt; 
&lt;h4 align=&quot;center&quot;&gt; NewPipe, reimagined: faster, more stable, and packed with more features.&lt;/h4&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;a href=&quot;https://f-droid.org/packages/InfinityLoop1309.NewPipeEnhanced/&quot;&gt;&lt;img src=&quot;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&quot; alt=&quot;Get it on F-Droid&quot; width=&quot;207&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://apt.izzysoft.de/fdroid/index/apk/InfinityLoop1309.NewPipeEnhanced&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/assets/IzzyOnDroid.png&quot; alt=&quot;Get it on IzzyOnDroid&quot; width=&quot;207&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Beyond NewPipe&lt;/h2&gt; 
&lt;h4&gt;YouTube Enhancements&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integrate SponsorBlock for skipping sponsored segments (YouTube &amp;amp; BiliBili)&lt;/li&gt; 
 &lt;li&gt;Restore YouTube dislikes with ReturnYouTubeDislike&lt;/li&gt; 
 &lt;li&gt;Show original titles on YouTube (non-localized)&lt;/li&gt; 
 &lt;li&gt;Log in to access restricted or premium content&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Media Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Display live chats in danmaku-style overlays&lt;/li&gt; 
 &lt;li&gt;Support AV1 and VP9 codecs for efficient, high-quality playback&lt;/li&gt; 
 &lt;li&gt;Enable music player mode with background playback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Filtering&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apply advanced search filters for better discovery&lt;/li&gt; 
 &lt;li&gt;Filter out unwanted items by keywords or channels&lt;/li&gt; 
 &lt;li&gt;Block shorts and paid videos for a cleaner feed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Playback Controls&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use swipe-to-seek and fullscreen gestures for intuitive navigation&lt;/li&gt; 
 &lt;li&gt;Long-press to speed up playback&lt;/li&gt; 
 &lt;li&gt;Set a sleep timer for bedtime listening&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Enhanced Playlists&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download full playlists at once&lt;/li&gt; 
 &lt;li&gt;Search and sort within local playlists and histories&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;... and many more improvements!&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/00-v1.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/00-v2.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/01-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/01-v3.png&quot; width=&quot;160&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/02-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/02-v3.png&quot; width=&quot;160&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/03-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/03-v3.png&quot; width=&quot;160&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/04-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/04-v3.png&quot; width=&quot;160&quot; /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/05-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/05-v3.png&quot; width=&quot;160&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/06-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/06-v3.png&quot; width=&quot;160&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/07-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/07-v3.png&quot; width=&quot;160&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/08-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/08-v3.png&quot; width=&quot;160&quot; /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/09-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/09-v3.png&quot; width=&quot;160&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/10-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/10-v3.png&quot; width=&quot;160&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/11-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/11-v3.png&quot; width=&quot;160&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/12-v3.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/InfinityLoop1308/PipePipe/main/fastlane/metadata/android/en-US/images/phoneScreenshots/12-v3.png&quot; width=&quot;160&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About this fork&lt;/h2&gt; 
&lt;p&gt;Due to differences in development philosophy, I forked NewPipe in early 2022 and began independent development based on it.&lt;/p&gt; 
&lt;p&gt;This means that PipePipe neither receives updates from NewPipe nor pushes updates to NewPipe. They have become two separate projects. Issues that occur in NewPipe don&#39;t necessarily happen in PipePipe, and changes made in NewPipe may not be adopted by PipePipe. In contrast, forks like Tubular track the latest version of NewPipe and develop based on it.&lt;/p&gt; 
&lt;p&gt;Making a hard fork allows us to effectively address issues with quick fixes and maintain frequent feature updates.&lt;/p&gt; 
&lt;h2&gt;About sign in&lt;/h2&gt; 
&lt;p&gt;PipePipe will ONLY use the login cookie for the specified scenarios you set. You can configure it in &quot;Cookie Functions.&quot;&lt;/p&gt; 
&lt;p&gt;For YouTube, the cookie will only be used when retrieving playback streams.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;Issues and PRs are welcomed. Please note that I will &lt;strong&gt;NOT&lt;/strong&gt; accept service requests.&lt;/p&gt; 
&lt;p&gt;Anyone interested in creating their own service is encouraged to fork this repository.&lt;/p&gt; 
&lt;h2&gt;Getting Nightly Builds&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://nightly.pipepipe.dev&quot;&gt;https://nightly.pipepipe.dev&lt;/a&gt; to download the latest nightly builds. These give you access to the most recent updates and fixes before they&#39;re included in the next official release.&lt;/p&gt; 
&lt;h2&gt;Donation&lt;/h2&gt; 
&lt;p&gt;If you find PipePipe useful, please consider becoming a supporter on Ko-Fi. Your support is important to me and helps me add more exciting new features. Every bit counts! 😇&lt;/p&gt; 
&lt;p&gt;Liberapay: &lt;a href=&quot;https://liberapay.com/PipePipe&quot;&gt;https://liberapay.com/PipePipe&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Ko-fi: &lt;a href=&quot;https://ko-fi.com/pipepipe&quot;&gt;https://ko-fi.com/pipepipe&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/SocialSisterYi/bilibili-API-collect&quot;&gt;SocialSisterYi/bilibili-API-collect&lt;/a&gt; for providing some BiliBili API lists.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/AioiLight&quot;&gt;AioiLight&lt;/a&gt; for providing some code of NicoNico service.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pi-hole/pi-hole</title>
      <link>https://github.com/pi-hole/pi-hole</link>
      <description>&lt;p&gt;A black hole for Internet advertisements&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/pi-hole/graphics/refs/heads/master/Vortex/vortex_with_text.svg?sanitize=true&quot; alt=&quot;Pi-hole website&quot; width=&quot;168&quot; height=&quot;270&quot; /&gt; &lt;br /&gt; &lt;strong&gt;Network-wide ad blocking via your own Linux hardware&lt;/strong&gt; &lt;/p&gt; 
&lt;!-- markdownlint-enable MD033 --&gt; 
&lt;p&gt;The Pi-hole® is a &lt;a href=&quot;https://en.wikipedia.org/wiki/DNS_Sinkhole&quot;&gt;DNS sinkhole&lt;/a&gt; that protects your devices from unwanted content without installing any client-side software.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Easy-to-install&lt;/strong&gt;: our dialogs walk you through the simple installation process in less than ten minutes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Resolute&lt;/strong&gt;: content is blocked in &lt;em&gt;non-browser locations&lt;/em&gt;, such as ad-laden mobile apps and smart TVs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Responsive&lt;/strong&gt;: seamlessly speeds up the feel of everyday browsing by caching DNS queries&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt;: runs smoothly with &lt;a href=&quot;https://docs.pi-hole.net/main/prerequisites/&quot;&gt;minimal hardware and software requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Robust&lt;/strong&gt;: a command-line interface that is quality assured for interoperability&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Insightful&lt;/strong&gt;: a beautiful responsive Web Interface dashboard to view and control your Pi-hole&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Versatile&lt;/strong&gt;: can optionally function as a &lt;a href=&quot;https://discourse.pi-hole.net/t/how-do-i-use-pi-holes-built-in-dhcp-server-and-why-would-i-want-to/3026&quot;&gt;DHCP server&lt;/a&gt;, ensuring &lt;em&gt;all&lt;/em&gt; your devices are protected automatically&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: &lt;a href=&quot;https://pi-hole.net/2017/05/24/how-much-traffic-can-pi-hole-handle/&quot;&gt;capable of handling hundreds of millions of queries&lt;/a&gt; when installed on server-grade hardware&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modern&lt;/strong&gt;: blocks ads over both IPv4 and IPv6&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Free&lt;/strong&gt;: open source software that helps ensure &lt;em&gt;you&lt;/em&gt; are the sole person in control of your privacy&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;One-Step Automated Install&lt;/h2&gt; 
&lt;p&gt;Those who want to get started quickly and conveniently may install Pi-hole using the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -sSL https://install.pi-hole.net | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Alternative Install Methods&lt;/h2&gt; 
&lt;p&gt;Piping to &lt;code&gt;bash&lt;/code&gt; is &lt;a href=&quot;https://pi-hole.net/2016/07/25/curling-and-piping-to-bash&quot;&gt;controversial&lt;/a&gt;, as it prevents you from &lt;a href=&quot;https://github.com/pi-hole/pi-hole/raw/master/automated%20install/basic-install.sh&quot;&gt;reading code that is about to run&lt;/a&gt; on your system. Therefore, we provide these alternative installation methods which allow code review before installation:&lt;/p&gt; 
&lt;h3&gt;Method 1: Clone our repository and run&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone --depth 1 https://github.com/pi-hole/pi-hole.git Pi-hole
cd &quot;Pi-hole/automated install/&quot;
sudo bash basic-install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Method 2: Manually download the installer and run&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;wget -O basic-install.sh https://install.pi-hole.net
sudo bash basic-install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Method 3: Using Docker to deploy Pi-hole&lt;/h3&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://github.com/pi-hole/docker-pi-hole&quot;&gt;Pi-hole docker repo&lt;/a&gt; to use the Official Docker Images.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://docs.pi-hole.net/main/post-install/&quot;&gt;Post-install: Make your network take advantage of Pi-hole&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Once the installer has been run, you will need to &lt;a href=&quot;https://discourse.pi-hole.net/t/how-do-i-configure-my-devices-to-use-pi-hole-as-their-dns-server/245&quot;&gt;configure your router to have &lt;strong&gt;DHCP clients use Pi-hole as their DNS server&lt;/strong&gt;&lt;/a&gt;. This router configuration will ensure that all devices connecting to your network will have content blocked without any further intervention.&lt;/p&gt; 
&lt;p&gt;If your router does not support setting the DNS server, you can &lt;a href=&quot;https://discourse.pi-hole.net/t/how-do-i-use-pi-holes-built-in-dhcp-server-and-why-would-i-want-to/3026&quot;&gt;use Pi-hole&#39;s built-in DHCP server&lt;/a&gt;; be sure to disable DHCP on your router first (if it has that feature available).&lt;/p&gt; 
&lt;p&gt;As a last resort, you can manually set each device to use Pi-hole as their DNS server.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Pi-hole is free but powered by your support&lt;/h2&gt; 
&lt;p&gt;There are many reoccurring costs involved with maintaining free, open-source, and privacy-respecting software; expenses which &lt;a href=&quot;https://github.com/orgs/pi-hole/people&quot;&gt;our volunteer developers&lt;/a&gt; pitch in to cover out-of-pocket. This is just one example of how strongly we feel about our software and the importance of keeping it maintained.&lt;/p&gt; 
&lt;p&gt;Make no mistake: &lt;strong&gt;your support is absolutely vital to help keep us innovating!&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://pi-hole.net/donate&quot;&gt;Donations&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Donating using our Sponsor Button is &lt;strong&gt;extremely helpful&lt;/strong&gt; in offsetting a portion of our monthly expenses:&lt;/p&gt; 
&lt;h3&gt;Alternative support&lt;/h3&gt; 
&lt;p&gt;If you&#39;d rather not donate (&lt;em&gt;which is okay!&lt;/em&gt;), there are other ways you can help support us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sponsors/pi-hole/&quot;&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://patreon.com/pihole&quot;&gt;Patreon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://hetzner.cloud/?ref=7aceisRX3AzA&quot;&gt;Hetzner Cloud&lt;/a&gt; &lt;em&gt;affiliate link&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/?refcode=344d234950e1&quot;&gt;Digital Ocean&lt;/a&gt; &lt;em&gt;affiliate link&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.stickermule.com/unlock?ref_id=9127301701&amp;amp;utm_medium=link&amp;amp;utm_source=invite&quot;&gt;Stickermule&lt;/a&gt; &lt;em&gt;earn a $10 credit after your first purchase&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/exec/obidos/redirect-home/pihole09-20&quot;&gt;Amazon US&lt;/a&gt; &lt;em&gt;affiliate link&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Spreading the word about our software and how you have benefited from it&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing via GitHub&lt;/h3&gt; 
&lt;p&gt;We welcome &lt;em&gt;everyone&lt;/em&gt; to contribute to issue reports, suggest new features, and create pull requests.&lt;/p&gt; 
&lt;p&gt;If you have something to add - anything from a typo through to a whole new feature, we&#39;re happy to check it out! Just make sure to fill out our template when submitting your request; the questions it asks will help the volunteers quickly understand what you&#39;re aiming to achieve.&lt;/p&gt; 
&lt;p&gt;You&#39;ll find that the &lt;a href=&quot;https://github.com/pi-hole/pi-hole/raw/master/automated%20install/basic-install.sh&quot;&gt;install script&lt;/a&gt; and the &lt;a href=&quot;https://github.com/pi-hole/pi-hole/raw/master/advanced/Scripts/piholeDebug.sh&quot;&gt;debug script&lt;/a&gt; have an abundance of comments, which will help you better understand how Pi-hole works. They&#39;re also a valuable resource to those who want to learn how to write scripts or code a program! We encourage anyone who likes to tinker to read through it and submit a pull request for us to review.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Getting in touch with us&lt;/h2&gt; 
&lt;p&gt;While we are primarily reachable on our &lt;a href=&quot;https://discourse.pi-hole.net/&quot;&gt;Discourse User Forum&lt;/a&gt;, we can also be found on various social media outlets.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please be sure to check the FAQs&lt;/strong&gt; before starting a new discussion, as we do not have the spare time to reply to every request for assistance.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discourse.pi-hole.net/c/faqs&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discourse.pi-hole.net/c/feature-requests?order=votes&quot;&gt;Feature Requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/pihole/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/The_Pi_hole&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Breakdown of Features&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/pi-hole/ftl&quot;&gt;Faster-than-light Engine&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/pi-hole/ftl&quot;&gt;FTLDNS&lt;/a&gt; is a lightweight, purpose-built daemon used to provide statistics needed for the Web Interface, and its API can be easily integrated into your own projects. As the name implies, FTLDNS does this all &lt;em&gt;very quickly&lt;/em&gt;!&lt;/p&gt; 
&lt;p&gt;Some of the statistics you can integrate include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Total number of domains being blocked&lt;/li&gt; 
 &lt;li&gt;Total number of DNS queries today&lt;/li&gt; 
 &lt;li&gt;Total number of ads blocked today&lt;/li&gt; 
 &lt;li&gt;Percentage of ads blocked&lt;/li&gt; 
 &lt;li&gt;Unique domains&lt;/li&gt; 
 &lt;li&gt;Queries forwarded (to your chosen upstream DNS server)&lt;/li&gt; 
 &lt;li&gt;Queries cached&lt;/li&gt; 
 &lt;li&gt;Unique clients&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Access the API using:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;your browser: &lt;a href=&quot;http://pi.hole/api/docs&quot;&gt;http://pi.hole/api/docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;curl&lt;/code&gt;: &lt;code&gt;curl --connect-timeout 2 -ks &quot;https://pi.hole/api/stats/summary&quot; -H &quot;Accept: application/json&quot;&lt;/code&gt;;&lt;/li&gt; 
 &lt;li&gt;the command line - examples: &lt;code&gt;pihole api config/webserver/port&lt;/code&gt; or &lt;code&gt;pihole api stats/summary&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;The Command-Line Interface&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://docs.pi-hole.net/core/pihole-command/&quot;&gt;pihole&lt;/a&gt; command has all the functionality necessary to fully administer the Pi-hole, without the need for the Web Interface. It&#39;s fast, user-friendly, and auditable by anyone with an understanding of &lt;code&gt;bash&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Some notable features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.pi-hole.net/core/pihole-command/#allowlisting-denylisting-and-regex&quot;&gt;Allowlisting, Denylisting (fka Whitelisting, Blacklisting), and Regex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.pi-hole.net/core/pihole-command/#debugger&quot;&gt;Debugging utility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.pi-hole.net/core/pihole-command/#tail&quot;&gt;Viewing the live log file&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.pi-hole.net/core/pihole-command/#gravity&quot;&gt;Updating Ad Lists&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.pi-hole.net/core/pihole-command/#query&quot;&gt;Querying Ad Lists for blocked domains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.pi-hole.net/core/pihole-command/#enable-disable&quot;&gt;Enabling and Disabling Pi-hole&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;... and &lt;em&gt;many&lt;/em&gt; more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can read our &lt;a href=&quot;https://docs.pi-hole.net/core/pihole-command/#pi-hole-core&quot;&gt;Core Feature Breakdown&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;The Web Interface Dashboard&lt;/h3&gt; 
&lt;p&gt;This &lt;a href=&quot;https://github.com/pi-hole/web&quot;&gt;optional dashboard&lt;/a&gt; allows you to view stats, change settings, and configure your Pi-hole. It&#39;s the power of the Command Line Interface, with none of the learning curve!&lt;/p&gt; 
&lt;p&gt;Some notable features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Mobile-friendly interface&lt;/li&gt; 
 &lt;li&gt;Password protection&lt;/li&gt; 
 &lt;li&gt;Detailed graphs and doughnut charts&lt;/li&gt; 
 &lt;li&gt;Top lists of domains and clients&lt;/li&gt; 
 &lt;li&gt;A filterable and sortable query log&lt;/li&gt; 
 &lt;li&gt;Long Term Statistics to view data over user-defined time ranges&lt;/li&gt; 
 &lt;li&gt;The ability to easily manage and configure Pi-hole features&lt;/li&gt; 
 &lt;li&gt;... and all the main features of the Command Line Interface!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are several ways to &lt;a href=&quot;https://discourse.pi-hole.net/t/how-do-i-access-pi-holes-dashboard-admin-interface/3168&quot;&gt;access the dashboard&lt;/a&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;http://pi.hole/admin/&lt;/code&gt; (when using Pi-hole as your DNS server)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;http://&amp;lt;IP_ADDRESS_OF_YOUR_PI_HOLE&amp;gt;/admin/&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>kanshurichard/enableAppleAI</title>
      <link>https://github.com/kanshurichard/enableAppleAI</link>
      <description>&lt;p&gt;Enable Apple Intelligence on Macs sold in Mainland China with SIP enabled, tested on MacOS 15.4.1+ and 26 beta&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;enableAppleAI&lt;/h1&gt; 
&lt;p&gt;一种在MacOS上（目前测试MacOS 15.4.1+及26 beta均可），无需长期运行后台服务，也无需长期禁用SIP，即可永久稳定开启中国销售Mac设备上Apple AI的方法。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.0版本已上线，支持相册的“消除（Clean Up）”功能开启！&lt;/strong&gt;&lt;/p&gt; 
&lt;img width=&quot;1411&quot; alt=&quot;截屏2025-05-04 09 42 49&quot; src=&quot;https://github.com/user-attachments/assets/eeb7a4ef-2d6d-46d5-8305-dd2daaafcd04&quot; /&gt; 
&lt;p&gt;TODO： 目前尚不知道能否实现的功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;登录非AI启用区Apple ID账号（如中国区）时&lt;/li&gt; 
 &lt;li&gt;外置硬盘安装macOS时&lt;/li&gt; 
 &lt;li&gt;系统语言与Siri语言不一致时&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在&lt;code&gt;/private/var/db/eligibilityd/eligibility.plist&lt;/code&gt; 这个系统文件中，有相关的代码，但目前还不知道要怎么改，才能去掉这些限制。&lt;/p&gt; 
&lt;p&gt;由于本人没有相关设备/账号，欢迎你根据现有代码进行尝试，并反馈你的测试结果。&lt;/p&gt; 
&lt;h2&gt;工作原理概述&lt;/h2&gt; 
&lt;p&gt;该脚本的主要思想是通过以下步骤尝试绕过 Apple 对 Apple 智能的启用检查：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;下载并执行一个&lt;a href=&quot;https://github.com/CatMe0w/zouxian&quot;&gt;外部的第三方脚本&lt;/a&gt;，该脚本会暂时注入eligibiltyd，使其向系统数据库输出该机型支持AI的信息（具体功能请参考该脚本的源仓库）。&lt;/li&gt; 
 &lt;li&gt;修改 &lt;code&gt;/private/var/db/eligibilityd/eligibility.plist&lt;/code&gt; 这个系统文件，特别是调整其中关于设备区域码 (OS_ELIGIBILITY_INPUT_DEVICE_REGION_CODE) 和外部启动盘 (OS_ELIGIBILITY_INPUT_EXTERNAL_BOOT_DRIVE) 的检查值，禁止系统用这些参数来作为功能开启的前提条件。&lt;/li&gt; 
 &lt;li&gt;通过修改文件权限和设置 &lt;code&gt;uchg&lt;/code&gt; (immutable) 标记，锁定修改后的数据库文件状态。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;前置条件&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;一台运行兼容 macOS 版本的 Mac (M1或以上CPU，macOS 15.1或以上版本)。&lt;/li&gt; 
 &lt;li&gt;管理员权限，因为脚本使用 &lt;code&gt;sudo&lt;/code&gt; 执行特权命令。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;登录iCloud的Apple ID不能是中国区&lt;/strong&gt;（美区肯定没问题，其他区未知）。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;系统地区设置为“美国”，系统语言、Siri语言均设置为&lt;code&gt;简体中文（普通话）/中国&lt;/code&gt;或&lt;code&gt;English(USA)&lt;/code&gt;——设置为其他不支持Apple AI的区域会导致开启失败。&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;稳定的互联网连接以下载脚本。&lt;/li&gt; 
 &lt;li&gt;SIP (System Integrity Protection) 已禁用。&lt;strong&gt;（破解完成后可重新开启，不影响AI功能）&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;执行步骤&lt;/h2&gt; 
&lt;p&gt;请严格按照以下步骤操作：&lt;/p&gt; 
&lt;h3&gt;步骤 1: 禁用 System Integrity Protection (SIP)&lt;/h3&gt; 
&lt;p&gt;如果 SIP 已经禁用，可以跳过此步骤。如果未禁用，您必须手动禁用它：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;重启 Mac&lt;/strong&gt;。&lt;/li&gt; 
 &lt;li&gt;在 Mac 启动时，长按开机键，直到进入 macOS 恢复模式，途中你可能需要输入几次密码。&lt;/li&gt; 
 &lt;li&gt;在屏幕顶部的菜单栏中，选择 &lt;strong&gt;实用工具 (Utilities)&lt;/strong&gt; &amp;gt; &lt;strong&gt;终端 (Terminal)&lt;/strong&gt;。&lt;/li&gt; 
 &lt;li&gt;在终端窗口中，输入以下命令并按回车： &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;csrutil disable
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;按y键确认，之后您会看到一条 SIP 已禁用的消息。&lt;/li&gt; 
 &lt;li&gt;在终端中，输入 &lt;code&gt;reboot&lt;/code&gt; 并按回车，或者从 Apple 菜单中选择 &lt;strong&gt;重启 (Restart)&lt;/strong&gt; 退出恢复模式并启动 Mac。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;步骤 2: 下载并运行脚本&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;单命令快速执行方法:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;如果您完全信任本脚本，可以使用以下单命令直接执行：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;最新2.13脚本：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在 @parkerjj 和 @MsRCAtN 帮助下，解决了两个可能导致注入失败的问题。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -sL https://raw.githubusercontent.com/kanshurichard/enableAppleAI/main/enable_ai.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;如果本版遇到问题，请您去提Issue，并可尝试2.11旧版：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -sL https://raw.githubusercontent.com/kanshurichard/enableAppleAI/main/enable_ai_old.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;如果在国内访问困难，请尝试以下国内加速地址：&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -sL https://cdn.jsdelivr.net/gh/kanshurichard/enableAppleAI@main/enable_ai.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;手动执行脚本:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;打开 &lt;strong&gt;终端 (Terminal)&lt;/strong&gt; 应用程序。&lt;/li&gt; 
 &lt;li&gt;使用 &lt;code&gt;curl&lt;/code&gt; 下载脚本文件到当前目录： &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl -O https://raw.githubusercontent.com/kanshurichard/enableAppleAI/main/enable_ai.sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;审查脚本内容：&lt;/strong&gt; 使用文本编辑器或命令行工具（如 &lt;code&gt;cat enable_ai.sh&lt;/code&gt;）仔细阅读下载的 &lt;code&gt;enable_ai.sh&lt;/code&gt; 文件，确保您理解它将执行的操作。&lt;/li&gt; 
 &lt;li&gt;赋予脚本执行权限： &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;chmod +x enable_ai.sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;执行脚本： &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./enable_ai.sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;步骤 3: 按照脚本提示操作&lt;/h3&gt; 
&lt;p&gt;脚本运行过程中会输出当前执行的步骤，并可能在某个阶段暂停，提示您去“系统设置”中检查 Apple 智能是否已经显示为开启状态。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;如果 Apple 智能已经显示，请按 Y 键继续脚本的剩余部分。&lt;/li&gt; 
 &lt;li&gt;如果 Apple 智能未显示为开启，请按 N 键，脚本会自动恢复所有已有的修改。之后您可以重试一次，或来这里提交Issues。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;步骤 4: 重启并最终确认&lt;/h3&gt; 
&lt;p&gt;脚本完成执行后：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;重启您的 Mac。&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;重启后，再次前往 &lt;strong&gt;系统设置 (System Settings)&lt;/strong&gt; &amp;gt; &lt;strong&gt;通用 (General)&lt;/strong&gt; &amp;gt; &lt;strong&gt;Apple 智能 (Apple Intelligence)&lt;/strong&gt; 检查功能状态。&lt;/li&gt; 
 &lt;li&gt;如果 Apple 智能仍为开启状态，并且您希望恢复系统的安全性，&lt;strong&gt;强烈建议&lt;/strong&gt;您再次进入恢复模式，执行 &lt;code&gt;csrutil enable&lt;/code&gt; 命令重新启用 SIP。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;故障排除与反馈&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;如果脚本执行过程中遇到错误，请检查终端输出的错误信息。&lt;/li&gt; 
 &lt;li&gt;如果按照步骤执行后 Apple 智能未能成功启用，或者出现其他异常，您也可以在本项目的 GitHub Issues 中提交问题。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;常见问题&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;问：如何卸载？&lt;/strong&gt;&lt;br /&gt; 答：只要在关闭SIP后，重新运行一遍脚本，到了问你是否看到AI功能出现的那一步，按“N”选否，脚本就会自动解锁所有已锁定文件。再次重启电脑后，系统就会自动用原始系统文件替代修改后的文件，相当于卸载所有对系统的更改。此时可以重新开启SIP。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;问：能否在登录国区账号为iCloud时开启AI？&lt;/strong&gt;&lt;br /&gt; 答：目前还不可以，但有人进行了相关尝试，并（可能）&lt;a href=&quot;https://github.com/kanshurichard/enableAppleAI/issues/6&quot;&gt;找到了一种变通的方法&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;问：执行eligibilityd相关的注入代码时报错，怎么办？&lt;/strong&gt;&lt;br /&gt; 答：这个问题已有多个报告，基本都是之前运行过其他开启AI的代码，比如 &lt;a href=&quot;https://github.com/Kyle-Ye/XcodeLLMEligible/&quot;&gt;XcodeLLMEligible&lt;/a&gt; 。我猜测由于该项目代码会尝试用自制程序替代系统自带的eligibilityd，导致现在代码无法注入真正的eligibilityd。请尝试用各种方式卸载之前破解残留的内容，还不行的话可能只能重装系统了。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;问：开启AI后，Siri调用的仍然是百度百科这类国内工具，ChatGPT也无法正常调用，怎么办？&lt;/strong&gt;&lt;br /&gt; 答：Siri并不使用机型代码，而是使用你的IP地址和Wifi定位，判断是否调用国内服务（如百度），即使在外版机型上，也是这样的。请在设置-隐私与安全性-定位服务中关闭Siri的定位权限，并考虑将所有相关URL放入代理名单，如需更多帮助，可参考：&lt;a href=&quot;https://nsringo.github.io%E3%80%82&quot;&gt;https://nsringo.github.io。&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;问：图乐园（Image Playground）无法创建图片的原因？&lt;/strong&gt;&lt;br /&gt; 答：图乐园目前不支持中文语言下创建图片，请将系统语言改为英语（美国），即可正常使用。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;问：是否能开启繁体中文的AI？&lt;/strong&gt;&lt;br /&gt; 答：不可以，因为Apple到目前（2025.5）为止都没有支持繁体中文AI，因而你无法下载到相关语言文件。为开启AI，请确保系统相关语言设置为简体中文（或其他受到支持的语言）。&lt;/p&gt; 
&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>ublue-os/bluefin</title>
      <link>https://github.com/ublue-os/bluefin</link>
      <description>&lt;p&gt;The next generation Linux workstation, designed for reliability, performance, and sustainability.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bluefin&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Deinonychus antirrhopus&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.codacy.com/gh/ublue-os/bluefin/dashboard?utm_source=gh&amp;amp;utm_medium=referral&amp;amp;utm_content=&amp;amp;utm_campaign=Badge_grade&quot;&gt;&lt;img src=&quot;https://app.codacy.com/project/badge/Grade/2503a44c1105456483517f793af75ee7&quot; alt=&quot;Codacy Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ublue-os/bluefin/actions/workflows/build-image-gts.yml&quot;&gt;&lt;img src=&quot;https://github.com/ublue-os/bluefin/actions/workflows/build-image-gts.yml/badge.svg?sanitize=true&quot; alt=&quot;GTS Images&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ublue-os/bluefin/actions/workflows/build-image-stable.yml&quot;&gt;&lt;img src=&quot;https://github.com/ublue-os/bluefin/actions/workflows/build-image-stable.yml/badge.svg?sanitize=true&quot; alt=&quot;Stable Images&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ublue-os/bluefin/actions/workflows/build-image-latest-main.yml&quot;&gt;&lt;img src=&quot;https://github.com/ublue-os/bluefin/actions/workflows/build-image-latest-main.yml/badge.svg?sanitize=true&quot; alt=&quot;Latest Images&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ublue-os/bluefin&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/ublue-os/countme/main/badge-endpoints/bluefin.json&amp;amp;label=Bluefin&amp;amp;logo=data:image%2Fpng;base64,iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC%2FxhBQAAAAFzUkdCAdnJLH8AAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB%2BkHDxYrIEJpLs8AAAXQSURBVFjD7ZZrbFtnGcf%2F55z3XO1jJ7ZjO7c2Sd1bmnVNM5o2tIh2mgYf6IYYk5iAsolREAMJaRI3CZAmkCYkJk0UpKBpW7VVRR0S64o2NNY1nVibdkvWdk7WS2wnji%2BxHdvpOcfnfg6fQEOwSkiJ%2BJLf9%2Bd9fh%2Be93n%2BwDrrrPN%2FhlrrBjs7H4kM7OvfF44mDsf6kgfqRAyYrZW3i6cmvnNu5g86WavGI9u%2BzX%2F2C596SZDbvxQRWMo1W5idnQHXl0L3th1HFuOXZzGDp5m1EggbA0O7eq1nmfo8ZVXyWFnKI5XqQUuKwFGbkCNyKub3HFszgZqVXhrq3b0NvudUm3bS79kINdIF17DgwQXLC22Tpy7Pr4nA%2FWNPEK7Rv%2F319PO%2FjyV2jbu6Je%2FZIOyLGg1wKxVoQghEECBE2MKqDeHm2CPJ%2BHB8%2F5bR0WGfpr9JeDZOeGHJVJV3qrcyk1ud5Sc7E6GEJIhYau%2BDRhF8dOnK5B0FDg49ThZzy2ObH9j9XYbmUjRhZgPt4ZuU55amXjkHe8XwEju6tvfvH34sMbC5TZQk0FIIvmdDWa4gHIvD1nWYug61VkG4fB0hiYMR7Ydi2yjfyP3yEwUevu%2F7T3WPjf6gs6s7wPM8bB%2BAIKJFCBzTg0cBlOvArFdA0wxc1wANAoqmwXACwIvwHQueZUBr1BBKboBRyIF3W6CD7SABHlNv%2FO3R%2FxDYEnqo%2F96ffO14Isjvl2wbqqbAjSfh16qgbQuBaASaYcAmElzThG2boAkHQmhYpgUp2gGlXIQginAsEzTLgqEZUDQN13VAKAKP9qDVKrULL7%2B79d%2F2wKGxxw%2FsOvz5v0gsZLpewbKiICnRsOabkAUOK80qiFZByNCgtHfBlOMgHgOGMIAHEIaB12qBE3g0a1WwUhDNUh69Ayn4lAfLsGBRNkTiAGr16en8C%2FV%2FCXzu3qOH9o4MviaqBUlt%2BQiEg6jV6hBTG5Av5%2BHIAVxrMnAJDYuWQZVa6IYCz%2FPA8jY4QYShtSCxBIThYTsOGNdH3%2BatcD0bhqoie2sOvRt70CyXJ0pT5WcAgBlLPSrI3vaffvozqed7wgH26rUMBlOdmLyUtof7Ikwul7tQLjVemFpQzto8f5fPUBINAsBH87YGrWVgcSaDjs4OiJIEyqcAyke1WIVEXMiMDZ8PgmEoULaBWmYeMxezP5%2B4Mv4BADDtgR3S6N6O32xKyHFHbaLRbOkdvM3emC2fDHJG%2FczZpa%2B8Of3c6fncxYkOo%2Fe5Sr5%2BwYMd0xVtAPBBcSyUpoJYNAQxIAI%2BoN1uIrtQwkgY8CkCgVCwaBYsL2DuZhEs638xpG1qVfQP3yXdUfarG9rYVoyYuJatn9sS5dpW6s2reoD9xi9eftb%2F%2BIxcnHuxDuDVL3c%2BcfrU%2Bd%2F6ewYeCzoB%2Bliyt%2F2hGOdLlKHAtmzM3VyEKAdQzZfQ32uiYOgIiQJuhxK4e2QTPnjtLcCnbwAAE5UGC0M94lZVb509ebrxY8PW3i%2FowWfOnD%2Fmf9IXnZm%2FBAAoNKatUmXqzw%2BOHfxRTKR42lBx4fyHoEMByBIHDTTMhQXIroZioAODsofyrTzy2ao2XTx5BADIZOZEcTKDo%2F98%2FPoV5P%2FXLShYismprjy3qJy8XW0c4FtqiE6E5xdyyq%2B4kHP37m7%2BhzElh6wfQU1ptGyb%2Btmhe77Fnn1v3F6VWxAkqR2m7e2aTKt7BMnZa%2BrOpXJGPRrvYCjP5t%2B5q4v%2B3vKy5r3xev5EUqb%2B9NfpF3%2BdLb7vAcCq5IFszjo%2BvF04YqsrO7%2F%2B5OGhm3MLbsvwXg23i6%2BU5orpP16sDnEy2WjxZCZTcEofr10VgZ6dHRO65eu772k%2Fdv2jue7Lf79Cg2aFtra2DC8G3z6TPp4GkP5vtfRqCLx5%2FneuYVjpZIiM1GYXKFvlirpujy9kmstNw5DvVLtqkaywbJyI2I5XXNHJ6MFB8%2BrVxafemhlfRHY9eK9zZ%2F4BT9GkAVNsoqgAAAAASUVORK5CYII%3D&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://insights.linuxfoundation.org/project/ublue-os-bluefin/repository/ublue-os-bluefin/security&quot;&gt;&lt;img src=&quot;https://insights.linuxfoundation.org/api/badge/active-contributors?project=ublue-os-bluefin&amp;amp;repos=https://github.com/ublue-os/bluefin&quot; alt=&quot;LFX Active Contributors&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://deepwiki.com/ublue-os/bluefin-docs&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg?sanitize=true&quot; alt=&quot;Ask DeepWiki&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bluefin&lt;/strong&gt; is a cloud-native desktop operating system that reimagines the Linux desktop experience for modern computing environments.&lt;/p&gt; 
&lt;p&gt;For end users, it provides a system as reliable as a Chromebook with near-zero maintenance. For developers, it offers a kickass cloud-native developer workflow with integrated container tools, declarative system management, and seamless CI/CD integration. Check &lt;a href=&quot;https://docs.projectbluefin.io/introduction/&quot;&gt;Introduction to Bluefin&lt;/a&gt; for a feature walkthrough.&lt;/p&gt; 
&lt;p&gt;🌐 &lt;strong&gt;&lt;a href=&quot;https://projectbluefin.io/#scene-picker&quot;&gt;Try Bluefin&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/e7d2a0af-b011-459a-8ab7-c26d3ba50ae5&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Mission&lt;/h2&gt; 
&lt;p&gt;Bluefin&#39;s mission is to provide a robust, cloud-native desktop operating system that bridges the gap between consumer usability and enterprise-grade infrastructure practices. We aim to deliver:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Reliability&lt;/strong&gt;: Atomic updates ensuring system stability&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer Experience&lt;/strong&gt;: Integrated cloud-native tooling and workflows, including Kubernetes and container support&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sustainability&lt;/strong&gt;: Reduced maintenance overhead for contributors by using the latest cloud native infrastructure tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Communications&lt;/h2&gt; 
&lt;h3&gt;Community Channels&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;📰 &lt;a href=&quot;https://blog.projectbluefin.io/&quot;&gt;Announcements&lt;/a&gt;&lt;/strong&gt; - Official project blog and announcements&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💬 &lt;a href=&quot;https://community.projectbluefin.io/&quot;&gt;Discussions&lt;/a&gt;&lt;/strong&gt; - Community forum (strongly recommended!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📖 &lt;a href=&quot;https://docs.projectbluefin.io/&quot;&gt;Documentation&lt;/a&gt;&lt;/strong&gt; - Complete documentation portal&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 &lt;a href=&quot;https://docs.projectbluefin.io/contributing&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/strong&gt; - How to contribute to the project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contact Information&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ublue-os/bluefin/issues&quot;&gt;Bug reports and feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Discussions&lt;/strong&gt;: &lt;a href=&quot;https://github.com/ublue-os/bluefin/discussions&quot;&gt;General questions and community support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Community Forum&lt;/strong&gt;: &lt;a href=&quot;https://community.projectbluefin.io/&quot;&gt;community.projectbluefin.io&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Maintainers&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/ublue-os/bluefin/raw/main/.github/CODEOWNERS&quot;&gt;CODEOWNERS&lt;/a&gt; for the current list of project maintainers.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://projectbluefin.io/#scene-picker&quot;&gt;projectbluefin.io&lt;/a&gt; to explore installation options and get started with Bluefin.&lt;/p&gt; 
&lt;h3&gt;Secure Boot&lt;/h3&gt; 
&lt;p&gt;Secure Boot is supported by default on our systems, providing an additional layer of security. After the first installation, you will be prompted to enroll the secure boot key in the BIOS.&lt;/p&gt; 
&lt;p&gt;Enter the password &lt;code&gt;universalblue&lt;/code&gt; when prompted to enroll our key.&lt;/p&gt; 
&lt;p&gt;If this step is not completed during the initial setup, you can manually enroll the key by running the following command in the terminal:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ujust enroll-secure-boot-key&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Secure boot is supported with our custom key. The pub key can be found in the root of the akmods repository &lt;a href=&quot;https://github.com/ublue-os/akmods/raw/main/certs/public_key.der&quot;&gt;here&lt;/a&gt;. If you&#39;d like to enroll this key prior to installation or rebase, download the key and run the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo mokutil --timeout -1
sudo mokutil --import public_key.der
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project follows the &lt;a href=&quot;https://docs.projectbluefin.io/contributing#community-guidelines&quot;&gt;Universal Blue Community Guidelines&lt;/a&gt;. We are committed to providing a welcoming and inclusive environment for all contributors and users.&lt;/p&gt; 
&lt;p&gt;All participants in our community are expected to follow our code of conduct. Please report any violations to the project maintainers.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Apache License 2.0 - see the &lt;a href=&quot;https://raw.githubusercontent.com/ublue-os/bluefin/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h3&gt;Third-Party Components&lt;/h3&gt; 
&lt;p&gt;Bluefin incorporates and builds upon several open source projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Fedora Linux&lt;/strong&gt; - Base operating system foundation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GNOME Desktop Environment&lt;/strong&gt; - Desktop interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Universal Blue&lt;/strong&gt; - Cloud Native desktop infrastructure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Various CNCF Projects&lt;/strong&gt; - Cloud-native tooling and containers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All incorporated components maintain their respective licenses and attributions.&lt;/p&gt; 
&lt;h2&gt;Repobeats&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://repobeats.axiom.co/api/embed/40b85b252bf6ea25eb90539d1adcea013ccae69a.svg?sanitize=true&quot; alt=&quot;Alt&quot; title=&quot;Repobeats analytics image&quot; /&gt;&lt;/p&gt; 
&lt;!-- Copy-paste in your Readme.md file --&gt; 
&lt;a href=&quot;https://next.ossinsight.io/widgets/official/compose-org-participants-growth?activity=new&amp;amp;period=past_90_days&amp;amp;owner_id=120078124&amp;amp;repo_ids=611397346&quot; target=&quot;_blank&quot; style=&quot;display: block&quot; align=&quot;center&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://next.ossinsight.io/widgets/official/compose-org-participants-growth/thumbnail.png?activity=new&amp;amp;period=past_90_days&amp;amp;owner_id=120078124&amp;amp;repo_ids=611397346&amp;amp;image_size=4x7&amp;amp;color_scheme=dark&quot; width=&quot;657&quot; height=&quot;auto&quot; /&gt; 
  &lt;img alt=&quot;New trends of ublue-os&quot; src=&quot;https://next.ossinsight.io/widgets/official/compose-org-participants-growth/thumbnail.png?activity=new&amp;amp;period=past_90_days&amp;amp;owner_id=120078124&amp;amp;repo_ids=611397346&amp;amp;image_size=4x7&amp;amp;color_scheme=light&quot; width=&quot;657&quot; height=&quot;auto&quot; /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;!-- Made with [OSS Insight](https://ossinsight.io/) --&gt; 
&lt;!-- Copy-paste in your Readme.md file --&gt; 
&lt;a href=&quot;https://next.ossinsight.io/widgets/official/compose-org-participants-growth?activity=active&amp;amp;period=past_90_days&amp;amp;owner_id=120078124&amp;amp;repo_ids=611397346&quot; target=&quot;_blank&quot; style=&quot;display: block&quot; align=&quot;center&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://next.ossinsight.io/widgets/official/compose-org-participants-growth/thumbnail.png?activity=active&amp;amp;period=past_90_days&amp;amp;owner_id=120078124&amp;amp;repo_ids=611397346&amp;amp;image_size=4x7&amp;amp;color_scheme=dark&quot; width=&quot;657&quot; height=&quot;auto&quot; /&gt; 
  &lt;img alt=&quot;Active trends of ublue-os&quot; src=&quot;https://next.ossinsight.io/widgets/official/compose-org-participants-growth/thumbnail.png?activity=active&amp;amp;period=past_90_days&amp;amp;owner_id=120078124&amp;amp;repo_ids=611397346&amp;amp;image_size=4x7&amp;amp;color_scheme=light&quot; width=&quot;657&quot; height=&quot;auto&quot; /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href=&quot;https://star-history.com/#ublue-os/bluefin&amp;amp;Date&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://api.star-history.com/svg?repos=ublue-os/bluefin&amp;amp;type=Date&amp;amp;theme=dark&quot; /&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://api.star-history.com/svg?repos=ublue-os/bluefin&amp;amp;type=Date&quot; /&gt; 
  &lt;img alt=&quot;Star History Chart&quot; src=&quot;https://api.star-history.com/svg?repos=ublue-os/bluefin&amp;amp;type=Date&quot; /&gt; 
 &lt;/picture&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>ohmyzsh/ohmyzsh</title>
      <link>https://github.com/ohmyzsh/ohmyzsh</link>
      <description>&lt;p&gt;🙃 A delightful community-driven (with 2,400+ contributors) framework for managing your zsh configuration. Includes 300+ optional plugins (rails, git, macOS, hub, docker, homebrew, node, php, python, etc), 140+ themes to spice up your morning, and an auto-update tool that makes it easy to keep up with the latest updates from the community.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;https://ohmyzsh.s3.amazonaws.com/omz-ansi-github.png&quot; alt=&quot;Oh My Zsh&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Oh My Zsh is an open source, community-driven framework for managing your &lt;a href=&quot;https://www.zsh.org/&quot;&gt;zsh&lt;/a&gt; configuration.&lt;/p&gt; 
&lt;p&gt;Sounds boring. Let&#39;s try again.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Oh My Zsh will not make you a 10x developer...but you may feel like one.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Once installed, your terminal shell will become the talk of the town &lt;em&gt;or your money back!&lt;/em&gt; With each keystroke in your command prompt, you&#39;ll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in cafés and ask you, &lt;em&gt;&quot;that is amazing! are you some sort of genius?&quot;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Finally, you&#39;ll begin to get the sort of attention that you have always felt you deserved. ...or maybe you&#39;ll use the time that you&#39;re saving to start flossing more often. 😬&lt;/p&gt; 
&lt;p&gt;To learn more, visit &lt;a href=&quot;https://ohmyz.sh&quot;&gt;ohmyz.sh&lt;/a&gt;, follow &lt;a href=&quot;https://x.com/ohmyzsh&quot;&gt;@ohmyzsh&lt;/a&gt; on X (formerly Twitter), and join us on &lt;a href=&quot;https://discord.gg/ohmyzsh&quot;&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/actions?query=workflow%3ACI&quot;&gt;&lt;img src=&quot;https://github.com/ohmyzsh/ohmyzsh/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/intent/follow?screen_name=ohmyzsh&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/ohmyzsh?label=%40ohmyzsh&amp;amp;logo=x&amp;amp;style=flat&quot; alt=&quot;X (formerly Twitter) Follow&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://mstdn.social/@ohmyzsh&quot;&gt;&lt;img src=&quot;https://img.shields.io/mastodon/follow/111169632522566717?label=%40ohmyzsh&amp;amp;domain=https%3A%2F%2Fmstdn.social&amp;amp;logo=mastodon&amp;amp;style=flat&quot; alt=&quot;Mastodon Follow&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/ohmyzsh&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/642496866407284746&quot; alt=&quot;Discord server&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gitpod.io/#https://github.com/ohmyzsh/ohmyzsh&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-ready-blue?logo=gitpod&quot; alt=&quot;Gitpod ready&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Table of Contents&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#getting-started&quot;&gt;Getting Started&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#operating-system-compatibility&quot;&gt;Operating System Compatibility&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#basic-installation&quot;&gt;Basic Installation&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-inspection&quot;&gt;Manual Inspection&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#using-oh-my-zsh&quot;&gt;Using Oh My Zsh&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#plugins&quot;&gt;Plugins&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#enabling-plugins&quot;&gt;Enabling Plugins&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#using-plugins&quot;&gt;Using Plugins&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#themes&quot;&gt;Themes&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#selecting-a-theme&quot;&gt;Selecting A Theme&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#advanced-topics&quot;&gt;Advanced Topics&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#advanced-installation&quot;&gt;Advanced Installation&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#custom-directory&quot;&gt;Custom Directory&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#unattended-install&quot;&gt;Unattended Install&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#installing-from-a-forked-repository&quot;&gt;Installing From A Forked Repository&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-installation&quot;&gt;Manual Installation&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#installation-problems&quot;&gt;Installation Problems&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#custom-plugins-and-themes&quot;&gt;Custom Plugins And Themes&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#enable-gnu-ls-in-macos-and-freebsd-systems&quot;&gt;Enable GNU ls In macOS And freeBSD Systems&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#skip-aliases&quot;&gt;Skip Aliases&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#async-git-prompt&quot;&gt;Async git prompt&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#getting-updates&quot;&gt;Getting Updates&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#updates-verbosity&quot;&gt;Updates Verbosity&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#manual-updates&quot;&gt;Manual Updates&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#uninstalling-oh-my-zsh&quot;&gt;Uninstalling Oh My Zsh&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#how-do-i-contribute-to-oh-my-zsh&quot;&gt;How Do I Contribute To Oh My Zsh?&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#do-not-send-us-themes&quot;&gt;Do Not Send Us Themes&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#follow-us&quot;&gt;Follow Us&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#merchandise&quot;&gt;Merchandise&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/#about-planet-argon&quot;&gt;About Planet Argon&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Operating System Compatibility&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;O/S&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Android&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;freeBSD&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;LCARS&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;🛸&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Linux&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;macOS&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;OS/2 Warp&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Windows (WSL2)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.zsh.org&quot;&gt;Zsh&lt;/a&gt; should be installed (v4.3.9 or more recent is fine but we prefer 5.0.8 and newer). If not pre-installed (run &lt;code&gt;zsh --version&lt;/code&gt; to confirm), check the following wiki instructions here: &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH&quot;&gt;Installing ZSH&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;wget&lt;/code&gt; should be installed&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git&lt;/code&gt; should be installed (recommended v2.4.11 or higher)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Basic Installation&lt;/h3&gt; 
&lt;p&gt;Oh My Zsh is installed by running one of the following commands in your terminal. You can install this via the command-line with either &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;wget&lt;/code&gt; or another similar tool.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Method&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;wget&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;fetch&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(fetch -o - https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Alternatively, the installer is also mirrored outside GitHub. Using this URL instead may be required if you&#39;re in a country like China or India (for certain ISPs), that blocks &lt;code&gt;raw.githubusercontent.com&lt;/code&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Method&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(curl -fsSL https://install.ohmyz.sh/)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;wget&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(wget -O- https://install.ohmyz.sh/)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;fetch&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;code&gt;sh -c &quot;$(fetch -o - https://install.ohmyz.sh/)&quot;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;em&gt;Note that any previous &lt;code&gt;.zshrc&lt;/code&gt; will be renamed to &lt;code&gt;.zshrc.pre-oh-my-zsh&lt;/code&gt;. After installation, you can move the configuration you want to preserve into the new &lt;code&gt;.zshrc&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Manual Inspection&lt;/h4&gt; 
&lt;p&gt;It&#39;s a good idea to inspect the install script from projects you don&#39;t yet know. You can do that by downloading the install script first, looking through it so everything looks normal, then running it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
sh install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the above URL times out or otherwise fails, you may have to substitute the URL for &lt;code&gt;https://install.ohmyz.sh&lt;/code&gt; to be able to get the script.&lt;/p&gt; 
&lt;h2&gt;Using Oh My Zsh&lt;/h2&gt; 
&lt;h3&gt;Plugins&lt;/h3&gt; 
&lt;p&gt;Oh My Zsh comes with a shitload of plugins for you to take advantage of. You can take a look in the &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins&quot;&gt;plugins&lt;/a&gt; directory and/or the &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins&quot;&gt;wiki&lt;/a&gt; to see what&#39;s currently available.&lt;/p&gt; 
&lt;h4&gt;Enabling Plugins&lt;/h4&gt; 
&lt;p&gt;Once you spot a plugin (or several) that you&#39;d like to use with Oh My Zsh, you&#39;ll need to enable them in the &lt;code&gt;.zshrc&lt;/code&gt; file. You&#39;ll find the zshrc file in your &lt;code&gt;$HOME&lt;/code&gt; directory. Open it with your favorite text editor and you&#39;ll see a spot to list all the plugins you want to load.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;vi ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, this might begin to look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;plugins=(
  git
  bundler
  dotenv
  macos
  rake
  rbenv
  ruby
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note that the plugins are separated by whitespace (spaces, tabs, new lines...). &lt;strong&gt;Do not&lt;/strong&gt; use commas between them or it will break.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Using Plugins&lt;/h4&gt; 
&lt;p&gt;Each built-in plugin includes a &lt;strong&gt;README&lt;/strong&gt;, documenting it. This README should show the aliases (if the plugin adds any) and extra goodies that are included in that particular plugin.&lt;/p&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;We&#39;ll admit it. Early in the Oh My Zsh world, we may have gotten a bit too theme-happy. We have over one hundred and fifty themes now bundled. Most of them have &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/Themes&quot;&gt;screenshots&lt;/a&gt; on the wiki (We are working on updating this!). Check them out!&lt;/p&gt; 
&lt;h4&gt;Selecting A Theme&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Robby&#39;s theme is the default one. It&#39;s not the fanciest one. It&#39;s not the simplest one. It&#39;s just the right one (for him).&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Once you find a theme that you&#39;d like to use, you will need to edit the &lt;code&gt;~/.zshrc&lt;/code&gt; file. You&#39;ll see an environment variable (all caps) in there that looks like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME=&quot;robbyrussell&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use a different theme, simply change the value to match the name of your desired theme. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME=&quot;agnoster&quot; # (this is one of the fancy ones)
# see https://github.com/ohmyzsh/ohmyzsh/wiki/Themes#agnoster
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You will many times see screenshots for a zsh theme, and try it out, and find that it doesn&#39;t look the same for you.&lt;/p&gt; 
 &lt;p&gt;This is because many themes require installing a &lt;a href=&quot;https://github.com/powerline/fonts&quot;&gt;Powerline Font&lt;/a&gt; or a &lt;a href=&quot;https://github.com/ryanoasis/nerd-fonts&quot;&gt;Nerd Font&lt;/a&gt; in order to render properly. Without them, these themes will render weird prompt symbols. Check out &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ#i-have-a-weird-character-in-my-prompt&quot;&gt;the FAQ&lt;/a&gt; for more information.&lt;/p&gt; 
 &lt;p&gt;Also, beware that themes only control what your prompt looks like. This is, the text you see before or after your cursor, where you&#39;ll type your commands. Themes don&#39;t control things such as the colors of your terminal window (known as &lt;em&gt;color scheme&lt;/em&gt;) or the font of your terminal. These are settings that you can change in your terminal emulator. For more information, see &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ#what-is-a-zsh-theme&quot;&gt;what is a zsh theme&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;p&gt;Open up a new terminal window and your prompt should look something like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png&quot; alt=&quot;Agnoster theme&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;In case you did not find a suitable theme for your needs, please have a look at the wiki for &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes&quot;&gt;more of them&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you&#39;re feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME=&quot;random&quot; # (...please let it be pie... please be some pie..)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And if you want to pick a random theme from a list of your favorite themes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME_RANDOM_CANDIDATES=(
  &quot;robbyrussell&quot;
  &quot;agnoster&quot;
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you only know which themes you don&#39;t like, you can add them similarly to an ignored list:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH_THEME_RANDOM_IGNORED=(pygmalion tjkirch_mod)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;p&gt;If you have some more questions or issues, you might find a solution in our &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Advanced Topics&lt;/h2&gt; 
&lt;p&gt;If you&#39;re the type that likes to get their hands dirty, these sections might resonate.&lt;/p&gt; 
&lt;h3&gt;Advanced Installation&lt;/h3&gt; 
&lt;p&gt;Some users may want to manually install Oh My Zsh, or change the default path or other settings that the installer accepts (these settings are also documented at the top of the install script).&lt;/p&gt; 
&lt;h4&gt;Custom Directory&lt;/h4&gt; 
&lt;p&gt;The default location is &lt;code&gt;~/.oh-my-zsh&lt;/code&gt; (hidden in your home directory, you can access it with &lt;code&gt;cd ~/.oh-my-zsh&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;If you&#39;d like to change the install directory with the &lt;code&gt;ZSH&lt;/code&gt; environment variable, either by running &lt;code&gt;export ZSH=/your/path&lt;/code&gt; before installing, or by setting it before the end of the install pipeline like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;ZSH=&quot;$HOME/.dotfiles/oh-my-zsh&quot; sh install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Unattended Install&lt;/h4&gt; 
&lt;p&gt;If you&#39;re running the Oh My Zsh install script as part of an automated install, you can pass the &lt;code&gt;--unattended&lt;/code&gt; flag to the &lt;code&gt;install.sh&lt;/code&gt; script. This will have the effect of not trying to change the default shell, and it also won&#39;t run &lt;code&gt;zsh&lt;/code&gt; when the installation has finished.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot; &quot;&quot; --unattended
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you&#39;re in China, India, or another country that blocks &lt;code&gt;raw.githubusercontent.com&lt;/code&gt;, you may have to substitute the URL for &lt;code&gt;https://install.ohmyz.sh&lt;/code&gt; for it to install.&lt;/p&gt; 
&lt;h4&gt;Installing From A Forked Repository&lt;/h4&gt; 
&lt;p&gt;The install script also accepts these variables to allow the installation of a different repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;REPO&lt;/code&gt; (default: &lt;code&gt;ohmyzsh/ohmyzsh&lt;/code&gt;): this takes the form of &lt;code&gt;owner/repository&lt;/code&gt;. If you set this variable, the installer will look for a repository at &lt;code&gt;https://github.com/{owner}/{repository}&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;REMOTE&lt;/code&gt; (default: &lt;code&gt;https://github.com/${REPO}.git&lt;/code&gt;): this is the full URL of the git repository clone. You can use this setting if you want to install from a fork that is not on GitHub (GitLab, Bitbucket...) or if you want to clone with SSH instead of HTTPS (&lt;code&gt;git@github.com:user/project.git&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;&lt;em&gt;NOTE: it&#39;s incompatible with setting the &lt;code&gt;REPO&lt;/code&gt; variable. This setting will take precedence.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;BRANCH&lt;/code&gt; (default: &lt;code&gt;master&lt;/code&gt;): you can use this setting if you want to change the default branch to be checked out when cloning the repository. This might be useful for testing a Pull Request, or if you want to use a branch other than &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;REPO=apjanke/oh-my-zsh BRANCH=edge sh install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Manual Installation&lt;/h4&gt; 
&lt;h5&gt;1. Clone The Repository 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;2. &lt;em&gt;Optionally&lt;/em&gt;, Backup Your Existing &lt;code&gt;~/.zshrc&lt;/code&gt; File 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cp ~/.zshrc ~/.zshrc.orig
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;3. Create A New Zsh Configuration File 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;p&gt;You can create a new zsh config file by copying the template that we have included for you.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;4. Change Your Default Shell 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;chsh -s $(which zsh)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You must log out from your user session and log back in to see this change.&lt;/p&gt; 
&lt;h5&gt;5. Initialize Your New Zsh Configuration 
 &lt;!-- omit in toc --&gt;&lt;/h5&gt; 
&lt;p&gt;Once you open up a new terminal window, it should load zsh with Oh My Zsh&#39;s configuration.&lt;/p&gt; 
&lt;h3&gt;Installation Problems&lt;/h3&gt; 
&lt;p&gt;If you have any hiccups installing, here are a few common fixes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You &lt;em&gt;might&lt;/em&gt; need to modify your &lt;code&gt;PATH&lt;/code&gt; in &lt;code&gt;~/.zshrc&lt;/code&gt; if you&#39;re not able to find some commands after switching to &lt;code&gt;oh-my-zsh&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If you installed manually or changed the install location, check the &lt;code&gt;ZSH&lt;/code&gt; environment variable in &lt;code&gt;~/.zshrc&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Custom Plugins And Themes&lt;/h3&gt; 
&lt;p&gt;If you want to override any of the default behaviors, just add a new file (ending in &lt;code&gt;.zsh&lt;/code&gt;) in the &lt;code&gt;custom/&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;If you have many functions that go well together, you can put them as a &lt;code&gt;XYZ.plugin.zsh&lt;/code&gt; file in the &lt;code&gt;custom/plugins/&lt;/code&gt; directory and then enable this plugin.&lt;/p&gt; 
&lt;p&gt;If you would like to override the functionality of a plugin distributed with Oh My Zsh, create a plugin of the same name in the &lt;code&gt;custom/plugins/&lt;/code&gt; directory and it will be loaded instead of the one in &lt;code&gt;plugins/&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Enable GNU ls In macOS And freeBSD Systems&lt;/h3&gt; 
&lt;p&gt;&lt;a name=&quot;enable-gnu-ls&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The default behaviour in Oh My Zsh is to use BSD &lt;code&gt;ls&lt;/code&gt; in macOS and FreeBSD systems. If GNU &lt;code&gt;ls&lt;/code&gt; is installed (as &lt;code&gt;gls&lt;/code&gt; command), you can choose to use it instead. To do it, you can use zstyle-based config before sourcing &lt;code&gt;oh-my-zsh.sh&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;zstyle &#39;:omz:lib:theme-and-appearance&#39; gnu-ls yes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: this is not compatible with &lt;code&gt;DISABLE_LS_COLORS=true&lt;/code&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Skip Aliases&lt;/h3&gt; 
&lt;p&gt;&lt;a name=&quot;remove-directories-aliases&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you want to skip default Oh My Zsh aliases (those defined in &lt;code&gt;lib/*&lt;/code&gt; files) or plugin aliases, you can use the settings below in your &lt;code&gt;~/.zshrc&lt;/code&gt; file, &lt;strong&gt;before Oh My Zsh is loaded&lt;/strong&gt;. Note that there are many different ways to skip aliases, depending on your needs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Skip all aliases, in lib files and enabled plugins
zstyle &#39;:omz:*&#39; aliases no

# Skip all aliases in lib files
zstyle &#39;:omz:lib:*&#39; aliases no
# Skip only aliases defined in the directories.zsh lib file
zstyle &#39;:omz:lib:directories&#39; aliases no

# Skip all plugin aliases
zstyle &#39;:omz:plugins:*&#39; aliases no
# Skip only the aliases from the git plugin
zstyle &#39;:omz:plugins:git&#39; aliases no
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can combine these in other ways taking into account that more specific scopes take precedence:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# Skip all plugin aliases, except for the git plugin
zstyle &#39;:omz:plugins:*&#39; aliases no
zstyle &#39;:omz:plugins:git&#39; aliases yes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A previous version of this feature was using the setting below, which has been removed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:directories&#39; aliases no
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Instead, you can now use the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:lib:directories&#39; aliases no
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Notice 
 &lt;!-- omit in toc --&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This feature is currently in a testing phase and it may be subject to change in the future. It is also not currently compatible with plugin managers such as zpm or zinit, which don&#39;t source the init script (&lt;code&gt;oh-my-zsh.sh&lt;/code&gt;) where this feature is implemented in.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It is also not currently aware of &quot;aliases&quot; that are defined as functions. Example of such are &lt;code&gt;gccd&lt;/code&gt;, &lt;code&gt;ggf&lt;/code&gt;, or &lt;code&gt;ggl&lt;/code&gt; functions from the git plugin.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Async git prompt&lt;/h3&gt; 
&lt;p&gt;Async prompt functions are an experimental feature (included on April 3, 2024) that allows Oh My Zsh to render prompt information asynchronously. This can improve prompt rendering performance, but it might not work well with some setups. We hope that&#39;s not an issue, but if you&#39;re seeing problems with this new feature, you can turn it off by setting the following in your .zshrc file, before Oh My Zsh is sourced:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:alpha:lib:git&#39; async-prompt no
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your problem is that the git prompt just stopped appearing, you can try to force it by setting the following configuration before &lt;code&gt;oh-my-zsh.sh&lt;/code&gt; is sourced. If it still does not work, please open an issue with your case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:alpha:lib:git&#39; async-prompt force
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Updates&lt;/h2&gt; 
&lt;p&gt;By default, you will be prompted to check for updates every 2 weeks. You can choose other update modes by adding a line to your &lt;code&gt;~/.zshrc&lt;/code&gt; file, &lt;strong&gt;before Oh My Zsh is loaded&lt;/strong&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Automatic update without confirmation prompt:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:update&#39; mode auto
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Just offer a reminder every few days, if there are updates available:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:update&#39; mode reminder
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To disable automatic updates entirely:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:update&#39; mode disabled
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;NOTE: you can control how often Oh My Zsh checks for updates with the following setting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;# This will check for updates every 7 days
zstyle &#39;:omz:update&#39; frequency 7
# This will check for updates every time you open the terminal (not recommended)
zstyle &#39;:omz:update&#39; frequency 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Updates Verbosity&lt;/h3&gt; 
&lt;p&gt;You can also limit the update verbosity with the following settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zstyle &#39;:omz:update&#39; verbose default # default update prompt

zstyle &#39;:omz:update&#39; verbose minimal # only few lines

zstyle &#39;:omz:update&#39; verbose silent # only errors
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Updates&lt;/h3&gt; 
&lt;p&gt;If you&#39;d like to update at any point in time (maybe someone just released a new plugin and you don&#39;t want to wait a week?) you just need to run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;omz update
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you want to automate this process in a script, you should call directly the &lt;code&gt;upgrade&lt;/code&gt; script, like this:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ZSH/tools/upgrade.sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;See more options in the &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/FAQ#how-do-i-update-oh-my-zsh&quot;&gt;FAQ: How do I update Oh My Zsh?&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;USE OF &lt;code&gt;omz update --unattended&lt;/code&gt; HAS BEEN REMOVED, AS IT HAS SIDE EFFECTS&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Magic! 🎉&lt;/p&gt; 
&lt;h2&gt;Uninstalling Oh My Zsh&lt;/h2&gt; 
&lt;p&gt;Oh My Zsh isn&#39;t for everyone. We&#39;ll miss you, but we want to make this an easy breakup.&lt;/p&gt; 
&lt;p&gt;If you want to uninstall &lt;code&gt;oh-my-zsh&lt;/code&gt;, just run &lt;code&gt;uninstall_oh_my_zsh&lt;/code&gt; from the command-line. It will remove itself and revert your previous &lt;code&gt;bash&lt;/code&gt; or &lt;code&gt;zsh&lt;/code&gt; configuration.&lt;/p&gt; 
&lt;h2&gt;How Do I Contribute To Oh My Zsh?&lt;/h2&gt; 
&lt;p&gt;Before you participate in our delightful community, please read the &lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/CODE_OF_CONDUCT.md&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;I&#39;m far from being a &lt;a href=&quot;https://www.zsh.org/&quot;&gt;Zsh&lt;/a&gt; expert and suspect there are many ways to improve – if you have ideas on how to make the configuration easier to maintain (and faster), don&#39;t hesitate to fork and send pull requests!&lt;/p&gt; 
&lt;p&gt;We also need people to test out pull requests. So take a look through &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/issues&quot;&gt;the open issues&lt;/a&gt; and help where you can.&lt;/p&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Do Not Send Us Themes&lt;/h3&gt; 
&lt;p&gt;We have (more than) enough themes for the time being. Please add your theme to the &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes&quot;&gt;external themes&lt;/a&gt; wiki page.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Oh My Zsh has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn&#39;t be so awesome.&lt;/p&gt; 
&lt;p&gt;Thank you so much!&lt;/p&gt; 
&lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=ohmyzsh/ohmyzsh&quot; width=&quot;100%&quot; /&gt; &lt;/a&gt; 
&lt;h2&gt;Follow Us&lt;/h2&gt; 
&lt;p&gt;We&#39;re on social media:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://x.com/ohmyzsh&quot;&gt;@ohmyzsh&lt;/a&gt; on X (formerly Twitter). You should follow it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/Oh-My-Zsh-296616263819290/&quot;&gt;Facebook&lt;/a&gt; poke us.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.instagram.com/_ohmyzsh/&quot;&gt;Instagram&lt;/a&gt; tag us in your post showing Oh My Zsh!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/ohmyzsh&quot;&gt;Discord&lt;/a&gt; to chat with us!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Merchandise&lt;/h2&gt; 
&lt;p&gt;We have &lt;a href=&quot;https://shop.planetargon.com/collections/oh-my-zsh?utm_source=github&quot;&gt;stickers, shirts, and coffee mugs available&lt;/a&gt; for you to show off your love of Oh My Zsh. Again, you will become the talk of the town!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Oh My Zsh is released under the &lt;a href=&quot;https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;About Planet Argon&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://pa-github-assets.s3.amazonaws.com/PARGON_logo_digital_COL-small.jpg&quot; alt=&quot;Planet Argon&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Oh My Zsh was started by the team at &lt;a href=&quot;https://www.planetargon.com/?utm_source=github&quot;&gt;Planet Argon&lt;/a&gt;, a &lt;a href=&quot;https://www.planetargon.com/services/ruby-on-rails-development?utm_source=github&quot;&gt;Ruby on Rails development agency&lt;/a&gt;. Check out our &lt;a href=&quot;https://www.planetargon.com/open-source?utm_source=github&quot;&gt;other open source projects&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pystardust/ani-cli</title>
      <link>https://github.com/pystardust/ani-cli</link>
      <description>&lt;p&gt;A cli tool to browse and play anime&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;br /&gt; &lt;a href=&quot;http://makeapullrequest.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#Linux&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/os-linux-brightgreen&quot; /&gt; &lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#MacOS&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/os-mac-brightgreen&quot; /&gt; &lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#Android&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/os-android-brightgreen&quot; /&gt; &lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#Windows&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/os-windows-yellowgreen&quot; /&gt; &lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#iOS&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/os-ios-yellow&quot; /&gt; &lt;/a&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#Steam-deck&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/os-steamdeck-yellow&quot; /&gt; &lt;br /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#Steam-deck&quot;&gt; &lt;/a&gt;&lt;a href=&quot;https://discord.gg/aqu7GpqVmR&quot;&gt;&lt;img src=&quot;https://invidget.switchblade.xyz/aqu7GpqVmR&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/matrix.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/.assets/matrix-logo.svg?sanitize=true&quot; height=&quot;110&quot; /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://github.com/port19x&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/lead-port19x-lightblue&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/CoolnsX&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintainer-CoolnsX-blue&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/justchokingaround&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintainer-justchokingaround-blue&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Derisis13&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintainer-Derisis13-blue&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/71zenith&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintainer-71zenith-blue&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ykhan21&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/maintainer-ykhan21-blue&quot; /&gt;&lt;/a&gt; &lt;p&gt;&lt;/p&gt; &lt;/h1&gt;
&lt;h3 align=&quot;center&quot;&gt; A cli to browse and watch anime (alone AND with friends). This tool scrapes the site &lt;a href=&quot;https://allmanga.to/&quot;&gt;allmanga.&lt;/a&gt; &lt;/h3&gt; 
&lt;h1 align=&quot;center&quot;&gt; Showcase &lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://user-images.githubusercontent.com/44473782/224679247-0856e652-f187-4865-bbcf-5a8e5cf830da.webm&quot;&gt;ani-cli-demo.webm&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#fixing-errors&quot;&gt;Fixing errors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#install&quot;&gt;Install&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#tier-1-support-linux-mac-android&quot;&gt;Tier 1: Linux, Mac, Android&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#tier-2-support-windows-wsl-ios-steam-deck-freebsd&quot;&gt;Tier 2: Windows, WSL, iOS, Steam Deck, FreeBSD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#installing-from-source&quot;&gt;From Source&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#uninstall&quot;&gt;Uninstall&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#dependencies&quot;&gt;Dependencies&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#ani-skip&quot;&gt;Ani-Skip&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#homies&quot;&gt;Homies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/disclaimer.md&quot;&gt;Disclaimer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Fixing errors&lt;/h2&gt; 
&lt;p&gt;If you encounter &lt;code&gt;No results found&lt;/code&gt; (and are sure the prompt was correct) or any breaking issue, then make sure you are on &lt;strong&gt;latest version&lt;/strong&gt; by typing &lt;code&gt;sudo ani-cli -U&lt;/code&gt; to update on Linux, Mac and Android. On Windows, run &lt;code&gt;ani-cli -U&lt;/code&gt;. If after this the issue persists then open an issue.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://repology.org/project/ani-cli/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/vertical-allrepos/ani-cli.svg?minversion=4.0&quot; alt=&quot;Packaging status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Tier 1 Support: Linux, Mac, Android&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;These Platforms have rock solid support and are used by maintainers and large parts of the userbase.&lt;/em&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Linux&lt;/b&gt;&lt;/summary&gt; 
 &lt;h4&gt;Native Packages&lt;/h4&gt; 
 &lt;p&gt;&lt;em&gt;Native packages have a more robust update cycle, but sometimes they are slow to upgrade. &lt;br /&gt; If the one for your platform is up-to-date we suggest going with it.&lt;/em&gt;&lt;/p&gt; 
 &lt;details&gt;
  &lt;summary&gt;Debian 13/unstable&lt;/summary&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo apt install ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;/details&gt; 
 &lt;details&gt;
  &lt;summary&gt;Fedora&lt;/summary&gt; 
  &lt;p&gt;To install mpv (and vlc) you need &lt;em&gt;RPM Fusion free&lt;/em&gt; enabled. Simply follow the instructions here: &lt;a href=&quot;https://rpmfusion.org/Configuration&quot;&gt;https://rpmfusion.org/Configuration&lt;/a&gt; To be able to install syncplay, you&#39;ll need to enable this copr repo (instructions included): &lt;a href=&quot;https://copr.fedorainfracloud.org/coprs/batmanfeynman/syncplay/&quot;&gt;https://copr.fedorainfracloud.org/coprs/batmanfeynman/syncplay/&lt;/a&gt;.&lt;/p&gt; 
  &lt;p&gt;To install ani-cli:&lt;/p&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo dnf copr enable derisis13/ani-cli
sudo dnf install ani-cli
&lt;/code&gt;&lt;/pre&gt; 
  &lt;p&gt;&lt;em&gt;If for your distro uses rpm and you would like to see a native package, open an issue.&lt;/em&gt;&lt;/p&gt; 
 &lt;/details&gt;
 &lt;details&gt;
  &lt;summary&gt;Arch&lt;/summary&gt; 
  &lt;p&gt;Build and install from the AUR:&lt;/p&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yay -S ani-cli
&lt;/code&gt;&lt;/pre&gt; 
  &lt;p&gt;Also consider &lt;code&gt;ani-cli-git&lt;/code&gt;&lt;/p&gt; 
 &lt;/details&gt;
 &lt;details&gt;
  &lt;summary&gt;Gentoo&lt;/summary&gt; 
  &lt;p&gt;Build and install from the GURU:&lt;/p&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo eselect repository enable guru
sudo emaint sync -r guru
sudo emerge -a ani-cli
&lt;/code&gt;&lt;/pre&gt; 
  &lt;p&gt;Consider using the 9999 ebuild.&lt;/p&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo emerge -a =app-misc/ani-cli-9999
&lt;/code&gt;&lt;/pre&gt; 
 &lt;/details&gt;
 &lt;details&gt;
  &lt;summary&gt;OpenSuse&lt;/summary&gt; 
  &lt;p&gt;On Suse the provided MPV and VLC packages are missing features that are used by ani-cli. The only required is the &quot;Only Essentials&quot; repository which has versions for each Suse release. You can find instructions on this &lt;a href=&quot;https://en.opensuse.org/Additional_package_repositories#Packman&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
  &lt;p&gt;To add the ani-cli copr repo, update then install ani-cli run (on both versions):&lt;/p&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zypper addrepo https://download.copr.fedorainfracloud.org/results/derisis13/ani-cli/opensuse-tumbleweed-x86_64/ ani-cli
zypper dup
zypper install ani-cli
&lt;/code&gt;&lt;/pre&gt; 
  &lt;p&gt;You&#39;ll get a warning about &lt;code&gt;Signature verification failed [4-Signatures public key is not available]&lt;/code&gt; but this can be ignored from the prompt.&lt;/p&gt; 
  &lt;p&gt;&lt;em&gt;Note: package is noarch, so any architecture should work, even though the repo is labelled x86-64&lt;/em&gt;&lt;/p&gt; 
 &lt;/details&gt;
&lt;/details&gt;
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;MacOS&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Install dependencies &lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#dependencies&quot;&gt;(See below)&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Install &lt;a href=&quot;https://docs.brew.sh/Installation&quot;&gt;HomeBrew&lt;/a&gt; if not installed.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone &quot;https://github.com/pystardust/ani-cli.git&quot; &amp;amp;&amp;amp; cd ./ani-cli
cp ./ani-cli &quot;$(brew --prefix)&quot;/bin
cd .. &amp;amp;&amp;amp; rm -rf ./ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;To install (with Homebrew) the dependencies required on Mac OS, you can run:&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;brew install curl grep aria2 ffmpeg git fzf yt-dlp &amp;amp;&amp;amp; \
brew install --cask iina
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;Why iina and not mpv? Drop-in replacement for mpv for MacOS. Integrates well with OSX UI. Excellent support for M1. Open Source.&lt;/em&gt;&lt;/p&gt; 
&lt;/details&gt;
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Android&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Install termux &lt;a href=&quot;https://termux.com/&quot;&gt;(Guide)&lt;/a&gt;&lt;/p&gt; 
 &lt;h4&gt;Termux package&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pkg up -y
pkg install ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you&#39;re using Android 14 make sure to run this due to &lt;a href=&quot;https://github.com/pystardust/ani-cli/issues/1206&quot;&gt;#1206&lt;/a&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pkg install termux-am
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For players you can use the apk (playstore/fdroid) versions of mpv and vlc. Note that these cannot be checked from termux so a warning is generated when checking dependencies.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Tier 2 Support: Windows, WSL, iOS, Steam Deck, FreeBSD&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;While officially supported (except FreeBSD), installation is more involved on these platforms and sometimes issues arise. &lt;br /&gt; Reach out if you need help.&lt;/em&gt;&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;code&gt;ani-cli&lt;/code&gt; is on scoop. Please read further for setup instructions.&lt;/p&gt; 
 &lt;p&gt;We will set up the bash.exe that comes with Git for Windows to be used with Windows Terminal. You may use terminals such as Wezterm or Alacritty, but this guide only covers Windows Terminal. The Git Bash terminal (i.e., mintty) &lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#windows-known-problems-and-solutions&quot;&gt;has problems with fzf&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;First, you&#39;ll need to install the scoop package manager. &lt;a href=&quot;https://scoop.sh/&quot;&gt;(Install)&lt;/a&gt; Follow &lt;strong&gt;quickstart&lt;/strong&gt;.&lt;/p&gt; 
 &lt;p&gt;Next, get Windows Terminal. It comes preinstalled on Windows 11. If you do not have it, install it by running the following commands in powershell.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;scoop bucket add extras
scoop install extras/windows-terminal
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Next, get git. If you have it, please update it. If you do not already have it, install it by running &lt;code&gt;scoop install git&lt;/code&gt; in powershell.&lt;/p&gt; 
 &lt;p&gt;Ensure that Git Bash is present in the Windows Terminal tab drop down, as shown below.&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/.assets/windows-terminal-git-bash-1.png&quot; alt=&quot;windows-terminal-git-bash-1.png&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;If it is not there, please add it. To add it, first click the drop-down button beside the new tab button (shown above).&lt;/p&gt; 
 &lt;p&gt;Then, navigate to &lt;code&gt;Settings &amp;gt; Profiles &amp;gt; Add a new profile&lt;/code&gt;. Click &lt;code&gt;+ New empty profile&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/.assets/windows-terminal-git-bash-2.png&quot; alt=&quot;windows-terminal-git-bash-2.png&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;Next:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;If you installed git with scoop: Set &lt;em&gt;Name&lt;/em&gt; as &quot;Git Bash&quot;, set &lt;em&gt;Command line&lt;/em&gt; as &lt;code&gt;%GIT_INSTALL_ROOT%\bin\bash.exe -i -l&lt;/code&gt;, and set &lt;em&gt;Icon&lt;/em&gt; as &lt;code&gt;%GIT_INSTALL_ROOT%\mingw64\share\git\git-for-windows.ico&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;If you installed git by other means: Set &lt;em&gt;Name&lt;/em&gt; as &quot;Git Bash&quot;, set &lt;em&gt;Command line&lt;/em&gt; as &lt;code&gt;C:\Program Files\Git\bin\bash.exe -i -l&lt;/code&gt;, and set &lt;em&gt;Icon&lt;/em&gt; as &lt;code&gt;C:\Program Files\Git\mingw64\share\git\git-for-windows.ico&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Next, set &lt;em&gt;Starting Directory&lt;/em&gt; to &lt;code&gt;%USERPROFILE%&lt;/code&gt;, and ensure that &lt;em&gt;Hide profile from dropdown&lt;/em&gt; is set to &quot;Off&quot; (otherwise you won&#39;t be able to see this profile in the drop down).&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/.assets/windows-terminal-git-bash-3.png&quot; alt=&quot;windows-terminal-git-bash-3.png&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;Now save your changes.&lt;/p&gt; 
 &lt;p&gt;You will use this profile to run &lt;code&gt;ani-cli&lt;/code&gt; in this bash shell. Under Startup in Windows Terminal Settings, you may set this profile as the default so that you do not have to switch to it every time you want to run &lt;code&gt;ani-cli&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/.assets/windows-terminal-git-bash-4.png&quot; alt=&quot;windows-terminal-git-bash-4.png&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;Now restart Windows Terminal. In the Git Bash profile, install &lt;code&gt;ani-cli&lt;/code&gt; by running the following commands.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;scoop bucket add extras
scoop install ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Next, install its dependencies.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;scoop bucket add extras
scoop install fzf ffmpeg mpv
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Consider also installing &lt;code&gt;yt-dlp&lt;/code&gt; and &lt;code&gt;aria2&lt;/code&gt; for downloading to work.&lt;/p&gt; 
 &lt;p&gt;Restart Windows Terminal. Go to the Git Bash profile and update &lt;code&gt;ani-cli&lt;/code&gt; with &lt;code&gt;ani-cli -U&lt;/code&gt;. You will use this keep ani-cli up-to-date.&lt;/p&gt; 
 &lt;p&gt;Now you can use ani-cli. Read the output of &lt;code&gt;ani-cli -h&lt;/code&gt; for more help.&lt;/p&gt; 
 &lt;h4&gt;Windows: Known Problems and Solutions&lt;/h4&gt; 
 &lt;p&gt;If you have a problem, please update ani-cli to the latest version with &lt;code&gt;ani-cli -U&lt;/code&gt;. If you still have a problem, please read further.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Stuck in &quot;Search anime:&quot;. This shouldn&#39;t happen if you are using the Windows Terminal + Bash setup described above. It happens if you are using the Git Bash terminal (i.e., the mintty terminal). This is a problem between fzf and mintty, which should be resolved in future versions of fzf. For the time being, either use the Windows Terminal setup described above or, if you are dead-set on using the mintty terminal, run &lt;code&gt;export MSYS=enable_pcon&lt;/code&gt; before running ani-cli.&lt;/li&gt; 
  &lt;li&gt;&quot;No such file or directory&quot; or WSL-related errors: This shouldn&#39;t happen if you are using the Window Terminal + Bash setup described above. This happens if you run ani-cli in powershell or cmd. This is due WSL&#39;s bash.exe being called instead of Git for Windows&#39; bash.exe in &lt;code&gt;%USERPROFILE%\scoop\shims\ani-cli.cmd&lt;/code&gt;. If you must use powershell or cmd, edit the &lt;code&gt;%USERPROFILE%\scoop\shims\ani-cli.cmd&lt;/code&gt; file. In File Explorer, go to the &lt;code&gt;C:\Users\USERNAME\scoop\shims&lt;/code&gt; directory and open the &lt;code&gt;ani-cli.cmd&lt;/code&gt; file with notepad. Next: 
   &lt;ul&gt; 
    &lt;li&gt;If you installed git with scoop, replace &lt;code&gt;@bash&lt;/code&gt; with &lt;code&gt;@&quot;%GIT_INSTALL_ROOT%\bin\bash.exe&quot;&lt;/code&gt;, or&lt;/li&gt; 
    &lt;li&gt;If you installed git by other means, replace &lt;code&gt;@bash&lt;/code&gt; with &lt;code&gt;@&quot;C:\Program Files\Git\bin\bash.exe&quot;&lt;/code&gt;. This should be fixed if the ani-cli scoop manifest gets updated in &lt;a href=&quot;https://github.com/ScoopInstaller/Extras/pull/13342&quot;&gt;this PR&lt;/a&gt;.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;curl can cause issues. ani-cli has been tested unsuccessfully with curl &lt;code&gt;7.83.1&lt;/code&gt; and successfully with &lt;code&gt;7.86.0&lt;/code&gt;. If you run into issues, try installing a newer one with scoop.&lt;/li&gt; 
  &lt;li&gt;If you installed mpv with scoop, your mpv configuration will get read from &lt;code&gt;C:\Users\USERNAME\scoop\apps\mpv\current\portable_config&lt;/code&gt;. See &lt;a href=&quot;https://mpv.io/manual/stable/&quot;&gt;the mpv documentation&lt;/a&gt; regarding &lt;code&gt;portable_config&lt;/code&gt; for more details.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt;
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;WSL&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Follow the installation instructions of your Linux distribution.&lt;/p&gt; 
 &lt;p&gt;Note that the media player (mpv or vlc) will need to be installed on Windows, not WSL. See the justification for this in the comment &lt;a href=&quot;https://github.com/pystardust/ani-cli/issues/1266#issuecomment-1926945757&quot;&gt;(here)&lt;/a&gt;. Instructions on how to use the media player from WSL instead are also included in the linked comment.&lt;/p&gt; 
 &lt;p&gt;When installing the media player on Windows, make sure that it is on the Windows Path. An easy way to ensure this is to download the media player with a package manager (on Windows, not WSL) such as scoop.&lt;/p&gt; 
&lt;/details&gt;
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;iOS&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Install iSH and VLC from the app store.&lt;/p&gt; 
 &lt;p&gt;Make sure apk is updated using &lt;code&gt;apk update; apk upgrade&lt;/code&gt; then run this:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;apk add grep sed curl fzf git aria2 ncurses patch
apk add ffmpeg
git clone --depth 1 https://github.com/pystardust/ani-cli ~/.ani-cli
cp ~/.ani-cli/ani-cli /usr/local/bin/ani-cli
chmod +x /usr/local/bin/ani-cli
rm -rf ~/.ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;note that downloading is going to be very slow. This is an iSH issue, not an ani-cli issue.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Steam Deck&lt;/b&gt;&lt;/summary&gt; 
 &lt;h4&gt;Copypaste script:&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Switch to Desktop mode (&lt;code&gt;STEAM&lt;/code&gt; Button &amp;gt; Power &amp;gt; Switch to Desktop)&lt;/li&gt; 
  &lt;li&gt;Open &lt;code&gt;Konsole&lt;/code&gt; (Steam Deck Icon in bottom left corner &amp;gt; System &amp;gt; Konsole)&lt;/li&gt; 
  &lt;li&gt;Copy the script, paste it in the CLI and press Enter(&quot;A&quot; button on Steam Deck)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;[ ! -d ~/.local/bin ] &amp;amp;&amp;amp; mkdir ~/.local/bin &amp;amp;&amp;amp; echo &quot;export PATH=$HOME/.local/bin:\$PATH&quot; &amp;gt;&amp;gt; &quot;.$(echo $SHELL | sed -nE &quot;s|.*/(.*)\$|\1|p&quot;)rc&quot;

git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install

mkdir ~/.aria2c
curl -o ~/.aria2c/aria2-1.36.0.tar.bz2 https://github.com/q3aql/aria2-static-builds/releases/download/v1.36.0/aria2-1.36.0-linux-gnu-64bit-build1.tar.bz2
tar xvf ~/.aria2c/aria2-1.36.0.tar.bz2 -C ~/.aria2c/
cp ~/.aria2c/aria2-1.36.0-linux-gnu-64bit-build1/aria2c ~/.local/bin/
chmod +x ~/.local/bin/aria2c

curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o ~/.local/bin/yt-dlp
chmod +x ~/.local/bin/yt-dlp

mkdir ~/.patch
curl -o ~/.patch/patch.tar.zst https://mirror.sunred.org/archlinux/core/os/x86_64/patch-2.8-1-x86_64.pkg.tar.zst
tar xvf ~/.patch/patch.tar.zst -C ~/.patch/
cp ~/.patch/usr/bin/patch ~/.local/bin/

git clone https://github.com/pystardust/ani-cli.git ~/.ani-cli
cp ~/.ani-cli/ani-cli ~/.local/bin/

flatpak install io.mpv.Mpv
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;press enter(&quot;A&quot; button on Steam Deck) on questions&lt;/p&gt; 
 &lt;h4&gt;Installation in steps:&lt;/h4&gt; 
 &lt;h5&gt;Install mpv (Flatpak version):&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;flatpak install io.mpv.Mpv
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;press enter(&quot;A&quot; button on Steam Deck) on questions&lt;/p&gt; 
 &lt;h5&gt;Install &lt;a href=&quot;https://github.com/junegunn/fzf&quot;&gt;fzf&lt;/a&gt;:&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;press enter(&quot;A&quot; button on Steam Deck) on questions&lt;/p&gt; 
 &lt;h5&gt;Make a ~/.local/bin folder if doesn&#39;t exist and add it to $PATH&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;[ ! -d ~/.local/bin ] &amp;amp;&amp;amp; mkdir ~/.local/bin &amp;amp;&amp;amp; echo &quot;export PATH=$HOME/.local/bin:\$PATH&quot; &amp;gt;&amp;gt; &quot;.$(echo $SHELL | sed -nE &quot;s|.*/(.*)\$|\1|p&quot;)rc&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Install &lt;a href=&quot;https://github.com/aria2/aria2&quot;&gt;aria2&lt;/a&gt; (needed for download feature only):&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;mkdir ~/.aria2c
curl -o ~/.aria2c/aria2-1.36.0.tar.bz2 https://github.com/q3aql/aria2-static-builds/releases/download/v1.36.0/aria2-1.36.0-linux-gnu-64bit-build1.tar.bz2
tar xvf ~/.aria2c/aria2-1.36.0.tar.bz2 -C ~/.aria2c/
cp ~/.aria2c/aria2-1.36.0-linux-gnu-64bit-build1/aria2c ~/.local/bin/
chmod +x ~/.local/bin/aria2c
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Install &lt;a href=&quot;https://github.com/yt-dlp/yt-dlp&quot;&gt;yt-dlp&lt;/a&gt; (needed for download feature only):&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o ~/.local/bin/yt-dlp
chmod +x ~/.local/bin/yt-dlp
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Install &lt;a href=&quot;https://savannah.gnu.org/projects/patch/&quot;&gt;patch&lt;/a&gt; (needed for self-update feature [ -U ] ):&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;mkdir ~/.patch
curl -o ~/.patch/patch.tar.zst https://mirror.sunred.org/archlinux/core/os/x86_64/patch-2.8-1-x86_64.pkg.tar.zst
tar xvf ~/.patch/patch.tar.zst -C ~/.patch/
cp ~/.patch/usr/bin/patch ~/.local/bin/
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Install ani-cli:&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/pystardust/ani-cli.git ~/.ani-cli
cp ~/.ani-cli/ani-cli ~/.local/bin/
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Optional: add desktop entry:&lt;/h5&gt; 
 &lt;pre&gt;&lt;code&gt;echo &#39;[Desktop Entry]
Encoding=UTF-8
Type=Application
Exec=bash -c &quot;source $HOME/.&#39;$(echo $SHELL | sed -nE &quot;s|.*/(.*)\$|\1|p&quot;)&#39;rc &amp;amp;&amp;amp; konsole --fullscreen -e ani-cli&quot;
Name=ani-cli&#39; &amp;gt; $HOME/.local/share/applications/ani-cli.desktop
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The .desktop entry will allow to start ani-cli in Konsole directly from &quot;Gaming Mode&quot; In Steam Desktop app: &lt;code&gt;Add game&lt;/code&gt; &amp;gt; &lt;code&gt;Add a non-steam game&lt;/code&gt; &amp;gt; tick a box for &lt;code&gt;ani-cli&lt;/code&gt; &amp;gt; &lt;code&gt;Add selected programs&lt;/code&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;FreeBSD&lt;/b&gt;&lt;/summary&gt; 
 &lt;h4&gt;Copypaste script:&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo pkg install mpv fzf aria2 yt-dlp patch git
git clone &quot;https://github.com/pystardust/ani-cli.git&quot;
sudo cp ani-cli/ani-cli /usr/local/bin
rm -rf ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Installation in steps:&lt;/h4&gt; 
 &lt;h5&gt;Install dependencies:&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo pkg install mpv fzf aria2 yt-dlp patch
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Install ani-cli:&lt;/h5&gt; 
 &lt;p&gt;install git if you haven&#39;t already&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo pkg install git
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;install from source:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone &quot;https://github.com/pystardust/ani-cli.git&quot;
sudo cp ani-cli/ani-cli /usr/local/bin
rm -rf ani-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Installing from source&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;This method works for any unix-like operating system and is a baseline for porting efforts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Install dependencies &lt;a href=&quot;https://raw.githubusercontent.com/pystardust/ani-cli/master/#dependencies&quot;&gt;(See below)&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone &quot;https://github.com/pystardust/ani-cli.git&quot;
sudo cp ani-cli/ani-cli /usr/local/bin
rm -rf ani-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Uninstall&lt;/h2&gt; 
&lt;details&gt; 
 &lt;ul&gt; 
  &lt;li&gt;apt:&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo apt remove ani-cli
# to remove the repository from apt
sudo rm -f /etc/apt/trusted.gpg.d/ani-cli.asc /etc/apt/sources.list.d/ani-cli-debian.list
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;dnf:&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo dnf remove ani-cli      # for ani-cli
# disable the repo in dnf
dnf copr disable derisis13/ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;You might want to uninstall RPM fusion if you don&#39;t use it otherwise&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;zypper:&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;zypper remove ani-cli
zypper removerepo ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;You might want to remove &lt;code&gt;packman-essentials&lt;/code&gt; if you don&#39;t need it otherwise&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;AUR:&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;yay -R ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Scoop:&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;scoop uninstall ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Linux:&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;sudo rm &quot;/usr/local/bin/ani-cli&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Mac:&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rm &quot;$(brew --prefix)/bin/ani-cli&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Windows: In &lt;strong&gt;Git Bash&lt;/strong&gt; run (as administrator):&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rm &quot;/usr/bin/ani-cli&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Termux package&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;pkg remove ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Android:&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rm &quot;$PREFIX/bin/ani-cli&quot;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Steam Deck&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rm &quot;~/.local/bin/ani-cli&quot;
rm -rf ~/.ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;optionally: remove dependencies:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;rm ~/.local/bin/aria2c
rm ~/.local/bin/yt-dlp
rm -rf &quot;~/.aria2&quot;
rm -rf &quot;~/.fzf&quot;
flatpak uninstall io.mpv.Mpv
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;iOS&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;pre&gt;&lt;code&gt;rm -rf /usr/local/bin/ani-cli
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To uninstall other dependencies:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;apk del grep sed curl fzf git aria2 ffmpeg ncurses
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;grep&lt;/li&gt; 
 &lt;li&gt;sed&lt;/li&gt; 
 &lt;li&gt;curl&lt;/li&gt; 
 &lt;li&gt;mpv - Video Player&lt;/li&gt; 
 &lt;li&gt;iina - mpv replacement for MacOS&lt;/li&gt; 
 &lt;li&gt;aria2c - Download manager&lt;/li&gt; 
 &lt;li&gt;yt-dlp - m3u8 Downloader&lt;/li&gt; 
 &lt;li&gt;ffmpeg - m3u8 Downloader (fallback)&lt;/li&gt; 
 &lt;li&gt;fzf - User interface&lt;/li&gt; 
 &lt;li&gt;ani-skip (optional)&lt;/li&gt; 
 &lt;li&gt;patch - Self updating&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ani-Skip&lt;/h3&gt; 
&lt;p&gt;Ani-skip is a script to automatically skip anime opening sequences, making it easier to watch your favorite shows without having to manually skip the intros each time (from the original &lt;a href=&quot;https://github.com/synacktraa/ani-skip/tree/master#a-script-to-automatically-skip-anime-opening-sequences-making-it-easier-to-watch-your-favorite-shows-without-having-to-manually-skip-the-intros-each-time&quot;&gt;README&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;For install instructions visit &lt;a href=&quot;https://github.com/synacktraa/ani-skip&quot;&gt;ani-skip&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Ani-skip uses the external lua script function of mpv and as such – for now – only works with mpv.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; For now, ani-skip does &lt;strong&gt;not&lt;/strong&gt; seem to work under Windows.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It may be, that ani-skip won&#39;t know the anime you&#39;re trying to watch. Try using the &lt;code&gt;--skip-title &amp;lt;title&amp;gt;&lt;/code&gt; command line argument. (It uses the &lt;a href=&quot;https://github.com/lexesjan/typescript-aniskip-extension/tree/main/src/api/aniskip-http-client&quot;&gt;aniskip API&lt;/a&gt; and you can contribute missing anime or ask for including it in the database on their &lt;a href=&quot;https://discord.com/invite/UqT55CbrbE&quot;&gt;discord server&lt;/a&gt;).&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Can I change subtitle language or turn them off? - No, the subtitles are baked into the video.&lt;/li&gt; 
  &lt;li&gt;Can I watch dub? - Yes, use &lt;code&gt;--dub&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Can I change dub language? - No.&lt;/li&gt; 
  &lt;li&gt;Can I change media source? - No (unless you can scrape that source yourself).&lt;/li&gt; 
  &lt;li&gt;Can I use vlc? - Yes, use &lt;code&gt;--vlc&lt;/code&gt; or &lt;code&gt;export ANI_CLI_PLAYER=vlc&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Can I adjust resolution? - Yes, use &lt;code&gt;-q resolution&lt;/code&gt;, for example &lt;code&gt;ani-cli -q 1080&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;How can I download? - Use &lt;code&gt;-d&lt;/code&gt;, it will download into your working directory.&lt;/li&gt; 
  &lt;li&gt;Can i change download folder? - Yes, set the &lt;code&gt;ANI_CLI_DOWNLOAD_DIR&lt;/code&gt; to your desired location.&lt;/li&gt; 
  &lt;li&gt;How can I bulk download? - &lt;code&gt;Use -d -e firstepisode-lastepisode&lt;/code&gt;, for example &lt;code&gt;ani-cli onepiece -d -e 1-1000&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All features are documented in &lt;code&gt;ani-cli --help&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Homies&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/justfoolingaround/animdl&quot;&gt;animdl&lt;/a&gt;: Ridiculously efficient, fast and light-weight (supports most sources: allmanga, zoro ... (Python)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/justchokingaround/jerry&quot;&gt;jerry&lt;/a&gt;: stream anime with anilist tracking and syncing, with discord presence (Shell)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sdaqo/anipy-cli&quot;&gt;anipy-cli&lt;/a&gt;: ani-cli rewritten in python (Python)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/metafates/mangal&quot;&gt;mangal&lt;/a&gt;: Download &amp;amp; read manga from any source with anilist sync (Go)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/justchokingaround/lobster&quot;&gt;lobster&lt;/a&gt;: Watch movies and series from the terminal (Shell)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mov-cli/mov-cli&quot;&gt;mov-cli&lt;/a&gt;: Watch everything from your terminal. (Python)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CoolnsX/dra-cla&quot;&gt;dra-cla&lt;/a&gt;: ani-cli equivalent for korean dramas (Shell)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/port19x/redqu&quot;&gt;redqu&lt;/a&gt;: A media centric reddit client (Clojure)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/TowarzyszFatCat/doccli&quot;&gt;doccli&lt;/a&gt;: A cli to watch anime with POLISH subtitles (Python)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/alvarorichard/GoAnime&quot;&gt;GoAnime&lt;/a&gt;: A CLI tool to browse, play, and download anime in Portuguese(Go)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Wraient/curd&quot;&gt;Curd&lt;/a&gt;: A CLI tool to watch anime with Anilist, Discord RPC, Skip Intro/Outro/Filler/Recap (Go)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Benex254/FastAnime&quot;&gt;FastAnime&lt;/a&gt;: browser anime experience from the terminal (Python)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/KilDesu/ani-skip&quot;&gt;ani-skip&lt;/a&gt;: Automatically skip opening and ending sequences for IINA on MacOS (Typescript, official IINA plugin API)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>bitnami/containers</title>
      <link>https://github.com/bitnami/containers</link>
      <description>&lt;p&gt;Bitnami container images&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;400px&quot; height=&quot;auto&quot; src=&quot;https://dyltqmyl993wv.cloudfront.net/bitnami/bitnami-by-vmware.png&quot; /&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://twitter.com/bitnami&quot;&gt;&lt;img src=&quot;https://badgen.net/badge/twitter/@bitnami/1DA1F2?icon&amp;amp;label&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/bitnami/containers&quot;&gt;&lt;img src=&quot;https://badgen.net/github/stars/bitnami/containers?icon=github&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/bitnami/containers&quot;&gt;&lt;img src=&quot;https://badgen.net/github/forks/bitnami/containers?icon=github&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/bitnami/containers/actions/workflows/ci-pipeline.yml&quot;&gt;&lt;img src=&quot;https://github.com/bitnami/containers/actions/workflows/ci-pipeline.yml/badge.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;The Bitnami Containers Library&lt;/h1&gt; 
&lt;p&gt;Popular applications, provided by &lt;a href=&quot;https://bitnami.com&quot;&gt;Bitnami&lt;/a&gt;, containerized and ready to launch.&lt;/p&gt; 
&lt;h2&gt;⚠️ Important Notice: Upcoming changes to the Bitnami Catalog&lt;/h2&gt; 
&lt;p&gt;Beginning August 28th, 2025, Bitnami will evolve its public catalog to offer a curated set of hardened, security-focused images under the new &lt;a href=&quot;https://news.broadcom.com/app-dev/broadcom-introduces-bitnami-secure-images-for-production-ready-containerized-applications&quot;&gt;Bitnami Secure Images initiative&lt;/a&gt;. As part of this transition:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Granting community users access for the first time to security-optimized versions of popular container images.&lt;/li&gt; 
 &lt;li&gt;Bitnami will begin deprecating support for non-hardened, Debian-based software images in its free tier and will gradually remove non-latest tags from the public catalog. As a result, community users will have access to a reduced number of hardened images. These images are published only under the “latest” tag and are intended for development purposes&lt;/li&gt; 
 &lt;li&gt;Starting August 28th, over two weeks, all existing container images, including older or versioned tags (e.g., 2.50.0, 10.6), will be migrated from the public catalog (docker.io/bitnami) to the “Bitnami Legacy” repository (docker.io/bitnamilegacy), where they will no longer receive updates.&lt;/li&gt; 
 &lt;li&gt;For production workloads and long-term support, users are encouraged to adopt Bitnami Secure Images, which include hardened containers, smaller attack surfaces, CVE transparency (via VEX/KEV), SBOMs, and enterprise support.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These changes aim to improve the security posture of all Bitnami users by promoting best practices for software supply chain integrity and up-to-date deployments. For more details, visit the &lt;a href=&quot;https://github.com/bitnami/containers/issues/83267&quot;&gt;Bitnami Secure Images announcement&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Why use Bitnami Secure Images?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bitnami Secure Images and Helm charts are built to make open source more secure and enterprise ready.&lt;/li&gt; 
 &lt;li&gt;Triage security vulnerabilities faster, with transparency into CVE risks using industry standard Vulnerability Exploitability Exchange (VEX), KEV, and EPSS scores.&lt;/li&gt; 
 &lt;li&gt;Our hardened images use a minimal OS (Photon Linux), which reduces the attack surface while maintaining extensibility through the use of an industry standard package format.&lt;/li&gt; 
 &lt;li&gt;Stay more secure and compliant with continuously built images updated within hours of upstream patches.&lt;/li&gt; 
 &lt;li&gt;Bitnami containers, virtual machines and cloud images use the same components and configuration approach - making it easy to switch between formats based on your project needs.&lt;/li&gt; 
 &lt;li&gt;Hardened images come with attestation signatures (Notation), SBOMs, virus scan reports and other metadata produced in an SLSA-3 compliant software factory.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Only a subset of BSI applications are available for free. Looking to access the entire catalog of applications as well as enterprise support? Try the &lt;a href=&quot;https://www.arrow.com/globalecs/uk/products/bitnami-secure-images/&quot;&gt;commercial edition of Bitnami Secure Images today&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get an image&lt;/h2&gt; 
&lt;p&gt;The recommended way to get any of the Bitnami Images is to pull the prebuilt image from the &lt;a href=&quot;https://hub.docker.com/r/bitnami/&quot;&gt;Docker Hub Registry&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;docker pull bitnami/APP
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use a specific version, you can pull a versioned tag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;docker pull bitnami/APP:[TAG]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you wish, you can also build the image yourself by cloning the repository, changing to the directory containing the Dockerfile, and executing the &lt;code&gt;docker build&lt;/code&gt; command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;git clone https://github.com/bitnami/containers.git
cd bitnami/APP/VERSION/OPERATING-SYSTEM
docker build -t bitnami/APP .
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Remember to replace the &lt;code&gt;APP&lt;/code&gt;, &lt;code&gt;VERSION&lt;/code&gt;, and &lt;code&gt;OPERATING-SYSTEM&lt;/code&gt; placeholders in the example command above with the correct values.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Run the application using Docker Compose&lt;/h2&gt; 
&lt;p&gt;The main folder of each application contains a functional &lt;code&gt;docker-compose.yml&lt;/code&gt; file. Run the application using it as shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;curl -sSL https://raw.githubusercontent.com/bitnami/containers/main/bitnami/APP/docker-compose.yml &amp;gt; docker-compose.yml
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Remember to replace the &lt;code&gt;APP&lt;/code&gt; placeholder in the example command above with the correct value.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Vulnerability scan in Bitnami container images&lt;/h2&gt; 
&lt;p&gt;As part of the release process, the Bitnami container images are analyzed for vulnerabilities. At this moment, we are using two different tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aquasecurity/trivy&quot;&gt;Trivy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/anchore/grype&quot;&gt;Grype&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This scanning process is triggered via a GH action for every PR affecting the source code of the containers, regardless of its nature or origin.&lt;/p&gt; 
&lt;h2&gt;Retention policy&lt;/h2&gt; 
&lt;p&gt;Deprecated assets will be retained in the container registry (&lt;a href=&quot;https://hub.docker.com/u/bitnami&quot;&gt;Bitnami DockerHub org&lt;/a&gt;) without changes for, at least, 6 months after the deprecation. After that period, all the images will be moved to a new &lt;em&gt;&quot;archived&quot;&lt;/em&gt; repository. For instance, once deprecated an asset named &lt;em&gt;foo&lt;/em&gt; whose container repository was &lt;code&gt;bitnami/foo&lt;/code&gt;, all the images will be moved to &lt;code&gt;bitnami/foo-archived&lt;/code&gt; where they will remain indefinitely.&lt;/p&gt; 
&lt;p&gt;Special images, like &lt;code&gt;bitnami/bitnami-shell&lt;/code&gt; or &lt;code&gt;bitnami/sealed-secrets&lt;/code&gt;, which are extensively used in Helm charts, will have an extended coexistence period of 1 year.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We&#39;d love for you to contribute to those container images. You can request new features by creating an &lt;a href=&quot;https://github.com/bitnami/containers/issues/new/choose&quot;&gt;issue&lt;/a&gt;, or submit a &lt;a href=&quot;https://github.com/bitnami/containers/pulls&quot;&gt;pull request&lt;/a&gt; with your contribution.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright © 2025 Broadcom. The term &quot;Broadcom&quot; refers to Broadcom Inc. and/or its subsidiaries.&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License.&lt;/p&gt; 
&lt;p&gt;You may obtain a copy of the License at&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>geekau/mediastack</title>
      <link>https://github.com/geekau/mediastack</link>
      <description>&lt;p&gt;The ultimate Docker Compose files and configs to build your desired media stack, quickly and easily, with secure outbound network traffic and secure remote access using multifactor authentication.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MediaStack Project (Docker)&lt;/h1&gt; 
&lt;p&gt;See you on &lt;a href=&quot;https://www.reddit.com/r/MediaStack/&quot;&gt;Reddit for MediaStack&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What Applications Are Provided In MediaStack&lt;/h2&gt; 
&lt;p&gt;Welcome to the MediaStack project! MediaStack is your ultimate solution for managing and streaming media collections with applications like Jellyfin and Plex. Using Docker, MediaStack containerises these media servers alongside *ARR applications (Radarr, Sonarr, Lidarr, etc.) for seamless media automation and management.&lt;/p&gt; 
&lt;p&gt;List of Docker applications configured in the MediaStack &lt;code&gt;docker-compose.yaml&lt;/code&gt; file:&lt;/p&gt; 
&lt;br /&gt; 
&lt;center&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;
     &lt;center&gt;
       Docker Application 
     &lt;/center&gt;&lt;/th&gt; 
    &lt;th&gt;
     &lt;center&gt;
       Application Role 
     &lt;/center&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.goauthentik.io/docs/install-config/install/docker-compose&quot;&gt;Authentik&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Authentik is an open-source identity provider for SSO, MFA, and access control&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.linuxserver.io/images/docker-bazarr&quot;&gt;Bazarr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Bazarr automates the downloading of subtitles for Movies and TV Shows&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.linuxserver.io/images/docker-chromium/&quot;&gt;Chromium&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Chromium is an an open-source web browser, allowing secure remote Internet browsing through your MediaStack&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.crowdsec.net/u/getting_started/installation/docker/&quot;&gt;CrowdSec&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;CrowdSec is an open-source, collaborative intrusion prevention system that detects and blocks malicious IPs&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://hub.docker.com/r/qmcgaw/ddns-updater&quot;&gt;DDNS-Updater&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;DDNS-Updater automatically updates dynamic DNS records when your home Internet changes IP address&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://www.filebot.net/&quot;&gt;Filebot&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;FileBot is a tool for renaming and organising media files using online metadata sources&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/FlareSolverr/FlareSolverr&quot;&gt;Flaresolverr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Flaresolverr bypasses Cloudflare protection, allowing automated access to websites for scripts and bots&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/qdm12/gluetun-wiki&quot;&gt;Gluetun&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Gluetun routes network traffic through a VPN, ensuring privacy and security for Docker containers&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;http://docs.grafana.org/installation/docker/&quot;&gt;Grafana&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Grafana is an open-source analytics platform for visualising metrics, logs, and time-series data&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://hub.docker.com/r/guacamole/guacamole&quot;&gt;Guacamole&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Guacamole is a clientless remote desktop gateway supporting RDP, VNC, and SSH through a web browser&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/tale/headplane&quot;&gt;Headplane&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Headplane is a web-based user interface for managing Headscale, the self-hosted alternative to Tailscale&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://headscale.net/stable/&quot;&gt;Headscale&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Headscale is an open-source, self-hosted alternative to Tailscale&#39;s control server for managing WireGuard-based VPNs&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.linuxserver.io/images/docker-heimdall&quot;&gt;Heimdall&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Heimdall provides a dashboard to easily access and organise web applications and services&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://homarr.dev/docs/getting-started/after-the-installation&quot;&gt;Homarr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Homarr is a self-hosted, customisable dashboard for managing and monitoring your server applications&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://gethomepage.dev/latest/configs/&quot;&gt;Homepage&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Homepage is an alternate to Heimdall, providing a similar dashboard to easily access and organise web applications and services&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/plexguide/Huntarr.io&quot;&gt;Huntarr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Huntarr is an open-source tool that automates finding missing and upgrading media in *ARR libraries&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://jellyfin.org/docs/general/administration/installing#docker&quot;&gt;Jellyfin&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Jellyfin is a media server that organises, streams, and manages multimedia content for users&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://hub.docker.com/r/fallenbagel/jellyseerr&quot;&gt;Jellyseerr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Jellyseerr is a request management tool for Jellyfin, enabling users to request and manage media content&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.linuxserver.io/images/docker-lidarr&quot;&gt;Lidarr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Lidarr is a Library Manager, automating the management and meta data for your music media files&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/mylar3/mylar3/wiki&quot;&gt;Mylar&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Mylar3 is a Library Manager, automating the management and meta data for your comic media files&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://hub.docker.com/r/linuxserver/plex&quot;&gt;Plex&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Plex is a media server that organises, streams, and manages multimedia content across devices&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.portainer.io/start/install/server/docker&quot;&gt;Portainer&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Portainer provides a graphical interface for managing Docker environments, simplifying container deployment and monitoring&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://hub.docker.com/_/postgres&quot;&gt;Postgresql&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;PostgreSQL is a powerful, open-source relational database system known for reliability and advanced features&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://prometheus.io/docs/introduction/overview/&quot;&gt;Prometheus&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Prometheus is an open-source monitoring system that collects and queries metrics using a time-series database&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.linuxserver.io/images/docker-prowlarr&quot;&gt;Prowlarr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Prowlarr manages and integrates indexers for various media download applications, automating search and download processes&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.linuxserver.io/images/docker-qbittorrent&quot;&gt;qBittorrent&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;qBittorrent is a peer-to-peer file sharing application that facilitates downloading and uploading torrents&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.linuxserver.io/images/docker-radarr&quot;&gt;Radarr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Radarr is a Library Manager, automating the management and meta data for your Movie media files&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.linuxserver.io/images/docker-readarr&quot;&gt;Readarr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;is a Library Manager, automating the management and meta data for your eBooks and Comic media files&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.linuxserver.io/images/docker-sabnzbd&quot;&gt;SABnzbd&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;SABnzbd is a Usenet newsreader that automates the downloading of binary files from Usenet&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.linuxserver.io/images/docker-sonarr&quot;&gt;Sonarr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Sonarr is a Library Manager, automating the management and meta data for your TV Shows (series) media files&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://tailscale.com/&quot;&gt;Tailscale&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Tailscale is a secure, peer-to-peer VPN that simplifies network access using WireGuard technology&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://docs.tdarr.io/docs/installation/docker/run-compose/&quot;&gt;Tdarr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Tdarr automates the transcoding and management of media files to optimise storage and playback compatibility&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://doc.traefik.io/traefik/&quot;&gt;Traefik&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Traefik is a modern reverse proxy and load balancer for microservices and containerised applications with full TLS v1.2 &amp;amp; v1.3 support&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://hub.docker.com/r/ldez/traefik-certs-dumper&quot;&gt;Traefik-Certs-Dumper&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Traefik Certs Dumper extracts TLS certificates and private keys from Traefik and converts for use by other services&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://github.com/davidnewhall/unpackerr&quot;&gt;Unpackerr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Unpackerr extracts and moves downloaded media files to their appropriate directories for organisation and access&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://hub.docker.com/r/valkey/valkey&quot;&gt;Valkey&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Valkey is an open-source, high-performance, in-memory key-value datastore, serving as a drop-in replacement for Redis&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://wiki.servarr.com/whisparr&quot;&gt;Whisparr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;Whisparr is a Library Manager, automating the management and meta data for your Adult media files&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;
     &lt;center&gt;
      Ubuntu Linux Install - Docker Compose Build
     &lt;/center&gt;&lt;/th&gt; 
    &lt;th&gt;
     &lt;center&gt;
      Windows 11 Install - Docker with WSL and Ubuntu
     &lt;/center&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href=&quot;https://youtu.be/zz2XjrurgXI&quot; title=&quot;MediaStack - A Detailed Installation Walkthru (Ubuntu Linux)&quot;&gt;&lt;img src=&quot;https://i.ytimg.com/vi/zz2XjrurgXI/hq720.jpg&quot; alt=&quot;MediaStack - A Detailed Installation Walkthru (Ubuntu Linux)&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://youtu.be/N--e1O5SqPw&quot; title=&quot;MediaStack - Ultimate Guide on Windows 11 Docker with WSL and Ubuntu&quot;&gt;&lt;img src=&quot;https://i.ytimg.com/vi/N--e1O5SqPw/hq720.jpg&quot; alt=&quot;MediaStack - Ultimate Guide on Windows 11 Docker with WSL and Ubuntu&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;br /&gt; 
&lt;/center&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;MediaStack is your ultimate solution for managing and streaming media collections with applications like Jellyfin and Plex. Using Docker, MediaStack containerises these media servers alongside *ARR applications (Radarr, Sonarr, Lidarr, etc.) for seamless media automation and management.&lt;/p&gt; 
&lt;p&gt;You will also be able to connect to your MediaStack instance security from the Internet using the following two methods:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure Reverse Proxy:&lt;/strong&gt; Traefik, Authentik, and CrowdSec provides a full reverse proxy solution with free Let&#39;s Encrypt digital certificates, including SSO / OAuth2 / OpenID / SAML / Radius / LDAP identity providers and MFA. Traefik Certs Dumper extracts the Let&#39;s Encrypt cetificates so you can install them on other systems.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure Tailscale VPN:&lt;/strong&gt; Headscale is an open source Tailscale Coordination Server, allowing remote Tailscale clients to connect to the Headscale and Tailscale applications, and accessing all of the containers over the VPN connection. Include Headplane to provide a WebUI portal to manage Headscale settings.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The Traefik reverse proxy configuration for incoming connections, has been configured with the strongest of the modern cipher suites, using only TLSv1.2 and TSLv1.3 as minimum protocols, and enforces strong security headers to provide your MediaStack with the strongest security / privacy when you connect from the Internet.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h2&gt;Internal Container Access (From Home)&lt;/h2&gt; 
&lt;p&gt;Edit the &quot;&lt;strong&gt;Import Bookmarks - MediaStackGuide Applications (Internal URLs).html&lt;/strong&gt;&quot; file, and find / replace all of the &lt;strong&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/strong&gt; entries with the IP address running Docker in your home network.&lt;/p&gt; 
&lt;p&gt;Then import the Bookmarks into your web browser.&lt;/p&gt; 
&lt;h2&gt;External Container Access (From Internet)&lt;/h2&gt; 
&lt;p&gt;Edit the &quot;&lt;strong&gt;Import Bookmarks - MediaStackGuide Applications (External URLs).html&lt;/strong&gt;&quot; file, and find / replace all of the &lt;strong&gt;&lt;code&gt;YOUR_DOMAIN_NAME&lt;/code&gt;&lt;/strong&gt; entries with your Internet domain name.&lt;/p&gt; 
&lt;p&gt;All of the Docker images / containers in the Docker Compose file, have already been labelled for Traefik, and they will be automatically detected and assigned the correct routing based on the incoming Internet URL, using your domain name.&lt;/p&gt; 
&lt;p&gt;Port forward your incoming connections on your home Internet gateway / router, to the IP Address of your computer running Docker, using Ports 80 and 443 - If these are taken, you can use alternate ports using the &lt;strong&gt;REVERSE_PROXY_PORT_HTTP(S)&lt;/strong&gt; settings in the &lt;strong&gt;.ENV&lt;/strong&gt; variable file.&lt;/p&gt; 
&lt;h2&gt;How Do I Use The MediaStack Repo&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;base-working-files:&lt;/strong&gt; Download all of these files into a single directory located on your Docker computer. Then download the &lt;code&gt;docker-compose.yaml&lt;/code&gt; file located in one of the following configurations, into the same directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;docker-compose.yaml:&lt;/strong&gt; Download one of the &lt;code&gt;docker-compose.yaml&lt;/code&gt; configuration files:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;full-download-vpn:&lt;/strong&gt; The &lt;code&gt;docker-compose.yaml&lt;/code&gt; file located in this directory is configured so all outgoing network connections / media downloads are protected with the Gluetun VPN Tunnel, to provide maximum privacy on your Internet connection. &lt;strong&gt;This is the recommended configuration for new users&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;mini-download-vpn:&lt;/strong&gt; The &lt;code&gt;docker-compose.yaml&lt;/code&gt; file located in this directory is configured so only the SABnzbd (Usenet) and qBittorrent (Torrents) are protected with the Gluetun VPN Tunnel, to provide a moderate level of privacy just on your download activities.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;no-download-vpn:&lt;/strong&gt; The &lt;code&gt;docker-compose.yaml&lt;/code&gt; file located in this directory does not have Gluetun, or any other form of VPN for outgoing Internet traffic; you will have limited no privacy on downloads.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can now configure the &lt;code&gt;docker-compose.yaml&lt;/code&gt;, &lt;code&gt;.env&lt;/code&gt;, and other files downloaded from the &lt;strong&gt;base-working-files&lt;/strong&gt; configuration directory.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;What is: &quot;Full Download VPN&quot;&lt;/h2&gt; 
&lt;p&gt;This configuration set builds a fully encrypted VPN network architecture, and routes all network traffic from the Docker containers through the Gluetun container, where it is encrypted into a VPN, before it passes securely across the internet. This setup ensures that all data packets are encrypted, providing robust privacy and security. The primary benefit of this approach is the comprehensive protection of data, safeguarding against eavesdropping, and maintaining user privacy.&lt;/p&gt; 
&lt;p&gt;However, this heightened security method comes with trade-offs. Encrypting and decrypting all traffic can lead to increased latency and reduced network speeds. This can particularly impact applications requiring high bandwidth or low latency, such as media streaming or real-time communication tools. Nonetheless, for users prioritising privacy and security over speed, this setup is ideal.&lt;/p&gt; 
&lt;br /&gt; 
&lt;center&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;flowchart TD
  subgraph DockerNet[&quot;Full Download VPN&quot;]
    Gluetun
    Jellyfin
    Plex
    Jellyseerr
    Prowlarr
    Radarr
    Readarr
    Sonarr
    Mylar
    Whisparr
    Bazarr
    Lidarr
    Tdarr
    Huntarr
    SABnzbd
    qBittorrent
    Label@{ label: &quot;&amp;lt;div style=\&quot;color:\&quot;&amp;gt;&amp;lt;span style=\&quot;color:\&quot;&amp;gt;IP Subnet: 172.28.10.0/24&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; }
    NIC[&quot;Network Adapter&quot;]
  end

  Jellyfin     Jellyfin_Gluetun@    ---- Gluetun
  Plex         Plex_Gluetun@        ---  Gluetun
  Jellyseerr   Jellyseerr_Gluetun@  ---- Gluetun
  Prowlarr     Prowlarr_Gluetun@    ---  Gluetun
  Radarr       Radarr_Gluetun@      ---- Gluetun
  Readarr      Readarr_Gluetun@     ---  Gluetun
  Sonarr       Sonarr_Gluetun@      ---- Gluetun
  Mylar        Mylar_Gluetun@       ---  Gluetun
  Whisparr     Whisparr_Gluetun@    ---- Gluetun
  Bazarr       Bazarr_Gluetun@      ---  Gluetun
  Lidarr       Lidarr_Gluetun@      ---- Gluetun
  Tdarr        Tdarr_Gluetun@       ---  Gluetun
  Huntarr      Huntarr_Gluetun@     ---- Gluetun
  SABnzbd      SABnzbd_Gluetun@     ---  Gluetun
  qBittorrent  qBittorrent_Gluetun@ ---- Gluetun
  Gluetun      Gluetun_NIC@         ==&amp;gt; NIC
  NIC          NIC_Gateway@         ==&amp;gt; Gateway
  Gateway      Gateway_VPN@         ==&amp;gt; VPN
  Gateway[&quot;Home Gateway&quot;]
  VPN{&quot;VPN Server&amp;lt;br&amp;gt;Anchor Point&quot;}

  style Gluetun      stroke:#2962FF
  style Jellyfin     stroke:#2962FF
  style Plex         stroke:#2962FF
  style Jellyseerr   stroke:#2962FF
  style Prowlarr     stroke:#2962FF
  style Radarr       stroke:#2962FF
  style Readarr      stroke:#2962FF
  style Sonarr       stroke:#2962FF
  style Mylar        stroke:#2962FF
  style Whisparr     stroke:#2962FF
  style Bazarr       stroke:#2962FF
  style Lidarr       stroke:#2962FF
  style Tdarr        stroke:#2962FF
  style Huntarr      stroke:#2962FF
  style SABnzbd      stroke:#2962FF
  style qBittorrent  stroke:#2962FF
  style Label        stroke:none
  style NIC          stroke:green,    stroke-width:2px
  style Gateway      stroke:green,    stroke-width:2px
  style VPN          stroke:green,    stroke-width:2px

  linkStyle 0        stroke:orange
  linkStyle 1        stroke:orange
  linkStyle 2        stroke:orange
  linkStyle 3        stroke:orange
  linkStyle 4        stroke:orange
  linkStyle 5        stroke:orange
  linkStyle 6        stroke:orange
  linkStyle 7        stroke:orange
  linkStyle 8        stroke:orange
  linkStyle 9        stroke:orange
  linkStyle 10       stroke:orange
  linkStyle 11       stroke:orange
  linkStyle 12       stroke:orange
  linkStyle 13       stroke:orange
  linkStyle 14       stroke:orange
  linkStyle 15       stroke:green
  linkStyle 16       stroke:green
  linkStyle 17       stroke:green

  Jellyfin_Gluetun@{     animation: fast }
  Plex_Gluetun@{         animation: fast }
  Jellyseerr_Gluetun@{   animation: fast }
  Prowlarr_Gluetun@{     animation: fast }
  Radarr_Gluetun@{       animation: fast }
  Readarr_Gluetun@{      animation: fast }
  Sonarr_Gluetun@{       animation: fast }
  Mylar_Gluetun@{        animation: fast }
  Whisparr_Gluetun@{     animation: fast }
  Bazarr_Gluetun@{       animation: fast }
  Lidarr_Gluetun@{       animation: fast }
  Tdarr_Gluetun@{        animation: fast }
  Huntarr_Gluetun@{      animation: fast }
  SABnzbd_Gluetun@{      animation: fast }
  qBittorrent_Gluetun@{  animation: fast }
  Gluetun_NIC@{          animation: slow }
  NIC_Gateway@{          animation: slow }
  Gateway_VPN@{          animation: slow }
&lt;/code&gt;&lt;/pre&gt; 
&lt;/center&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: Many of the Docker applications are passing traffic through the Gluetun VPN container. When the Gluetun container stops, or if the VPN network connection is interrupted, then all network traffic for the other Docker applications, will also stop until Gluetun re-establishes the secure VPN connection.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h2&gt;What is: &quot;Mini Download VPN&quot;&lt;/h2&gt; 
&lt;p&gt;This configuration set builds a minimal encrypted VPN network, soley for the Torrent and Usenet downloads for the qBittorrent and SABnzbd Docker containers, which route all network traffic through the Gluetun Docker container, where it is encrypted into a VPN before routing out to the Internet. All other Docker containers connect to the Docker bridge network (not Gluetun), and pass their network traffic directly out to the Internet though your Internet Service Provider. This approach ensures that only the Torrent and Usenet downloaded data is encrypted, while other containers operate with unencrypted traffic flows. The advantage here is that it maintains higher network performance for most applications, avoiding potential latency and bandwidth reductions associated with full encryption.&lt;/p&gt; 
&lt;p&gt;However, this comes at the cost of leaving some network traffic potentially exposed to interception or monitoring. This setup is suitable for users who require high performance for certain applications but still want to protect specific, sensitive download activities.&lt;/p&gt; 
&lt;br /&gt; 
&lt;center&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;flowchart TD
  subgraph DockerNet[&quot;Mini Download VPN&quot;]
    Gluetun
    Jellyfin
    Plex
    Jellyseerr
    Prowlarr
    Radarr
    Readarr
    Sonarr
    Mylar
    Whisparr
    Bazarr
    Lidarr
    Tdarr
    Huntarr
    SABnzbd
    qBittorrent
    Label@{ label: &quot;&amp;lt;div style=\&quot;color:\&quot;&amp;gt;&amp;lt;span style=\&quot;color:\&quot;&amp;gt;IP Subnet: 172.28.10.0/24&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; }
    NIC[&quot;Network Adapter&quot;]
  end

  Jellyfin     Jellyfin_NIC@        ---- NIC
  Plex         Plex_NIC@            ---  NIC
  Jellyseerr   Jellyseerr_NIC@      ---- NIC
  Prowlarr     Prowlarr_NIC@        ---  NIC
  Radarr       Radarr_NIC@          ---- NIC
  Readarr      Readarr_NIC@         ---  NIC
  Sonarr       Sonarr_NIC@          ---- NIC
  Mylar        Mylar_NIC@           ---  NIC
  Whisparr     Whisparr_NIC@        ---- NIC
  Bazarr       Bazarr_NIC@          ---  NIC
  Lidarr       Lidarr_NIC@          ---- NIC
  Tdarr        Tdarr_NIC@           ---  NIC
  Huntarr      Huntarr_NIC@         ---- NIC
  SABnzbd      SABnzbd_Gluetun@     ---  Gluetun
  qBittorrent  qBittorrent_Gluetun@ ---  Gluetun
  Gluetun      Gluetun_NIC@         ==&amp;gt;  NIC
  NIC          NIC_Gateway_0@       ==&amp;gt;  Gateway
  NIC          NIC_Gateway_1@       ==&amp;gt;  Gateway
  Gateway      Gateway_VPN_1@       ==&amp;gt;  Internet
  Gateway      Gateway_VPN_0@       ==&amp;gt;  VPN
  Gateway[&quot;Home Gateway&quot;]
  Internet{&quot;🔥Insecure🔥&amp;lt;br&amp;gt;🔥Internet🔥&quot;}
  VPN{&quot;VPN Server&amp;lt;br&amp;gt;Anchor Point&quot;}

  style Gluetun      stroke:#2962FF
  style Jellyfin     stroke:#2962FF
  style Plex         stroke:#2962FF
  style Jellyseerr   stroke:#2962FF
  style Prowlarr     stroke:#2962FF
  style Radarr       stroke:#2962FF
  style Readarr      stroke:#2962FF
  style Sonarr       stroke:#2962FF
  style Mylar        stroke:#2962FF
  style Whisparr     stroke:#2962FF
  style Bazarr       stroke:#2962FF
  style Lidarr       stroke:#2962FF
  style Tdarr        stroke:#2962FF
  style Huntarr      stroke:#2962FF
  style SABnzbd      stroke:#2962FF
  style qBittorrent  stroke:#2962FF
  style Label        stroke:none
  style NIC          stroke:green,    stroke-width:2px
  style Gateway      stroke:green,    stroke-width:2px
  style Internet     stroke:red,      stroke-width:2px
  style VPN          stroke:green,    stroke-width:2px

  linkStyle 0        stroke:orange
  linkStyle 1        stroke:orange
  linkStyle 2        stroke:orange
  linkStyle 3        stroke:orange
  linkStyle 4        stroke:orange
  linkStyle 5        stroke:orange
  linkStyle 6        stroke:orange
  linkStyle 7        stroke:orange
  linkStyle 8        stroke:orange
  linkStyle 9        stroke:orange
  linkStyle 10       stroke:orange
  linkStyle 11       stroke:orange
  linkStyle 12       stroke:orange
  linkStyle 13       stroke:orange
  linkStyle 14       stroke:orange
  linkStyle 15       stroke:green
  linkStyle 16       stroke:red
  linkStyle 17       stroke:green
  linkStyle 18       stroke:red
  linkStyle 19       stroke:green

  Jellyfin_NIC@{         animation: fast }
  Plex_NIC@{             animation: fast }
  Jellyseerr_NIC@{       animation: fast }
  Prowlarr_NIC@{         animation: fast }
  Radarr_NIC@{           animation: fast }
  Readarr_NIC@{          animation: fast }
  Sonarr_NIC@{           animation: fast }
  Mylar_NIC@{            animation: fast }
  Whisparr_NIC@{         animation: fast }
  Bazarr_NIC@{           animation: fast }
  Lidarr_NIC@{           animation: fast }
  Tdarr_NIC@{            animation: fast }
  Huntarr_NIC@{          animation: fast }
  SABnzbd_Gluetun@{      animation: fast }
  qBittorrent_Gluetun@{  animation: fast }
  Gluetun_NIC@{          animation: slow }
  NIC_Gateway_0@{        animation: slow }
  NIC_Gateway_1@{        animation: slow }
  Gateway_VPN_0@{        animation: slow }
  Gateway_VPN_1@{        animation: slow }
&lt;/code&gt;&lt;/pre&gt; 
&lt;/center&gt; 
&lt;br /&gt; 
&lt;h2&gt;What is: &quot;No Download VPN&quot;&lt;/h2&gt; 
&lt;p&gt;The Gluetun VPN container has been removed from this network architecture / design, and the containers are all communicating directly to the Internet without any VPN for privacy.&lt;/p&gt; 
&lt;br /&gt; 
&lt;center&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;flowchart TD
  subgraph DockerNet[&quot;No Download VPN&quot;]
    Jellyfin
    Plex
    Jellyseerr
    Prowlarr
    Radarr
    Readarr
    Sonarr
    Mylar
    Whisparr
    Bazarr
    Lidarr
    Tdarr
    Huntarr
    SABnzbd
    qBittorrent
    Label@{ label: &quot;&amp;lt;div style=\&quot;color:\&quot;&amp;gt;&amp;lt;span style=\&quot;color:\&quot;&amp;gt;IP Subnet: 172.28.10.0/24&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; }
    NIC[&quot;Network Adapter&quot;]
  end

  Jellyfin     Jellyfin_NIC@     ---- NIC
  Plex         Plex_NIC@         ---  NIC
  Jellyseerr   Jellyseerr_NIC@   ---- NIC
  Prowlarr     Prowlarr_NIC@     ---  NIC
  Radarr       Radarr_NIC@       ---- NIC
  Readarr      Readarr_NIC@      ---  NIC
  Sonarr       Sonarr_NIC@       ---- NIC
  Mylar        Mylar_NIC@        ---  NIC
  Whisparr     Whisparr_NIC@     ---- NIC
  Bazarr       Bazarr_NIC@       ---  NIC
  Lidarr       Lidarr_NIC@       ---- NIC
  Tdarr        Tdarr_NIC@        ---  NIC
  Huntarr      Huntarr_NIC@      ---- NIC
  SABnzbd      SABnzbd_NIC@      ---  NIC
  qBittorrent  qBittorrent_NIC@  ---- NIC
  NIC          NIC_Gateway@      ==&amp;gt;  Gateway
  Gateway      Gateway_VPN@      ==&amp;gt;  Internet
  Gateway[&quot;Home Gateway&quot;]
  Internet{&quot;🔥Insecure🔥&amp;lt;br&amp;gt;🔥Internet🔥&quot;}
  
  style Jellyfin     stroke:#2962FF
  style Plex         stroke:#2962FF
  style Jellyseerr   stroke:#2962FF
  style Prowlarr     stroke:#2962FF
  style Radarr       stroke:#2962FF
  style Readarr      stroke:#2962FF
  style Sonarr       stroke:#2962FF
  style Mylar        stroke:#2962FF
  style Whisparr     stroke:#2962FF
  style Bazarr       stroke:#2962FF
  style Lidarr       stroke:#2962FF
  style Tdarr        stroke:#2962FF
  style Huntarr      stroke:#2962FF
  style SABnzbd      stroke:#2962FF
  style qBittorrent  stroke:#2962FF
  style Label        stroke:none
  style NIC          stroke:green,    stroke-width:2px
  style Gateway      stroke:green,    stroke-width:2px
  style Internet     stroke:red,      stroke-width:2px
  
  linkStyle 0       stroke:orange
  linkStyle 1       stroke:orange
  linkStyle 2       stroke:orange
  linkStyle 3       stroke:orange
  linkStyle 4       stroke:orange
  linkStyle 5       stroke:orange
  linkStyle 6       stroke:orange
  linkStyle 7       stroke:orange
  linkStyle 8       stroke:orange
  linkStyle 9       stroke:orange
  linkStyle 10      stroke:orange
  linkStyle 11      stroke:orange
  linkStyle 12      stroke:orange
  linkStyle 13      stroke:orange
  linkStyle 14      stroke:orange
  linkStyle 15      stroke:red
  linkStyle 16      stroke:red

  Jellyfin_NIC@{         animation: fast }
  Plex_NIC@{             animation: fast }
  Jellyseerr_NIC@{       animation: fast }
  Prowlarr_NIC@{         animation: fast }
  Radarr_NIC@{           animation: fast }
  Readarr_NIC@{          animation: fast }
  Sonarr_NIC@{           animation: fast }
  Mylar_NIC@{            animation: fast }
  Whisparr_NIC@{         animation: fast }
  Bazarr_NIC@{           animation: fast }
  Lidarr_NIC@{           animation: fast }
  Tdarr_NIC@{            animation: fast }
  Huntarr_NIC@{          animation: fast }
  SABnzbd_NIC@{          animation: fast }
  qBittorrent_NIC@{      animation: fast }
  NIC_Gateway@{          animation: slow }
  Gateway_VPN@{          animation: slow }
&lt;/code&gt;&lt;/pre&gt; 
&lt;/center&gt; 
&lt;br /&gt; 
&lt;h2&gt;What Do I Need To Configure&lt;/h2&gt; 
&lt;p&gt;Follow the steps below to deploy your MediaStack quickly:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download all of the files in the &lt;code&gt;base-working-file&lt;/code&gt; GitHub folder, and &lt;strong&gt;one&lt;/strong&gt; of the pre-configured &lt;code&gt;docker-compose.yaml&lt;/code&gt; files into the same directory&lt;/li&gt; 
 &lt;li&gt;Update the &lt;code&gt;.env&lt;/code&gt; file with all the configuration settings / values for your system needs&lt;/li&gt; 
 &lt;li&gt;Replace &lt;code&gt;example.com&lt;/code&gt; with your Internet domain in the following files: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;headscale-config.yaml&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;headplane-config.yaml&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;traefik-dynamic.yaml&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;traefik-internal.yaml&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;traefik-static.yaml&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Update &lt;code&gt;cookie_secret&lt;/code&gt; variable in &lt;code&gt;headplane-config.yaml&lt;/code&gt; using 32 random characters&lt;/li&gt; 
 &lt;li&gt;Update &lt;code&gt;restart.sh&lt;/code&gt; script with your values for: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;code&gt;FOLDER_FOR_YAMLS&lt;/code&gt;&lt;/strong&gt;=/docker &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; # &amp;lt;-- Folder where the yaml and .env files are located&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Enable execution of shell scripts with &lt;code&gt;sudo chmod 775 *sh&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Start your MediaStack with &lt;code&gt;./restart.sh&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: The &lt;code&gt;restart.sh&lt;/code&gt; script reads the variables in the &lt;code&gt;.env&lt;/code&gt; environment file, then does most of the configuration / management for you - it will tell you if you have issues.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The Postgresql server still needs some minor configuration to complete the MediaStack deployment:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set access permissions on Authentik Postgresql database with &lt;code&gt;./secure_authentik_database.sh&lt;/code&gt; script&lt;/li&gt; 
 &lt;li&gt;Set up Guacamole Postgresql database and access permissions with &lt;code&gt;./create_guacamole_database.sh&lt;/code&gt; script&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Restart MediaStack again after changes with &lt;code&gt;./restart.sh&lt;/code&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Starting / Maintaining MediaStack&lt;/h2&gt; 
&lt;p&gt;To start MediaStack, you first need to configure all of the files for your system... i.e. variables for storage locations and docker user id. Then you can start your stack with the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo chmod 775 *sh
./restart.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;restart.sh&lt;/code&gt; script will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reads&lt;/strong&gt; the variables and values saved in the &lt;code&gt;.env&lt;/code&gt; environment file to manage the MediaStack using your configuration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Creates&lt;/strong&gt; folder structure for all of the persistant storage data, and for your download / media files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Permissions&lt;/strong&gt; are set on all files and directories for the persistant data and download / media files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Validates&lt;/strong&gt; configuration of the &lt;code&gt;docker-compose.yaml&lt;/code&gt; and &lt;code&gt;.env&lt;/code&gt; files for errors to ensure MediaStack will start before shutting down the running containers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Download&lt;/strong&gt; all of the Docker images needed to run MediaStack, if there are newer Docker images on the internet (than on your Docker host), then it will download the &lt;code&gt;latest&lt;/code&gt; images from the Internet.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Shutdown&lt;/strong&gt; all running Docker applications and forcably purge all &lt;strong&gt;non-persistent&lt;/strong&gt; Docker containers, volumes, and networks (MediaStack stores all persistent data in the storage locations from the configuration files to survive reboots / system failure).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Moves&lt;/strong&gt; all of the configuration files you downloaded / edited, into the correct working locations within the persistent data storage directories.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Restart&lt;/strong&gt; all Docker containers. If newer images were downloaded during the restart, then they will be used and the application will use the same persistent data volumes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Purge&lt;/strong&gt; all Docker images that are not presently being used after the restart. This will delete the older / unused images after newer images have been downloaded.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: The &lt;strong&gt;&lt;code&gt;restart.sh&lt;/code&gt;&lt;/strong&gt; script was written to be the most effective / effecient way to easily deploy and update the MediaStack with new releases, and is recommended for new users.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./secure_authentik_database.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;secure_authentik_database.sh&lt;/code&gt; script will secure the active Authentik database in Postgresql with a database username and password.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./create_guacamole_database.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;create_guacamole_database.sh&lt;/code&gt; script will create the new database and schema in Postgresql for Guacamole and secure the database with a username and password.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: The &lt;strong&gt;&lt;code&gt;secure_authentik_database.sh&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;create_guacamole_database.sh&lt;/code&gt;&lt;/strong&gt; scripts are mainly used during initial setup of MediaStack, and are only considered one-purpose use.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h2&gt;Check Status of VPN Connection&lt;/h2&gt; 
&lt;p&gt;The MediaStack project focuses on &lt;strong&gt;Security&lt;/strong&gt; and &lt;strong&gt;Privacy&lt;/strong&gt; as some of the basic networking concepts, and uses the Gluetun Docker application to encrypt your network traffic as it passes across the Internet.&lt;/p&gt; 
&lt;p&gt;If you are having network connectivity issues, or would like to check the network status of your Docker applications, there are several commands / checks that you can perform to check on connection status.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check running Docker processes:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker ps
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check IP Addresses of containers in the &quot;mediastack&quot; network:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker network inspect mediastack | grep -E &#39;(&quot;Name&quot;|IPv4)&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Connect to Gluetun Docker container and check the IP Address:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker exec gluetun /bin/sh -c &quot;wget -qO- ifconfig.io&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use the following command to connect to the Docker application and start a shell CLI:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker exec -it gluetun /bin/sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Use the following web links to check your own IP Address, and the location of the VPN IP Address:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://ifconfig.io&quot;&gt;https://ifconfig.io&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://iplocation.net&quot;&gt;https://iplocation.net&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;REMEMBER:&lt;/strong&gt; If the Gluetun container is not running, or the VPN connection is down, then all Docker containers behind the Gluetun VPN container will stop passing network traffic.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h2&gt;How To Access The Applications In Home Network&lt;/h2&gt; 
&lt;p&gt;Understanding how to access the Docker applications within your own home network can be a confusing concept for those new to Docker, more so when some of the Docker applications are hidden behind other Docker applications, such as Gluetun.&lt;/p&gt; 
&lt;p&gt;Imagine the following deployment scenario:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User 1&lt;/strong&gt; has deployed their Docker applications using the &quot;&lt;strong&gt;Mini Download VPN&lt;/strong&gt;&quot; YAML files, so only the qBittorrent container is using the Gluetun VPN to encrypt network traffic to the Internet. Therefore, &lt;strong&gt;User 1&lt;/strong&gt; accesses the &lt;strong&gt;Jellyfin&lt;/strong&gt; application directly, with the URL of: &lt;strong&gt;&lt;a href=&quot;http://jellyfin:8096&quot;&gt;http://jellyfin:8096&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User 2&lt;/strong&gt; has deployed their Docker applications using the &quot;&lt;strong&gt;Full Download VPN&lt;/strong&gt;&quot; YAML files, which has all of the &quot;Media Player&quot; and &quot;Downloading&quot; Docker containers connecting to the Internet through the Gluetun VPN, encrypting all network traffic. Therefore, &lt;strong&gt;User 2&lt;/strong&gt; accesses the &lt;strong&gt;Jellyfin&lt;/strong&gt; application by using the Gluetun container, which then uses port-redirection to forward the network traffic into Jellyfin. This URL will be: &lt;strong&gt;&lt;a href=&quot;http://gluetun:8096&quot;&gt;http://gluetun:8096&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The YAML configuration files are already set up to do all the network firewalling, port forwarding, and VPN connections as standard, all that most people will need to do, it just update the &lt;strong&gt;&lt;code&gt;docker-compose.env&lt;/code&gt;&lt;/strong&gt; file and update all the IP Addresses for VPN login details for your own environment.&lt;/p&gt; 
&lt;br /&gt; 
&lt;center&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;flowchart TB
  subgraph HomeNet[&quot;Home Network&quot;]
    user1
    user2
    NIC
    subgraph DockerNet[&quot;Docker Network&quot;]
      Gluetun
      Jellyfin
      Label@{ label: &quot;&amp;lt;div style=\&quot;color:\&quot;&amp;gt;&amp;lt;span style=\&quot;color:\&quot;&amp;gt;IP Subnet: 172.28.10.0/24&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; }
    end
  Gluetun
  end

  user1     user1_NIC@         -- Port&amp;lt;/br&amp;gt;8096 --- NIC
  user2     user2_NIC@         -- Port&amp;lt;/br&amp;gt;8096 --- NIC
  NIC       NIC_Jellyfin@      --- Jellyfin
  NIC       NIC_Gluetun@       --- Gluetun
  Gluetun   Gluetun_Jellyfin@  --- Jellyfin

  user1[&quot;😊 User 1&quot;]
  user2[&quot;😊 User 2&quot;]
  NIC[&quot;Network Adapter&amp;lt;p&amp;gt;192.168.1.10&quot;]
  Gluetun[&quot;Gluetun HTTP:8096&quot;]
  Jellyfin[&quot;Jellyfin HTTP:8096&quot;]
  
  style user1     stroke:#2962FF,   stroke-width:2px
  style user2     stroke:#2962FF,   stroke-width:2px
  style NIC       stroke:#2962FF,   stroke-width:2px
  style Gluetun   stroke:#2962FF,   stroke-width:2px
  style Jellyfin  stroke:#2962FF,   stroke-width:2px

  linkStyle 0     stroke:red,       stroke-width:2px,  stroke-dasharray:5
  linkStyle 1     stroke:green,     stroke-width:2px,  stroke-dasharray:5
  linkStyle 2     stroke:red,       stroke-width:2px,  stroke-dasharray:5
  linkStyle 3     stroke:green,     stroke-width:2px,  stroke-dasharray:5
  linkStyle 4     stroke:green,     stroke-width:2px,  stroke-dasharray:5

  user1_NIC@{        animation: slow }
  user2_NIC@{        animation: fast }
  NIC_Jellyfin@{     animation: slow }
  NIC_Gluetun@{      animation: fast }
  Gluetun_Jellyfin@{ animation: fast }
&lt;/code&gt;&lt;/pre&gt; 
&lt;/center&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;p&gt;The network settings for your home network, and the Docker network, can be adjusted in the &lt;strong&gt;&lt;code&gt;.env&lt;/code&gt;&lt;/strong&gt; file. Likewise, if the Gluetun container is routing outbound VPN traffic for any of the Docker applications, it can also accept inbound network traffic and re-route the traffic to any of the Docker containers connected to the Gluetun VPN, based on the port redirect rules in the Gluetun YAML file.&lt;/p&gt; 
&lt;p&gt;The different network VPN security, and inbound redirection to the Gluetun attached Docker applications have already been configured in the YAML files, most users should just need to adjust the &lt;strong&gt;&lt;code&gt;.env&lt;/code&gt;&lt;/strong&gt; file to suit your network IP addressing, then deploy the applications using the &lt;strong&gt;&lt;code&gt;./restart.sh&lt;/code&gt;&lt;/strong&gt; script.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;How Are The Filesystems Mapped Between The Docker Application And The Host Computer ?&lt;/h2&gt; 
&lt;p&gt;All of the filesystems are automatically mapped between your host computers hard drives, and the virtual drives within the Docker containers. The filesystem mapping is configured in all of the YAML configuration files, so the Docker applications use the same folder structure.&lt;/p&gt; 
&lt;p&gt;You will need to set up the following variables in the &lt;strong&gt;&lt;code&gt;.env&lt;/code&gt;&lt;/strong&gt; environment configuration file, so the Docker applications can connect to the media / data storage on the local computer.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;FOLDER_FOR_MEDIA=/your-media-folder       # Change to where you want your media to be stored
FOLDER_FOR_DATA=/your-app-configs         # Change to where you want your container configurations to be stored
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;strong&gt;&lt;code&gt;FOLDER_FOR_MEDIA&lt;/code&gt;&lt;/strong&gt; variable can be either Linux, Windows, MacOS, Synology, or NFS filesystems, and is the location for all of the &lt;strong&gt;media storage, and transient download files&lt;/strong&gt; being used by the Bittorrent and Usenet applications. The filesystem mapping and directory structure between the Docker host computer, and the Docker applications, is shown in the folder structure below.&lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;&lt;code&gt;FOLDER_FOR_DATA&lt;/code&gt;&lt;/strong&gt; variable can also be either Linux, Windows, MacOS, Synology, or NFS filesystems, and is the &lt;strong&gt;configuration storage&lt;/strong&gt; for all of the Docker applications. Docker will store the running configuration of each of the Docker applications, into their own directory, inside the &lt;strong&gt;&lt;code&gt;FOLDER_FOR_DATA&lt;/code&gt;&lt;/strong&gt; directory.&lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;&lt;code&gt;restart.sh&lt;/code&gt;&lt;/strong&gt; script will automatically create the directory structure below, based on the values you add in the &lt;strong&gt;&lt;code&gt;.env&lt;/code&gt;&lt;/strong&gt; file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-{&quot;&gt;    $ tree $FOLDER_FOR_MEDIA

    ⠀⠀⠀⠀⠀Docker Host Computer:⠀⠀⠀⠀⠀⠀⠀⠀⠀Inside Docker Containers:
    ├── /FOLDER_FOR_MEDIA   ⠀       ├── /data
    ⠀⠀⠀⠀⠀├── media                  ⠀⠀⠀⠀├── media        &amp;lt;-- Media is stored / managed under this folder
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── anime                 │⠀⠀⠀⠀├── anime       &amp;lt;-- Sonarr Media Library Manager
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── audio                 │⠀⠀⠀⠀├── audio       &amp;lt;-- Lidarr Media Library Manager
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── books                 │⠀⠀⠀⠀├── books       &amp;lt;-- Readarr Media Library Manager
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── comics                │⠀⠀⠀⠀├── comics      &amp;lt;-- Mylar Media Library Manager
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── movies                │⠀⠀⠀⠀├── movies      &amp;lt;-- Radarr Media Library Manager
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── music                 │⠀⠀⠀⠀├── music       &amp;lt;-- Lidarr Media Library Manager
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── photos                │⠀⠀⠀⠀├── photos      &amp;lt;-- N/A - Add Personal Photos
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── tv                    │⠀⠀⠀⠀├── tv          &amp;lt;-- Sonarr Media Library Manager
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀└── xxx                   │⠀⠀⠀⠀└── xxx         &amp;lt;-- Whisparr Media Library Manager
    ⠀⠀⠀⠀⠀├── torrents               ⠀⠀⠀⠀├── torrents     &amp;lt;-- Folder for Torrent Downloads Data
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── anime                 │⠀⠀⠀⠀├── anime       &amp;lt;-- Anime Category (Sonarr)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── audio                 │⠀⠀⠀⠀├── audio       &amp;lt;-- Audio Category (Lidarr)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── books                 │⠀⠀⠀⠀├── books       &amp;lt;-- Book Category (Readarr)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── comics                │⠀⠀⠀⠀├── comics      &amp;lt;-- Comic Category (Mylar)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── complete              │⠀⠀⠀⠀├── complete    &amp;lt;-- Completed / General Downloads
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── console               │⠀⠀⠀⠀├── console     &amp;lt;-- Comic Category (Manual DL)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── incomplete            │⠀⠀⠀⠀├── incomplete  &amp;lt;-- Incomplete / Working Downloads
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── movies                │⠀⠀⠀⠀├── movies      &amp;lt;-- Movie Category (Radarr)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── music                 │⠀⠀⠀⠀├── music       &amp;lt;-- Music Category (Lidarr)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── prowlarr              │⠀⠀⠀⠀├── prowlarr    &amp;lt;-- Uncategorised Downloads from Prowlarr
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── software              │⠀⠀⠀⠀├── software    &amp;lt;-- Software Category (Manual DL)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── tv                    │⠀⠀⠀⠀├── tv          &amp;lt;-- TV Series (Sonarr)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀└── xxx                   │⠀⠀⠀⠀└── xxx         &amp;lt;-- Adult / XXX Category (Whisparr)
    ⠀⠀⠀⠀⠀├── usenet                 ⠀⠀⠀⠀├── usenet       &amp;lt;-- Folder for Usenet Downloads Data
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── anime                 │⠀⠀⠀⠀├── anime       &amp;lt;-- Anime Category (Sonarr)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── audio                 │⠀⠀⠀⠀├── audio       &amp;lt;-- Audio Category (Lidarr)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── books                 │⠀⠀⠀⠀├── books       &amp;lt;-- Book Category (Readarr)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── comics                │⠀⠀⠀⠀├── comics      &amp;lt;-- Comic Category (Mylar)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── complete              │⠀⠀⠀⠀├── complete    &amp;lt;-- Completed / General Downloads
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── console               │⠀⠀⠀⠀├── console     &amp;lt;-- Comic Category (Manual DL)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── incomplete            │⠀⠀⠀⠀├── incomplete  &amp;lt;-- Incomplete / Working Downloads
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── movies                │⠀⠀⠀⠀├── movies      &amp;lt;-- Movie Category (Radarr)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── music                 │⠀⠀⠀⠀├── music       &amp;lt;-- Music Category (Lidarr)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── prowlarr              │⠀⠀⠀⠀├── prowlarr    &amp;lt;-- Uncategorised Downloads from Prowlarr
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── software              │⠀⠀⠀⠀├── software    &amp;lt;-- Software Category (Manual DL)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀├── tv                    │⠀⠀⠀⠀├── tv          &amp;lt;-- TV Series (Sonarr)
    ⠀⠀⠀⠀⠀│⠀⠀⠀⠀└── xxx                   │⠀⠀⠀⠀└── xxx         &amp;lt;-- Adult / XXX Category (Whisparr)
    ⠀⠀⠀⠀⠀├── watch                  ⠀⠀⠀⠀└── watch       &amp;lt;-- Add .nzb and .torrent files for manual download
    ⠀⠀⠀⠀⠀│
    ⠀⠀⠀⠀⠀│    ⠀⠀⠀⠀⠀    ⠀⠀⠀⠀⠀    ⠀⠀⠀ ⠀⠀      Below Folders Only Mapped To Filebot Container
    ⠀⠀⠀⠀⠀└── filebot               ├── /filebot
    ⠀⠀⠀⠀⠀ ⠀⠀⠀⠀├── input                 ├── input      &amp;lt;-- Add Files Here for Renaming by Filebot
    ⠀⠀⠀⠀⠀ ⠀⠀⠀⠀└── output                └── output     &amp;lt;-- Files Moved Here After Renaming by Filebot
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h2&gt;Secure Remote Network Access&lt;/h2&gt; 
&lt;p&gt;All Docker configurations are designed to allow secure remote access to your applications while away from home. The network diagram below illustrates a secure architecture built on Docker, Traefik, Authentik, CrowdSec, Cloudflare DNS, and MFA. This setup ensures that only users you explicitly authorise can access internal Docker-based services from the Internet.&lt;/p&gt; 
&lt;p&gt;At the core is your Docker infrastructure, typically running on subnet 172.28.10.0/24 (customisable as needed). Multiple applications are hosted as Docker containers within this network. Once remotely authenticated, users are granted access to Heimdall, Homarr, or Homepage—these serve as landing page portals, providing easy navigation to other internal applications.&lt;/p&gt; 
&lt;p&gt;Incoming remote connections are routed through Traefik, which acts as a reverse proxy and terminates SSL using a valid digital certificate to secure all HTTPS sessions. Traefik intercepts all requests and forwards them to the appropriate internal service. CrowdSec analyses incoming traffic against threat intelligence feeds and blocks requests from sources identified as malicious or suspicious.&lt;/p&gt; 
&lt;p&gt;This architecture provides a secure, scalable, and manageable solution for remote access. Only authorised, authenticated users can reach your internal applications, with threat detection and strong access controls in place—balancing security with ease of use.&lt;/p&gt; 
&lt;br /&gt; 
&lt;center&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;flowchart LR
  subgraph subGraph0[&quot;Internet Zone&quot;]
    goodguy[&quot;😊 Good Guys&quot;]
    badguy[&quot;🕵 Bad Guys&quot;]
  end
  subgraph subGraph1[&quot;Reverse Proxy Layer&quot;]
    traefik[&quot;🛡️Traefik&quot;]
    crowdsec[&quot;🔍 CrowdSec&quot;]
  end
  subgraph subGraph2[&quot;Auth Layer&quot;]
    auth[&quot;🛂 Authentik&quot;]
  end
  subgraph subGraph3[&quot;Internal Web Applications&quot;]
    webauth[&quot;👮‍♂️ Web Apps&amp;lt;p&amp;gt;Auth / SSO / MFA&amp;lt;/p&amp;gt;&quot;]
    webapp[&quot;🖥️ Web Apps&quot;]
  end

  block[&quot;💥 Access Blocked&quot;]
  goodguy  goodguy_traefik@     -- 1 ---&amp;gt; traefik
  badguy   badguy_traefik@      -- 1 ---&amp;gt; traefik
  traefik  traefik_crowdsec_0@  -- 2 ---&amp;gt; crowdsec
  traefik  traefik_crowdsec_1@  -- 2 ---&amp;gt; crowdsec
  crowdsec crowdsec_traefik_0@  -- 3 ---&amp;gt; traefik
  crowdsec crowdsec_traefik_1@  -- 3 ---&amp;gt; traefik
  traefik  traefik_block@       -- 4 ---&amp;gt; block
  traefik  traefik_webauth@     -- 4 ---&amp;gt; webauth
  webauth  webauth_auth@        -- 5 ---&amp;gt; auth
  auth     auth_webauth_0@      -- 6 ---&amp;gt; webauth
  auth     auth_webauth_1@      -- 6 ---&amp;gt; webauth
  webauth  webauth_webapp@      -- 7 ---&amp;gt; webapp
  webauth  webauth_block@       -- 7 --&amp;gt;  block
  crowdsec ~~~~ auth

  style goodguy   stroke:green,        stroke-width:2px
  style badguy    stroke:brown,        stroke-width:2px
  style traefik   stroke:blue,         stroke-width:2px
  style crowdsec  stroke:blue,         stroke-width:2px
  style auth      stroke:orange,       stroke-width:2px
  style webauth   stroke:orange,       stroke-width:2px
  style webapp    stroke:green,        stroke-width:2px
  style block     stroke:brown,        stroke-width:2px
  linkStyle 0     stroke:green,        stroke-width:2px
  linkStyle 1     stroke:red,          stroke-width:2px,  stroke-dasharray:5
  linkStyle 2     stroke:green,        stroke-width:2px
  linkStyle 3     stroke:red,          stroke-width:2px,  stroke-dasharray:5
  linkStyle 4     stroke:green,        stroke-width:2px
  linkStyle 5     stroke:red,          stroke-width:2px,  stroke-dasharray:5
  linkStyle 6     stroke:red,          stroke-width:2px,  stroke-dasharray:5
  linkStyle 7     stroke:green,        stroke-width:2px
  linkStyle 8     stroke:green,        stroke-width:2px
  linkStyle 9     stroke:green,        stroke-width:2px
  linkStyle 10    stroke:red,          stroke-width:2px,  stroke-dasharray:5
  linkStyle 11    stroke:green,        stroke-width:2px
  linkStyle 12    stroke:red,          stroke-width:2px,  stroke-dasharray:5

  goodguy_traefik@{    animation: fast }
  badguy_traefik@{     animation: slow }
  traefik_crowdsec_0@{ animation: fast }
  traefik_crowdsec_1@{ animation: slow }
  crowdsec_traefik_0@{ animation: fast }
  crowdsec_traefik_1@{ animation: slow }
  traefik_block@{      animation: slow }
  traefik_webauth@{    animation: fast }
  webauth_auth@{       animation: fast }
  auth_webauth_0@{     animation: fast }
  auth_webauth_1@{     animation: slow }
  webauth_webapp@{     animation: fast }
  webauth_block@{      animation: slow }
 
&lt;/code&gt;&lt;/pre&gt; 
 &lt;br /&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;center&quot;&gt;Step:&lt;/th&gt; 
    &lt;th&gt;Component:&lt;/th&gt; 
    &lt;th&gt;Action:&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
    &lt;td&gt;User&lt;/td&gt; 
    &lt;td&gt;Sends HTTPS web request to Docker web application via Traefik.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt; 
    &lt;td&gt;Traefik&lt;/td&gt; 
    &lt;td&gt;Reverse proxy receives HTTPS request and requests threat intelligence check.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt; 
    &lt;td&gt;CrowdSec&lt;/td&gt; 
    &lt;td&gt;Threat analysis identifies traffic as good or bad and notifies Traefik.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt; 
    &lt;td&gt;Traefik&lt;/td&gt; 
    &lt;td&gt;Bad traffic is blocked by the Traefik bouncer plugin; good traffic continues toward the web application.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt; 
    &lt;td&gt;Web Auth&lt;/td&gt; 
    &lt;td&gt;ForwardAuth middleware intercepts request, delegates authentication / authorisation to Authentik.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt; 
    &lt;td&gt;Authentik&lt;/td&gt; 
    &lt;td&gt;Authenticates user (including MFA) and grants access if user is authorised.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt; 
    &lt;td&gt;Web App&lt;/td&gt; 
    &lt;td&gt;Allows or blocks access based on Authentik permissions and application-level access controls.&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/center&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;h2&gt;Tailscale Mesh Network Access&lt;/h2&gt; 
&lt;p&gt;MediaStack also supports secure remote access via a Tailscale mesh network, providing direct, encrypted connectivity between approved devices and internal Docker applications. The architecture leverages Headscale (an open-source Tailscale coordination server) and Headplane (web UI for Headscale) to manage device enrollment, key exchange, and mesh configuration independently of Tailscale’s commercial cloud.&lt;/p&gt; 
&lt;p&gt;Authorised users install the Tailscale client on their devices, which automatically establish secure peer-to-peer tunnels to the Docker network. These tunnels operate over the internal subnet (typically 172.28.10.0/24, but configurable as needed), allowing seamless, private access to internal applications - even when outside the home or office.&lt;/p&gt; 
&lt;p&gt;All mesh connections are authenticated and managed through Headscale, ensuring that only devices you approve can participate in the network. Traffic is encrypted end-to-end using WireGuard, and access can be further restricted with network ACLs and exit nodes if required. The result is a secure, manageable, and flexible remote access solution - removing the need for traditional VPNs, exposing minimal attack surface, and retaining full control over your access policy.&lt;/p&gt; 
&lt;center&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;flowchart LR
  subgraph subGraph0[&quot;Internet Zone&quot;]
    client[&quot;😊 Tailscale Client&quot;]
    badguy[&quot;🕵 Bad Guys&quot;]
  end
  subgraph subGraph1[&quot;Reverse Proxy Layer&quot;]
    traefik[&quot;🛡️Traefik&quot;]
    crowdsec[&quot;🔍 CrowdSec&quot;]
  end
  subgraph subGraph2[&quot;Tailscale Meshed Network&quot;]
    traefik    traefik_headscale@    -- 4 ---  headscale
    headplane  headplane_headscale@  -- 8 ---  headscale
    direction TB
    headplane[&quot;✈️ Headplane&amp;lt;br&amp;gt;( Headscale WebUI )&quot;]
    headscale[&quot;🖧 Headscale&amp;lt;br&amp;gt;( Coordination Server )&quot;]
    tailscale[&quot;🛡️ Tailscale&amp;lt;br&amp;gt;( Exit-Node )&quot;]
  end
  subgraph subGraph3[&quot;Internal Web Applications&quot;]
    headscale
    webapp[&quot;🖥️ Web Apps&quot;]
  end

  block[&quot;💥 Access Blocked&quot;]
  exit[&quot;🌐 Exit-Node&amp;lt;p&amp;gt;Network Exit&quot;]
  client     client_traefik@       -- 1 ---  traefik
  badguy     badguy_traefik@       -- 1 ---  traefik
  traefik    traefik_crowdsec_0@   -- 2 ---- crowdsec
  traefik    traefik_crowdsec_1@   -- 2 ---- crowdsec
  crowdsec   crowdsec_traefik_0@   -- 3 ---- traefik
  crowdsec   crowdsec_traefik_1@   -- 3 ---- traefik
  traefik    traefik_block@        -- 4 ---  block
  headscale  headscale_tailscale@  -- 5 ---  tailscale
  headscale  headscale_block@      -- 5 ---  block
  tailscale  tailscale_webapp@     -- 6 ---  webapp
  tailscale  tailscale_exit@       -- 7 ---  exit
  crowdsec                         ~~~       headplane

  style client     stroke:green,        stroke-width:2px
  style badguy     stroke:brown,        stroke-width:2px
  style traefik    stroke:blue,         stroke-width:2px
  style crowdsec   stroke:blue,         stroke-width:2px
  style headplane  stroke:orange,       stroke-width:2px
  style headscale  stroke:orange,       stroke-width:2px
  style webapp     stroke:green,        stroke-width:2px
  style block      stroke:brown,        stroke-width:2px
  style tailscale  stroke:orange,       stroke-width:2px
  style exit       stroke:green,        stroke-width:2px

  linkStyle 0      stroke:green,        stroke-width:2px
  linkStyle 1      stroke:green,        stroke-width:2px
  linkStyle 2      stroke:green,        stroke-width:2px
  linkStyle 3      stroke:red,          stroke-width:2px
  linkStyle 4      stroke:green,        stroke-width:2px
  linkStyle 5      stroke:red,          stroke-width:2px
  linkStyle 6      stroke:green,        stroke-width:2px
  linkStyle 7      stroke:red,          stroke-width:2px
  linkStyle 8      stroke:red,          stroke-width:2px
  linkStyle 9      stroke:green,        stroke-width:2px
  linkStyle 10     stroke:red,          stroke-width:2px
  linkStyle 11     stroke:green,        stroke-width:2px
  linkStyle 12     stroke:green,        stroke-width:2px
  linkStyle 13     stroke:transparent

  client_traefik@{       animation: fast }
  badguy_traefik@{       animation: slow }
  traefik_crowdsec_0@{   animation: fast }
  traefik_crowdsec_1@{   animation: slow }
  crowdsec_traefik_0@{   animation: fast }
  crowdsec_traefik_1@{   animation: slow }
  traefik_headscale@{    animation: fast }
  traefik_block@{        animation: slow }
  headplane_headscale@{  animation: fast }
  headscale_tailscale@{  animation: fast }
  headscale_block@{      animation: slow }
  tailscale_webapp@{     animation: fast }
  tailscale_exit@{       animation: fast }
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align=&quot;center&quot;&gt;Step:&lt;/th&gt; 
    &lt;th&gt;Component:&lt;/th&gt; 
    &lt;th&gt;Action:&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;1&lt;/td&gt; 
    &lt;td&gt;Tailscale Client&lt;/td&gt; 
    &lt;td&gt;Sends network request via Traefik reverse proxy.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;2&lt;/td&gt; 
    &lt;td&gt;Traefik&lt;/td&gt; 
    &lt;td&gt;Receives network request and submits for threat intelligence check.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;3&lt;/td&gt; 
    &lt;td&gt;CrowdSec&lt;/td&gt; 
    &lt;td&gt;Analyses request for threats and informs Traefik to allow or block the request.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;4&lt;/td&gt; 
    &lt;td&gt;Traefik&lt;/td&gt; 
    &lt;td&gt;Allowed request is forwarded to Headscale coordination server.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt; 
    &lt;td&gt;Headscale&lt;/td&gt; 
    &lt;td&gt;Coordinates device registration, key exchange, and mesh networking via Tailscale.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;6&lt;/td&gt; 
    &lt;td&gt;Tailscale&lt;/td&gt; 
    &lt;td&gt;Requests for Docker Web Applications are sent to the relevant web port on Docker host.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;7&lt;/td&gt; 
    &lt;td&gt;Tailscale&lt;/td&gt; 
    &lt;td&gt;Requests for Internet services are routed out via your home Internet connection.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align=&quot;center&quot;&gt;8&lt;/td&gt; 
    &lt;td&gt;Headplane&lt;/td&gt; 
    &lt;td&gt;Provides Web UI/API for managing Headscale - Manages users, devices, routes and ACLs.&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/center&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;h2&gt;Configure Headscale / Tailscale / Headplane&lt;/h2&gt; 
&lt;p&gt;Replace all instances of &lt;code&gt;example.com&lt;/code&gt; in the configuration files with your own domain name&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE: Tailscale Authkey can&#39;t be set in &lt;code&gt;.env&lt;/code&gt; file until the Headscale container has been deployed after the first restart.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Register Tailscale Exit Node with Headscale&lt;/h2&gt; 
&lt;p&gt;Execute these commands once Headscale has been deployed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker exec -it headscale headscale users create exit-node
sudo docker exec -it headscale headscale users list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;List of users will be displayed showing their &quot;ID&quot; number:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ID | Name | Username  | Email | Created            
1  |      | exit-node |       | 2025-05-17 23:30:00
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a PreAuthKey for &quot;exit-node&quot; with following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker exec -it headscale headscale --user 1 preauthkeys create
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Output will display as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;2025-05-18T09:46:34+10:00 TRC expiration has been set expiration=3600000
4f9e5c04a019273ef6356b3f4c173b2a896749e7364993f5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add the authkey to &lt;code&gt;TAILSCALE_AUTHKEY&lt;/code&gt; in the &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;Restart the Tailscale container:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker compose restart tailscale
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check Tailscale exit node has connected and registered with Headscale:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker exec -it headscale headscale nodes list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check to see if the Tailscale exit node has registered the local / home subnet addresses with the Headscale server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker exec -it headscale headscale nodes list-routes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;List of routes for each host will be displayed showing their &quot;ID&quot; number:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ID | Hostname  | Approved | Available                                       | Serving (Primary)
1  | exit-node |          | 0.0.0.0/0, 192.168.1.0/24, 172.28.10.0/24, ::/0 |  
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Enable IP routing out of the Tailscale exit node with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker exec -it headscale headscale nodes approve-routes --identifier 1 --routes &quot;0.0.0.0/0,192.168.1.0/24,172.28.10.0/24,::/0&quot;
sudo docker exec -it headscale headscale nodes list-routes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The IP routes will now be enabled and look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ID | Hostname  | Approved                                        | Available                                       | Serving (Primary)  
1  | exit-node | 0.0.0.0/0, 192.168.1.0/24, 172.28.10.0/24, ::/0 | 0.0.0.0/0, 192.168.1.0/24, 172.28.10.0/24, ::/0 | 192.168.1.0/24, 172.28.10.0/24, 0.0.0.0/0, ::/0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Register Mobile Tailscale Application with Headscale&lt;/h3&gt; 
&lt;p&gt;You can now download the official Tailscale application, and when prompted to login, select a custom URL.&lt;/p&gt; 
&lt;p&gt;Enter your home Headscale URL: &lt;a href=&quot;https://headscale.example.com&quot;&gt;https://headscale.example.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;When you select connect, it will ask if you want to go to the URL, select Yes, then it will show a connection string like&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;headscale nodes register --user USERNAME --key 64LErdY2YcnMdNLNYc6wJJzE
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We need to first create a user account, then register the Tailscale node against that account:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker exec -it headscale headscale users create alice
sudo docker exec -it headscale headscale nodes register --user alice --key 64LErdY2YcnMdNLNYc6wJJzE
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Tailscale will now automatically connect with the Headscale server, which can be checked with commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker exec -it headscale headscale users list
sudo docker exec -it headscale headscale nodes list
sudo docker exec -it headscale headscale nodes list-routes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can now go to the Tailscale application on your phone, and select &lt;code&gt;Exit Node&lt;/code&gt; --&amp;gt; &lt;code&gt;exit-node&lt;/code&gt; and turn on &lt;code&gt;Allow Local Network Access&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also go into the Tailscale application settings on your phone, and turn on &lt;code&gt;VPN On Demand&lt;/code&gt;, so you always have remote access when away from home.&lt;/p&gt; 
&lt;h3&gt;WebUI Managed with Headplane&lt;/h3&gt; 
&lt;p&gt;Headplane is a WebUI control for Headscale and is accessible at &lt;a href=&quot;https://headplane.example.com/admin/&quot;&gt;https://headplane.example.com/admin/&lt;/a&gt; NOTE: &quot;/&quot; is needed at the end.&lt;/p&gt; 
&lt;p&gt;You can generate an API key to connect Headplane to Headscale with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker exec -it headscale headscale apikeys create --expiration 999d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The API Key can now be used in the Headplane portal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;xRYtN-G.frqhgHAC3jqLMbBqVTTRwAs2lWxSTeHr
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The API Key can be stored in the Headplane configuration so its always used without prompting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;vi headscale-config.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Update this section:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;  headscale_api_key: &quot;xRYtN-G.frqhgHAC3jqLMbBqVTTRwAs2lWxSTeHr&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Restart the MediaStack so the configuration file is copied to the correct locaton:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./restart.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h3&gt;Additional Support for Headscale / Tailscale / Headplane&lt;/h3&gt; 
&lt;p&gt;You can head over to any of the websites for futher configuration details, or connect to the Discord server and discuss issues with other users:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Headscale: &lt;a href=&quot;https://headscale.net/stable&quot;&gt;https://headscale.net/stable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tailscale: &lt;a href=&quot;https://tailscale.com&quot;&gt;https://tailscale.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Headplane: &lt;a href=&quot;https://github.com/tale/headplane&quot;&gt;https://github.com/tale/headplane&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; - Support Discord: [https://discord.gg/c84AZQhmpx](https://discord.gg/c84AZQhmpx) 
&lt;h2&gt;Configuring Authentik&lt;/h2&gt; 
&lt;p&gt;Adjust Authentik brand:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Admin Interface --&amp;gt; System --&amp;gt; Brands --&amp;gt; Edit &quot;authentik-default&quot;&lt;/li&gt; 
 &lt;li&gt;Title: MediaStack - Authentik&lt;/li&gt; 
 &lt;li&gt;Select &quot;Update&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Force MFA for all users:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Admin Interface --&amp;gt; Flows and Stages --&amp;gt; Stages --&amp;gt; Edit &quot;default-authentication-mfa-validation&quot;&lt;/li&gt; 
 &lt;li&gt;Not configured action: Force the user to configure an authenticator&lt;/li&gt; 
 &lt;li&gt;Selected Stages: default-authentication-login (User Login Stage)&lt;/li&gt; 
 &lt;li&gt;Select &quot;Update&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Add Application in Authentik&lt;/h2&gt; 
&lt;p&gt;Create Authentik Application:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Admin Interface --&amp;gt; Applications --&amp;gt; Create with Provider&lt;/li&gt; 
 &lt;li&gt;Name: Authentik&lt;/li&gt; 
 &lt;li&gt;Slug: authentik&lt;/li&gt; 
 &lt;li&gt;Launch URL: &lt;a href=&quot;https://auth.example.com&quot;&gt;https://auth.example.com&lt;/a&gt; &amp;lt;-- change to your domain 
  &lt;ul&gt; 
   &lt;li&gt;Open in New Tab: No&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Select &quot;Next&quot;&lt;/li&gt; 
 &lt;li&gt;Choose A Provider: Proxy Provider&lt;/li&gt; 
 &lt;li&gt;Select &quot;Next&quot;&lt;/li&gt; 
 &lt;li&gt;Name: Provider for Authentik&lt;/li&gt; 
 &lt;li&gt;Authorization flow: default-provider-authorization-explicit-consent (Authorize Application)&lt;/li&gt; 
 &lt;li&gt;Select &quot;Forward auth (domain level)&quot;&lt;/li&gt; 
 &lt;li&gt;Authentication URL: &lt;a href=&quot;https://auth.example.com&quot;&gt;https://auth.example.com&lt;/a&gt; &amp;lt;-- change to your domain&lt;/li&gt; 
 &lt;li&gt;Cookie domain: example.com &amp;lt;-- change to your domain&lt;/li&gt; 
 &lt;li&gt;Advanced flow settings:&lt;/li&gt; 
 &lt;li&gt;Authentication flow: default-authentication-flow (Welcome to authentik!)&lt;/li&gt; 
 &lt;li&gt;Select &quot;Next&quot;&lt;/li&gt; 
 &lt;li&gt;Configure Bindings - skip this step&lt;/li&gt; 
 &lt;li&gt;Select &quot;Next&quot;&lt;/li&gt; 
 &lt;li&gt;Select &quot;Submit&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Add application to outposts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Admin Interface --&amp;gt; Applications --&amp;gt; Outposts&lt;/li&gt; 
 &lt;li&gt;Edit: &quot;authentik Embedded Outpost&quot;&lt;/li&gt; 
 &lt;li&gt;Update Outpost:&lt;/li&gt; 
 &lt;li&gt;Select &quot;Authentik&quot; application in &quot;Available Applications&quot; and move across to &quot;Selected Applications&quot;&lt;/li&gt; 
 &lt;li&gt;Select &quot;Update&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Restart docker stack:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker compose down
sudo docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./restart.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Goto: &lt;a href=&quot;https://auth.example.com&quot;&gt;https://auth.example.com&lt;/a&gt; &amp;lt;-- change to your domain&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Configure CrowdSec&lt;/h2&gt; 
&lt;p&gt;Create a Crowdsec account, and obtain your Crowdsec security engine enrolement key from:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://app.crowdsec.net/security-engines&quot;&gt;https://app.crowdsec.net/security-engines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker exec crowdsec cscli console enroll cm1yipaufk0021g1u01fq27s3
sudo docker exec crowdsec cscli collections install crowdsecurity/base-http-scenarios crowdsecurity/http-cve crowdsecurity/linux crowdsecurity/iptables crowdsecurity/sshd crowdsecurity/traefik crowdsecurity/plex
sudo docker exec crowdsec cscli parsers install crowdsecurity/syslog-logs crowdsecurity/iptables-logs crowdsecurity/sshd-logs crowdsecurity/traefik-logs crowdsecurity/whitelists
sudo docker exec crowdsec cscli appsec-configs install crowdsecurity/virtual-patching crowdsecurity/appsec-default crowdsecurity/generic-rules
sudo docker exec crowdsec cscli appsec-rules install crowdsecurity/base-config
sudo docker exec crowdsec cscli console enable console_management
sudo docker exec crowdsec cscli capi register
sudo docker exec crowdsec cscli bouncers add traefik-bouncer
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Crowdsec will output the Local API Key (crowdsecLapiKey) for the bouncer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;API key for &#39;traefik-bouncer&#39;:

   8andilX0JKYIu8z+R4imPkIgG+TMdCttAuMaHrsV7ZU

Please keep this key since you will not be able to retrieve it!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The CrowdSec Local API Key (crowdsecLapiKey) needs to be added to the Traefik &lt;code&gt;dynamic.yaml&lt;/code&gt; file&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo vi traefik-dynamic.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;          crowdsecLapiKey: 8andilX0JKYIu8z+R4imPkIgG+TMdCttAuMaHrsV7ZU
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./restart
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You must go back to &lt;a href=&quot;https://app.crowdsec.net/security-engines&quot;&gt;https://app.crowdsec.net/security-engines&lt;/a&gt; and approve registration of the new CrowdSec docker engine into the online portal.&lt;/p&gt; 
&lt;p&gt;Check the status of Crowdsec components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo docker exec crowdsec cscli console status
sudo docker exec crowdsec cscli collections list
sudo docker exec crowdsec cscli scenarios list
sudo docker exec crowdsec cscli parsers list
sudo docker exec crowdsec cscli bouncers list
sudo docker exec crowdsec cscli alerts list
sudo docker exec crowdsec cscli metrics


sudo docker exec crowdsec cscli appsec-configs list
sudo docker exec crowdsec cscli appsec-rules list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Crowdsec will display the following output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;+--------------------+-----------+------------------------------------------------------+
| Option Name        | Activated | Description                                          |
+--------------------+-----------+------------------------------------------------------+
| custom             | ✅        | Forward alerts from custom scenarios to the console  |
| manual             | ✅        | Forward manual decisions to the console              |
| tainted            | ✅        | Forward alerts from tainted scenarios to the console |
| context            | ✅        | Forward context with alerts to the console           |
| console_management | ✅        | Receive decisions from console                       |
+--------------------+-----------+------------------------------------------------------+
-------------------------------------------------------------------------------------------------------------
 COLLECTIONS                                                                                                 
-------------------------------------------------------------------------------------------------------------
 Name                               📦 Status    Version  Local Path                                         
-------------------------------------------------------------------------------------------------------------
 crowdsecurity/base-http-scenarios  ✔️  enabled  1.0      /etc/crowdsec/collections/base-http-scenarios.yaml 
 crowdsecurity/http-cve             ✔️  enabled  2.9      /etc/crowdsec/collections/http-cve.yaml            
 crowdsecurity/iptables             ✔️  enabled  0.2      /etc/crowdsec/collections/iptables.yaml            
 crowdsecurity/linux                ✔️  enabled  0.2      /etc/crowdsec/collections/linux.yaml               
 crowdsecurity/plex                 ✔️  enabled  0.1      /etc/crowdsec/collections/plex.yaml                
 crowdsecurity/sshd                 ✔️  enabled  0.5      /etc/crowdsec/collections/sshd.yaml                
 crowdsecurity/traefik              ✔️  enabled  0.1      /etc/crowdsec/collections/traefik.yaml             
-------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------
 PARSERS                                                                                                      
--------------------------------------------------------------------------------------------------------------
 Name                            📦 Status    Version  Local Path                                             
--------------------------------------------------------------------------------------------------------------
 crowdsecurity/cri-logs          ✔️  enabled  0.1      /etc/crowdsec/parsers/s00-raw/cri-logs.yaml            
 crowdsecurity/dateparse-enrich  ✔️  enabled  0.2      /etc/crowdsec/parsers/s02-enrich/dateparse-enrich.yaml 
 crowdsecurity/docker-logs       ✔️  enabled  0.1      /etc/crowdsec/parsers/s00-raw/docker-logs.yaml         
 crowdsecurity/geoip-enrich      ✔️  enabled  0.5      /etc/crowdsec/parsers/s02-enrich/geoip-enrich.yaml     
 crowdsecurity/http-logs         ✔️  enabled  1.3      /etc/crowdsec/parsers/s02-enrich/http-logs.yaml        
 crowdsecurity/iptables-logs     ✔️  enabled  0.5      /etc/crowdsec/parsers/s01-parse/iptables-logs.yaml     
 crowdsecurity/plex-allowlist    ✔️  enabled  0.2      /etc/crowdsec/parsers/s02-enrich/plex-allowlist.yaml   
 crowdsecurity/sshd-logs         ✔️  enabled  2.9      /etc/crowdsec/parsers/s01-parse/sshd-logs.yaml         
 crowdsecurity/syslog-logs       ✔️  enabled  0.8      /etc/crowdsec/parsers/s00-raw/syslog-logs.yaml         
 crowdsecurity/traefik-logs      ✔️  enabled  0.9      /etc/crowdsec/parsers/s01-parse/traefik-logs.yaml      
 crowdsecurity/whitelists        ✔️  enabled  0.3      /etc/crowdsec/parsers/s02-enrich/whitelists.yaml       
--------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------
 Name             IP Address  Valid  Last API pull  Type  Version  Auth Type 
-----------------------------------------------------------------------------
 traefik-bouncer              ✔️                                   api-key   
-----------------------------------------------------------------------------
No active alerts
------------------------------------------------------------------------------------------------------
 APPSEC-CONFIGS                                                                                       
------------------------------------------------------------------------------------------------------
 Name                          📦 Status    Version  Local Path                                       
------------------------------------------------------------------------------------------------------
 crowdsecurity/appsec-default  ✔️  enabled  0.2      /etc/crowdsec/appsec-configs/appsec-default.yaml 
 crowdsecurity/generic-rules   ✔️  enabled  0.3      /etc/crowdsec/appsec-configs/generic-rules.yaml  
------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
 APPSEC-RULES                                                                                 
----------------------------------------------------------------------------------------------
 Name                       📦 Status    Version  Local Path                                  
----------------------------------------------------------------------------------------------
 crowdsecurity/base-config  ✔️  enabled  0.1      /etc/crowdsec/appsec-rules/base-config.yaml 
----------------------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;WebUI Management For Docker - Portainer&lt;/h2&gt; 
&lt;p&gt;Managing Docker via the CLI can be complex and challenging, especially for users who are not familiar with command-line syntax and operations. The CLI requires precise commands and a good understanding of Docker’s functionalities, which can be time-consuming and prone to errors.&lt;/p&gt; 
&lt;p&gt;MediaStack includes the &quot;&lt;strong&gt;Community Edition&lt;/strong&gt;&quot; of Portainer, which offers a user-friendly alternative to CLI, by providing a graphical web application to manage Docker environments. With Portainer, users can easily deploy, configure, and monitor Docker containers through an intuitive interface. This reduces the complexity and learning curve associated with the CLI, making Docker management accessible and efficient for both beginners and experienced users. Portainer simplifies Docker operations, enhances productivity, and improves overall user experience.&lt;/p&gt; 
&lt;p&gt;You can access your Portainer instance at: &lt;a href=&quot;http://localhost:9000&quot;&gt;http://localhost:9000&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Piracy Notice&lt;/h2&gt; 
&lt;p&gt;Using Docker to deploy the applications in the MediaStack is a great way to store, manage, and access your digital media that you own, or have legally acquired, and particularly when dealing with the digital media your children are exposed to. Docker allows easy deployment, updates, and maintenance, ensuring optimal performance without system interference.&lt;/p&gt; 
&lt;p&gt;We strongly emphasise the ethical and legal use of technology, advocating for managing media that users have rights to, such as purchased copies. Our community does not condone or tolerate piracy or related discussions. Piracy violates intellectual property laws and undermines content creators. Our forums focus on supporting users in managing their media content legally and responsibly.&lt;/p&gt; 
&lt;p&gt;By respecting legal guidelines and content creators&#39; rights, we ensure a supportive, ethical community dedicated to lawful media management.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KindleModding/WinterBreak</title>
      <link>https://github.com/KindleModding/WinterBreak</link>
      <description>&lt;p&gt;It do a thing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WinterBreak&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://ko-fi.com/hackerdude&quot; target=&quot;_blank&quot;&gt;&lt;img height=&quot;35&quot; style=&quot;border:0px;height:46px;&quot; src=&quot;https://storage.ko-fi.com/cdn/brandasset/v2/support_me_on_kofi_dark.png&quot; border=&quot;0&quot; alt=&quot;Buy Me a Coffee at ko-fi.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href=&quot;https://ko-fi.com/hackerdude&quot; target=&quot;_blank&quot;&gt; &lt;/a&gt;
&lt;p&gt;&lt;a href=&quot;https://ko-fi.com/hackerdude&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://forthebadge.com&quot;&gt;&lt;img src=&quot;https://forthebadge.com/images/badges/made-with-javascript.svg?sanitize=true&quot; alt=&quot;forthebadge&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;WinterBreak is a Kindle jailbreak utilising &lt;a href=&quot;https://kindlemodding.github.io/mesquito/&quot;&gt;Mesquito&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage Instructions&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the latest release&lt;/li&gt; 
 &lt;li&gt;Turn on airplane mode&lt;/li&gt; 
 &lt;li&gt;Extract the contents of WinterBreak to the root of your Kindle&#39;s storage&lt;/li&gt; 
 &lt;li&gt;Reboot your Kindle&lt;/li&gt; 
 &lt;li&gt;Open the Kindle store&lt;/li&gt; 
 &lt;li&gt;When prompted, enable WiFi&lt;/li&gt; 
 &lt;li&gt;Click on the WinterBreak icon&lt;/li&gt; 
 &lt;li&gt;Wait (Your Kindle will automatically reboot)&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>docker-mailserver/docker-mailserver</title>
      <link>https://github.com/docker-mailserver/docker-mailserver</link>
      <description>&lt;p&gt;Production-ready fullstack but simple mail server (SMTP, IMAP, LDAP, Antispam, Antivirus, etc.) running inside a container.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker Mailserver&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/docker-mailserver/docker-mailserver/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/docker-mailserver/docker-mailserver/default_on_push.yml?branch=master&amp;amp;color=blue&amp;amp;label=CI&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;style=for-the-badge&quot; alt=&quot;ci::status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/mailserver/docker-mailserver/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/mailserver/docker-mailserver.svg?style=for-the-badge&amp;amp;logo=docker&amp;amp;logoColor=white&amp;amp;color=blue&quot; alt=&quot;docker::pulls&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/DOCUMENTATION-GH%20PAGES-0078D4?style=for-the-badge&amp;amp;logo=googledocs&amp;amp;logoColor=white&quot; alt=&quot;documentation::badge&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;📃&lt;/span&gt; About&lt;/h2&gt; 
&lt;p&gt;A production-ready fullstack but simple containerized mail server (SMTP, IMAP, LDAP, Anti-spam, Anti-virus, etc.).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Only configuration files, no SQL database. Keep it simple and versioned. Easy to deploy and upgrade.&lt;/li&gt; 
 &lt;li&gt;Originally created by &lt;a href=&quot;https://github.com/tomav&quot;&gt;@tomav&lt;/a&gt;, this project is now maintained by volunteers since January 2021.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;
 &lt;!-- Adds a thin line break separator style --&gt;&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Be sure to read &lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/&quot;&gt;our documentation&lt;/a&gt;. It provides guidance on initial setup of your mail server.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If you have issues, please search through &lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/&quot;&gt;the documentation&lt;/a&gt; &lt;strong&gt;for your version&lt;/strong&gt; before opening an issue.&lt;/p&gt; 
 &lt;p&gt;The issue tracker is for issues, not for personal support.&lt;br /&gt; Make sure the version of the documentation matches the image version you&#39;re using!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;span&gt;🔗&lt;/span&gt; Links to Useful Resources&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/faq/&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/usage/&quot;&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/examples/tutorials/basic-installation/&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/contributing/issues-and-pull-requests/&quot;&gt;Issues and Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/docker-mailserver/docker-mailserver/master/CHANGELOG.md&quot;&gt;Release Notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/config/environment/&quot;&gt;Environment Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/faq/#how-do-i-update-dms&quot;&gt;Updating&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;&lt;span&gt;📦&lt;/span&gt; Included Services&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.postfix.org&quot;&gt;Postfix&lt;/a&gt; with SMTP or LDAP authentication and support for &lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/config/account-management/overview/#aliases&quot;&gt;extension delimiters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.dovecot.org&quot;&gt;Dovecot&lt;/a&gt; with SASL, IMAP, POP3, LDAP, &lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/config/advanced/mail-sieve&quot;&gt;basic Sieve support&lt;/a&gt; and &lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/config/account-management/overview/#quotas&quot;&gt;quotas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rspamd.com/&quot;&gt;Rspamd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amavis.org/&quot;&gt;Amavis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://spamassassin.apache.org/&quot;&gt;SpamAssassin&lt;/a&gt; supporting custom rules&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.clamav.net/&quot;&gt;ClamAV&lt;/a&gt; with automatic updates&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.opendkim.org&quot;&gt;OpenDKIM&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/trusteddomainproject/OpenDMARC&quot;&gt;OpenDMARC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.fail2ban.org/wiki/index.php/Main_Page&quot;&gt;Fail2ban&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.fetchmail.info/fetchmail-man.html&quot;&gt;Fetchmail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://getmail6.org/documentation.html&quot;&gt;Getmail6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.postfix.org/POSTSCREEN_README.html&quot;&gt;Postscreen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://postgrey.schweikert.ch/&quot;&gt;Postgrey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Support for &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;LetsEncrypt&lt;/a&gt;, manual and self-signed certificates&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://docker-mailserver.github.io/docker-mailserver/latest/config/setup.sh&quot;&gt;setup script&lt;/a&gt; for easy configuration and maintenance&lt;/li&gt; 
 &lt;li&gt;SASLauthd with LDAP authentication&lt;/li&gt; 
 &lt;li&gt;OAuth2 authentication (&lt;em&gt;via &lt;code&gt;XOAUTH2&lt;/code&gt; or &lt;code&gt;OAUTHBEARER&lt;/code&gt; SASL mechanisms&lt;/em&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
