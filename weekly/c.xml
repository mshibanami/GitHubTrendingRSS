<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub C Weekly Trending</title>
    <description>Weekly Trending of C in GitHub</description>
    <pubDate>Sat, 27 Sep 2025 01:41:07 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>cellos51/balatro-gba</title>
      <link>https://github.com/cellos51/balatro-gba</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Balatro-GBA&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/cellos51/balatro-gba/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/cellos51/balatro-gba/build_ci_workflow.yml?style=flat&amp;amp;logo=github&amp;amp;branch=main&amp;amp;label=Builds&amp;amp;labelColor=gray&amp;amp;color=default&amp;amp;v=1&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cellos51/balatro-gba/issues&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/github/issues/cellos51/balatro-gba?logo=bug&amp;amp;style=flat&amp;amp;label=Issues&amp;amp;labelColor=gray&amp;amp;color=red&amp;amp;v=2&quot; alt=&quot;Open Issues&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cellos51/balatro-gba/pulls&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/github/issues-pr/cellos51/balatro-gba?logo=git-pull-request&amp;amp;style=flat&amp;amp;label=Pull%20Requests&amp;amp;labelColor=gray&amp;amp;color=indigo&amp;amp;v=3&quot; alt=&quot;Pull Requests&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is an attempt to recreate the game &lt;strong&gt;&#39;Balatro&#39;&lt;/strong&gt; as accurately as possible, including all of the visual effects that make Balatro feel satisfying to play. This &lt;strong&gt;tech-demo/proof of concept&lt;/strong&gt; is strictly limited in content to a minimal version of Balatro and will &lt;strong&gt;NOT&lt;/strong&gt; recreate the full game. &lt;strong&gt;This version is intended for people who already own and know how the official full game works.&lt;/strong&gt; Please refer to the Balatro Wiki if you need help understanding certain mechanics or abilities.&lt;/p&gt; 
&lt;a href=&quot;https://balatrowiki.org/&quot;&gt; &lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20Wiki-194c84?logo=bigjoker&amp;amp;logoColor=fff&quot; alt=&quot;Balatro Wiki&quot; width=&quot;155&quot; /&gt; &lt;/a&gt; 
&lt;h3&gt;Disclaimer: This project is NOT endorsed by or affiliated with Playstack or LocalThunk&lt;/h3&gt; 
&lt;h4&gt;This is a non-profit community fan project solely aimed to recreate a minimal version of Balatro on the Game Boy Advance as a tribute to the full Balatro and is not intended to infringe or draw sales away from the full game&#39;s release or any of the established works by Playstack and LocalThunk.&lt;/h4&gt; 
&lt;h4&gt;All rights are reserved to their respective holders.&lt;/h4&gt; 
&lt;h3&gt;Please buy the official full version from these sources below:&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://store.steampowered.com/app/2379780/Balatro/&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20on%20Steam-194c84?logo=steam&amp;amp;logoColor=fff&quot; alt=&quot;Balatro on Steam&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.playstack.balatro.android&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20on%20Google%20Play-414141?logo=Google-play&amp;amp;logoColor=fff&quot; alt=&quot;Balatro on Google Play&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://apps.apple.com/us/app/balatro/id6502453075&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20on%20Apple%20App%20Store-0D96F6?logo=app-store&amp;amp;logoColor=fff&quot; alt=&quot;Balatro on Apple App Store&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nintendo.com/us/store/products/balatro-switch/&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20on%20Nintendo%20eShop-e60012?logo=nintendo&amp;amp;logoColor=fff&quot; alt=&quot;Balatro on Nintendo eShop&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://store.playstation.com/en-us/concept/10010334&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20on%20PlayStation%20Store-006FCD?logo=PlayStation&amp;amp;logoColor=fff&quot; alt=&quot;Balatro on PlayStation Store&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.xbox.com/en-US/games/store/balatro/9PK087LNGJC5&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20on%20Xbox-107C10.svg?logo=xbox&amp;amp;logoColor=white&quot; alt=&quot;Balatro on Xbox&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.humblebundle.com/store/balatro?srsltid=AfmBOoqS2De8T4kizzWxJS1pbvQosJ_bYCl4qvC6LA1YLPAh4sZ8vJqO&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Balatro%20on%20Humble%20Bundle-%23494F5C.svg?logo=HumbleBundle&amp;amp;logoColor=white&quot; alt=&quot;Balatro on Humble Bundle&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- The Gif is a little blurry but I think it looks fine --&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/cellos51/balatro-gba/main/example.gif&quot; alt=&quot;Example GIF&quot; width=&quot;800&quot; /&gt; 
&lt;h3&gt;Controls:&lt;/h3&gt; 
&lt;p&gt;(A: Pick Card/Make Selections)&lt;/p&gt; 
&lt;p&gt;(B: Deselect All Cards)&lt;/p&gt; 
&lt;p&gt;(L: Sell Joker)&lt;/p&gt; 
&lt;p&gt;(R: Sort Suit/Rank)&lt;/p&gt; 
&lt;p&gt;(D-Pad: Navigation)&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;Build Instructions:&lt;/strong&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;strong&gt;-Docker-&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;A docker compose file is provided to build this project.&lt;/p&gt; 
&lt;p&gt;1.) Install &lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;docker desktop&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;2.) Open a terminal to this projects directory:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;On &lt;strong&gt;linux&lt;/strong&gt; run &lt;code&gt;UID=$(id -u) GID=$(id -g) docker compose up&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;On &lt;strong&gt;windows&lt;/strong&gt; run &lt;code&gt;docker compose up&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Docker will build the project and the ROM will be in the same location as step 7 describes below.&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;-Windows-&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Video Tutorial: &lt;a href=&quot;https://youtu.be/72Zzo1VDYzQ?si=UDmEdbST1Cx1zZV2&quot;&gt;https://youtu.be/72Zzo1VDYzQ?si=UDmEdbST1Cx1zZV2&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;With &lt;code&gt;Git&lt;/code&gt; (not required)&lt;/h3&gt; 
&lt;p&gt;1.) Install &lt;code&gt;devkitPro&lt;/code&gt; from &lt;a href=&quot;https://github.com/devkitPro/installer&quot;&gt;https://github.com/devkitPro/installer&lt;/a&gt; by downloading the latest release, unzipping the archive, and then running the installer. You only need to install the tools for the GBA development so ensure you have it selected and install it to the default directory. You may need to create a temp folder for the project.&lt;/p&gt; 
&lt;p&gt;2.) Search for &lt;code&gt;MSys2&lt;/code&gt; in the Start Menu and open it.&lt;/p&gt; 
&lt;p&gt;3.) Install &lt;code&gt;Git&lt;/code&gt; by typing this command: &lt;code&gt;pacman -S git&lt;/code&gt; if you don&#39;t have it already installed&lt;/p&gt; 
&lt;p&gt;4.) Clone the project by putting &lt;code&gt;git clone https://github.com/cellos51/balatro-gba.git&lt;/code&gt; in the MSys2 window.&lt;/p&gt; 
&lt;p&gt;5.) Use &lt;code&gt;cd&lt;/code&gt; and drag the new folder into the window to add the file path and press Enter.&lt;/p&gt; 
&lt;p&gt;6.) Type &lt;code&gt;make&lt;/code&gt; into the window and press Enter to start building the rom.&lt;/p&gt; 
&lt;p&gt;7.) After it completes, navigate through the &lt;code&gt;build&lt;/code&gt; directory in the project folder and look for &lt;code&gt;balatro-gba.gba&lt;/code&gt; and load it on an emulator or flashcart.&lt;/p&gt; 
&lt;h3&gt;Without &lt;code&gt;Git&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Disregard Steps 3-4 and instead click the green code button on the main repository page and press &lt;code&gt;Download Zip&lt;/code&gt;. Unzip the folder and place it wherever you like. Then continue from Step 5.&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;-Linux-&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;1.) Add the devkitPro repo using these instructions &lt;a href=&quot;https://devkitpro.org/wiki/devkitPro_pacman&quot;&gt;https://devkitpro.org/wiki/devkitPro_pacman&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;2.) Install devkitPro by running &lt;code&gt;sudo pacman -S gba-dev&lt;/code&gt; and accepting all packages&lt;/p&gt; 
&lt;p&gt;3.) Activate the devkitPro environment by running &lt;code&gt;source /etc/profile.d/devkit-env.sh&lt;/code&gt; or opening a new shell&lt;/p&gt; 
&lt;p&gt;4.) Follow instructions from windows tutorial step 3&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Common Issues:&lt;/strong&gt;&lt;/h2&gt; 
&lt;h4&gt;1. &lt;strong&gt;When I run &lt;code&gt;make&lt;/code&gt; it errors out and won&#39;t compile!&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Move the project folder to your desktop and then &lt;code&gt;cd&lt;/code&gt; to it by dragging the folder into the terminal window. This error could be caused by a bad file path, placing the folder on the desktop is a failsafe.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2. &lt;strong&gt;I can&#39;t find the compiled rom!&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Look for a folder called &lt;code&gt;build&lt;/code&gt; inside the project folder and then find &lt;code&gt;balatro-gba.gba&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;3. &lt;strong&gt;The Game won&#39;t start!&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Try a different emulator or if you are using original hardware, make sure the rom is not corrupted and try a different flashcart or SD Card. If this does not work, open an issue on the Github page because a recent commit may have broke the game.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;4. &lt;strong&gt;It says I don&#39;t have &lt;code&gt;Git&lt;/code&gt; or &lt;code&gt;Make&lt;/code&gt; installed!&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;code&gt;pacman -S git&lt;/code&gt; (not required) or &lt;code&gt;pacman -S make&lt;/code&gt; although make should already be installed if you followed the instructions correctly.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>BitMaker-hub/NerdMiner_v2</title>
      <link>https://github.com/BitMaker-hub/NerdMiner_v2</link>
      <description>&lt;p&gt;Improved version of first ESP32 NerdMiner&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NerdSoloMiner&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;The NerdSoloMiner v2&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This is a &lt;strong&gt;free and open source project&lt;/strong&gt; that let you try to reach a bitcoin block with a small piece of hardware.&lt;/p&gt; 
&lt;p&gt;The main aim of this project is to let you &lt;strong&gt;learn more about minery&lt;/strong&gt; and to have a beautiful piece of hardware in your desktop.&lt;/p&gt; 
&lt;p&gt;Original project &lt;a href=&quot;https://github.com/valerio-vaccaro/HAN&quot;&gt;https://github.com/valerio-vaccaro/HAN&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/BitMaker-hub/NerdMiner_v2/main/images/bgNerdMinerV2.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;TTGO T-Display S3 or any supported boards (check Build tutorial 👇)&lt;/li&gt; 
 &lt;li&gt;3D BOX &lt;a href=&quot;https://raw.githubusercontent.com/BitMaker-hub/NerdMiner_v2/main/3d_files/&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Project description&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;ESP32 implementing Stratum protocol&lt;/strong&gt; to mine on solo pool. Pool can be changed but originally works with &lt;a href=&quot;https://web.public-pool.io&quot;&gt;public-pool.io&lt;/a&gt; (where Nerdminers are supported).&lt;/p&gt; 
&lt;p&gt;This project was initialy developed using ESP32-S3, but currently support other boards. It uses WifiManager to modify miner settings and save them to SPIFF. The microMiner comes with several screens to monitor it&#39;s working procedure and also to show you network mining stats. Currently includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;NerdMiner Screen &amp;gt; Mining data of Nerdminer&lt;/li&gt; 
 &lt;li&gt;ClockMiner Screen &amp;gt; Fashion style clock miner&lt;/li&gt; 
 &lt;li&gt;GlobalStats Screen &amp;gt; Global minery stats and relevant data&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This miner is multicore and multithreads, both cores are used to mine and several threads are used to implementing stratum work and wifi stuff. Every time an stratum job notification is received miner update its current work to not create stale shares.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; Miner is not seen by all standard pools due to its low share difficulty. You can check miner work remotely using specific pools specified down or seeing logs via UART.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Current project is still in developement and more features will be added&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Build Tutorial&lt;/h2&gt; 
&lt;h3&gt;Hardware requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;LILYGO T-Display S3 (original one) or any other supported boards&lt;/li&gt; 
 &lt;li&gt;3D BOX &lt;a href=&quot;https://raw.githubusercontent.com/BitMaker-hub/NerdMiner_v2/main/3d_files/&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Current Supported Boards&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;LILYGO T-Display S3 (&lt;a href=&quot;https://s.click.aliexpress.com/e/_Ddy7739&quot;&gt;Aliexpress link*&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-WROOM-32, ESP32-Devkit1.. (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DCzlUiX&quot;&gt;Aliexpress link*&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LILYGO T-QT pro (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DBQIr43&quot;&gt;Aliexpress link*&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LILYGO T-Display 1.14 (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DEqGvSJ&quot;&gt;Aliexpress link*&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LILYGO T-Display S3 AMOLED (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DmOIK6j&quot;&gt;Aliexpress link*&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LILYGO T-Display S3 AMOLED Touch (&lt;a href=&quot;https://www.lilygo.cc/products/t-display-s3-amoled?variant=43532279939253&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LILYGO T-Dongle S3 (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DmQCPyj&quot;&gt;Aliexpress link*&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-2432S028R 2,8&quot; (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DdXkvLv&quot;&gt;Aliexpress link*&lt;/a&gt; / Dev support: @nitroxgas / ⚡&lt;a href=&quot;mailto:jadeddonald78@walletofsatoshi.com&quot;&gt;jadeddonald78@walletofsatoshi.com&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-cam (&lt;a href=&quot;https://lastminuteengineers.com/getting-started-with-esp32-cam/&quot;&gt;Board Info&lt;/a&gt; / Dev support: @elmo128)&lt;/li&gt; 
 &lt;li&gt;M5-StampS3 (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DevABY3&quot;&gt;Aliexpress link*&lt;/a&gt; / Dev support: @gyengus)&lt;/li&gt; 
 &lt;li&gt;Wemos Lolin S3 Mini (&lt;a href=&quot;https://docs.platformio.org/en/latest/boards/espressif32/lolin_s3_mini.html&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Wemos Lolin S2 Mini (&lt;a href=&quot;https://docs.platformio.org/en/latest/boards/espressif32/lolin_s2_mini.html&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Weact S3 Mini (&lt;a href=&quot;https://github.com/WeActStudio/WeActStudio.ESP32S3-MINI&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Weact ESP32-D0WD-V3 (&lt;a href=&quot;https://github.com/WeActStudio/WeActStudio.ESP32CoreBoard&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-S3 Devkit (&lt;a href=&quot;https://docs.platformio.org/en/latest/boards/espressif32/esp32-s3-devkitm-1.html&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-C3 Devkit (&lt;a href=&quot;https://docs.platformio.org/en/latest/boards/espressif32/esp32-c3-devkitm-1.html&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-C3 Super Mini (&lt;a href=&quot;https://docs.platformio.org/en/latest/boards/espressif32/seeed_xiao_esp32c3.html&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Waveshare ESP32-S3-GEEK (&lt;a href=&quot;https://www.waveshare.com/wiki/ESP32-S3-GEEK&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LILYGO T-HMI (&lt;a href=&quot;https://s.click.aliexpress.com/e/_oFII4s2&quot;&gt;Aliexpress link*&lt;/a&gt;) / Dev support: @cosmicpsyop&lt;/li&gt; 
 &lt;li&gt;ESP32-C3 0.42 Inch OLED (&lt;a href=&quot;https://s.click.aliexpress.com/e/_oDmT4Id&quot;&gt;Aliexpress link*&lt;/a&gt; / Dev support: @mrthiti / ⚡ &lt;a href=&quot;mailto:wallet@thiti.dev&quot;&gt;wallet@thiti.dev&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-S3 0.42 Inch OLED (&lt;a href=&quot;https://s.click.aliexpress.com/e/_oFIMUoh&quot;&gt;Aliexpress link*&lt;/a&gt; / Dev support: @mrthiti / ⚡ &lt;a href=&quot;mailto:wallet@thiti.dev&quot;&gt;wallet@thiti.dev&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;*Affiliate links&lt;/p&gt; 
&lt;h3&gt;Flash firmware&lt;/h3&gt; 
&lt;h4&gt;microMiners Flashtool [Recommended]&lt;/h4&gt; 
&lt;p&gt;Easyiest way to flash firmware. Build your own miner using the folowing firwmare flash tool:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Get a TTGO T-display S3 or any other supported board&lt;/li&gt; 
 &lt;li&gt;Go to NM2 flasher online: &lt;a href=&quot;https://flasher.bitronics.store/&quot;&gt;https://flasher.bitronics.store/&lt;/a&gt; (recommend via Google Chrome incognito mode)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Standard tool&lt;/h4&gt; 
&lt;p&gt;Create your own miner using the online firwmare flash tool &lt;strong&gt;ESPtool&lt;/strong&gt; and one of the &lt;strong&gt;binary files&lt;/strong&gt; that you will find in the &lt;code&gt;bin&lt;/code&gt; folder. If you want you can compile the entire project using Arduino, PlatformIO or Expressif IDF.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Get a TTGO T-display S3 or any supported board&lt;/li&gt; 
 &lt;li&gt;Download this repository&lt;/li&gt; 
 &lt;li&gt;Go to ESPtool online: &lt;a href=&quot;https://espressif.github.io/esptool-js/&quot;&gt;https://espressif.github.io/esptool-js/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Load the firmware with the binary from one of the sub-folders of &lt;code&gt;bin&lt;/code&gt; corresponding to your board.&lt;/li&gt; 
 &lt;li&gt;Plug your board and select each file from the sub-folder (&lt;code&gt;.bin&lt;/code&gt; files).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Update firmware&lt;/h3&gt; 
&lt;p&gt;Update NerdMiner firmware following same flashing steps but only using the file 0x10000_firmware.bin.&lt;/p&gt; 
&lt;h4&gt;Build troubleshooting&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Online &lt;a href=&quot;https://espressif.github.io/esptool-js/&quot;&gt;ESP Tool&lt;/a&gt; works with chrome, chromium, brave&lt;/li&gt; 
 &lt;li&gt;ESPtool recommendations: use 115200bps&lt;/li&gt; 
 &lt;li&gt;Build errors &amp;gt; If during firmware download upload stops, it&#39;s recommended to enter the board in boot mode. Unplug cable, hold right bottom button and then plug cable. Try programming&lt;/li&gt; 
 &lt;li&gt;In extreme case you can &quot;Erase all flash&quot; on ESPtool to clean all current configuration before uploading firmware. There has been cases that experimented Wifi failures until this was made.&lt;/li&gt; 
 &lt;li&gt;In case of ESP32-WROOM Boards, could be necessary to put your board on boot mode. Hold boot button, press reset button and then program.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;NerdMiner configuration&lt;/h2&gt; 
&lt;p&gt;After programming, you will only need to setup your Wifi and BTC address.&lt;/p&gt; 
&lt;p&gt;Note: when BTC address of your selected wallet is not provided, mining will not be started.&lt;/p&gt; 
&lt;h4&gt;Wifi Accesspoint&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Connect to NerdMinerAP&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;AP: NerdMinerAP&lt;/li&gt; 
   &lt;li&gt;PASS: MineYourCoins&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set up your Wifi Network&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add your BTC address&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Change the password if needed&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If you are using public-pool.io and you want to set a custom name to your worker you can append a string with format &lt;em&gt;.yourworkername&lt;/em&gt; to the address&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;SD card (if available)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Format a SD card using Fat32.&lt;/li&gt; 
 &lt;li&gt;Create a file named &quot;config.json&quot; in your card&#39;s root, containing the the following structure. Adjust the settings to your needs:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;{  
  &quot;SSID&quot;: &quot;myWifiSSID&quot;,  
  &quot;WifiPW&quot;: &quot;myWifiPassword&quot;,  
  &quot;PoolUrl&quot;: &quot;public-pool.io&quot;,  
  &quot;PoolPort&quot;: 21496,
  &quot;PoolPassword&quot;: &quot;x&quot;,
  &quot;BtcWallet&quot;: &quot;walletID&quot;,  
  &quot;Timezone&quot;: 2,  
  &quot;SaveStats&quot;: false  
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt;Insert the SD card.&lt;/li&gt; 
 &lt;li&gt;Hold down the &quot;reset configurations&quot; button as described below to reset the configurations and/or boot without settings in your nvmemory.&lt;/li&gt; 
 &lt;li&gt;Power down to remove the SD card. It is not needed for mining.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Pool selection&lt;/h4&gt; 
&lt;p&gt;Recommended low difficulty share pools:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Pool URL&lt;/th&gt; 
   &lt;th&gt;Port&lt;/th&gt; 
   &lt;th&gt;Web URL&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;public-pool.io&lt;/td&gt; 
   &lt;td&gt;21496&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://web.public-pool.io&quot;&gt;https://web.public-pool.io&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Open Source Solo Bitcoin Mining Pool supporting open source miners&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pool.nerdminers.org&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://nerdminers.org&quot;&gt;https://nerdminers.org&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The official Nerdminer pool site - Mantained by @golden-guy&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pool.nerdminer.io&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://nerdminer.io&quot;&gt;https://nerdminer.io&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mantained by CHMEX&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pool.pyblock.xyz&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pool.pyblock.xyz/&quot;&gt;https://pool.pyblock.xyz/&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mantained by curly60e&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pool.sethforprivacy.com&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pool.sethforprivacy.com/&quot;&gt;https://pool.sethforprivacy.com/&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mantained by @sethforprivacy - public-pool fork&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pool.stompi.de&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;http://web.stompi.de&quot;&gt;http://web.stompi.de&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mantained by @odinstar - public-pool fork&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pool.solomining.de&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pool.solomining.de/&quot;&gt;https://pool.solomining.de/&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mantained by &lt;a href=&quot;https://x.com/solo_mining&quot;&gt;https://x.com/solo_mining&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Other standard pools not compatible with low difficulty share:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Pool URL&lt;/th&gt; 
   &lt;th&gt;Port&lt;/th&gt; 
   &lt;th&gt;Web URL&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;solo.ckpool.org&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://solo.ckpool.org/&quot;&gt;https://solo.ckpool.org/&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;btc.zsolo.bid&lt;/td&gt; 
   &lt;td&gt;6057&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://zsolo.bid/en/btc-solo-mining-pool&quot;&gt;https://zsolo.bid/en/btc-solo-mining-pool&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;eu.stratum.slushpool.com&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://braiins.com/pool&quot;&gt;https://braiins.com/pool&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Buttons&lt;/h3&gt; 
&lt;h4&gt;One button devices:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;One click &amp;gt; change screen.&lt;/li&gt; 
 &lt;li&gt;Double click &amp;gt; change screen orientation.&lt;/li&gt; 
 &lt;li&gt;Tripple click &amp;gt; turn the screen off and on again.&lt;/li&gt; 
 &lt;li&gt;Hold 5 seconds &amp;gt; &lt;strong&gt;reset the configurations and reboot&lt;/strong&gt; your NerdMiner.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Two button devices:&lt;/h4&gt; 
&lt;p&gt;With the USB-C port to the right:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TOP BUTTON&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;One click &amp;gt; change screen.&lt;/li&gt; 
 &lt;li&gt;Hold 5 seconds &amp;gt; top right button to &lt;strong&gt;reset the configurations and reboot&lt;/strong&gt; your NerdMiner.&lt;/li&gt; 
 &lt;li&gt;Hold and power up &amp;gt; enter &lt;strong&gt;configuration mode&lt;/strong&gt; and edit current config via Wifi. You could change your settings or verify them.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;BOTTOM BUTTON&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;One Click &amp;gt; turn the screen off and on again&lt;/li&gt; 
 &lt;li&gt;Double click &amp;gt; change orientation (default is USB-C to the right)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Build video&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtu.be/POUT2R_opDs&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/POUT2R_opDs/0.jpg&quot; alt=&quot;Ver video aquí&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Developers&lt;/h2&gt; 
&lt;h3&gt;Project guidelines&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current project was adapted to work with PlatformIO&lt;/li&gt; 
 &lt;li&gt;Current project works with ESP32-S3 and ESP32-wroom.&lt;/li&gt; 
 &lt;li&gt;Partition squeme should be build as huge app&lt;/li&gt; 
 &lt;li&gt;All libraries needed shown on platform.ini&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Job done&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Move project to platformIO&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Bug rectangle on screen when 1milion shares&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Bug memory leaks&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Bug Reboots when received JSON contains some null values&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Implement midstate sha256&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Bug Wificlient DNS unresolved on Wifi.h&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Code refactoring&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add blockHeight to screen&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add clock to show current time&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add new screen with global mining stats&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add pool support for low difficulty miners&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add best difficulty on miner screen&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add suport to standard ESP32 dev-kit / ESP32-WROOM&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Code changes to support adding multiple boards&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add support to TTGO T-display 1.14&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add support to Amoled&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;In process&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; Create a daisy chain protocol via UART or I2C to support ESP32 hashboards&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; Create new screen like clockMiner but with BTC price&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; Add support to control BM1397&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; Add password field in web configuration form&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Donations/Project contributions&lt;/h3&gt; 
&lt;p&gt;If you would like to contribute and help dev team with this project you can send a donation to the following LN address ⚡&lt;a href=&quot;mailto:teamnerdminer@getalby.com&quot;&gt;teamnerdminer@getalby.com&lt;/a&gt;⚡ or using one of the affiliate links above.&lt;/p&gt; 
&lt;p&gt;If you want to order a fully assembled Nerdminer you can contribute to my job at 🛒&lt;a href=&quot;https://bitronics.store&quot;&gt;bitronics.store&lt;/a&gt;🛒&lt;/p&gt; 
&lt;p&gt;Enjoy&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Genymobile/scrcpy</title>
      <link>https://github.com/Genymobile/scrcpy</link>
      <description>&lt;p&gt;Display and control your Android device&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;This GitHub repo (&lt;a href=&quot;https://github.com/Genymobile/scrcpy&quot;&gt;https://github.com/Genymobile/scrcpy&lt;/a&gt;) is the only official source for the project. Do not download releases from random websites, even if their name contains &lt;code&gt;scrcpy&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;scrcpy (v3.3.2)&lt;/h1&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/app/data/icon.svg?sanitize=true&quot; width=&quot;128&quot; height=&quot;128&quot; alt=&quot;scrcpy&quot; align=&quot;right&quot; /&gt; 
&lt;p&gt;&lt;em&gt;pronounced &quot;&lt;strong&gt;scr&lt;/strong&gt;een &lt;strong&gt;c&lt;/strong&gt;o&lt;strong&gt;py&lt;/strong&gt;&quot;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This application mirrors Android devices (video and audio) connected via USB or &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/connection.md#tcpip-wireless&quot;&gt;TCP/IP&lt;/a&gt; and allows control using the computer&#39;s keyboard and mouse. It does not require &lt;em&gt;root&lt;/em&gt; access or an app installed on the device. It works on &lt;em&gt;Linux&lt;/em&gt;, &lt;em&gt;Windows&lt;/em&gt;, and &lt;em&gt;macOS&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/assets/screenshot-debian-600.jpg&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;It focuses on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;lightness&lt;/strong&gt;: native, displays only the device screen&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;performance&lt;/strong&gt;: 30~120fps, depending on the device&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;quality&lt;/strong&gt;: 1920×1080 or above&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;low latency&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Genymobile/scrcpy/pull/646&quot;&gt;35~70ms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;low startup time&lt;/strong&gt;: ~1 second to display the first image&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;non-intrusiveness&lt;/strong&gt;: nothing is left installed on the Android device&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;user benefits&lt;/strong&gt;: no account, no ads, no internet required&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;freedom&lt;/strong&gt;: free and open source software&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Its features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/audio.md&quot;&gt;audio forwarding&lt;/a&gt; (Android 11+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/recording.md&quot;&gt;recording&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/virtual_display.md&quot;&gt;virtual display&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;mirroring with &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/device.md#turn-screen-off&quot;&gt;Android device screen off&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/control.md#copy-paste&quot;&gt;copy-paste&lt;/a&gt; in both directions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/video.md&quot;&gt;configurable quality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/camera.md&quot;&gt;camera mirroring&lt;/a&gt; (Android 12+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/v4l2.md&quot;&gt;mirroring as a webcam (V4L2)&lt;/a&gt; (Linux-only)&lt;/li&gt; 
 &lt;li&gt;physical &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/keyboard.md#physical-keyboard-simulation&quot;&gt;keyboard&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md#physical-mouse-simulation&quot;&gt;mouse&lt;/a&gt; simulation (HID)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/gamepad.md&quot;&gt;gamepad&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/otg.md&quot;&gt;OTG mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;and more…&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;The Android device requires at least API 21 (Android 5.0).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/audio.md&quot;&gt;Audio forwarding&lt;/a&gt; is supported for API &amp;gt;= 30 (Android 11+).&lt;/p&gt; 
&lt;p&gt;Make sure you &lt;a href=&quot;https://developer.android.com/studio/debug/dev-options#enable&quot;&gt;enabled USB debugging&lt;/a&gt; on your device(s).&lt;/p&gt; 
&lt;p&gt;On some devices (especially Xiaomi), you might get the following error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Injecting input events requires the caller (or the source of the instrumentation, if any) to have the INJECT_EVENTS permission.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In that case, you need to enable &lt;a href=&quot;https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323&quot;&gt;an additional option&lt;/a&gt; &lt;code&gt;USB debugging (Security Settings)&lt;/code&gt; (this is an item different from &lt;code&gt;USB debugging&lt;/code&gt;) to control it using a keyboard and mouse. Rebooting the device is necessary once this option is set.&lt;/p&gt; 
&lt;p&gt;Note that USB debugging is not required to run scrcpy in &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/otg.md&quot;&gt;OTG mode&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get the app&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/linux.md&quot;&gt;Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/windows.md&quot;&gt;Windows&lt;/a&gt; (read &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/windows.md#run&quot;&gt;how to run&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/macos.md&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Must-know tips&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/video.md#size&quot;&gt;Reducing resolution&lt;/a&gt; may greatly improve performance (&lt;code&gt;scrcpy -m1024&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md#mouse-bindings&quot;&gt;&lt;em&gt;Right-click&lt;/em&gt;&lt;/a&gt; triggers &lt;code&gt;BACK&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md#mouse-bindings&quot;&gt;&lt;em&gt;Middle-click&lt;/em&gt;&lt;/a&gt; triggers &lt;code&gt;HOME&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;f&lt;/kbd&gt; toggles &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/window.md#fullscreen&quot;&gt;fullscreen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;There are many other &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/shortcuts.md&quot;&gt;shortcuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage examples&lt;/h2&gt; 
&lt;p&gt;There are a lot of options, &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#user-documentation&quot;&gt;documented&lt;/a&gt; in separate pages. Here are just some common examples.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Capture the screen in H.265 (better quality), limit the size to 1920, limit the frame rate to 60fps, disable audio, and control the device by simulating a physical keyboard:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --video-codec=h265 --max-size=1920 --max-fps=60 --no-audio --keyboard=uhid
scrcpy --video-codec=h265 -m1920 --max-fps=60 --no-audio -K  # short version
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start VLC in a new virtual display (separate from the device display):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --new-display=1920x1080 --start-app=org.videolan.vlc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Record the device camera in H.265 at 1920x1080 (and microphone) to an MP4 file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --video-source=camera --video-codec=h265 --camera-size=1920x1080 --record=file.mp4
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Capture the device front camera and expose it as a webcam on the computer (on Linux):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --video-source=camera --camera-size=1920x1080 --camera-facing=front --v4l2-sink=/dev/video2 --no-playback
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Control the device without mirroring by simulating a physical keyboard and mouse (USB debugging not required):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --otg
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Control the device using gamepad controllers plugged into the computer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --gamepad=uhid
scrcpy -G  # short version
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;User documentation&lt;/h2&gt; 
&lt;p&gt;The application provides a lot of features and configuration options. They are documented in the following pages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/connection.md&quot;&gt;Connection&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/video.md&quot;&gt;Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/audio.md&quot;&gt;Audio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/control.md&quot;&gt;Control&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/keyboard.md&quot;&gt;Keyboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md&quot;&gt;Mouse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/gamepad.md&quot;&gt;Gamepad&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/device.md&quot;&gt;Device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/window.md&quot;&gt;Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/recording.md&quot;&gt;Recording&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/virtual_display.md&quot;&gt;Virtual display&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/tunnels.md&quot;&gt;Tunnels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/otg.md&quot;&gt;OTG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/camera.md&quot;&gt;Camera&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/v4l2.md&quot;&gt;Video4Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/shortcuts.md&quot;&gt;Shortcuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/FAQ.md&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Genymobile/scrcpy/wiki&quot;&gt;Translations&lt;/a&gt; (not necessarily up to date)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/build.md&quot;&gt;Build instructions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/develop.md&quot;&gt;Developers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Articles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.rom1v.com/2018/03/introducing-scrcpy/&quot;&gt;Introducing scrcpy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/&quot;&gt;Scrcpy now works wirelessly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.rom1v.com/2023/03/scrcpy-2-0-with-audio/&quot;&gt;Scrcpy 2.0, with audio&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;You can open an &lt;a href=&quot;https://github.com/Genymobile/scrcpy/issues&quot;&gt;issue&lt;/a&gt; for bug reports, feature requests or general questions.&lt;/p&gt; 
&lt;p&gt;For bug reports, please read the &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/FAQ.md&quot;&gt;FAQ&lt;/a&gt; first, you might find a solution to your problem immediately.&lt;/p&gt; 
&lt;p&gt;You can also use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Reddit: &lt;a href=&quot;https://www.reddit.com/r/scrcpy&quot;&gt;&lt;code&gt;r/scrcpy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;BlueSky: &lt;a href=&quot;https://bsky.app/profile/scrcpy.bsky.social&quot;&gt;&lt;code&gt;@scrcpy.bsky.social&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/scrcpy_app&quot;&gt;&lt;code&gt;@scrcpy_app&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;I&#39;m &lt;a href=&quot;https://github.com/rom1v&quot;&gt;@rom1v&lt;/a&gt;, the author and maintainer of &lt;em&gt;scrcpy&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;If you appreciate this application, you can &lt;a href=&quot;https://blog.rom1v.com/about/#support-my-open-source-work&quot;&gt;support my open source work&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sponsors/rom1v&quot;&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://liberapay.com/rom1v/&quot;&gt;Liberapay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paypal.me/rom2v&quot;&gt;PayPal&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (C) 2018 Genymobile
Copyright (C) 2018-2025 Romain Vimont

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>radareorg/radare2</title>
      <link>https://github.com/radareorg/radare2</link>
      <description>&lt;p&gt;UNIX-like reverse engineering framework and command-line toolset&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://radare.org/&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/doc/images/r2emoji.png&quot; alt=&quot;screenshot&quot; align=&quot;left&quot; width=&quot;128px&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Radare2: Libre Reversing Framework for Unix Geeks&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/latest-versions/radare2.svg?sanitize=true&quot; alt=&quot;Latest packaged version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/radareorg/radare2/actions/workflows/ci.yml?query=branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/radareorg/radare2/actions/workflows/ci.yml/badge.svg?branch=master&quot; alt=&quot;Tests Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/radareorg/radare2/actions/workflows/build.yml?query=branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/radareorg/radare2/actions/workflows/build.yml/badge.svg?branch=master&quot; alt=&quot;build&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/radareorg/radare2/actions/workflows/tcc.yml&quot;&gt;&lt;img src=&quot;https://github.com/radareorg/radare2/actions/workflows/tcc.yml/badge.svg?branch=master&quot; alt=&quot;tcc&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/741&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/741/badge&quot; alt=&quot;CII Best Practices&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://scan.coverity.com/projects/416&quot;&gt;&lt;img src=&quot;https://scan.coverity.com/projects/416/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/YBey7CR9jf&quot;&gt;&lt;img src=&quot;https://badgen.net/discord/members/YBey7CR9jf&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Current git &lt;code&gt;master&lt;/code&gt; branch is &lt;code&gt;6.0.3&lt;/code&gt;, next release will be &lt;code&gt;6.0.4&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/doc/abi.md&quot;&gt;abi stability&lt;/a&gt; documentation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Description&lt;/h3&gt; 
&lt;p&gt;r2 is a complete rewrite of radare. It provides a set of libraries, tools and plugins to ease reverse engineering tasks. Distributed under LGPLv3, despite each plugin can have different licenses (see &lt;code&gt;r2 -Lj&lt;/code&gt; for details)&lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;radare&lt;/strong&gt; project started as a simple command-line hexadecimal editor focused on forensics. Today, r2 is a full-featured low-level command-line tool with support for scripting with the embedded Javascript interpreter or via r2pipe.&lt;/p&gt; 
&lt;p&gt;r2 can edit files on local hard drives, view kernel memory, and debug programs locally or via a remote gdb/windbg servers. r2&#39;s wide architecture support allows you to analyze, emulate, debug, modify, and disassemble any binary.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.radare.org/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/doc/images/shot.png&quot; alt=&quot;screenshot&quot; align=&quot;center&quot; border=&quot;0&quot; width=&quot;600px&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Download the last &lt;a href=&quot;https://github.com/radareorg/radare2/releases&quot;&gt;released&lt;/a&gt; binaries.&lt;/p&gt; 
&lt;p&gt;The recommended way to install radare2 is from Git repository source:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/radareorg/radare2
radare2/sys/install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run &lt;code&gt;sys/install.sh&lt;/code&gt; for the default acr+make+symlink installation&lt;/li&gt; 
 &lt;li&gt;meson/ninja (muon/samu also works) and make builds are supported.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Source Build&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;r2 can be installed from &lt;code&gt;git&lt;/code&gt; or via &lt;code&gt;pip&lt;/code&gt; using &lt;code&gt;r2env&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Windows builds require meson and msvc or mingw as compilers&lt;/li&gt; 
 &lt;li&gt;To uninstall the current build of r2 run &lt;code&gt;make uninstall&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;To uninstall ALL the system installations of r2 do: &lt;code&gt;sudo make purge&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;On Windows use the .bat scripts and msvc:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bat&quot;&gt;preconfigure.bat       REM setup python, meson, ninja
configure.bat          REM run meson b + vs project
make.bat               REM run ninja -C b
prefix\bin\radare2.exe
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Popular Plugins:&lt;/h2&gt; 
&lt;p&gt;Using the &lt;code&gt;r2pm&lt;/code&gt; tool you can browse and install many plugins and tools that use radare2.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/esilsolve&quot;&gt;esilsolve&lt;/a&gt;: The symbolic execution plugin, based on esil and z3&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/iaito&quot;&gt;iaito&lt;/a&gt;: The official Qt graphical interface&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/radare2-extras/tree/master/keystone&quot;&gt;keystone&lt;/a&gt; Assembler instructions using the Keystone library&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/r2ai&quot;&gt;decai&lt;/a&gt; Decompiler based on AI&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/r2ai&quot;&gt;r2ai&lt;/a&gt; Run a Language Model in localhost with Llama inside r2!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wargio/r2dec-js&quot;&gt;r2dec&lt;/a&gt;: A decompiler based on r2 written in JS, accessed with the &lt;code&gt;pdd&lt;/code&gt; command&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FernandoDoming/r2diaphora&quot;&gt;r2diaphora&lt;/a&gt;: &lt;a href=&quot;https://github.com/joxeankoret/diaphora&quot;&gt;Diaphora&lt;/a&gt;&#39;s binary diffing engine on top of radare2&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nowsecure/r2frida&quot;&gt;r2frida&lt;/a&gt;: The frida io plugin. Start r2 with &lt;code&gt;r2 frida://0&lt;/code&gt; to use it&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/r2ghidra&quot;&gt;r2ghidra&lt;/a&gt;: The standalone native ghidra decompiler accessible with &lt;code&gt;pdg&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/r4ghidra&quot;&gt;r4ghidra&lt;/a&gt;: Feel the radare joy inside your Ghidra&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/radare2-r2papi&quot;&gt;r2papi&lt;/a&gt; High level api on top of r2pipe&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/radare2-r2pipe&quot;&gt;r2pipe&lt;/a&gt; Script radare2 from any programming language&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/radare2-extras/tree/master/r2poke&quot;&gt;r2poke&lt;/a&gt; Integration with GNU/Poke for extended binary parsing capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hanemile/radare2-GoReSym&quot;&gt;goresym&lt;/a&gt;: Import GoReSym symbol as flags&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/r2yara&quot;&gt;r2yara&lt;/a&gt; Run Yara from r2 or use r2 primitives from Yara&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nowsecure/radius2&quot;&gt;radius2&lt;/a&gt;: A fast symbolic execution engine based on boolector and esil&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/r2sarif&quot;&gt;r2sarif&lt;/a&gt; import/extend/export SARIF documents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;These are the first steps to use r2, read the book or find tutorials for more details&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ r2 /bin/ls   # open file in read-only
&amp;gt; aaa          # analyse the program (r2 -A)
&amp;gt; afl          # list all functions (try aflt, aflm)
&amp;gt; px 32        # print 32 byte hexdump current block
&amp;gt; s sym.main   # seek to main (using flag name)
&amp;gt; f~foo        # filter flags matching &#39;foo&#39; (internal |grep)
&amp;gt; iS;is        # list sections and symbols (rabin2 -Ss)
&amp;gt; pdf; agf     # disassembly and ascii-art function graph
&amp;gt; oo+;w hello  # reopen in read-write and write a string
&amp;gt; ?*~...       # interactive filter in all command help
&amp;gt; q            # quit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Many plugins are included in r2 by default. But you can extend its capabilities by using the &lt;a href=&quot;https://github.com/radareorg/radare2-pm&quot;&gt;r2pm&lt;/a&gt; package manager.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;r2pm -s &amp;lt;word&amp;gt;  # search packages matching a word
r2pm -Uci &amp;lt;pkg&amp;gt; # update database and clean install a package
r2pm -u &amp;lt;pkg&amp;gt;   # uninstall the given package
r2pm -l &amp;lt;pkg&amp;gt;   # list installed packages
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://book.rada.re&quot;&gt;Official Book&lt;/a&gt;: Read about r2 usage&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/COMMUNITY.md&quot;&gt;COMMUNITY.md&lt;/a&gt;: Community engagement and loose guidelines&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;: Information about reporting issues and contributing. See also &lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/DEVELOPERS.md&quot;&gt;DEVELOPERS.md&lt;/a&gt;: Development guidelines for r2&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;: Instructions for reporting vulnerabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/USAGE.md&quot;&gt;USAGE.md&lt;/a&gt;: Some example commands&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/INSTALL.md&quot;&gt;INSTALL.md&lt;/a&gt;: Installation instructions using make or meson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Learn more about r2 watching &lt;a href=&quot;https://www.youtube.com/c/r2con&quot;&gt;youtube talks&lt;/a&gt; from &lt;a href=&quot;https://rada.re/con&quot;&gt;r2con&lt;/a&gt;. There are also many blogposts, slidedecks and the &lt;a href=&quot;https://book.rada.re&quot;&gt;official radare2 book&lt;/a&gt;, but it&#39;s always a good idea to join any of the official chats and drop your questions or feedback there.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href=&quot;https://www.radare.org/&quot;&gt;https://www.radare.org/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discord: &lt;a href=&quot;https://discord.gg/YBey7CR9jf&quot;&gt;Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mastodon: &lt;a href=&quot;https://infosec.exchange/@radareorg&quot;&gt;@radareorg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Telegram: &lt;a href=&quot;https://t.me/radare&quot;&gt;Main&lt;/a&gt; and &lt;a href=&quot;https://t.me/radare_side&quot;&gt;Side&lt;/a&gt; channels&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://libera.chat&quot;&gt;irc.libera.chat&lt;/a&gt;: &lt;code&gt;#radare&lt;/code&gt;, &lt;code&gt;#radare_side&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://matrix.to/#/#radare:matrix.org&quot;&gt;Matrix&lt;/a&gt;: &lt;code&gt;#radare:matrix.org&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Supported Platforms&lt;/h1&gt; 
&lt;h2&gt;Operating Systems&lt;/h2&gt; 
&lt;p&gt;Windows (since XP for x86/x64/arm64), Linux, Darwin, GNU/Hurd, Apple&#39;s {Mac,i,iPad,watch}OS, Android, Wasmer, [Dragonfly, Net, Free, Open] BSD, Z/OS, QNX, SerenityOS, Solaris, AIX, Haiku, Vinix, FirefoxOS.&lt;/p&gt; 
&lt;h2&gt;Architectures&lt;/h2&gt; 
&lt;p&gt;i386, x86-64, Alpha, ARM, AVR, BPF, MIPS, PowerPC, SPARC, RISC-V, SH, m68k, S390, XCore, CR16, HPPA, ARC, Blackfin, Z80, H8/300, V810, PDP11, m680x, V850, CRIS, XAP (CSR), PIC, LM32, 8051, 6502, i4004, i8080, Propeller, EVM, OR1K Tricore, CHIP-8, LH5801, T8200, GameBoy, SNES, SPC700, MSP430, Xtensa, xcore, NIOS II, Java, Dalvik, Pickle, WebAssembly, MSIL, EBC, TMS320 (c54x, c55x, c55+, c64x), Hexagon, Brainfuck, Malbolge, whitespace, DCPU16, LANAI, lm32, MCORE, mcs96, RSP, SuperH-4, VAX, KVX, Am29000, LOONGARCH, JDH8, s390x, STM8.&lt;/p&gt; 
&lt;h2&gt;File Formats&lt;/h2&gt; 
&lt;p&gt;ELF, Mach-O, Fatmach-O, PE, PE+, MZ, COFF, XCOFF, OMF, TE, XBE, SEP64, BIOS/UEFI, Dyldcache, DEX, ART, Java class, Android boot image, Plan9 executables, Amiga HUNK, ZIMG, MBN/SBL bootloader, ELF coredump, MDMP (Windows minidump), PDP11, XTAC, CGC, WASM (WebAssembly binary), Commodore VICE emulator, QNX, WAD, OFF, TIC-80, GB/GBA, NDS and N3DS, and mount several filesystems like NTFS, FAT, HFS+, EXT,...&lt;/p&gt; 
&lt;h2&gt;Packaging Status&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snapcraft.io/radare2&quot;&gt;&lt;img src=&quot;https://snapcraft.io/radare2/badge.svg?sanitize=true&quot; alt=&quot;Snap package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/termux/radare2.svg?sanitize=true&quot; alt=&quot;Termux package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/alpine_3_22/radare2.svg?sanitize=true&quot; alt=&quot;Alpine Linux 3.22 package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/alpine_3_21/radare2.svg?sanitize=true&quot; alt=&quot;Alpine Linux 3.21 package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/alpine_3_20/radare2.svg?sanitize=true&quot; alt=&quot;Alpine Linux 3.20 package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/arch/radare2.svg?sanitize=true&quot; alt=&quot;Arch package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/aur/radare2.svg?sanitize=true&quot; alt=&quot;AUR package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/epel_10/radare2.svg?sanitize=true&quot; alt=&quot;EPEL 10 package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/epel_9/radare2.svg?sanitize=true&quot; alt=&quot;EPEL 9 package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/epel_8/radare2.svg?sanitize=true&quot; alt=&quot;EPEL 8 package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/fedora_42/radare2.svg?sanitize=true&quot; alt=&quot;Fedora 42&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/fedora_41/radare2.svg?sanitize=true&quot; alt=&quot;Fedora 41&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/freebsd/radare2.svg?sanitize=true&quot; alt=&quot;FreeBSD port&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/openbsd/radare2.svg?sanitize=true&quot; alt=&quot;OpenBSD port&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/pkgsrc_current/radare2.svg?sanitize=true&quot; alt=&quot;pkgsrc current package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/homebrew/radare2.svg?sanitize=true&quot; alt=&quot;Homebrew package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/macports/radare2.svg?sanitize=true&quot; alt=&quot;MacPorts package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/haikuports_master/radare2.svg?sanitize=true&quot; alt=&quot;Haiku Ports&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/void_x86_64/radare2.svg?sanitize=true&quot; alt=&quot;Void Linux&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/ubuntu_24_10/radare2.svg?sanitize=true&quot; alt=&quot;Ubuntu 24.10 package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/ubuntu_24_04/radare2.svg?sanitize=true&quot; alt=&quot;Ubuntu 24.04 package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/ubuntu_20_04/radare2.svg?sanitize=true&quot; alt=&quot;Ubuntu 20.04 package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/debian_unstable/radare2.svg?sanitize=true&quot; alt=&quot;Debian Unstable package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/debian_12/radare2.svg?sanitize=true&quot; alt=&quot;Debian 12 package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>TEN-framework/ten-framework</title>
      <link>https://github.com/TEN-framework/ten-framework</link>
      <description>&lt;p&gt;Open-source framework for conversational voice AI agents&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7c8f72d7-3993-4d01-8504-b71578a22944&quot; alt=&quot;TEN banner&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/ten-framework/ten-framework?color=369eff&amp;amp;labelColor=gray&amp;amp;logo=github&amp;amp;style=flat-square&quot; alt=&quot;TEN Releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-date/ten-framework/ten-framework?labelColor=gray&amp;amp;style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/discussions/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/discussions/TEN-framework/ten_framework?labelColor=gray&amp;amp;color=%20%23f79009&quot; alt=&quot;Discussion posts&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/graphs/commit-activity&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/TEN-framework/ten_framework?labelColor=gray&amp;amp;color=pink&quot; alt=&quot;Commits&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-search?query=repo%3ATEN-framework%2Ften-framework%20is%3Aclosed&amp;amp;label=issues%20closed&amp;amp;labelColor=gray&amp;amp;color=green&quot; alt=&quot;Issues closed&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/ten-framework/ten-framework?color=c4f042&amp;amp;labelColor=gray&amp;amp;style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome!-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten_framework/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache_2.0_with_certain_conditions-blue.svg?labelColor=%20%23155EEF&amp;amp;color=%20%23528bff&quot; alt=&quot;GitHub license&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://deepwiki.com/TEN-framework/TEN-framework&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg?sanitize=true&quot; alt=&quot;Ask DeepWiki&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://readmex.com/TEN-framework/ten-framework&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/CodePhiliaX/resource-trusteeship/main/readmex.svg?sanitize=true&quot; alt=&quot;ReadmeX&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://GitHub.com/TEN-framework/ten_framework/watchers/?WT.mc_id=academic-105485-koreyst&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/watchers/TEN-framework/ten_framework?style=social&amp;amp;label=Watch&quot; alt=&quot;GitHub watchers&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/TEN-framework/ten_framework/network/?WT.mc_id=academic-105485-koreyst&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/TEN-framework/ten_framework?style=social&amp;amp;label=Fork&quot; alt=&quot;GitHub forks&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/TEN-framework/ten_framework/stargazers/?WT.mc_id=academic-105485-koreyst&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/TEN-framework/ten_framework?style=social&amp;amp;label=Star&quot; alt=&quot;GitHub stars&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/README.md&quot;&gt;&lt;img alt=&quot;README in English&quot; src=&quot;https://img.shields.io/badge/English-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-CN.md&quot;&gt;&lt;img alt=&quot;简体中文操作指南&quot; src=&quot;https://img.shields.io/badge/简体中文-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-JP.md&quot;&gt;&lt;img alt=&quot;日本語のREADME&quot; src=&quot;https://img.shields.io/badge/日本語-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-KR.md&quot;&gt;&lt;img alt=&quot;README in 한국어&quot; src=&quot;https://img.shields.io/badge/한국어-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-ES.md&quot;&gt;&lt;img alt=&quot;README en Español&quot; src=&quot;https://img.shields.io/badge/Español-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-FR.md&quot;&gt;&lt;img alt=&quot;README en Français&quot; src=&quot;https://img.shields.io/badge/Français-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-IT.md&quot;&gt;&lt;img alt=&quot;README in Italiano&quot; src=&quot;https://img.shields.io/badge/Italiano-lightgrey&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://theten.ai&quot;&gt;Official Site&lt;/a&gt; • &lt;a href=&quot;https://theten.ai/docs/ten_agent/overview&quot;&gt;Documentation&lt;/a&gt; • &lt;a href=&quot;https://theten.ai/blog&quot;&gt;Blog&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://trendshift.io/repositories/11978&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/11978&quot; alt=&quot;TEN-framework%2Ften_framework | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;kbd&gt;Table of Contents&lt;/kbd&gt;&lt;/summary&gt; 
 &lt;h4&gt;Table of Contents&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-welcome-to-ten&quot;&gt;👋 Welcome to TEN&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-tman-designer&quot;&gt;🎨 TMAN Designer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-features&quot;&gt;✨ Features&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#1%EF%B8%8F%E2%83%A3-real-time-avatar&quot;&gt;1️⃣ Real-time Avatar&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#2%EF%B8%8F%E2%83%A3-real-time-voice-with-mcp-servers&quot;&gt;2️⃣ Real-time voice with MCP servers&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#3%EF%B8%8F%E2%83%A3-real-time-communication-with-hardware&quot;&gt;3️⃣ Real-time communication with hardware&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#4%EF%B8%8F%E2%83%A3-real-time-vision-and-real-time-screenshare-detection&quot;&gt;4️⃣ Real-time vision and real-time screenshare detection&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#5%EF%B8%8F%E2%83%A3-ten-with-other-llm-platforms&quot;&gt;5️⃣ TEN with other LLM platforms&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#6%EF%B8%8F%E2%83%A3-storyteller---ten-image-generation&quot;&gt;6️⃣ StoryTeller - TEN image generation&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-get-ten-agent-up-and-running&quot;&gt;👩‍💻 Get TEN Agent up and running&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%F0%9F%85%B0%EF%B8%8F-run-ten-agent-in-localhost&quot;&gt;🅰️ Run TEN Agent in &lt;code&gt;localhost&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%F0%9F%85%B1%EF%B8%8F-run-ten-agent-in-codespaceno-docker&quot;&gt;🅱️ Run TEN Agent in Codespace(no docker)&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%EF%B8%8F-ten-agent-self-hosting&quot;&gt;🛳️ TEN Agent Self Hosting&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%F0%9F%85%B0%EF%B8%8F-deploying-with-docker&quot;&gt;🅰️ Deploying with Docker&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%F0%9F%85%B1%EF%B8%8F-deploying-with-other-cloud-services&quot;&gt;🅱️ Deploying with other cloud services&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-ten-ecosystem&quot;&gt;🌍 TEN Ecosystem&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-ask-questions&quot;&gt;❓ Ask Questions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-contributing&quot;&gt;🥰 Contributing&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#code-contributors&quot;&gt;Code Contributors&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#contribution-guidelines&quot;&gt;Contribution Guidelines&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;br /&gt; 
&lt;/details&gt; 
&lt;h2&gt;👋 Welcome to TEN&lt;/h2&gt; 
&lt;p&gt;TEN is a comprehensive open-source ecosystem for creating, customizing, and deploying real-time conversational AI agents with multimodal capabilities including voice, vision, and avatar interactions.&lt;/p&gt; 
&lt;p&gt;TEN includes &lt;a href=&quot;https://github.com/ten-framework/ten-framework&quot;&gt;TEN Framework&lt;/a&gt;, &lt;a href=&quot;https://github.com/ten-framework/ten-turn-detection&quot;&gt;TEN Turn Detection&lt;/a&gt;, &lt;a href=&quot;https://github.com/ten-framework/ten-vad&quot;&gt;TEN VAD&lt;/a&gt;, &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents/demo&quot;&gt;TEN Agent&lt;/a&gt;, &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/core/src/ten_manager/designer_frontend&quot;&gt;TMAN Designer&lt;/a&gt;, and &lt;a href=&quot;https://github.com/ten-framework/portal&quot;&gt;TEN Portal&lt;/a&gt;. Check out &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-ten-ecosystem&quot;&gt;🌍 TEN Ecosystem&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;br /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Community Channel&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=TenFramework&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/TenFramework?logo=X&amp;amp;color=%20%23f5f5f5&quot; alt=&quot;Follow on X&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Follow TEN Framework on X for updates and announcements&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/company/ten-framework&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-TEN_Framework-0A66C2?logo=linkedin-white&amp;amp;logoColor=fff&quot; alt=&quot;Follow on LinkedIn&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Follow TEN Framework on LinkedIn for updates and announcements&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://discord.gg/VnPftUzAMJ&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-Join%20TEN%20Community-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord TEN Community&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Join our Discord community to connect with developers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://huggingface.co/TEN-framework&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Hugging%20Face-TEN%20Framework-yellow?style=flat&amp;amp;logo=huggingface&quot; alt=&quot;Hugging Face Space&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Join our Hugging Face community to explore our spaces and models&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-agent/discussions/170&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/TEN_Framework-WeChat_Group-%2307C160?logo=wechat&amp;amp;labelColor=darkgreen&amp;amp;color=gray&quot; alt=&quot;WeChat&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Join our WeChat group for Chinese community discussions&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Star TEN Repositories&lt;/strong&gt; ⭐️&lt;/p&gt; 
 &lt;p&gt;Get instant notifications for new releases and updates. Your support helps us grow and improve TEN!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/eeebe996-8c14-4bf7-82ae-f1a1f7e30705&quot; alt=&quot;TEN star us gif&quot; /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;kbd&gt;Star History&lt;/kbd&gt;&lt;/summary&gt; 
 &lt;picture&gt; 
  &lt;img width=&quot;100%&quot; src=&quot;https://api.star-history.com/svg?repos=ten-framework/ten-framework&amp;amp;type=Date&quot; /&gt; 
 &lt;/picture&gt; 
&lt;/details&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;🎨 TMAN Designer&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/user-attachments/assets/44c6a087-ec7a-45b0-a084-dab5dac5e36b&quot;&gt;https://github.com/user-attachments/assets/44c6a087-ec7a-45b0-a084-dab5dac5e36b&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;TMAN Designer&lt;/h3&gt; 
&lt;p&gt;TMAN Designer is a low/no-code option to create voice agents with an easy-to-use workflow UI. It can load apps and graphs, and includes an online editor, log viewer, and much more.&lt;/p&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://theten.ai/blog/tman-designer-of-ten-framework&quot;&gt;this blog&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/c6702995-de94-4d3e-8cae-af097f087ac1&quot; alt=&quot;TEN Agent with Trulience&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;1️⃣ Real-time Avatar&lt;/h3&gt; 
&lt;p&gt;Build engaging AI avatars with TEN Agent using &lt;a href=&quot;https://trulience.com&quot;&gt;Trulience&lt;/a&gt;&#39;s diverse collection of free avatar options. To get it up and running, you only need 2 steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Follow the README to finish setting up and running the Playground&lt;/li&gt; 
 &lt;li&gt;Enter the avatar ID and &lt;a href=&quot;https://trulience.com/docs#/authentication/jwt-tokens/jwt-tokens?id=use-your-custom-userid&quot;&gt;token&lt;/a&gt; you get from &lt;a href=&quot;https://trulience.com&quot;&gt;Trulience&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/afb77ad3-9c23-452f-b870-216687779017&quot; alt=&quot;TEN with MCP servers&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;2️⃣ Real-time voice with MCP servers&lt;/h3&gt; 
&lt;p&gt;TEN Agent now integrates seamlessly with MCP servers, expanding its LLM capabilities. To get started:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open the Module Picker in Playground&lt;/li&gt; 
 &lt;li&gt;Add the MCP server tool for LLM integration&lt;/li&gt; 
 &lt;li&gt;Paste a URL from your MCP server in the extension&lt;/li&gt; 
 &lt;li&gt;Start a realtime conversation with TEN Agent&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This integration allows you to leverage MCP&#39;s diverse servers offerings while maintaining TEN Agent&#39;s powerful conversational abilities.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/user-attachments/assets/78647eef-2d66-44e6-99a8-1918a940fb9f&quot;&gt;https://github.com/user-attachments/assets/78647eef-2d66-44e6-99a8-1918a940fb9f&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3️⃣ Real-time communication with hardware&lt;/h3&gt; 
&lt;p&gt;TEN Agent is now running on the Espressif ESP32-S3 Korvo V3 development board, an excellent way to integrate realtime communication with LLM on hardware.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents/esp32-client&quot;&gt;integration guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/a1addb02-a450-47be-8cb2-d25e3b574f53&quot; alt=&quot;Real-time Vision&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;4️⃣ Real-time vision and real-time screenshare detection&lt;/h3&gt; 
&lt;p&gt;Try Google Gemini Multimodal Live API with realtime vision and realtime screenshare detection capabilities, it is a ready-to-use extension, along with powerful tools like Weather Check and Web Search integrated perfectly into TEN Agent.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/234ff443-bef8-4cc4-9a10-09d6ec3f5bc1&quot; alt=&quot;TEN with Dify&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;5️⃣ TEN with other LLM platforms&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://theten.ai/docs/ten_agent/playground/use-cases/voice-assistant/run_dify#steps&quot;&gt;TEN Agent + Dify&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;TEN offers a great support to make the realtime interactive experience even better on other LLM platform as well, check out docs for more.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/fe28a549-ddb9-431e-9282-57539fb87371&quot; alt=&quot;TEN StoryTeller&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;6️⃣ StoryTeller - TEN image generation&lt;/h3&gt; 
&lt;p&gt;Experience the real-time image generation with StoryTeller, it is a ready-to-use extension, along with powerful tools like Weather Check and Web Search integrated perfectly into TEN.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;👩‍💻 Get TEN Agent up and running&lt;/h2&gt; 
&lt;h4&gt;🅰️ Run TEN Agent in localhost&lt;/h4&gt; 
&lt;h4&gt;Step ⓵ - Prerequisites&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Category&lt;/th&gt; 
   &lt;th&gt;Requirements&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Keys&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• Agora &lt;a href=&quot;https://docs.agora.io/en/video-calling/get-started/manage-agora-account?platform=web#create-an-agora-project&quot;&gt;App ID&lt;/a&gt; and &lt;a href=&quot;https://docs.agora.io/en/video-calling/get-started/manage-agora-account?platform=web#create-an-agora-project&quot;&gt;App Certificate&lt;/a&gt; (free minutes every month) &lt;br /&gt;• &lt;a href=&quot;https://openai.com/index/openai-api/&quot;&gt;OpenAI&lt;/a&gt; API key (any LLM that is compatible with OpenAI)&lt;br /&gt;• &lt;a href=&quot;https://deepgram.com/&quot;&gt;Deepgram&lt;/a&gt; ASR (free credits available with signup)&lt;br /&gt;• &lt;a href=&quot;https://elevenlabs.io/&quot;&gt;Elevenlabs&lt;/a&gt; TTS (free credits available with signup)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; / &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;Docker Compose&lt;/a&gt;&lt;br /&gt;• &lt;a href=&quot;https://nodejs.org/en&quot;&gt;Node.js(LTS) v18&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Minimum System Requirements&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• CPU &amp;gt;= 2 Core&lt;br /&gt;• RAM &amp;gt;= 4 GB&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;macOS: Docker setting on Apple Silicon&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Uncheck &quot;Use Rosetta for x86/amd64 emulation&quot; in Docker settings, it may result in slower build times on ARM, but performance will be normal when deployed to x64 servers.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h4&gt;Step ⓶ - Build agent in VM&lt;/h4&gt; 
&lt;h5&gt;1. Clone down the repo,&lt;code&gt;cd&lt;/code&gt; to &lt;code&gt;ai-agents&lt;/code&gt; and create &lt;code&gt;.env&lt;/code&gt; file from &lt;code&gt;.env.example&lt;/code&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd ai_agents
cp ./.env.example ./.env
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;2. Setup Agora App ID and App Certificate in &lt;code&gt;.env&lt;/code&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;AGORA_APP_ID=
AGORA_APP_CERTIFICATE=
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;3. Start agent development containers&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;4. Enter container&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker exec -it ten_agent_dev bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;5. Build agent with the default &lt;code&gt;graph&lt;/code&gt; ( ~5min - ~8min)&lt;/h5&gt; 
&lt;p&gt;check the &lt;code&gt;/examples&lt;/code&gt; folder for more examples&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# use the chained voice assistant
task use AGENT=voice-assistant

# or use the speech-to-speech voice assistant realtime
task use AGENT=voice-assistant-realtime
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;6. Start the web server&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# run task build if you changed any local source code, this is necessary if you are working on languages which require compilation like TypeScript or Golang.
task build

task run
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h4&gt;Step ⓷ - Customize your agent with TMAN Designer&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open &lt;a href=&quot;http://localhost:49483&quot;&gt;localhost:49483&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Right-click on the STT, LLM, and TTS extensions.&lt;/li&gt; 
 &lt;li&gt;Open their properties and enter APIs respectively.&lt;/li&gt; 
 &lt;li&gt;Right-click the canvas and select &#39;Manage Apps&#39; to open the Apps Manager.&lt;/li&gt; 
 &lt;li&gt;Right under the Actions, click the ▶ to run the App.&lt;/li&gt; 
 &lt;li&gt;Check the &#39;Run with TEN Agent&#39; option and click the Run button.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h3&gt;🅱️ Run TEN Agent in Codespace(no docker)&lt;/h3&gt; 
&lt;p&gt;GitHub offers free Codespace for each repository, you can run the playground in Codespace without using Docker.Also, the speed of Codespace is much faster than localhost.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codespaces.new/ten-framework/ten-agent&quot;&gt;&lt;img src=&quot;https://github.com/codespaces/badge.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://theten.ai/docs/ten_agent/setup_development_env/setting_up_development_inside_codespace&quot;&gt;this guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;🛳️ TEN Agent Self Hosting&lt;/h2&gt; 
&lt;h4&gt;🅰️ Deploying with Docker&lt;/h4&gt; 
&lt;p&gt;Once you have customized your agent (either by using the TMAN Manager, Playground, or editing &lt;code&gt;property.json&lt;/code&gt; directly), you can deploy it by creating a release Docker image for your service.&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://theten.ai/docs/ten_agent/deploy_ten_agent/deploy_agent_service&quot;&gt;Deployment Guide&lt;/a&gt; for detailed information about deployment.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h4&gt;🅱️ Deploying with other cloud services&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;coming soon&lt;/em&gt;&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;🌍 TEN Ecosystem&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Preview&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/ten_framework&quot;&gt;&lt;strong&gt;🏚️ TEN Framework&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN is an open-source framework for real-time, multimodal conversational AI.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/ten_framework?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7c8f72d7-3993-4d01-8504-b71578a22944&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/ten-turn-detection&quot;&gt;&lt;strong>️🔂 TEN Turn Detection&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN is for full-duplex dialogue communication.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/ten-turn-detection?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/8d0ec716-5d0e-43e4-ad9a-d97b17305658&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/ten-vad&quot;&gt;&lt;strong&gt;🔉 TEN VAD&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN VAD is a low-latency, lightweight and high-performance streaming voice activity detector (VAD).&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/ten-vad?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/d45870e4-9453-4047-8163-08737f82863f&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents&quot;&gt;&lt;strong&gt;🎙️ TEN Agent&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN Agent is a showcase of TEN Framewrok.&lt;br /&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/38de2207-939b-4702-a0aa-04491f5b5275&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/core/src/ten_manager/designer_frontend&quot;&gt;&lt;strong&gt;🎨 TMAN Designer&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TMAN Designer is low/no code option to make a voice agent with easy to use workflow UI.&lt;br /&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/804c3543-0a47-42b7-b40b-ef32b742fb8f&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/portal&quot;&gt;&lt;strong&gt;📒 TEN Portal&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;The official site of TEN framework, it has documentation and blog.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/portal?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/e17d8aaa-5928-45dd-ac71-814928e26a89&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;❓ Ask Questions&lt;/h2&gt; 
&lt;p&gt;TEN Framework is available on these AI-powered Q&amp;amp;A platforms. They can help you find answers quickly and accurately in multiple languages, covering everything from basic setup to advanced implementation details.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepWiki&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://deepwiki.com/TEN-framework/TEN-framework&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg?sanitize=true&quot; alt=&quot;Ask DeepWiki&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ReadmeX&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://readmex.com/TEN-framework/ten-framework&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/CodePhiliaX/resource-trusteeship/main/readmex.svg?sanitize=true&quot; alt=&quot;ReadmeX&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🥰 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome all forms of open-source collaboration! Whether you&#39;re fixing bugs, adding features, improving documentation, or sharing ideas - your contributions help advance personalized AI tools. Check out our GitHub Issues and Projects to find ways to contribute and show your skills. Together, we can build something amazing!&lt;/p&gt; 
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Welcome all kinds of contributions&lt;/strong&gt; 🙏&lt;/p&gt; 
 &lt;p&gt;Join us in building TEN better! Every contribution makes a difference, from code to documentation. Share your TEN Agent projects on social media with to inspire others!&lt;/p&gt; 
 &lt;p&gt;Connect with one of the TEN maintainers &lt;a href=&quot;https://x.com/elliotchen100&quot;&gt;@elliotchen100&lt;/a&gt; on 𝕏 or &lt;a href=&quot;https://github.com/cyfyifanchen&quot;&gt;@cyfyifanchen&lt;/a&gt; on GitHub for project updates, discussions and collaboration opportunities.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h3&gt;Code Contributors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-agent/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=TEN-framework/ten-agent&quot; alt=&quot;TEN&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contribution Guidelines&lt;/h3&gt; 
&lt;p&gt;Contributions are welcome! Please read the &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/docs/code-of-conduct/contributing.md&quot;&gt;contribution guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;The entire TEN framework (except for the folders explicitly listed below) is released under the Apache License, Version 2.0, with additional restrictions. For details, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file located in the root directory of the TEN framework.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The components within the &lt;code&gt;packages&lt;/code&gt; directory are released under the Apache License, Version 2.0. For details, please refer to the &lt;code&gt;LICENSE&lt;/code&gt; file located in each package&#39;s root directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The third-party libraries used by the TEN framework are listed and described in detail. For more information, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/third_party/&quot;&gt;third_party&lt;/a&gt; folder.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>mackron/miniaudio</title>
      <link>https://github.com/mackron/miniaudio</link>
      <description>&lt;p&gt;Audio playback and capture library written in C, in a single source file.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; &lt;a href=&quot;https://miniaud.io&quot;&gt;&lt;img src=&quot;https://miniaud.io/img/miniaudio_wide.png&quot; alt=&quot;miniaudio&quot; width=&quot;1280&quot; /&gt;&lt;/a&gt; &lt;br /&gt; &lt;/h1&gt; 
&lt;h4 align=&quot;center&quot;&gt;An audio playback and capture library in a single source file.&lt;/h4&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://discord.gg/9vpqbjU&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/712952679415939085?label=discord&amp;amp;logo=discord&amp;amp;style=flat-square&quot; alt=&quot;discord&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://x.com/mackron&quot;&gt;&lt;img alt=&quot;x&quot; src=&quot;https://img.shields.io/twitter/url?url=https%3A%2F%2Fx.com%2Fmackron&amp;amp;style=flat-square&amp;amp;logo=x&amp;amp;label=%40mackron&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/mackron/miniaudio/master/#features&quot;&gt;Features&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/mackron/miniaudio/master/#examples&quot;&gt;Examples&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/mackron/miniaudio/master/#building&quot;&gt;Building&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/mackron/miniaudio/master/#documentation&quot;&gt;Documentation&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/mackron/miniaudio/master/#supported-platforms&quot;&gt;Supported Platforms&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/mackron/miniaudio/master/#security&quot;&gt;Security&lt;/a&gt; - &lt;a href=&quot;https://raw.githubusercontent.com/mackron/miniaudio/master/#license&quot;&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;miniaudio is written in C with no dependencies except the standard library and should compile clean on all major compilers without the need to install any additional development packages. All major desktop and mobile platforms are supported.&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple build system with no external dependencies.&lt;/li&gt; 
 &lt;li&gt;Simple and flexible API.&lt;/li&gt; 
 &lt;li&gt;Low-level API for direct access to raw audio data.&lt;/li&gt; 
 &lt;li&gt;High-level API for sound management, mixing, effects and optional 3D spatialization.&lt;/li&gt; 
 &lt;li&gt;Flexible node graph system for advanced mixing and effect processing.&lt;/li&gt; 
 &lt;li&gt;Resource management for loading sound files.&lt;/li&gt; 
 &lt;li&gt;Decoding, with built-in support for WAV, FLAC, and MP3, in addition to being able to plug in custom decoders.&lt;/li&gt; 
 &lt;li&gt;Encoding (WAV only).&lt;/li&gt; 
 &lt;li&gt;Data conversion.&lt;/li&gt; 
 &lt;li&gt;Resampling, including custom resamplers.&lt;/li&gt; 
 &lt;li&gt;Channel mapping.&lt;/li&gt; 
 &lt;li&gt;Basic generation of waveforms and noise.&lt;/li&gt; 
 &lt;li&gt;Basic effects and filters.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Refer to the &lt;a href=&quot;https://miniaud.io/docs/manual/&quot;&gt;Programming Manual&lt;/a&gt; for a more complete description of available features in miniaudio.&lt;/p&gt; 
&lt;h1&gt;Examples&lt;/h1&gt; 
&lt;p&gt;This example shows one way to play a sound using the high level API.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;#include &quot;miniaudio/miniaudio.h&quot;

#include &amp;lt;stdio.h&amp;gt;

int main()
{
    ma_result result;
    ma_engine engine;

    result = ma_engine_init(NULL, &amp;amp;engine);
    if (result != MA_SUCCESS) {
        return -1;
    }

    ma_engine_play_sound(&amp;amp;engine, &quot;sound.wav&quot;, NULL);

    printf(&quot;Press Enter to quit...&quot;);
    getchar();

    ma_engine_uninit(&amp;amp;engine);

    return 0;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example shows how to decode and play a sound using the low level API.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;#include &quot;miniaudio/miniaudio.h&quot;

#include &amp;lt;stdio.h&amp;gt;

void data_callback(ma_device* pDevice, void* pOutput, const void* pInput, ma_uint32 frameCount)
{
    ma_decoder* pDecoder = (ma_decoder*)pDevice-&amp;gt;pUserData;
    if (pDecoder == NULL) {
        return;
    }

    ma_decoder_read_pcm_frames(pDecoder, pOutput, frameCount, NULL);

    (void)pInput;
}

int main(int argc, char** argv)
{
    ma_result result;
    ma_decoder decoder;
    ma_device_config deviceConfig;
    ma_device device;

    if (argc &amp;lt; 2) {
        printf(&quot;No input file.\n&quot;);
        return -1;
    }

    result = ma_decoder_init_file(argv[1], NULL, &amp;amp;decoder);
    if (result != MA_SUCCESS) {
        return -2;
    }

    deviceConfig = ma_device_config_init(ma_device_type_playback);
    deviceConfig.playback.format   = decoder.outputFormat;
    deviceConfig.playback.channels = decoder.outputChannels;
    deviceConfig.sampleRate        = decoder.outputSampleRate;
    deviceConfig.dataCallback      = data_callback;
    deviceConfig.pUserData         = &amp;amp;decoder;

    if (ma_device_init(NULL, &amp;amp;deviceConfig, &amp;amp;device) != MA_SUCCESS) {
        printf(&quot;Failed to open playback device.\n&quot;);
        ma_decoder_uninit(&amp;amp;decoder);
        return -3;
    }

    if (ma_device_start(&amp;amp;device) != MA_SUCCESS) {
        printf(&quot;Failed to start playback device.\n&quot;);
        ma_device_uninit(&amp;amp;device);
        ma_decoder_uninit(&amp;amp;decoder);
        return -4;
    }

    printf(&quot;Press Enter to quit...&quot;);
    getchar();

    ma_device_uninit(&amp;amp;device);
    ma_decoder_uninit(&amp;amp;decoder);

    return 0;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More examples can be found in the &lt;a href=&quot;https://raw.githubusercontent.com/mackron/miniaudio/master/examples&quot;&gt;examples&lt;/a&gt; folder or online here: &lt;a href=&quot;https://miniaud.io/docs/examples/&quot;&gt;https://miniaud.io/docs/examples/&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Building&lt;/h1&gt; 
&lt;p&gt;Just compile miniaudio.c like any other source file and include miniaudio.h like a normal header. There&#39;s no need to install any dependencies. On Windows and macOS there&#39;s no need to link to anything. On Linux and BSD just link to &lt;code&gt;-lpthread&lt;/code&gt; and &lt;code&gt;-lm&lt;/code&gt;. On iOS you need to compile as Objective-C. Link to &lt;code&gt;-ldl&lt;/code&gt; if you get errors about &lt;code&gt;dlopen()&lt;/code&gt;, etc.&lt;/p&gt; 
&lt;p&gt;If you get errors about undefined references to &lt;code&gt;__sync_val_compare_and_swap_8&lt;/code&gt;, &lt;code&gt;__atomic_load_8&lt;/code&gt;, etc. you need to link with &lt;code&gt;-latomic&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;ABI compatibility is not guaranteed between versions so take care if compiling as a DLL/SO. The suggested way to integrate miniaudio is by adding it directly to your source tree.&lt;/p&gt; 
&lt;p&gt;You can also use CMake if that&#39;s your preference.&lt;/p&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;Online documentation can be found here: &lt;a href=&quot;https://miniaud.io/docs/&quot;&gt;https://miniaud.io/docs/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Documentation can also be found at the top of &lt;a href=&quot;https://raw.githubusercontent.com/mackron/miniaudio/master/miniaudio.h&quot;&gt;miniaudio.h&lt;/a&gt; which is always the most up-to-date and authoritative source of information on how to use miniaudio. All other documentation is generated from this in-code documentation.&lt;/p&gt; 
&lt;h1&gt;Supported Platforms&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows&lt;/li&gt; 
 &lt;li&gt;macOS, iOS&lt;/li&gt; 
 &lt;li&gt;Linux&lt;/li&gt; 
 &lt;li&gt;FreeBSD / OpenBSD / NetBSD&lt;/li&gt; 
 &lt;li&gt;Android&lt;/li&gt; 
 &lt;li&gt;Raspberry Pi&lt;/li&gt; 
 &lt;li&gt;Emscripten / HTML5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;miniaudio should compile clean on other platforms, but it will not include any support for playback or capture by default. To support that, you would need to implement a custom backend. You can do this without needing to modify the miniaudio source code. See the &lt;a href=&quot;https://raw.githubusercontent.com/mackron/miniaudio/master/examples/custom_backend.c&quot;&gt;custom_backend&lt;/a&gt; example.&lt;/p&gt; 
&lt;h2&gt;Backends&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;WASAPI&lt;/li&gt; 
 &lt;li&gt;DirectSound&lt;/li&gt; 
 &lt;li&gt;WinMM&lt;/li&gt; 
 &lt;li&gt;Core Audio (Apple)&lt;/li&gt; 
 &lt;li&gt;ALSA&lt;/li&gt; 
 &lt;li&gt;PulseAudio&lt;/li&gt; 
 &lt;li&gt;JACK&lt;/li&gt; 
 &lt;li&gt;sndio (OpenBSD)&lt;/li&gt; 
 &lt;li&gt;audio(4) (NetBSD and OpenBSD)&lt;/li&gt; 
 &lt;li&gt;OSS (FreeBSD)&lt;/li&gt; 
 &lt;li&gt;AAudio (Android 8.0+)&lt;/li&gt; 
 &lt;li&gt;OpenSL|ES (Android only)&lt;/li&gt; 
 &lt;li&gt;Web Audio (Emscripten)&lt;/li&gt; 
 &lt;li&gt;Null (Silence)&lt;/li&gt; 
 &lt;li&gt;Custom&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Security&lt;/h1&gt; 
&lt;p&gt;I deal with all security related issues publicly and transparently, and it can sometimes take a while before I get a chance to address it. If this is an issue for you, you need to use another library. The fastest way to get a bug fixed is to submit a pull request, but if this is impractical for you please post a ticket to the public GitHub issue tracker.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Your choice of either public domain or &lt;a href=&quot;https://github.com/aws/mit-0&quot;&gt;MIT No Attribution&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CodeWithHarry/The-Ultimate-C-Programming-Course</title>
      <link>https://github.com/CodeWithHarry/The-Ultimate-C-Programming-Course</link>
      <description>&lt;p&gt;This is the C language code and supplement material for the Ultimate C language Course on CodeWithHarry&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Ultimate C Programming Handbook&lt;/h1&gt; 
&lt;p&gt;Welcome to &lt;a href=&quot;https://www.youtube.com/watch?v=aZb0iu4uGwA&quot;&gt;&lt;strong&gt;The Ultimate C Programming Course!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This course is designed to take you from a beginner to an advanced C programmer. The repository contains all the source code, projects, problem sets, and additional resources to supplement your learning. Refer to this &lt;a href=&quot;https://www.youtube.com/watch?v=aZb0iu4uGwA&quot;&gt;video&lt;/a&gt; to watch my C course.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/CodeWithHarry/The-Ultimate-C-Programming-Course/main/#the-ultimate-c-programming-handbook&quot;&gt;The Ultimate C Programming Handbook&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/CodeWithHarry/The-Ultimate-C-Programming-Course/main/#table-of-contents&quot;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/CodeWithHarry/The-Ultimate-C-Programming-Course/main/#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/CodeWithHarry/The-Ultimate-C-Programming-Course/main/#chapters&quot;&gt;Chapters&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/CodeWithHarry/The-Ultimate-C-Programming-Course/main/#projects&quot;&gt;Projects&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/CodeWithHarry/The-Ultimate-C-Programming-Course/main/#problem-sets&quot;&gt;Problem Sets&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/CodeWithHarry/The-Ultimate-C-Programming-Course/main/#additional-resources&quot;&gt;Additional Resources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/CodeWithHarry/The-Ultimate-C-Programming-Course/main/#how-to-use-this-repository&quot;&gt;How to Use This Repository&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This repository is part of &lt;strong&gt;The Ultimate C Programming Handbook&lt;/strong&gt;. The course aims to provide a comprehensive guide to learning C programming.&lt;/p&gt; 
&lt;h2&gt;Chapters&lt;/h2&gt; 
&lt;p&gt;The course is divided into several chapters, each focusing on different aspects of C programming:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 1: Variables, Constants &amp;amp; Keywords&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Learn how to declare and initialize variables in C.&lt;/li&gt; 
   &lt;li&gt;Understand different types of constants.&lt;/li&gt; 
   &lt;li&gt;Familiarize yourself with reserved words in C.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 2: Instructions and Operators&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Different types of instructions in C.&lt;/li&gt; 
   &lt;li&gt;Arithmetic, relational, and logical operators.&lt;/li&gt; 
   &lt;li&gt;Implicit and explicit type conversions.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 3: Conditional Instructions&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Conditional execution of code using if-else statements.&lt;/li&gt; 
   &lt;li&gt;Evaluate conditions using relational and logical operators.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 4: Loop Control Instructions&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do-while&lt;/code&gt;, and &lt;code&gt;for&lt;/code&gt; loops.&lt;/li&gt; 
   &lt;li&gt;Control statements like &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 5: Functions and Recursion&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Definition, declaration, and calling of functions.&lt;/li&gt; 
   &lt;li&gt;Concept and usage of recursive functions.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 6: Pointers&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Declaration and usage of pointers.&lt;/li&gt; 
   &lt;li&gt;Operations involving pointers.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 7: Arrays&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Single-dimensional and multi-dimensional arrays.&lt;/li&gt; 
   &lt;li&gt;Accessing array elements using pointers.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 8: Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Initialization and manipulation of strings.&lt;/li&gt; 
   &lt;li&gt;Standard library functions for strings.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 9: Structures&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Definition and usage of structures.&lt;/li&gt; 
   &lt;li&gt;Accessing structure members using pointers.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 10: File I/O&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Reading from and writing to files.&lt;/li&gt; 
   &lt;li&gt;Handling files using pointers.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 11: Dynamic Memory Allocation&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;malloc()&lt;/code&gt;, &lt;code&gt;calloc()&lt;/code&gt;, &lt;code&gt;realloc()&lt;/code&gt;, and &lt;code&gt;free()&lt;/code&gt; functions.&lt;/li&gt; 
   &lt;li&gt;Managing dynamically allocated memory.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Project 1: Number Guessing Game&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;A fun game where the player tries to guess a randomly generated number.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Project 2: Snake Water Gun Game&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;A variation of the classic Rock-Paper-Scissors game.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Problem Sets&lt;/h2&gt; 
&lt;p&gt;Each chapter contains problem sets to test your understanding and to practice coding. The problem sets include various challenges and exercises relevant to the chapter&#39;s content.&lt;/p&gt; 
&lt;h2&gt;Additional Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.codewithharry.com/notes&quot;&gt;Download the Handbook (Scroll to the bottom of the page and navigate to Handbooks section)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.codewithharry.com/notes&quot;&gt;Download the Handwritten Notes&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.codewithharry.com/blogpost/c-cheatsheet/&quot;&gt;Download the Cheatsheet&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=aZb0iu4uGwA&quot;&gt;Watch the Course Video&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Use This Repository&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt; to your local machine using: &lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/CodeWithHarry/The-Ultimate-C-Programming-Course.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Navigate through the chapters&lt;/strong&gt; to find the relevant lessons and code examples.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Complete the problem sets&lt;/strong&gt; provided at the end of each chapter to solidify your understanding.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Work on the projects&lt;/strong&gt; to apply your knowledge in real-world scenarios.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;p&gt;Feel free to explore each chapter and work through the exercises to reinforce your learning. Happy coding!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pbatard/rufus</title>
      <link>https://github.com/pbatard/rufus</link>
      <description>&lt;p&gt;The Reliable USB Formatting Utility&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rufus: The Reliable USB Formatting Utility&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/pbatard/rufus/actions/workflows/vs2022.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/pbatard/rufus/vs2022.yml?branch=master&amp;amp;style=flat-square&amp;amp;label=VS2022%20Build&quot; alt=&quot;VS2022 Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/pbatard/rufus/actions/workflows/mingw.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/pbatard/rufus/mingw.yml?branch=master&amp;amp;style=flat-square&amp;amp;label=MinGW%20Build&quot; alt=&quot;MinGW Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://scan.coverity.com/projects/pbatard-rufus&quot;&gt;&lt;img src=&quot;https://img.shields.io/coverity/scan/2172.svg?style=flat-square&amp;amp;label=Coverity%20Analysis&quot; alt=&quot;Coverity Scan Status&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://github.com/pbatard/rufus/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-pre/pbatard/rufus.svg?style=flat-square&amp;amp;label=Latest%20Release&quot; alt=&quot;Latest Release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.en.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-GPLv3-blue.svg?style=flat-square&amp;amp;label=License&quot; alt=&quot;Licence&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/pbatard/rufus/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/pbatard/rufus/total.svg?label=Downloads&amp;amp;style=flat-square&quot; alt=&quot;Download Stats&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/pbatard/rufus/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/pbatard/rufus.svg?style=flat-square&amp;amp;label=Contributors&quot; alt=&quot;Contributors&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pbatard/rufus/master/res/icons/rufus-128.png&quot; alt=&quot;Rufus logo&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Rufus is a utility that helps format and create bootable USB flash drives.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Format USB, flash card and virtual drives to FAT/FAT32/NTFS/UDF/exFAT/ReFS/ext2/ext3&lt;/li&gt; 
 &lt;li&gt;Create DOS bootable USB drives using &lt;a href=&quot;https://www.freedos.org&quot;&gt;FreeDOS&lt;/a&gt; or MS-DOS&lt;/li&gt; 
 &lt;li&gt;Create BIOS or UEFI bootable drives, including &lt;a href=&quot;https://github.com/pbatard/uefi-ntfs&quot;&gt;UEFI bootable NTFS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Create bootable drives from bootable ISOs (Windows, Linux, etc.)&lt;/li&gt; 
 &lt;li&gt;Create bootable drives from bootable disk images, including compressed ones&lt;/li&gt; 
 &lt;li&gt;Create Windows 11 installation drives for PCs that don&#39;t have TPM or Secure Boot&lt;/li&gt; 
 &lt;li&gt;Create &lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_To_Go&quot;&gt;Windows To Go&lt;/a&gt; drives&lt;/li&gt; 
 &lt;li&gt;Create VHD/DD, VHDX and FFU images of an existing drive&lt;/li&gt; 
 &lt;li&gt;Create persistent Linux partitions&lt;/li&gt; 
 &lt;li&gt;Compute MD5, SHA-1, SHA-256 and SHA-512 checksums of the selected image&lt;/li&gt; 
 &lt;li&gt;Perform runtime validation of UEFI bootable media&lt;/li&gt; 
 &lt;li&gt;Improve Windows installation experience by automatically setting up OOBE parameters (local account, privacy options, etc.)&lt;/li&gt; 
 &lt;li&gt;Perform bad blocks checks, including detection of &quot;fake&quot; flash drives&lt;/li&gt; 
 &lt;li&gt;Download official Microsoft Windows 8, Windows 10 or Windows 11 retail ISOs&lt;/li&gt; 
 &lt;li&gt;Download &lt;a href=&quot;https://github.com/pbatard/UEFI-Shell&quot;&gt;UEFI Shell&lt;/a&gt; ISOs&lt;/li&gt; 
 &lt;li&gt;Modern and familiar UI, with &lt;a href=&quot;https://github.com/pbatard/rufus/wiki/FAQ#What_languages_are_natively_supported_by_Rufus&quot;&gt;38 languages natively supported&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Small footprint. No installation required.&lt;/li&gt; 
 &lt;li&gt;Portable. Secure Boot compatible.&lt;/li&gt; 
 &lt;li&gt;100% &lt;a href=&quot;https://www.gnu.org/philosophy/free-sw&quot;&gt;Free Software&lt;/a&gt; (&lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0&quot;&gt;GPL v3&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Compilation&lt;/h2&gt; 
&lt;p&gt;Use either Visual Studio 2022 or MinGW and then invoke the &lt;code&gt;.sln&lt;/code&gt; or &lt;code&gt;configure&lt;/code&gt;/&lt;code&gt;make&lt;/code&gt; respectively.&lt;/p&gt; 
&lt;h4&gt;Visual Studio&lt;/h4&gt; 
&lt;p&gt;Rufus is an OSI compliant Open Source project. You are entitled to download and use the &lt;em&gt;freely available&lt;/em&gt; &lt;a href=&quot;https://www.visualstudio.com/vs/community/&quot;&gt;Visual Studio Community Edition&lt;/a&gt; to build, run or develop for Rufus. As per the Visual Studio Community Edition license, this applies regardless of whether you are an individual or a corporate user.&lt;/p&gt; 
&lt;h2&gt;Additional information&lt;/h2&gt; 
&lt;p&gt;Rufus provides extensive information about what it is doing, either through its easily accessible log, or through the &lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/debugview&quot;&gt;Windows debug facility&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rufus.ie&quot;&gt;&lt;strong&gt;Official Website&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pbatard/rufus/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Enhancements/Bugs&lt;/h2&gt; 
&lt;p&gt;Please use the &lt;a href=&quot;https://github.com/pbatard/rufus/issues&quot;&gt;GitHub issue tracker&lt;/a&gt; for reporting problems or suggesting new features.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>curl/curl</title>
      <link>https://github.com/curl/curl</link>
      <description>&lt;p&gt;A command line tool and library for transferring data with URL syntax, supporting DICT, FILE, FTP, FTPS, GOPHER, GOPHERS, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, MQTT, POP3, POP3S, RTMP, RTMPS, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET, TFTP, WS and WSS. libcurl offers a myriad of powerful features&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://curl.se/&quot;&gt;&lt;img src=&quot;https://curl.se/logo/curl-logo.svg?sanitize=true&quot; alt=&quot;curl logo&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;curl is a command-line tool for transferring data specified with URL syntax. Learn how to use curl by reading &lt;a href=&quot;https://curl.se/docs/manpage.html&quot;&gt;the manpage&lt;/a&gt; or &lt;a href=&quot;https://everything.curl.dev/&quot;&gt;everything curl&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Find out how to install curl by reading &lt;a href=&quot;https://curl.se/docs/install.html&quot;&gt;the INSTALL document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;libcurl is the library curl is using to do its job. It is readily available to be used by your software. Read &lt;a href=&quot;https://curl.se/libcurl/c/libcurl.html&quot;&gt;the libcurl manpage&lt;/a&gt; to learn how.&lt;/p&gt; 
&lt;h2&gt;Open Source&lt;/h2&gt; 
&lt;p&gt;curl is Open Source and is distributed under an MIT-like &lt;a href=&quot;https://curl.se/docs/copyright.html&quot;&gt;license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;Contact us on a suitable &lt;a href=&quot;https://curl.se/mail/&quot;&gt;mailing list&lt;/a&gt; or use GitHub &lt;a href=&quot;https://github.com/curl/curl/issues&quot;&gt;issues&lt;/a&gt;/ &lt;a href=&quot;https://github.com/curl/curl/pulls&quot;&gt;pull requests&lt;/a&gt;/ &lt;a href=&quot;https://github.com/curl/curl/discussions&quot;&gt;discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All contributors to the project are listed in &lt;a href=&quot;https://curl.se/docs/thanks.html&quot;&gt;the THANKS document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Commercial support&lt;/h2&gt; 
&lt;p&gt;For commercial support, maybe private and dedicated help with your problems or applications using (lib)curl visit &lt;a href=&quot;https://curl.se/support.html&quot;&gt;the support page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Website&lt;/h2&gt; 
&lt;p&gt;Visit the &lt;a href=&quot;https://curl.se/&quot;&gt;curl website&lt;/a&gt; for the latest news and downloads.&lt;/p&gt; 
&lt;h2&gt;Source code&lt;/h2&gt; 
&lt;p&gt;Download the latest source from the Git server:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/curl/curl.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Security problems&lt;/h2&gt; 
&lt;p&gt;Report suspected security problems via &lt;a href=&quot;https://hackerone.com/curl&quot;&gt;our HackerOne page&lt;/a&gt; and not in public.&lt;/p&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Thank you to all our backers &lt;span&gt;🙏&lt;/span&gt; &lt;a href=&quot;https://opencollective.com/curl#section-contribute&quot;&gt;Become a backer&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a &lt;a href=&quot;https://curl.se/sponsors.html&quot;&gt;sponsor&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>micropython/micropython</title>
      <link>https://github.com/micropython/micropython</link>
      <description>&lt;p&gt;MicroPython - a lean and efficient Python implementation for microcontrollers and constrained systems&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/micropython/micropython/actions?query=branch%3Amaster+event%3Apush&quot;&gt;&lt;img src=&quot;https://github.com/micropython/micropython/actions/workflows/ports_unix.yml/badge.svg?sanitize=true&quot; alt=&quot;Unix CI badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/micropython/micropython/actions?query=branch%3Amaster+event%3Apush&quot;&gt;&lt;img src=&quot;https://github.com/micropython/micropython/actions/workflows/ports_stm32.yml/badge.svg?sanitize=true&quot; alt=&quot;STM32 CI badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.micropython.org/&quot;&gt;&lt;img src=&quot;https://github.com/micropython/micropython/actions/workflows/docs.yml/badge.svg?sanitize=true&quot; alt=&quot;Docs CI badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/micropython/micropython&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/micropython/micropython/branch/master/graph/badge.svg?token=I92PfD05sD&quot; alt=&quot;codecov&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;The MicroPython project&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/micropython/micropython/master/logo/upython-with-micro.jpg&quot; alt=&quot;MicroPython Logo&quot; /&gt; &lt;/p&gt; 
&lt;p&gt;This is the MicroPython project, which aims to put an implementation of Python 3.x on microcontrollers and small embedded systems. You can find the official website at &lt;a href=&quot;http://www.micropython.org&quot;&gt;micropython.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;WARNING: this project is in beta stage and is subject to changes of the code-base, including project-wide name changes and API changes.&lt;/p&gt; 
&lt;p&gt;MicroPython implements the entire Python 3.4 syntax (including exceptions, &lt;code&gt;with&lt;/code&gt;, &lt;code&gt;yield from&lt;/code&gt;, etc., and additionally &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; keywords from Python 3.5 and some select features from later versions). The following core datatypes are provided: &lt;code&gt;str&lt;/code&gt;(including basic Unicode support), &lt;code&gt;bytes&lt;/code&gt;, &lt;code&gt;bytearray&lt;/code&gt;, &lt;code&gt;tuple&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;frozenset&lt;/code&gt;, &lt;code&gt;array.array&lt;/code&gt;, &lt;code&gt;collections.namedtuple&lt;/code&gt;, classes and instances. Builtin modules include &lt;code&gt;os&lt;/code&gt;, &lt;code&gt;sys&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;re&lt;/code&gt;, and &lt;code&gt;struct&lt;/code&gt;, etc. Some ports have support for &lt;code&gt;_thread&lt;/code&gt; module (multithreading), &lt;code&gt;socket&lt;/code&gt; and &lt;code&gt;ssl&lt;/code&gt; for networking, and &lt;code&gt;asyncio&lt;/code&gt;. Note that only a subset of Python 3 functionality is implemented for the data types and modules.&lt;/p&gt; 
&lt;p&gt;MicroPython can execute scripts in textual source form (.py files) or from precompiled bytecode (.mpy files), in both cases either from an on-device filesystem or &quot;frozen&quot; into the MicroPython executable.&lt;/p&gt; 
&lt;p&gt;MicroPython also provides a set of MicroPython-specific modules to access hardware-specific functionality and peripherals such as GPIO, Timers, ADC, DAC, PWM, SPI, I2C, CAN, Bluetooth, and USB.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://docs.micropython.org/&quot;&gt;online documentation&lt;/a&gt; for the API reference and information about using MicroPython and information about how it is implemented.&lt;/p&gt; 
&lt;p&gt;We use &lt;a href=&quot;https://github.com/micropython/micropython/discussions&quot;&gt;GitHub Discussions&lt;/a&gt; as our forum, and &lt;a href=&quot;https://discord.gg/RB8HZSAExQ&quot;&gt;Discord&lt;/a&gt; for chat. These are great places to ask questions and advice from the community or to discuss your MicroPython-based projects.&lt;/p&gt; 
&lt;p&gt;For bugs and feature requests, please &lt;a href=&quot;https://github.com/micropython/micropython/issues/new/choose&quot;&gt;raise an issue&lt;/a&gt; and follow the templates there.&lt;/p&gt; 
&lt;p&gt;For information about the &lt;a href=&quot;https://store.micropython.org/pyb-features&quot;&gt;MicroPython pyboard&lt;/a&gt;, the officially supported board from the &lt;a href=&quot;https://www.kickstarter.com/projects/214379695/micro-python-python-for-microcontrollers&quot;&gt;original Kickstarter campaign&lt;/a&gt;, see the &lt;a href=&quot;http://github.com/micropython/pyboard&quot;&gt;schematics and pinouts&lt;/a&gt; and &lt;a href=&quot;https://docs.micropython.org/en/latest/pyboard/quickref.html&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;MicroPython is an open-source project and welcomes contributions. To be productive, please be sure to follow the &lt;a href=&quot;https://github.com/micropython/micropython/wiki/ContributorGuidelines&quot;&gt;Contributors&#39; Guidelines&lt;/a&gt; and the &lt;a href=&quot;https://github.com/micropython/micropython/raw/master/CODECONVENTIONS.md&quot;&gt;Code Conventions&lt;/a&gt;. Note that MicroPython is licenced under the MIT license, and all contributions should follow this license.&lt;/p&gt; 
&lt;h2&gt;About this repository&lt;/h2&gt; 
&lt;p&gt;This repository contains the following components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/py/&quot;&gt;py/&lt;/a&gt; -- the core Python implementation, including compiler, runtime, and core library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/mpy-cross/&quot;&gt;mpy-cross/&lt;/a&gt; -- the MicroPython cross-compiler which is used to turn scripts into precompiled bytecode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/&quot;&gt;ports/&lt;/a&gt; -- platform-specific code for the various ports and architectures that MicroPython runs on.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/lib/&quot;&gt;lib/&lt;/a&gt; -- submodules for external dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/tests/&quot;&gt;tests/&lt;/a&gt; -- test framework and test scripts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/docs/&quot;&gt;docs/&lt;/a&gt; -- user documentation in Sphinx reStructuredText format. This is used to generate the &lt;a href=&quot;http://docs.micropython.org&quot;&gt;online documentation&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/extmod/&quot;&gt;extmod/&lt;/a&gt; -- additional (non-core) modules implemented in C.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/tools/&quot;&gt;tools/&lt;/a&gt; -- various tools, including the pyboard.py module.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/examples/&quot;&gt;examples/&lt;/a&gt; -- a few example Python scripts.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&quot;make&quot; is used to build the components, or &quot;gmake&quot; on BSD-based systems. You will also need bash, gcc, and Python 3.3+ available as the command &lt;code&gt;python3&lt;/code&gt;. Some ports (rp2 and esp32) additionally use CMake.&lt;/p&gt; 
&lt;h2&gt;Supported platforms &amp;amp; architectures&lt;/h2&gt; 
&lt;p&gt;MicroPython runs on a wide range of microcontrollers, as well as on Unix-like (including Linux, BSD, macOS, WSL) and Windows systems.&lt;/p&gt; 
&lt;p&gt;Microcontroller targets can be as small as 256kiB flash + 16kiB RAM, although devices with at least 512kiB flash + 128kiB RAM allow a much more full-featured experience.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/unix&quot;&gt;Unix&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/windows&quot;&gt;Windows&lt;/a&gt; ports allow both development and testing of MicroPython itself, as well as providing lightweight alternative to CPython on these platforms (in particular on embedded Linux systems).&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/minimal&quot;&gt;&quot;minimal&quot;&lt;/a&gt; port provides an example of a very basic MicroPython port and can be compiled as both a standalone Linux binary as well as for ARM Cortex M4. Start with this if you want to port MicroPython to another microcontroller. Additionally the &lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/bare-arm&quot;&gt;&quot;bare-arm&quot;&lt;/a&gt; port is an example of the absolute minimum configuration, and is used to keep track of the code size of the core runtime and VM.&lt;/p&gt; 
&lt;p&gt;In addition, the following ports are provided in this repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/cc3200&quot;&gt;cc3200&lt;/a&gt; -- Texas Instruments CC3200 (including PyCom WiPy).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/esp32&quot;&gt;esp32&lt;/a&gt; -- Espressif ESP32 SoC (including ESP32S2, ESP32S3, ESP32C3, ESP32C6).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/esp8266&quot;&gt;esp8266&lt;/a&gt; -- Espressif ESP8266 SoC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/mimxrt&quot;&gt;mimxrt&lt;/a&gt; -- NXP m.iMX RT (including Teensy 4.x).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/nrf&quot;&gt;nrf&lt;/a&gt; -- Nordic Semiconductor nRF51 and nRF52.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/pic16bit&quot;&gt;pic16bit&lt;/a&gt; -- Microchip PIC 16-bit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/powerpc&quot;&gt;powerpc&lt;/a&gt; -- IBM PowerPC (including Microwatt)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/qemu&quot;&gt;qemu&lt;/a&gt; -- QEMU-based emulated target (for testing)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/renesas-ra&quot;&gt;renesas-ra&lt;/a&gt; -- Renesas RA family.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/rp2&quot;&gt;rp2&lt;/a&gt; -- Raspberry Pi RP2040 (including Pico and Pico W).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/samd&quot;&gt;samd&lt;/a&gt; -- Microchip (formerly Atmel) SAMD21 and SAMD51.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/stm32&quot;&gt;stm32&lt;/a&gt; -- STMicroelectronics STM32 family (including F0, F4, F7, G0, G4, H7, L0, L4, WB)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/webassembly&quot;&gt;webassembly&lt;/a&gt; -- Emscripten port targeting browsers and NodeJS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/ports/zephyr&quot;&gt;zephyr&lt;/a&gt; -- Zephyr RTOS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The MicroPython cross-compiler, mpy-cross&lt;/h2&gt; 
&lt;p&gt;Most ports require the &lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/mpy-cross&quot;&gt;MicroPython cross-compiler&lt;/a&gt; to be built first. This program, called mpy-cross, is used to pre-compile Python scripts to .mpy files which can then be included (frozen) into the firmware/executable for a port. To build mpy-cross use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ cd mpy-cross
$ make
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;External dependencies&lt;/h2&gt; 
&lt;p&gt;The core MicroPython VM and runtime has no external dependencies, but a given port might depend on third-party drivers or vendor HALs. This repository includes &lt;a href=&quot;https://raw.githubusercontent.com/micropython/micropython/master/lib/&quot;&gt;several submodules&lt;/a&gt; linking to these external dependencies. Before compiling a given port, use&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ cd ports/name
$ make submodules
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;to ensure that all required submodules are initialised.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BasedHardware/omi</title>
      <link>https://github.com/BasedHardware/omi</link>
      <description>&lt;p&gt;AI wearables. Put it on, speak, transcribe, automatically&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;&lt;strong&gt;omi&lt;/strong&gt;&lt;/h1&gt; 
 &lt;p&gt;Meet Omi, the world’s leading open-source AI wearable that captures conversations, gives summaries, action items and does actions for you. Simply connect Omi to your mobile device and enjoy automatic, high-quality transcriptions of meetings, chats, and voice memos wherever you are.&lt;/p&gt; 
 &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/834d3fdb-31b5-4f22-ae35-da3d2b9a8f59&quot; alt=&quot;Omi&quot; width=&quot;49%&quot; /&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/fdad4226-e5ce-4c55-b547-9101edfa3203&quot; alt=&quot;Image&quot; width=&quot;49%&quot; /&gt; &lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7a658366-9e02-4057-bde5-a510e1f0217a&quot; alt=&quot;CleanShot 2025-02-08 at 18 22 23&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;http://discord.omi.me&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1192313062041067520?label=Discord&quot; alt=&quot;Discord Follow&quot; /&gt;&lt;/a&gt;     &lt;a href=&quot;https://x.com/kodjima33&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/kodjima33&quot; alt=&quot;Twitter Follow&quot; /&gt;&lt;/a&gt;     &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&quot; alt=&quot;License: MIT&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/BasedHardware/Omi&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/BasedHardware/Omi&quot; alt=&quot;GitHub Repo stars&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h3&gt; &lt;p&gt;&lt;a href=&quot;https://omi.me/&quot;&gt;Homepage&lt;/a&gt; | &lt;a href=&quot;https://docs.omi.me/&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://www.omi.me/products/omi-dev-kit-2&quot;&gt;Buy omi Developer Kit&lt;/a&gt; | &lt;a href=&quot;https://www.omi.me/glass&quot;&gt;Buy Omi Glass Dev Kit&lt;/a&gt;&lt;/p&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;h2&gt;Quick Start (2 min)&lt;/h2&gt; 
&lt;p&gt;Download omi App&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.friend.ios&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/7/78/Google_Play_Store_badge_EN.svg?sanitize=true&quot; alt=&quot;Get it on Google Play&quot; height=&quot;50px&quot; width=&quot;180px&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://apps.apple.com/us/app/friend-ai-wearable/id6502156163&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/3/3c/Download_on_the_App_Store_Badge.svg?sanitize=true&quot; alt=&quot;Download on the App Store&quot; height=&quot;50px&quot; width=&quot;180px&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create webhook using &lt;a href=&quot;https://webhook.site&quot;&gt;webhook.site&lt;/a&gt; and copy this url&lt;/p&gt; 
&lt;img src=&quot;https://github.com/user-attachments/assets/083a6ec4-4694-4c7a-843a-4a1a0c254453&quot; width=&quot;500&quot; /&gt; 
&lt;p&gt;In omi App:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Explore =&amp;gt; Create an App&lt;/th&gt; 
   &lt;th&gt;Select Capability&lt;/th&gt; 
   &lt;th&gt;Paste Webhook URL&lt;/th&gt; 
   &lt;th&gt;Install App&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/31809b81-7de2-4381-b5fc-5c9714972211&quot; width=&quot;200&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/59cfbe8e-7e3b-437f-81f7-25eb50ccdd7d&quot; width=&quot;200&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/3d864ee8-555f-4ded-b4db-87ff78128323&quot; width=&quot;200&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/58cf6da6-e245-415e-92e7-dc1f46583cfc&quot; width=&quot;200&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Start speaking, you&#39;ll see Real-time transcript on &lt;a href=&quot;https://webhook.site&quot;&gt;webhook.site &lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;In this repo:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/omi&quot;&gt;omi device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/omiGlass&quot;&gt;omi glass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/app&quot;&gt;omi app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/personas-open-source&quot;&gt;ai personas (web)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/BasedHardware/omi/main/sdks&quot;&gt;SDKs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/doc/developer/AppSetup&quot;&gt;omi App setup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/doc/assembly/Buying_Guide/&quot;&gt;Buying Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/doc/assembly/Build_the_device/&quot;&gt;Build the device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/doc/get_started/Flash_device/&quot;&gt;Install firmware&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/doc/developer/apps/Introduction&quot;&gt;Create your own app in 1 minute&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out our &lt;a href=&quot;https://docs.omi.me/doc/developer/Contribution/&quot;&gt;contributions guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Earn from contributing! Check the &lt;a href=&quot;https://omi.me/bounties&quot;&gt;paid bounties 🤑&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Check out the &lt;a href=&quot;https://github.com/BasedHardware/Omi/issues&quot;&gt;current issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join the &lt;a href=&quot;http://discord.omi.me&quot;&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Build your own &lt;a href=&quot;https://docs.omi.me/doc/developer/apps/Introduction&quot;&gt;Plugins/Integrations&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Omi is available under &lt;a href=&quot;https://github.com/BasedHardware/omi/raw/main/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>raspberrypi/linux</title>
      <link>https://github.com/raspberrypi/linux</link>
      <description>&lt;p&gt;Kernel source tree for Raspberry Pi-provided kernel builds. Issues unrelated to the linux kernel should be posted on the community forum at https://forums.raspberrypi.com/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linux kernel&lt;/h1&gt; 
&lt;p&gt;There are several guides for kernel developers and users. These guides can be rendered in a number of formats, like HTML and PDF. Please read Documentation/admin-guide/README.rst first.&lt;/p&gt; 
&lt;p&gt;In order to build the documentation, use &lt;code&gt;make htmldocs&lt;/code&gt; or &lt;code&gt;make pdfdocs&lt;/code&gt;. The formatted documentation can also be read online at:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://www.kernel.org/doc/html/latest/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are various text files in the Documentation/ subdirectory, several of them using the Restructured Text markup notation.&lt;/p&gt; 
&lt;p&gt;Please read the Documentation/process/changes.rst file, as it contains the requirements for building and running the kernel, and information about the problems which may result by upgrading your kernel.&lt;/p&gt; 
&lt;p&gt;Build status for rpi-6.1.y: &lt;a href=&quot;https://github.com/raspberrypi/linux/actions/workflows/kernel-build.yml&quot;&gt;&lt;img src=&quot;https://github.com/raspberrypi/linux/actions/workflows/kernel-build.yml/badge.svg?branch=rpi-6.1.y&quot; alt=&quot;Pi kernel build tests&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/raspberrypi/linux/actions/workflows/dtoverlaycheck.yml&quot;&gt;&lt;img src=&quot;https://github.com/raspberrypi/linux/actions/workflows/dtoverlaycheck.yml/badge.svg?branch=rpi-6.1.y&quot; alt=&quot;dtoverlaycheck&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Build status for rpi-6.6.y: &lt;a href=&quot;https://github.com/raspberrypi/linux/actions/workflows/kernel-build.yml&quot;&gt;&lt;img src=&quot;https://github.com/raspberrypi/linux/actions/workflows/kernel-build.yml/badge.svg?branch=rpi-6.6.y&quot; alt=&quot;Pi kernel build tests&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/raspberrypi/linux/actions/workflows/dtoverlaycheck.yml&quot;&gt;&lt;img src=&quot;https://github.com/raspberrypi/linux/actions/workflows/dtoverlaycheck.yml/badge.svg?branch=rpi-6.6.y&quot; alt=&quot;dtoverlaycheck&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Build status for rpi-6.12.y: &lt;a href=&quot;https://github.com/raspberrypi/linux/actions/workflows/kernel-build.yml&quot;&gt;&lt;img src=&quot;https://github.com/raspberrypi/linux/actions/workflows/kernel-build.yml/badge.svg?branch=rpi-6.12.y&quot; alt=&quot;Pi kernel build tests&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/raspberrypi/linux/actions/workflows/dtoverlaycheck.yml&quot;&gt;&lt;img src=&quot;https://github.com/raspberrypi/linux/actions/workflows/dtoverlaycheck.yml/badge.svg?branch=rpi-6.12.y&quot; alt=&quot;dtoverlaycheck&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zephyrproject-rtos/zephyr</title>
      <link>https://github.com/zephyrproject-rtos/zephyr</link>
      <description>&lt;p&gt;Primary Git Repository for the Zephyr Project. Zephyr is a new generation, scalable, optimized, secure RTOS for multiple hardware architectures.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. raw:: html&lt;/p&gt; 
&lt;a href=&quot;https://www.zephyrproject.org&quot;&gt; &lt;p align=&quot;center&quot;&gt; 
  &lt;picture&gt; 
   &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;doc/_static/images/logo-readme-dark.svg&quot; /&gt; 
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;doc/_static/images/logo-readme-light.svg&quot; /&gt; 
   &lt;img src=&quot;https://raw.githubusercontent.com/zephyrproject-rtos/zephyr/main/doc/_static/images/logo-readme-light.svg?sanitize=true&quot; /&gt; 
  &lt;/picture&gt; &lt;/p&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/74&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/74/badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://scorecard.dev/viewer/?uri=github.com/zephyrproject-rtos/zephyr&quot;&gt;&lt;img src=&quot;https://api.securityscorecards.dev/projects/github.com/zephyrproject-rtos/zephyr/badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml?query=branch%3Amain&quot;&gt;&lt;img src=&quot;https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml/badge.svg?event=push&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The Zephyr Project is a scalable real-time operating system (RTOS) supporting multiple hardware architectures, optimized for resource constrained devices, and built with security in mind.&lt;/p&gt; 
&lt;p&gt;The Zephyr OS is based on a small-footprint kernel designed for use on resource-constrained systems: from simple embedded environmental sensors and LED wearables to sophisticated smart watches and IoT wireless gateways.&lt;/p&gt; 
&lt;p&gt;The Zephyr kernel supports multiple architectures, including ARM (Cortex-A, Cortex-R, Cortex-M), Intel x86, ARC, Tensilica Xtensa, and RISC-V, SPARC, MIPS, and a large number of &lt;code&gt;supported boards&lt;/code&gt;_.&lt;/p&gt; 
&lt;p&gt;.. below included in doc/introduction/introduction.rst&lt;/p&gt; 
&lt;p&gt;Getting Started&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Welcome to Zephyr! See the &lt;code&gt;Introduction to Zephyr&lt;/code&gt;_ for a high-level overview, and the documentation&#39;s &lt;code&gt;Getting Started Guide&lt;/code&gt;_ to start developing.&lt;/p&gt; 
&lt;p&gt;.. start_include_here&lt;/p&gt; 
&lt;p&gt;Community Support&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Community support is provided via mailing lists and Discord; see the Resources below for details.&lt;/p&gt; 
&lt;p&gt;.. _project-resources:&lt;/p&gt; 
&lt;p&gt;Resources&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Here&#39;s a quick summary of resources to help you find your way around:&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;| 📖 &lt;code&gt;Zephyr Documentation&lt;/code&gt;_ | 🚀 &lt;code&gt;Getting Started Guide&lt;/code&gt;_ | 🙋🏽 &lt;code&gt;Tips when asking for help&lt;/code&gt;_ | 💻 &lt;code&gt;Code samples&lt;/code&gt;_&lt;/p&gt; 
&lt;h2&gt;Code and Development&lt;/h2&gt; 
&lt;p&gt;| 🌐 &lt;code&gt;Source Code Repository&lt;/code&gt;_ | 📦 &lt;code&gt;Releases&lt;/code&gt;_ | 🤝 &lt;code&gt;Contribution Guide&lt;/code&gt;_&lt;/p&gt; 
&lt;h2&gt;Community and Support&lt;/h2&gt; 
&lt;p&gt;| 💬 &lt;code&gt;Discord Server&lt;/code&gt;_ for real-time community discussions | 📧 &lt;code&gt;User mailing list (users@lists.zephyrproject.org)&lt;/code&gt;_ | 📧 &lt;code&gt;Developer mailing list (devel@lists.zephyrproject.org)&lt;/code&gt;_ | 📬 &lt;code&gt;Other project mailing lists&lt;/code&gt;_ | 📚 &lt;code&gt;Project Wiki&lt;/code&gt;_&lt;/p&gt; 
&lt;h2&gt;Issue Tracking and Security&lt;/h2&gt; 
&lt;p&gt;| 🐛 &lt;code&gt;GitHub Issues&lt;/code&gt;_ | 🔒 &lt;code&gt;Security documentation&lt;/code&gt;_ | 🛡️ &lt;code&gt;Security Advisories Repository&lt;/code&gt;_ | ⚠️ Report security vulnerabilities at &lt;a href=&quot;mailto:vulnerabilities@zephyrproject.org&quot;&gt;vulnerabilities@zephyrproject.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Additional Resources&lt;/h2&gt; 
&lt;p&gt;| 🌐 &lt;code&gt;Zephyr Project Website&lt;/code&gt;_ | 📺 &lt;code&gt;Zephyr Tech Talks&lt;/code&gt;_&lt;/p&gt; 
&lt;p&gt;.. _Zephyr Project Website: &lt;a href=&quot;https://www.zephyrproject.org&quot;&gt;https://www.zephyrproject.org&lt;/a&gt; .. _Discord Server: &lt;a href=&quot;https://chat.zephyrproject.org&quot;&gt;https://chat.zephyrproject.org&lt;/a&gt; .. _supported boards: &lt;a href=&quot;https://docs.zephyrproject.org/latest/boards/index.html&quot;&gt;https://docs.zephyrproject.org/latest/boards/index.html&lt;/a&gt; .. _Zephyr Documentation: &lt;a href=&quot;https://docs.zephyrproject.org&quot;&gt;https://docs.zephyrproject.org&lt;/a&gt; .. _Introduction to Zephyr: &lt;a href=&quot;https://docs.zephyrproject.org/latest/introduction/index.html&quot;&gt;https://docs.zephyrproject.org/latest/introduction/index.html&lt;/a&gt; .. _Getting Started Guide: &lt;a href=&quot;https://docs.zephyrproject.org/latest/develop/getting_started/index.html&quot;&gt;https://docs.zephyrproject.org/latest/develop/getting_started/index.html&lt;/a&gt; .. _Contribution Guide: &lt;a href=&quot;https://docs.zephyrproject.org/latest/contribute/index.html&quot;&gt;https://docs.zephyrproject.org/latest/contribute/index.html&lt;/a&gt; .. _Source Code Repository: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr&quot;&gt;https://github.com/zephyrproject-rtos/zephyr&lt;/a&gt; .. _GitHub Issues: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/issues&quot;&gt;https://github.com/zephyrproject-rtos/zephyr/issues&lt;/a&gt; .. _Releases: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/releases&quot;&gt;https://github.com/zephyrproject-rtos/zephyr/releases&lt;/a&gt; .. _Project Wiki: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/wiki&quot;&gt;https://github.com/zephyrproject-rtos/zephyr/wiki&lt;/a&gt; .. _User mailing list (&lt;a href=&quot;mailto:users@lists.zephyrproject.org&quot;&gt;users@lists.zephyrproject.org&lt;/a&gt;): &lt;a href=&quot;https://lists.zephyrproject.org/g/users&quot;&gt;https://lists.zephyrproject.org/g/users&lt;/a&gt; .. _Developer mailing list (&lt;a href=&quot;mailto:devel@lists.zephyrproject.org&quot;&gt;devel@lists.zephyrproject.org&lt;/a&gt;): &lt;a href=&quot;https://lists.zephyrproject.org/g/devel&quot;&gt;https://lists.zephyrproject.org/g/devel&lt;/a&gt; .. _Other project mailing lists: &lt;a href=&quot;https://lists.zephyrproject.org/g/main/subgroups&quot;&gt;https://lists.zephyrproject.org/g/main/subgroups&lt;/a&gt; .. _Code samples: &lt;a href=&quot;https://docs.zephyrproject.org/latest/samples/index.html&quot;&gt;https://docs.zephyrproject.org/latest/samples/index.html&lt;/a&gt; .. _Security documentation: &lt;a href=&quot;https://docs.zephyrproject.org/latest/security/index.html&quot;&gt;https://docs.zephyrproject.org/latest/security/index.html&lt;/a&gt; .. _Security Advisories Repository: &lt;a href=&quot;https://github.com/zephyrproject-rtos/zephyr/security&quot;&gt;https://github.com/zephyrproject-rtos/zephyr/security&lt;/a&gt; .. _Tips when asking for help: &lt;a href=&quot;https://docs.zephyrproject.org/latest/develop/getting_started/index.html#asking-for-help&quot;&gt;https://docs.zephyrproject.org/latest/develop/getting_started/index.html#asking-for-help&lt;/a&gt; .. _Zephyr Tech Talks: &lt;a href=&quot;https://www.zephyrproject.org/tech-talks&quot;&gt;https://www.zephyrproject.org/tech-talks&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FreeRTOS/FreeRTOS-Kernel</title>
      <link>https://github.com/FreeRTOS/FreeRTOS-Kernel</link>
      <description>&lt;p&gt;FreeRTOS kernel files only, submoduled into https://github.com/FreeRTOS/FreeRTOS and various other repos.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/FreeRTOS/FreeRTOS-Kernel/actions/workflows/unit-tests.yml?query=branch%3Amain+event%3Apush+workflow%3A%22CMock+Unit+Tests%22++&quot;&gt;&lt;img src=&quot;https://github.com/FreeRTOS/FreeRTOS-Kernel/actions/workflows/unit-tests.yml/badge.svg?branch=main&amp;amp;event=push&quot; alt=&quot;CMock Unit Tests&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/FreeRTOS/FreeRTOS-Kernel&quot;&gt;&lt;img src=&quot;https://app.codecov.io/gh/FreeRTOS/FreeRTOS-Kernel/badge.svg?branch=main&quot; alt=&quot;codecov&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;This repository contains FreeRTOS kernel source/header files and kernel ports only. This repository is referenced as a submodule in &lt;a href=&quot;https://github.com/FreeRTOS/FreeRTOS&quot;&gt;FreeRTOS/FreeRTOS&lt;/a&gt; repository, which contains pre-configured demo application projects under &lt;code&gt;FreeRTOS/Demo&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;The easiest way to use FreeRTOS is to start with one of the pre-configured demo application projects. That way you will have the correct FreeRTOS source files included, and the correct include paths configured. Once a demo application is building and executing you can remove the demo application files, and start to add in your own application source files. See the &lt;a href=&quot;https://www.freertos.org/Documentation/01-FreeRTOS-quick-start/01-Beginners-guide/02-Quick-start-guide&quot;&gt;FreeRTOS Kernel Quick Start Guide&lt;/a&gt; for detailed instructions and other useful links.&lt;/p&gt; 
&lt;p&gt;Additionally, for FreeRTOS kernel feature information refer to the &lt;a href=&quot;https://www.freertos.org/Documentation/02-Kernel/02-Kernel-features/00-Developer-docs&quot;&gt;Developer Documentation&lt;/a&gt;, and &lt;a href=&quot;https://www.freertos.org/Documentation/02-Kernel/04-API-references/01-Task-creation/00-TaskHandle&quot;&gt;API Reference&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also for contributing and creating a Pull Request please refer to &lt;a href=&quot;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/.github/CONTRIBUTING.md#contributing-via-pull-request&quot;&gt;the instructions here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;FreeRTOS-Kernel V11.1.0 &lt;a href=&quot;https://github.com/FreeRTOS/FreeRTOS-Kernel/tree/V11.1.0&quot;&gt;source code&lt;/a&gt; is part of the &lt;a href=&quot;https://github.com/FreeRTOS/FreeRTOS-LTS/tree/202406-LTS&quot;&gt;FreeRTOS 202406.00 LTS&lt;/a&gt; release.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Getting help&lt;/h3&gt; 
&lt;p&gt;If you have any questions or need assistance troubleshooting your FreeRTOS project, we have an active community that can help on the &lt;a href=&quot;https://forums.freertos.org&quot;&gt;FreeRTOS Community Support Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;To consume FreeRTOS-Kernel&lt;/h2&gt; 
&lt;h3&gt;Consume with CMake&lt;/h3&gt; 
&lt;p&gt;If using CMake, it is recommended to use this repository using FetchContent. Add the following into your project&#39;s main or a subdirectory&#39;s &lt;code&gt;CMakeLists.txt&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Define the source and version/tag you want to use:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmake&quot;&gt;FetchContent_Declare( freertos_kernel
  GIT_REPOSITORY https://github.com/FreeRTOS/FreeRTOS-Kernel.git
  GIT_TAG        main #Note: Best practice to use specific git-hash or tagged version
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In case you prefer to add it as a git submodule, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git submodule add https://github.com/FreeRTOS/FreeRTOS-Kernel.git &amp;lt;path of the submodule&amp;gt;
git submodule update --init
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add a freertos_config library (typically an INTERFACE library) The following assumes the directory structure: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;include/FreeRTOSConfig.h&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmake&quot;&gt;add_library(freertos_config INTERFACE)

target_include_directories(freertos_config SYSTEM
INTERFACE
    include
)

target_compile_definitions(freertos_config
  INTERFACE
    projCOVERAGE_TEST=0
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In case you installed FreeRTOS-Kernel as a submodule, you will have to add it as a subdirectory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmake&quot;&gt;add_subdirectory(${FREERTOS_PATH})
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Configure the FreeRTOS-Kernel and make it available 
  &lt;ul&gt; 
   &lt;li&gt;this particular example supports a native and cross-compiled build option.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmake&quot;&gt;set( FREERTOS_HEAP &quot;4&quot; CACHE STRING &quot;&quot; FORCE)
# Select the native compile PORT
set( FREERTOS_PORT &quot;GCC_POSIX&quot; CACHE STRING &quot;&quot; FORCE)
# Select the cross-compile PORT
if (CMAKE_CROSSCOMPILING)
  set(FREERTOS_PORT &quot;GCC_ARM_CA9&quot; CACHE STRING &quot;&quot; FORCE)
endif()

FetchContent_MakeAvailable(freertos_kernel)
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;In case of cross compilation, you should also add the following to &lt;code&gt;freertos_config&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmake&quot;&gt;target_compile_definitions(freertos_config INTERFACE ${definitions})
target_compile_options(freertos_config INTERFACE ${options})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Consuming stand-alone - Cloning this repository&lt;/h3&gt; 
&lt;p&gt;To clone using HTTPS:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/FreeRTOS/FreeRTOS-Kernel.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using SSH:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone git@github.com:FreeRTOS/FreeRTOS-Kernel.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Repository structure&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The root of this repository contains the three files that are common to every port - list.c, queue.c and tasks.c. The kernel is contained within these three files. croutine.c implements the optional co-routine functionality - which is normally only used on very memory limited systems.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;./portable&lt;/code&gt; directory contains the files that are specific to a particular microcontroller and/or compiler. See the readme file in the &lt;code&gt;./portable&lt;/code&gt; directory for more information.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;./include&lt;/code&gt; directory contains the real time kernel header files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;./template_configuration&lt;/code&gt; directory contains a sample &lt;code&gt;FreeRTOSConfig.h&lt;/code&gt; to help jumpstart a new project. See the &lt;a href=&quot;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/examples/template_configuration/FreeRTOSConfig.h&quot;&gt;FreeRTOSConfig.h&lt;/a&gt; file for instructions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Code Formatting&lt;/h3&gt; 
&lt;p&gt;FreeRTOS files are formatted using the &quot;&lt;a href=&quot;https://github.com/uncrustify/uncrustify&quot;&gt;uncrustify&lt;/a&gt;&quot; tool. The configuration file used by uncrustify can be found in the &lt;a href=&quot;https://github.com/FreeRTOS/CI-CD-Github-Actions&quot;&gt;FreeRTOS/CI-CD-GitHub-Actions&#39;s&lt;/a&gt; &lt;a href=&quot;https://github.com/FreeRTOS/CI-CD-Github-Actions/tree/main/formatting&quot;&gt;uncrustify.cfg&lt;/a&gt; file.&lt;/p&gt; 
&lt;h3&gt;Line Endings&lt;/h3&gt; 
&lt;p&gt;File checked into the FreeRTOS-Kernel repository use unix-style LF line endings for the best compatibility with git.&lt;/p&gt; 
&lt;p&gt;For optimal compatibility with Microsoft Windows tools, it is best to enable the git autocrlf feature. You can enable this setting for the current repository using the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git config core.autocrlf true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Git History Optimizations&lt;/h3&gt; 
&lt;p&gt;Some commits in this repository perform large refactors which touch many lines and lead to unwanted behavior when using the &lt;code&gt;git blame&lt;/code&gt; command. You can configure git to ignore the list of large refactor commits in this repository with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git config blame.ignoreRevsFile .git-blame-ignore-revs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Spelling and Formatting&lt;/h3&gt; 
&lt;p&gt;We recommend using &lt;a href=&quot;https://code.visualstudio.com&quot;&gt;Visual Studio Code&lt;/a&gt;, commonly referred to as VSCode, when working on the FreeRTOS-Kernel. The FreeRTOS-Kernel also uses &lt;a href=&quot;https://cspell.org/&quot;&gt;cSpell&lt;/a&gt; as part of its spelling check. The config file for which can be found at &lt;a href=&quot;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/cspell.config.yaml&quot;&gt;cspell.config.yaml&lt;/a&gt; There is additionally a &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker&quot;&gt;cSpell plugin for VSCode&lt;/a&gt; that can be used as well. &lt;em&gt;&lt;a href=&quot;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/.github/.cSpellWords.txt&quot;&gt;.cSpellWords.txt&lt;/a&gt;&lt;/em&gt; contains words that are not traditionally found in an English dictionary. It is used by the spellchecker to verify the various jargon, variable names, and other odd words used in the FreeRTOS code base are correct. If your pull request fails to pass the spelling and you believe this is a mistake, then add the word to &lt;em&gt;&lt;a href=&quot;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/.github/.cSpellWords.txt&quot;&gt;.cSpellWords.txt&lt;/a&gt;&lt;/em&gt;. When adding a word please then sort the list, which can be done by running the bash command: &lt;code&gt;sort -u .cSpellWords.txt -o .cSpellWords.txt&lt;/code&gt; Note that only the FreeRTOS-Kernel Source Files, &lt;a href=&quot;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/include&quot;&gt;include&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/portable/MemMang&quot;&gt;portable/MemMang&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/portable/Common&quot;&gt;portable/Common&lt;/a&gt; files are checked for proper spelling, and formatting at this time.&lt;/p&gt; 
&lt;h2&gt;Third Party Tools&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://raw.githubusercontent.com/FreeRTOS/FreeRTOS-Kernel/main/.github/third_party_tools.md&quot;&gt;this link&lt;/a&gt; for detailed information about third-party tools with FreeRTOS support.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>palera1n/palera1n</title>
      <link>https://github.com/palera1n/palera1n</link>
      <description>&lt;p&gt;Jailbreak for A8 through A11, T2 devices, on iOS/iPadOS/tvOS 15.0, bridgeOS 5.0 and higher.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;palera1n&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/palera1n/palera1n/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/palera1n/palera1n?include_prereleases&quot; alt=&quot;GitHub Release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/palera1n/palera1n/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/palera1n/palera1n/total&quot; alt=&quot;GitHub Downloads (all assets, all releases)&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/palera1n/palera1n/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/palera1n/palera1n?color=%23C96FAD&quot; alt=&quot;GitHub License&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Jailbreak for A8 through A11, T2 devices, on iOS/iPadOS/tvOS 15.0, bridgeOS 5.0 and higher.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/palera1n/palera1n/main/assets/image-1.png&quot; alt=&quot;Screenshot of macOS Terminal.app&quot; /&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;A screenshot of palera1n being used in a Terminal&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Device Support&lt;/h2&gt; 
&lt;!-- Mobile ---&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;iPhone(s)&lt;/th&gt; 
   &lt;th&gt;iPad(s)&lt;/th&gt; 
   &lt;th&gt;iPod(s)&lt;/th&gt; 
   &lt;th&gt;Apple TV(s)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iPhone 6s&lt;/td&gt; 
   &lt;td&gt;iPad mini 4&lt;/td&gt; 
   &lt;td&gt;iPod Touch (7th generation)&lt;/td&gt; 
   &lt;td&gt;Apple TV HD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iPhone 6s Plus&lt;/td&gt; 
   &lt;td&gt;iPad (5th generation)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Apple TV 4K (1st generation)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iPhone SE (2016)&lt;/td&gt; 
   &lt;td&gt;iPad (6th generation)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iPhone 7&lt;/td&gt; 
   &lt;td&gt;iPad (7th generation)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iPhone 7 Plus&lt;/td&gt; 
   &lt;td&gt;iPad Pro (9.7&quot;)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iPhone 8&lt;/td&gt; 
   &lt;td&gt;iPad Pro (12.9&quot;) (1st generation)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iPhone 8 Plus&lt;/td&gt; 
   &lt;td&gt;iPad Pro (10.5&quot;)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iPhone X&lt;/td&gt; 
   &lt;td&gt;iPad Pro (12.9&quot;) (2nd generation)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;iPad Air 2&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note that on &lt;code&gt;A11&lt;/code&gt; (iPhone X, 8, 8 Plus), &lt;strong&gt;you must disable your passcode while in the jailbroken state&lt;/strong&gt; (on iOS 16, you need to &lt;strong&gt;reset your device&lt;/strong&gt; before proceeding with palera1n).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- T2 ---&gt; 
&lt;details&gt; 
 &lt;summary&gt;Apple T2 Device Support (click to expand)&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Apple T2&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 iMac20,1&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 iMac20,2&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 MacBookAir8,1&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 MacBookAir8,2&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 MacBookAir9,1&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 MacBookPro15,1&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 MacBookPro15,2&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 MacBookPro15,3&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 MacBookPro15,4&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 MacBookPro16,1&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 MacBookPro16,2&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 MacBookPro16,3&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 MacBookPro16,4&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 iMacPro1,1&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 Macmini8,1&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Apple T2 MacPro7,1&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;iBridge2,11 (Unknown Mac)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;iBridge2,13 (Unknown Mac)&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h2&gt;Computer Requirements&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;USB-A&lt;/strong&gt; cables are recommended to use, USB-C to may have issues with palera1n and getting into DFU mode.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Due to USB-C cables having different accessory IDs, your device may not be able to be recognized when using USB-C due to not being able to assert to its USB voltage pin.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Linux or macOS computer&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;AMD CPUs (not AMD Mobile) have an issue where it causes them to have a very low success rate with checkm8 exploit. It is not recommended that you use them with palera1n.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;USB-C port on Apple Silicon Macs &lt;em&gt;may&lt;/em&gt; require manual unplugging and replugging of the lightning cable after checkm8 exploit. This problem may be solved by connecting via USB hub, though extensions can vary.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Usage: palera1n [-DEhpvVdsSLRnPI] [-e boot arguments] [-k Pongo image] [-o overlay file] [-r ramdisk file] [-K KPF file] [-i checkra1n file]

	--version				Print version
	--force-revert				Remove jailbreak
	-d, --demote				Demote
	-D, --dfuhelper				Exit after entering DFU
	-e, --boot-args &amp;lt;boot arguments&amp;gt;	XNU boot arguments
	-E, --enter-recovery			Enter recovery mode
	-h, --help				Show this help
	-i, --override-checkra1n &amp;lt;file&amp;gt;		Override checkra1n
	-k, --override-pongo &amp;lt;file&amp;gt;		Override Pongo image
	-K, --override-kpf &amp;lt;file&amp;gt;		Override kernel patchfinder
	-L, --jbinit-log-to-file		Make jbinit log to /cores/jbinit.log (can be read from sandbox while jailbroken)
	-n, --exit-recovery			Exit recovery mode
	-I, --device-info			Print info about the connected device
	-o, --override-overlay &amp;lt;file&amp;gt;		Override overlay
	-p, --pongo-shell			Boots to PongoOS shell
	-P, --pongo-full			Boots to a PongoOS shell with default images already uploaded
	-r, --override-ramdisk &amp;lt;file&amp;gt;		Override ramdisk
	-R, --reboot-device			Reboot connected device in normal mode
	-s, --safe-mode				Enter safe mode
	-S, --no-colors				Disable colors on the command line
	-v, --debug-logging			Enable debug logging
		  This option can be repeated for extra verbosity.
	-V, --verbose-boot			Verbose boot

Environmental variables:
	TMPDIR		temporary diretory (path the built-in checkra1n will be extracted to)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://palera.in&quot;&gt;https://palera.in&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimers&lt;/h2&gt; 
&lt;p&gt;We are &lt;strong&gt;NOT&lt;/strong&gt; responsible for any data loss, or the result of a device being bricked. When using palera1n, the user should accept responsibility if anything happens to their device during the process.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If your device is stuck in recovery, please run futurerestore &lt;code&gt;--exit-recovery&lt;/code&gt;, or use &lt;code&gt;irecovery -n&lt;/code&gt;, or &lt;code&gt;palera1n -n&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If you&#39;re unable to get out of recovery via these methods please restore with iTunes or Finder.&lt;/li&gt; 
 &lt;li&gt;palera1n &lt;strong&gt;will not work&lt;/strong&gt; in VirtualBox, VMware or any virtual machine that doesn&#39;t support PCI passthrough.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;Make sure you&#39;re following the guides provided &lt;a href=&quot;https://palera.in&quot;&gt;here&lt;/a&gt;, also when asking for support make sure you provide full details on your device, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;iPhone/iPad/iPod/Apple TV&lt;/li&gt; 
 &lt;li&gt;iOS Version&lt;/li&gt; 
 &lt;li&gt;Passcode enabled?&lt;/li&gt; 
 &lt;li&gt;Verbose from palera1n (specifying &lt;code&gt;-Vv&lt;/code&gt; within palera1n)&lt;/li&gt; 
 &lt;li&gt;Panic logs, if panicked then send latest &lt;code&gt;panic-full&lt;/code&gt; log from your device.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Create an issue here: &lt;a href=&quot;https://github.com/palera1n/palera1n/issues/new/choose&quot;&gt;https://github.com/palera1n/palera1n/issues/new/choose&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://palera.in/&quot;&gt;All credits for palera1n can be found here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If proper credit isn&#39;t shown please message us or create an issue.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coolsnowwolf/lede</title>
      <link>https://github.com/coolsnowwolf/lede</link>
      <description>&lt;p&gt;Lean&#39;s LEDE source&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;欢迎来到 Lean 的 LEDE 源码仓库&lt;/h1&gt; 
&lt;p&gt;为国产龙芯 LOONGSON SoC loongarch64 / 飞腾 Phytium 腾锐 D2000 系列架构添加支持&lt;/p&gt; 
&lt;p&gt;I18N: &lt;a href=&quot;https://raw.githubusercontent.com/coolsnowwolf/lede/master/README_EN.md&quot;&gt;English&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/coolsnowwolf/lede/master/README.md&quot;&gt;简体中文&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/coolsnowwolf/lede/master/README_JA.md&quot;&gt;日本語&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;官方讨论群&lt;/h2&gt; 
&lt;p&gt;如有技术问题需要讨论或者交流，欢迎加入以下群：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;QQ 讨论群：Op 固件技术研究群，号码 891659613，加群链接：&lt;a href=&quot;https://qm.qq.com/q/IMa6Yf2SgC&quot; title=&quot;Op固件技术研究群&quot;&gt;点击加入&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;TG 讨论群：OP 编译官方大群，加群链接：&lt;a href=&quot;https://t.me/JhKgAA6Hx1&quot; title=&quot;OP 编译官方大群&quot;&gt;点击加入&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;软路由 ArmSoM Sige 系列介绍&lt;/h2&gt; 
&lt;p&gt;ArmSoM-Sige 系列：软路由、单板计算机、小型服务器与智能家居的全能之选。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://shop518100695.taobao.com/&quot;&gt;商品介绍页面 - ArmSom 品牌店&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;购买链接：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://item.taobao.com/item.htm?id=721197662185&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/coolsnowwolf/lede/master/doc/sige-zh.jpg&quot; alt=&quot;sige1-zh&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;新一代 OpenWrt WIFI7 硬路由 CW Q3600 系列介绍&lt;/h2&gt; 
&lt;p&gt;畅网Wi-Fi7 ，如7而至（2.5G网口），双系统自由切换&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.changwang.cn/products.html?typeid=149&quot;&gt;商品介绍页面 - 畅网 品牌店&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;购买链接：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.changwang.cn/product.html?id=29&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/coolsnowwolf/lede/master/doc/cw-zh.jpg&quot; alt=&quot;cw-zh&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;注意&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;不要用 root 用户进行编译&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;国内用户编译前最好准备好梯子&lt;/li&gt; 
 &lt;li&gt;默认登陆IP 192.168.1.1 密码 password&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;编译命令&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;首先装好 Linux 系统，推荐 Debian 或 Ubuntu LTS&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;安装编译依赖&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt update -y
sudo apt full-upgrade -y
sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext \
genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev \
libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev \
libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf \
python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion \
swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;下载源代码，更新 feeds 并选择配置&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/coolsnowwolf/lede
cd lede
./scripts/feeds update -a
./scripts/feeds install -a
make menuconfig
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;下载 dl 库，编译固件 （-j 后面是线程数，第一次编译推荐用单线程）&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;make download -j8
make V=s -j1
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;本套代码保证肯定可以编译成功。里面包括了 R24 所有源代码，包括 IPK 的。&lt;/p&gt; 
&lt;p&gt;你可以自由使用，但源码编译二次发布请注明我的 GitHub 仓库链接。谢谢合作！&lt;/p&gt; 
&lt;p&gt;二次编译：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd lede
git pull
./scripts/feeds update -a
./scripts/feeds install -a
make defconfig
make download -j8
make V=s -j$(nproc)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;如果需要重新配置：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;rm -rf .config
make menuconfig
make V=s -j$(nproc)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;编译完成后输出路径：bin/targets&lt;/p&gt; 
&lt;h3&gt;使用 WSL/WSL2 进行编译&lt;/h3&gt; 
&lt;p&gt;由于 WSL 的 PATH 中包含带有空格的 Windows 路径，有可能会导致编译失败，请在 &lt;code&gt;make&lt;/code&gt; 前面加上：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;由于默认情况下，装载到 WSL 发行版的 NTFS 格式的驱动器将不区分大小写，因此大概率在 WSL/WSL2 的编译检查中会返回以下错误：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;Build dependency: OpenWrt can only be built on a case-sensitive filesystem
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;一个比较简洁的解决方法是，在 &lt;code&gt;git clone&lt;/code&gt; 前先创建 Repository 目录，并为其启用大小写敏感：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;# 以管理员身份打开终端
PS &amp;gt; fsutil.exe file setCaseSensitiveInfo &amp;lt;your_local_lede_path&amp;gt; enable
# 将本项目 git clone 到开启了大小写敏感的目录 &amp;lt;your_local_lede_path&amp;gt; 中
PS &amp;gt; git clone https://github.com/coolsnowwolf/lede &amp;lt;your_local_lede_path&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;对已经 &lt;code&gt;git clone&lt;/code&gt; 完成的项目目录执行 &lt;code&gt;fsutil.exe&lt;/code&gt; 命令无法生效，大小写敏感只对新增的文件变更有效。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;macOS 原生系统进行编译&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;在 AppStore 中安装 Xcode&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;安装 Homebrew：&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 Homebrew 安装工具链、依赖与基础软件包：&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew unlink awk
brew install coreutils diffutils findutils gawk gnu-getopt gnu-tar grep make ncurses pkg-config wget quilt xz
brew install gcc@11
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;然后输入以下命令，添加到系统环境变量中：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;intel 芯片的 mac&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;echo &#39;export PATH=&quot;/usr/local/opt/coreutils/libexec/gnubin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&quot;/usr/local/opt/findutils/libexec/gnubin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&quot;/usr/local/opt/gnu-getopt/bin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&quot;/usr/local/opt/gnu-tar/libexec/gnubin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&quot;/usr/local/opt/grep/libexec/gnubin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&quot;/usr/local/opt/gnu-sed/libexec/gnubin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&quot;/usr/local/opt/make/libexec/gnubin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;apple 芯片的 mac&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class=&quot;language-zsh&quot;&gt;echo &#39;export PATH=&quot;/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&quot;/opt/homebrew/opt/findutils/libexec/gnubin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&quot;/opt/homebrew/opt/gnu-getopt/bin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&quot;/opt/homebrew/opt/gnu-tar/libexec/gnubin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&quot;/opt/homebrew/opt/grep/libexec/gnubin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&quot;/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&quot;/opt/homebrew/opt/make/libexec/gnubin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;重新加载一下 shell 启动文件 &lt;code&gt;source ~/.bashrc&lt;/code&gt;，然后输入 &lt;code&gt;bash&lt;/code&gt; 进入 bash shell，就可以和 Linux 一样正常编译了&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;特别提示&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;源代码中绝不含任何后门和可以监控或者劫持你的 HTTPS 的闭源软件， SSL 安全是互联网最后的壁垒，安全干净才是固件应该做到的。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;想学习 OpenWrt 开发，但是摸不着门道？自学没毅力？基础太差？怕太难学不会？跟着佐大学 OpenWrt 开发入门培训班助你能学有所成 报名地址：&lt;a href=&quot;http://forgotfun.org/2018/04/openwrt-training-2018.html&quot; title=&quot;报名&quot;&gt;点击报名&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;QCA IPQ60xx 开源仓库地址：&lt;a href=&quot;https://github.com/coolsnowwolf/openwrt-gl-ax1800&quot;&gt;https://github.com/coolsnowwolf/openwrt-gl-ax1800&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;存档版本仓库地址：&lt;a href=&quot;https://github.com/coolsnowwolf/openwrt&quot;&gt;https://github.com/coolsnowwolf/openwrt&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;捐贈&lt;/h2&gt; 
&lt;p&gt;如果你觉得此项目对你有帮助，可以捐助我们，以鼓励项目能持续发展，更加完善&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/coolsnowwolf/lede/master/doc/star.png&quot; alt=&quot;star&quot; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nginx/nginx</title>
      <link>https://github.com/nginx/nginx</link>
      <description>&lt;p&gt;The official NGINX Open Source repository.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/9335b488-ffcc-4157-8364-2370a0b70ad0&quot; /&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/user-attachments/assets/3a7eeb08-1133-47f5-859c-fad4f5a6a013&quot; /&gt; 
 &lt;img alt=&quot;NGINX Banner&quot; /&gt; 
&lt;/picture&gt; 
&lt;p&gt;NGINX (pronounced &quot;engine x&quot; or &quot;en-jin-eks&quot;) is the world&#39;s most popular Web Server, high performance Load Balancer, Reverse Proxy, API Gateway and Content Cache.&lt;/p&gt; 
&lt;p&gt;NGINX is free and open source software, distributed under the terms of a simplified &lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/LICENSE&quot;&gt;2-clause BSD-like license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Enterprise distributions, commercial support and training are available from &lt;a href=&quot;https://www.f5.com/products/nginx&quot;&gt;F5, Inc&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The goal of this README is to provide a basic, structured introduction to NGINX for novice users. Please refer to the &lt;a href=&quot;https://nginx.org/en/docs/&quot;&gt;full NGINX documentation&lt;/a&gt; for detailed information on &lt;a href=&quot;https://nginx.org/en/docs/install.html&quot;&gt;installing&lt;/a&gt;, &lt;a href=&quot;https://nginx.org/en/docs/configure.html&quot;&gt;building&lt;/a&gt;, &lt;a href=&quot;https://nginx.org/en/docs/dirindex.html&quot;&gt;configuring&lt;/a&gt;, &lt;a href=&quot;https://nginx.org/en/docs/debugging_log.html&quot;&gt;debugging&lt;/a&gt;, and more. These documentation pages also contain a more detailed &lt;a href=&quot;https://nginx.org/en/docs/beginners_guide.html&quot;&gt;Beginners Guide&lt;/a&gt;, How-Tos, &lt;a href=&quot;https://nginx.org/en/docs/dev/development_guide.html&quot;&gt;Development guide&lt;/a&gt;, and a complete module and &lt;a href=&quot;https://nginx.org/en/docs/dirindex.html&quot;&gt;directive reference&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Table of contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#how-it-works&quot;&gt;How it works&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#modules&quot;&gt;Modules&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#configurations&quot;&gt;Configurations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#runtime&quot;&gt;Runtime&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#downloading-and-installing&quot;&gt;Downloading and installing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#stable-and-mainline-binaries&quot;&gt;Stable and Mainline binaries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#linux-binary-installation-process&quot;&gt;Linux binary installation process&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#freebsd-installation-process&quot;&gt;FreeBSD installation process&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#windows-executables&quot;&gt;Windows executables&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#dynamic-modules&quot;&gt;Dynamic modules&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#getting-started-with-nginx&quot;&gt;Getting started with NGINX&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#installing-ssl-certificates-and-enabling-tls-encryption&quot;&gt;Installing SSL certificates and enabling TLS encryption&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#load-balancing&quot;&gt;Load Balancing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#rate-limiting&quot;&gt;Rate limiting&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#content-caching&quot;&gt;Content caching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#building-from-source&quot;&gt;Building from source&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#installing-dependencies&quot;&gt;Installing dependencies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#cloning-the-nginx-github-repository&quot;&gt;Cloning the NGINX GitHub repository&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#configuring-the-build&quot;&gt;Configuring the build&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#compiling&quot;&gt;Compiling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#location-of-binary-and-installation&quot;&gt;Location of binary and installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#running-and-testing-the-installed-binary&quot;&gt;Running and testing the installed binary&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#asking-questions-and-reporting-issues&quot;&gt;Asking questions and reporting issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#contributing-code&quot;&gt;Contributing code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#additional-help-and-resources&quot;&gt;Additional help and resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#changelog&quot;&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;How it works&lt;/h1&gt; 
&lt;p&gt;NGINX is installed software with binary packages available for all major operating systems and Linux distributions. See &lt;a href=&quot;https://nginx.org/en/#tested_os_and_platforms&quot;&gt;Tested OS and Platforms&lt;/a&gt; for a full list of compatible systems.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] While nearly all popular Linux-based operating systems are distributed with a community version of nginx, we highly advise installation and usage of official &lt;a href=&quot;https://nginx.org/en/linux_packages.html&quot;&gt;packages&lt;/a&gt; or sources from this repository. Doing so ensures that you&#39;re using the most recent release or source code, including the latest feature-set, fixes and security patches.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;NGINX is comprised of individual modules, each extending core functionality by providing additional, configurable features. See &quot;Modules reference&quot; at the bottom of &lt;a href=&quot;https://nginx.org/en/docs/&quot;&gt;nginx documentation&lt;/a&gt; for a complete list of official modules.&lt;/p&gt; 
&lt;p&gt;NGINX modules can be built and distributed as static or dynamic modules. Static modules are defined at build-time, compiled, and distributed in the resulting binaries. See &lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#dynamic-modules&quot;&gt;Dynamic Modules&lt;/a&gt; for more information on how they work, as well as, how to obtain, install, and configure them.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] You can issue the following command to see which static modules your NGINX binaries were built with:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;nginx -V
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#configuring-the-build&quot;&gt;Configuring the build&lt;/a&gt; for information on how to include specific Static modules into your nginx build.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Configurations&lt;/h2&gt; 
&lt;p&gt;NGINX is highly flexible and configurable. Provisioning the software is achieved via text-based config file(s) accepting parameters called &quot;&lt;a href=&quot;https://nginx.org/en/docs/dirindex.html&quot;&gt;Directives&lt;/a&gt;&quot;. See &lt;a href=&quot;https://nginx.org/en/docs/beginners_guide.html#conf_structure&quot;&gt;Configuration File&#39;s Structure&lt;/a&gt; for a comprehensive description of how NGINX configuration files work.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] The set of directives available to your distribution of NGINX is dependent on which &lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#modules&quot;&gt;modules&lt;/a&gt; have been made available to it.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Runtime&lt;/h2&gt; 
&lt;p&gt;Rather than running in a single, monolithic process, NGINX is architected to scale beyond Operating System process limitations by operating as a collection of processes. They include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &quot;master&quot; process that maintains worker processes, as well as, reads and evaluates configuration files.&lt;/li&gt; 
 &lt;li&gt;One or more &quot;worker&quot; processes that process data (eg. HTTP requests).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The number of &lt;a href=&quot;https://nginx.org/en/docs/ngx_core_module.html#worker_processes&quot;&gt;worker processes&lt;/a&gt; is defined in the configuration file and may be fixed for a given configuration or automatically adjusted to the number of available CPU cores. In most cases, the latter option optimally balances load across available system resources, as NGINX is designed to efficiently distribute work across all worker processes.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Processes synchronize data through shared memory. For this reason, many NGINX directives require the allocation of shared memory zones. As an example, when configuring &lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_limit_req_module.html#limit_req&quot;&gt;rate limiting&lt;/a&gt;, connecting clients may need to be tracked in a &lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_limit_req_module.html#limit_req_zone&quot;&gt;common memory zone&lt;/a&gt; so all worker processes can know how many times a particular client has accessed the server in a span of time.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Downloading and installing&lt;/h1&gt; 
&lt;p&gt;Follow these steps to download and install precompiled NGINX binaries. You may also choose to &lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/#building-from-source&quot;&gt;build NGINX locally from source code&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Stable and Mainline binaries&lt;/h2&gt; 
&lt;p&gt;NGINX binaries are built and distributed in two versions: stable and mainline. Stable binaries are built from stable branches and only contain critical fixes backported from the mainline version. Mainline binaries are built from the &lt;a href=&quot;https://github.com/nginx/nginx/tree/master&quot;&gt;master branch&lt;/a&gt; and contain the latest features and bugfixes. You&#39;ll need to &lt;a href=&quot;https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/#choosing-between-a-stable-or-a-mainline-version&quot;&gt;decide which is appropriate for your purposes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Linux binary installation process&lt;/h2&gt; 
&lt;p&gt;The NGINX binary installation process takes advantage of package managers native to specific Linux distributions. For this reason, first-time installations involve adding the official NGINX package repository to your system&#39;s package manager. Follow &lt;a href=&quot;https://nginx.org/en/linux_packages.html&quot;&gt;these steps&lt;/a&gt; to download, verify, and install NGINX binaries using the package manager appropriate for your Linux distribution.&lt;/p&gt; 
&lt;h3&gt;Upgrades&lt;/h3&gt; 
&lt;p&gt;Future upgrades to the latest version can be managed using the same package manager without the need to manually download and verify binaries.&lt;/p&gt; 
&lt;h2&gt;FreeBSD installation process&lt;/h2&gt; 
&lt;p&gt;For more information on installing NGINX on FreeBSD system, visit &lt;a href=&quot;https://nginx.org/en/docs/install.html&quot;&gt;https://nginx.org/en/docs/install.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Windows executables&lt;/h2&gt; 
&lt;p&gt;Windows executables for mainline and stable releases can be found on the main &lt;a href=&quot;https://nginx.org/en/download.html&quot;&gt;NGINX download page&lt;/a&gt;. Note that the current implementation of NGINX for Windows is at the Proof-of-Concept stage and should only be used for development and testing purposes. For additional information, please see &lt;a href=&quot;https://nginx.org/en/docs/windows.html&quot;&gt;nginx for Windows&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Dynamic modules&lt;/h2&gt; 
&lt;p&gt;NGINX version 1.9.11 added support for &lt;a href=&quot;https://nginx.org/en/docs/ngx_core_module.html#load_module&quot;&gt;Dynamic Modules&lt;/a&gt;. Unlike Static modules, dynamically built modules can be downloaded, installed, and configured after the core NGINX binaries have been built. &lt;a href=&quot;https://nginx.org/en/linux_packages.html#dynmodules&quot;&gt;Official dynamic module binaries&lt;/a&gt; are available from the same package repository as the core NGINX binaries described in previous steps.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] &lt;a href=&quot;https://github.com/nginx/njs&quot;&gt;NGINX JavaScript (njs)&lt;/a&gt;, is a popular NGINX dynamic module that enables the extension of core NGINX functionality using familiar JavaScript syntax.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If desired, dynamic modules can also be built statically into NGINX at compile time.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Getting started with NGINX&lt;/h1&gt; 
&lt;p&gt;For a gentle introduction to NGINX basics, please see our &lt;a href=&quot;https://nginx.org/en/docs/beginners_guide.html&quot;&gt;Beginner’s Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installing SSL certificates and enabling TLS encryption&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://nginx.org/en/docs/http/configuring_https_servers.html&quot;&gt;Configuring HTTPS servers&lt;/a&gt; for a quick guide on how to enable secure traffic to your NGINX installation.&lt;/p&gt; 
&lt;h2&gt;Load Balancing&lt;/h2&gt; 
&lt;p&gt;For a quick start guide on configuring NGINX as a Load Balancer, please see &lt;a href=&quot;https://nginx.org/en/docs/http/load_balancing.html&quot;&gt;Using nginx as HTTP load balancer&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Rate limiting&lt;/h2&gt; 
&lt;p&gt;See our &lt;a href=&quot;https://blog.nginx.org/blog/rate-limiting-nginx&quot;&gt;Rate Limiting with NGINX&lt;/a&gt; blog post for an overview of core concepts for provisioning NGINX as an API Gateway.&lt;/p&gt; 
&lt;h2&gt;Content caching&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://blog.nginx.org/blog/nginx-caching-guide&quot;&gt;A Guide to Caching with NGINX and NGINX Plus&lt;/a&gt; blog post for an overview of how to use NGINX as a content cache (e.g. edge server of a content delivery network).&lt;/p&gt; 
&lt;h1&gt;Building from source&lt;/h1&gt; 
&lt;p&gt;The following steps can be used to build NGINX from source code available in this repository.&lt;/p&gt; 
&lt;h2&gt;Installing dependencies&lt;/h2&gt; 
&lt;p&gt;Most Linux distributions will require several dependencies to be installed in order to build NGINX. The following instructions are specific to the &lt;code&gt;apt&lt;/code&gt; package manager, widely available on most Ubuntu/Debian distributions and their derivatives.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] It is always a good idea to update your package repository lists prior to installing new packages.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt update
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Installing compiler and make utility&lt;/h3&gt; 
&lt;p&gt;Use the following command to install the GNU C compiler and Make utility.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt install gcc make
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Installing dependency libraries&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt install libpcre3-dev zlib1g-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] This is the minimal set of dependency libraries needed to build NGINX with rewriting and gzip capabilities. Other dependencies may be required if you choose to build NGINX with additional modules. Monitor the output of the &lt;code&gt;configure&lt;/code&gt; command discussed in the following sections for information on which modules may be missing. For example, if you plan to use SSL certificates to encrypt traffic with TLS, you&#39;ll need to install the OpenSSL library. To do so, issue the following command.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt install libssl-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Cloning the NGINX GitHub repository&lt;/h2&gt; 
&lt;p&gt;Using your preferred method, clone the NGINX repository into your development directory. See &lt;a href=&quot;https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository&quot;&gt;Cloning a GitHub Repository&lt;/a&gt; for additional help.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/nginx/nginx.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuring the build&lt;/h2&gt; 
&lt;p&gt;Prior to building NGINX, you must run the &lt;code&gt;configure&lt;/code&gt; script with &lt;a href=&quot;https://nginx.org/en/docs/configure.html&quot;&gt;appropriate flags&lt;/a&gt;. This will generate a Makefile in your NGINX source root directory that can then be used to compile NGINX with &lt;a href=&quot;https://nginx.org/en/docs/configure.html&quot;&gt;options specified during configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;From the NGINX source code repository&#39;s root directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;auto/configure
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Configuring the build without any flags will compile NGINX with the default set of options. Please refer to &lt;a href=&quot;https://nginx.org/en/docs/configure.html&quot;&gt;https://nginx.org/en/docs/configure.html&lt;/a&gt; for a full list of available build configuration options.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Compiling&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;configure&lt;/code&gt; script will generate a &lt;code&gt;Makefile&lt;/code&gt; in the NGINX source root directory upon successful execution. To compile NGINX into a binary, issue the following command from that same directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;make
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Location of binary and installation&lt;/h2&gt; 
&lt;p&gt;After successful compilation, a binary will be generated at &lt;code&gt;&amp;lt;NGINX_SRC_ROOT_DIR&amp;gt;/objs/nginx&lt;/code&gt;. To install this binary, issue the following command from the source root directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The binary will be installed into the &lt;code&gt;/usr/local/nginx/&lt;/code&gt; directory.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Running and testing the installed binary&lt;/h2&gt; 
&lt;p&gt;To run the installed binary, issue the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo /usr/local/nginx/sbin/nginx
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may test NGINX operation using &lt;code&gt;curl&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl localhost
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The output of which should start with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;Welcome to nginx!&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Asking questions and reporting issues&lt;/h1&gt; 
&lt;p&gt;We encourage you to engage with us.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nginx/nginx/discussions&quot;&gt;NGINX GitHub Discussions&lt;/a&gt;, is the go-to place to start asking questions and sharing your thoughts.&lt;/li&gt; 
 &lt;li&gt;Our &lt;a href=&quot;https://github.com/nginx/nginx/issues&quot;&gt;GitHub Issues&lt;/a&gt; page offers space to submit and discuss specific issues, report bugs, and suggest enhancements.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contributing code&lt;/h1&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/CONTRIBUTING.md&quot;&gt;Contributing&lt;/a&gt; guide for information on how to contribute code.&lt;/p&gt; 
&lt;h1&gt;Additional help and resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;See the &lt;a href=&quot;https://blog.nginx.org/&quot;&gt;NGINX Community Blog&lt;/a&gt; for more tips, tricks and HOW-TOs related to NGINX and related projects.&lt;/li&gt; 
 &lt;li&gt;Access &lt;a href=&quot;https://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;, your go-to source for all documentation, information and software related to the NGINX suite of projects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Changelog&lt;/h1&gt; 
&lt;p&gt;See our &lt;a href=&quot;https://nginx.org/en/CHANGES&quot;&gt;changelog&lt;/a&gt; to keep track of updates.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nginx/nginx/master/LICENSE&quot;&gt;2-clause BSD-like license&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Additional documentation available at: &lt;a href=&quot;https://nginx.org/en/docs&quot;&gt;https://nginx.org/en/docs&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>flipperdevices/flipperzero-firmware</title>
      <link>https://github.com/flipperdevices/flipperzero-firmware</link>
      <description>&lt;p&gt;Flipper Zero firmware source code&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;/.github/assets/dark_theme_banner.png&quot; /&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;/.github/assets/light_theme_banner.png&quot; /&gt; 
 &lt;img alt=&quot;A pixel art of a Dophin with text: Flipper Zero Official Repo&quot; src=&quot;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/.github/assets/light_theme_banner.png&quot; /&gt; 
&lt;/picture&gt; 
&lt;h1&gt;Flipper Zero Firmware&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flipperzero.one&quot;&gt;Flipper Zero Official Website&lt;/a&gt;. A simple way to explain to your friends what Flipper Zero can do.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flipperzero.one/update&quot;&gt;Flipper Zero Firmware Update&lt;/a&gt;. Improvements for your dolphin: latest firmware releases, upgrade tools for PC and mobile devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.flipper.net&quot;&gt;User Documentation&lt;/a&gt;. Learn more about your dolphin: specs, usage guides, and anything you want to ask.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.flipper.net/flipperzero/doxygen&quot;&gt;Developer Documentation&lt;/a&gt;. Dive into the Flipper Zero Firmware source code: build system, firmware structure, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Our main goal is to build a healthy and sustainable community around Flipper, so we&#39;re open to any new ideas and contributions. We also have some rules and taboos here, so please read this page and our &lt;a href=&quot;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; carefully.&lt;/p&gt; 
&lt;h2&gt;I need help&lt;/h2&gt; 
&lt;p&gt;The best place to search for answers is our &lt;a href=&quot;https://docs.flipper.net&quot;&gt;User Documentation&lt;/a&gt;. If you can&#39;t find the answer there, check our &lt;a href=&quot;https://flipp.dev/discord&quot;&gt;Discord Server&lt;/a&gt; or our &lt;a href=&quot;https://forum.flipperzero.one/&quot;&gt;Forum&lt;/a&gt;. If you want to contribute to the firmware development or modify it for your own needs, you can also check our &lt;a href=&quot;https://developer.flipper.net/flipperzero/doxygen&quot;&gt;Developer Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;I want to report an issue&lt;/h2&gt; 
&lt;p&gt;If you&#39;ve found an issue and want to report it, please check our &lt;a href=&quot;https://github.com/flipperdevices/flipperzero-firmware/issues&quot;&gt;Issues&lt;/a&gt; page. Make sure the description contains information about the firmware version you&#39;re using, your platform, and a clear explanation of the steps to reproduce the issue.&lt;/p&gt; 
&lt;h2&gt;I want to contribute code&lt;/h2&gt; 
&lt;p&gt;Before opening a PR, please confirm that your changes must be contained in the firmware. Many ideas can easily be implemented as external applications and published in the &lt;a href=&quot;https://github.com/flipperdevices/flipper-application-catalog&quot;&gt;Flipper Application Catalog&lt;/a&gt;. If you are unsure, reach out to us on the &lt;a href=&quot;https://flipp.dev/discord&quot;&gt;Discord Server&lt;/a&gt; or the &lt;a href=&quot;https://github.com/flipperdevices/flipperzero-firmware/issues&quot;&gt;Issues&lt;/a&gt; page, and we&#39;ll help you find the right place for your code.&lt;/p&gt; 
&lt;p&gt;Also, please read our &lt;a href=&quot;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; and our &lt;a href=&quot;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/CODING_STYLE.md&quot;&gt;Coding Style&lt;/a&gt;, and make sure your code is compatible with our &lt;a href=&quot;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/LICENSE&quot;&gt;Project License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, open a &lt;a href=&quot;https://github.com/flipperdevices/flipperzero-firmware/pulls&quot;&gt;Pull Request&lt;/a&gt; and make sure that CI/CD statuses are all green.&lt;/p&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;p&gt;Flipper Zero Firmware is written in C, with some bits and pieces written in C++ and armv7m assembly languages. An intermediate level of C knowledge is recommended for comfortable programming. C, C++, and armv7m assembly languages are supported for Flipper applications.&lt;/p&gt; 
&lt;h1&gt;Firmware RoadMap&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://miro.com/app/board/uXjVO_3D6xU=/&quot;&gt;Firmware RoadMap Miro Board&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;Supported development platforms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 10+ with PowerShell and Git (x86_64)&lt;/li&gt; 
 &lt;li&gt;macOS 12+ with Command Line tools (x86_64, arm64)&lt;/li&gt; 
 &lt;li&gt;Ubuntu 20.04+ with build-essential and Git (x86_64)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported in-circuit debuggers (optional but highly recommended):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://shop.flipperzero.one/products/wifi-devboard&quot;&gt;Flipper Zero Wi-Fi Development Board&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;CMSIS-DAP compatible: Raspberry Pi Debug Probe and etc...&lt;/li&gt; 
 &lt;li&gt;ST-Link (v2, v3, v3mods)&lt;/li&gt; 
 &lt;li&gt;J-Link&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Flipper Build System will take care of all the other dependencies.&lt;/p&gt; 
&lt;h2&gt;Cloning source code&lt;/h2&gt; 
&lt;p&gt;Make sure you have enough space and clone the source code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;git clone --recursive https://github.com/flipperdevices/flipperzero-firmware.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;Build firmware using Flipper Build Tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;./fbt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Flashing firmware using an in-circuit debugger&lt;/h2&gt; 
&lt;p&gt;Connect your in-circuit debugger to your Flipper and flash firmware using Flipper Build Tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;./fbt flash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Flashing firmware using USB&lt;/h2&gt; 
&lt;p&gt;Make sure your Flipper is on, and your firmware is functioning. Connect your Flipper with a USB cable and flash firmware using Flipper Build Tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;./fbt flash_usb
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/fbt.md&quot;&gt;Flipper Build Tool&lt;/a&gt; - building, flashing, and debugging Flipper software&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/AppsOnSDCard.md&quot;&gt;Applications&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/AppManifests.md&quot;&gt;Application Manifest&lt;/a&gt; - developing, building, deploying, and debugging Flipper applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/KeyCombo.md&quot;&gt;Hardware combos and Un-bricking&lt;/a&gt; - recovering your Flipper from the most nasty situations&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/file_formats&quot;&gt;Flipper File Formats&lt;/a&gt; - everything about how Flipper stores your data and how you can work with it&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/flipperdevices/flipperzero-firmware/dev/documentation/UniversalRemotes.md&quot;&gt;Universal Remotes&lt;/a&gt; - contributing your infrared remote to the universal remote database&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://miro.com/app/board/uXjVO_3D6xU=/&quot;&gt;Firmware Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;And much more in the &lt;a href=&quot;https://developer.flipper.net/flipperzero/doxygen&quot;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Project structure&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;applications&lt;/code&gt; - Applications and services used in firmware&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;applications_users&lt;/code&gt; - Place for your additional applications and services&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;assets&lt;/code&gt; - Assets used by applications and services&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;documentation&lt;/code&gt; - Documentation generation system configs and input files&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;furi&lt;/code&gt; - Furi Core: OS-level primitives and helpers&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lib&lt;/code&gt; - Our and 3rd party libraries, drivers, tools and etc...&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;site_scons&lt;/code&gt; - Build system configuration and modules&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;scripts&lt;/code&gt; - Supplementary scripts and various python libraries&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;targets&lt;/code&gt; - Firmware targets: platform specific code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Also, see &lt;code&gt;ReadMe.md&lt;/code&gt; files inside those directories for further details.&lt;/p&gt; 
&lt;h1&gt;Links&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discord: &lt;a href=&quot;https://flipp.dev/discord&quot;&gt;flipp.dev/discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Website: &lt;a href=&quot;https://flipperzero.one&quot;&gt;flipperzero.one&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Forum: &lt;a href=&quot;https://forum.flipperzero.one/&quot;&gt;forum.flipperzero.one&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Kickstarter: &lt;a href=&quot;https://www.kickstarter.com/projects/flipper-devices/flipper-zero-tamagochi-for-hackers&quot;&gt;kickstarter.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;SAST Tools&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://pvs-studio.com/pvs-studio/?utm_source=website&amp;amp;utm_medium=github&amp;amp;utm_campaign=open_source&quot;&gt;PVS-Studio&lt;/a&gt; - static analyzer for C, C++, C#, and Java code.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>obsproject/obs-studio</title>
      <link>https://github.com/obsproject/obs-studio</link>
      <description>&lt;p&gt;OBS Studio - Free and open source software for live streaming and screen recording&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OBS Studio &lt;a href=&quot;https://obsproject.com&quot;&gt;https://obsproject.com&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;.. image:: &lt;a href=&quot;https://github.com/obsproject/obs-studio/actions/workflows/push.yaml/badge.svg?branch=master&quot;&gt;https://github.com/obsproject/obs-studio/actions/workflows/push.yaml/badge.svg?branch=master&lt;/a&gt; :alt: OBS Studio Build Status - GitHub Actions :target: &lt;a href=&quot;https://github.com/obsproject/obs-studio/actions/workflows/push.yaml?query=branch%3Amaster&quot;&gt;https://github.com/obsproject/obs-studio/actions/workflows/push.yaml?query=branch%3Amaster&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. image:: &lt;a href=&quot;https://badges.crowdin.net/obs-studio/localized.svg&quot;&gt;https://badges.crowdin.net/obs-studio/localized.svg&lt;/a&gt; :alt: OBS Studio Translation Project Progress :target: &lt;a href=&quot;https://crowdin.com/project/obs-studio&quot;&gt;https://crowdin.com/project/obs-studio&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. image:: &lt;a href=&quot;https://img.shields.io/discord/348973006581923840.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&quot;&gt;https://img.shields.io/discord/348973006581923840.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&lt;/a&gt; :alt: OBS Studio Discord Server :target: &lt;a href=&quot;https://obsproject.com/discord&quot;&gt;https://obsproject.com/discord&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is OBS Studio?&lt;/h2&gt; 
&lt;p&gt;OBS Studio is software designed for capturing, compositing, encoding, recording, and streaming video content, efficiently.&lt;/p&gt; 
&lt;p&gt;It&#39;s distributed under the GNU General Public License v2 (or any later version) - see the accompanying COPYING file for more details.&lt;/p&gt; 
&lt;h2&gt;Quick Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Website: &lt;a href=&quot;https://obsproject.com&quot;&gt;https://obsproject.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Help/Documentation/Guides: &lt;a href=&quot;https://github.com/obsproject/obs-studio/wiki&quot;&gt;https://github.com/obsproject/obs-studio/wiki&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Forums: &lt;a href=&quot;https://obsproject.com/forum/&quot;&gt;https://obsproject.com/forum/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build Instructions: &lt;a href=&quot;https://github.com/obsproject/obs-studio/wiki/Install-Instructions&quot;&gt;https://github.com/obsproject/obs-studio/wiki/Install-Instructions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Developer/API Documentation: &lt;a href=&quot;https://obsproject.com/docs&quot;&gt;https://obsproject.com/docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Donating/backing/sponsoring: &lt;a href=&quot;https://obsproject.com/contribute&quot;&gt;https://obsproject.com/contribute&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Bug Tracker: &lt;a href=&quot;https://github.com/obsproject/obs-studio/issues&quot;&gt;https://github.com/obsproject/obs-studio/issues&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you would like to help fund or sponsor the project, you can do so via &lt;code&gt;Patreon &amp;lt;https://www.patreon.com/obsproject&amp;gt;&lt;/code&gt;&lt;em&gt;, &lt;code&gt;OpenCollective &amp;lt;https://opencollective.com/obsproject&amp;gt;&lt;/code&gt;&lt;/em&gt;, or &lt;code&gt;PayPal &amp;lt;https://www.paypal.me/obsproject&amp;gt;&lt;/code&gt;&lt;em&gt;. See our &lt;code&gt;contribute page &amp;lt;https://obsproject.com/contribute&amp;gt;&lt;/code&gt;&lt;/em&gt; for more information.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you wish to contribute code to the project, please make sure to read the coding and commit guidelines: &lt;a href=&quot;https://github.com/obsproject/obs-studio/raw/master/CONTRIBUTING.rst&quot;&gt;https://github.com/obsproject/obs-studio/blob/master/CONTRIBUTING.rst&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Developer/API documentation can be found here: &lt;a href=&quot;https://obsproject.com/docs&quot;&gt;https://obsproject.com/docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you wish to contribute translations, do not submit pull requests. Instead, please use Crowdin. For more information read this page: &lt;a href=&quot;https://obsproject.com/wiki/How-To-Contribute-Translations-For-OBS&quot;&gt;https://obsproject.com/wiki/How-To-Contribute-Translations-For-OBS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Other ways to contribute are by helping people out with support on our forums or in our community chat. Please limit support to topics you fully understand -- bad advice is worse than no advice. When it comes to something that you don&#39;t fully know or understand, please defer to the official help or official channels.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;SAST Tools&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;PVS-Studio &amp;lt;https://pvs-studio.com/pvs-studio/?utm_source=website&amp;amp;utm_medium=github&amp;amp;utm_campaign=open_source&amp;gt;&lt;/code&gt;_ - static analyzer for C, C++, C#, and Java code.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openwrt/openwrt</title>
      <link>https://github.com/openwrt/openwrt</link>
      <description>&lt;p&gt;This repository is a mirror of https://git.openwrt.org/openwrt/openwrt.git It is for reference only and is not active for check-ins. We will continue to accept Pull Requests here. They will be merged via staging trees then into openwrt.git.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openwrt/openwrt/main/include/logo.png&quot; alt=&quot;OpenWrt logo&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;OpenWrt Project is a Linux operating system targeting embedded devices. Instead of trying to create a single, static firmware, OpenWrt provides a fully writable filesystem with package management. This frees you from the application selection and configuration provided by the vendor and allows you to customize the device through the use of packages to suit any application. For developers, OpenWrt is the framework to build an application without having to build a complete firmware around it; for users this means the ability for full customization, to use the device in ways never envisioned.&lt;/p&gt; 
&lt;p&gt;Sunshine!&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;Built firmware images are available for many architectures and come with a package selection to be used as WiFi home router. To quickly find a factory image usable to migrate from a vendor stock firmware to OpenWrt, try the &lt;em&gt;Firmware Selector&lt;/em&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://firmware-selector.openwrt.org/&quot;&gt;OpenWrt Firmware Selector&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If your device is supported, please follow the &lt;strong&gt;Info&lt;/strong&gt; link to see install instructions or consult the support resources listed below.&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;p&gt;An advanced user may require additional or specific package. (Toolchain, SDK, ...) For everything else than simple firmware download, try the wiki download page:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/downloads&quot;&gt;OpenWrt Wiki Download&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;To build your own firmware you need a GNU/Linux, BSD or macOS system (case sensitive filesystem required). Cygwin is unsupported because of the lack of a case sensitive file system.&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;p&gt;You need the following tools to compile OpenWrt, the package names vary between distributions. A complete list with distribution specific packages is found in the &lt;a href=&quot;https://openwrt.org/docs/guide-developer/build-system/install-buildsystem&quot;&gt;Build System Setup&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;binutils bzip2 diff find flex gawk gcc-6+ getopt grep install libc-dev libz-dev
make4.1+ perl python3.7+ rsync subversion unzip which
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Quickstart&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./scripts/feeds update -a&lt;/code&gt; to obtain all the latest package definitions defined in feeds.conf / feeds.conf.default&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./scripts/feeds install -a&lt;/code&gt; to install symlinks for all obtained packages into package/feeds/&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make menuconfig&lt;/code&gt; to select your preferred configuration for the toolchain, target system &amp;amp; firmware packages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make&lt;/code&gt; to build your firmware. This will download all sources, build the cross-compile toolchain and then cross-compile the GNU/Linux kernel &amp;amp; all chosen applications for your target system.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Related Repositories&lt;/h3&gt; 
&lt;p&gt;The main repository uses multiple sub-repositories to manage packages of different categories. All packages are installed via the OpenWrt package manager called &lt;code&gt;opkg&lt;/code&gt;. If you&#39;re looking to develop the web interface or port packages to OpenWrt, please find the fitting repository below.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/openwrt/luci&quot;&gt;LuCI Web Interface&lt;/a&gt;: Modern and modular interface to control the device via a web browser.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/openwrt/packages&quot;&gt;OpenWrt Packages&lt;/a&gt;: Community repository of ported packages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/openwrt/routing&quot;&gt;OpenWrt Routing&lt;/a&gt;: Packages specifically focused on (mesh) routing.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/openwrt/video&quot;&gt;OpenWrt Video&lt;/a&gt;: Packages specifically focused on display servers and clients (Xorg and Wayland).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support Information&lt;/h2&gt; 
&lt;p&gt;For a list of supported devices see the &lt;a href=&quot;https://openwrt.org/supported_devices&quot;&gt;OpenWrt Hardware Database&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/guide-quick-start/start&quot;&gt;Quick Start Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/guide-user/start&quot;&gt;User Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/guide-developer/start&quot;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/techref/start&quot;&gt;Technical Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Support Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forum.openwrt.org&quot;&gt;Forum&lt;/a&gt;: For usage, projects, discussions and hardware advise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webchat.oftc.net/#openwrt&quot;&gt;Support Chat&lt;/a&gt;: Channel &lt;code&gt;#openwrt&lt;/code&gt; on &lt;strong&gt;oftc.net&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developer Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bugs.openwrt.org&quot;&gt;Bug Reports&lt;/a&gt;: Report bugs in OpenWrt&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lists.openwrt.org/mailman/listinfo/openwrt-devel&quot;&gt;Dev Mailing List&lt;/a&gt;: Send patches&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webchat.oftc.net/#openwrt-devel&quot;&gt;Dev Chat&lt;/a&gt;: Channel &lt;code&gt;#openwrt-devel&lt;/code&gt; on &lt;strong&gt;oftc.net&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenWrt is licensed under GPL-2.0&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>netdata/netdata</title>
      <link>https://github.com/netdata/netdata</link>
      <description>&lt;p&gt;The fastest path to AI-powered full stack observability, even for lean teams.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.netdata.cloud#gh-light-mode-only&quot;&gt; &lt;img src=&quot;https://www.netdata.cloud/img/readme-images/netdata_readme_logo_light.png&quot; alt=&quot;Netdata&quot; width=&quot;300&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://www.netdata.cloud#gh-dark-mode-only&quot;&gt; &lt;img src=&quot;https://www.netdata.cloud/img/readme-images/netdata_readme_logo_dark.png&quot; alt=&quot;Netdata&quot; width=&quot;300&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align=&quot;center&quot;&gt;X-Ray Vision for your infrastructure!&lt;/h3&gt; 
&lt;h4 align=&quot;center&quot;&gt;Every Metric, Every Second. No BS.&lt;/h4&gt; 
&lt;br /&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/netdata/netdata/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/netdata/netdata?style=social&quot; alt=&quot;GitHub Stars&quot; /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://app.netdata.cloud/spaces/netdata-demo?utm_campaign=github_readme_demo_badge&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Live%20Demo-green&quot; alt=&quot;Live Demo&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/netdata/netdata/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/netdata/netdata.svg?sanitize=true&quot; alt=&quot;Latest release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/netdata/netdata-nightlies/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/netdata/netdata-nightlies.svg?sanitize=true&quot; alt=&quot;Latest nightly build&quot; /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://community.netdata.cloud&quot;&gt;&lt;img alt=&quot;Discourse topics&quot; src=&quot;https://img.shields.io/discourse/topics?server=https%3A%2F%2Fcommunity.netdata.cloud%2F&amp;amp;logo=discourse&amp;amp;label=discourse%20forum&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/netdata/netdata/discussions&quot;&gt;&lt;img alt=&quot;GitHub Discussions&quot; src=&quot;https://img.shields.io/github/discussions/netdata/netdata?logo=github&amp;amp;label=github%20discussions&quot; /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/2231&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/2231/badge&quot; alt=&quot;CII Best Practices&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://scan.coverity.com/projects/netdata-netdata?tab=overview&quot;&gt;&lt;img alt=&quot;Coverity Scan&quot; src=&quot;https://img.shields.io/coverity/scan/netdata&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://registry.my-netdata.io/#menu_netdata_submenu_registry&quot;&gt;&lt;img src=&quot;https://registry.my-netdata.io/api/v3/badge.svg?chart=netdata.registry_entries&amp;amp;dimensions=persons&amp;amp;label=user%20base&amp;amp;units=M&amp;amp;value_color=blue&amp;amp;precision=2&amp;amp;divide=1000000&amp;amp;options=unaligned&amp;amp;tier=1&amp;amp;v44&quot; alt=&quot;User base&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://registry.my-netdata.io/#menu_netdata_submenu_registry&quot;&gt;&lt;img src=&quot;https://registry.my-netdata.io/api/v3/badge.svg?chart=netdata.registry_entries&amp;amp;dimensions=machines&amp;amp;label=servers%20monitored&amp;amp;units=M&amp;amp;divide=1000000&amp;amp;value_color=orange&amp;amp;precision=2&amp;amp;options=unaligned&amp;amp;tier=1&amp;amp;v44&quot; alt=&quot;Servers monitored&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://registry.my-netdata.io/#menu_netdata_submenu_registry&quot;&gt;&lt;img src=&quot;https://registry.my-netdata.io/api/v3/badge.svg?chart=netdata.registry_sessions&amp;amp;label=sessions%20served&amp;amp;units=M&amp;amp;value_color=yellowgreen&amp;amp;precision=2&amp;amp;divide=1000000&amp;amp;options=unaligned&amp;amp;tier=1&amp;amp;v44&quot; alt=&quot;Sessions served&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/netdata/netdata&quot;&gt;&lt;img src=&quot;https://registry.my-netdata.io/api/v3/badge.svg?chart=dockerhub.pulls_sum&amp;amp;divide=1000000&amp;amp;precision=1&amp;amp;units=M&amp;amp;label=docker+hub+pulls&amp;amp;options=unaligned&amp;amp;tier=1&amp;amp;v44&quot; alt=&quot;Docker Hub pulls&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt;&lt;b&gt;Visit our &lt;a href=&quot;https://www.netdata.cloud&quot;&gt;Home Page&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; 
&lt;hr class=&quot;solid&quot; /&gt; 
&lt;p&gt;MENU: &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/netdata/netdata/master/#who-we-are&quot;&gt;WHO WE ARE&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/netdata/netdata/master/#key-features&quot;&gt;KEY FEATURES&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/netdata/netdata/master/#getting-started&quot;&gt;GETTING STARTED&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/netdata/netdata/master/#how-it-works&quot;&gt;HOW IT WORKS&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/netdata/netdata/master/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/netdata/netdata/master/#book-documentation&quot;&gt;DOCS&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/netdata/netdata/master/#tada-community&quot;&gt;COMMUNITY&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/netdata/netdata/master/#pray-contribute&quot;&gt;CONTRIBUTE&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/netdata/netdata/master/#scroll-license&quot;&gt;LICENSE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] People &lt;strong&gt;get addicted to Netdata.&lt;/strong&gt; Once you use it on your systems, &lt;em&gt;there&#39;s no going back.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Platforms-Linux%20%7C%20macOS%20%7C%20FreeBSD%20%7C%20Windows-blue&quot; alt=&quot;Platforms&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;WHO WE ARE&lt;/h2&gt; 
&lt;p&gt;Netdata is an open-source, real-time infrastructure monitoring platform. Monitor, detect, and act across your entire infrastructure.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Core Advantages:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Instant Insights&lt;/strong&gt; – With Netdata you can access per-second metrics and visualizations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zero Configuration&lt;/strong&gt; – You can deploy immediately without complex setup.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ML-Powered&lt;/strong&gt; – You can detect anomalies, predict issues, and automate analysis.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Efficient&lt;/strong&gt; – You can monitor with minimal resource usage and maximum scalability.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Secure &amp;amp; Distributed&lt;/strong&gt; – You can keep your data local with no central collection needed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With Netdata, you get real-time, per-second updates. Clear &lt;strong&gt;insights at a glance&lt;/strong&gt;, no complexity.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;All heroes have a great origin story. Click to discover ours.&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;In 2013, at the company where Costa Tsaousis was COO, a significant percentage of their cloud-based transactions failed silently, severely impacting business performance.&lt;/p&gt; 
 &lt;p&gt;Costa and his team tried every troubleshooting tool available at the time. None could identify the root cause. As Costa later wrote:&lt;/p&gt; 
 &lt;p&gt;“&lt;em&gt;I couldn’t believe that monitoring systems provide so few metrics and with such low resolution, scale so badly, and cost so much to run.&lt;/em&gt;”&lt;/p&gt; 
 &lt;p&gt;Frustrated, he decided to build his own monitoring tool, starting from scratch.&lt;/p&gt; 
 &lt;p&gt;That decision led to countless late nights and weekends. It also sparked a fundamental shift in how infrastructure monitoring and troubleshooting are approached, both in method and in cost.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Most Energy-Efficient Monitoring Tool&lt;/h3&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.ivanomalavolta.com/files/papers/ICSOC_2023.pdf#gh-dark-mode-only&quot;&gt; &lt;img src=&quot;https://github.com/netdata/netdata/assets/139226121/7118757a-38fb-48d7-b12a-53e709a8e8c0&quot; alt=&quot;Energy Efficiency&quot; width=&quot;800&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://www.ivanomalavolta.com/files/papers/ICSOC_2023.pdf#gh-light-mode-only&quot;&gt; &lt;img src=&quot;https://github.com/netdata/netdata/assets/139226121/4f64cbb6-05e4-48e3-b7c0-d1b79e37e219&quot; alt=&quot;Energy efficiency&quot; width=&quot;800&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;According to the &lt;a href=&quot;https://www.ivanomalavolta.com/files/papers/ICSOC_2023.pdf&quot;&gt;University of Amsterdam study&lt;/a&gt;, Netdata is the most energy-efficient tool for monitoring Docker-based systems. The study also shows Netdata excels in CPU usage, RAM usage, and execution time compared to other monitoring solutions.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;What Makes It Unique&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Real-Time&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Per-second data collection and processing&lt;/td&gt; 
   &lt;td&gt;Works in a beat – click and see results instantly&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Zero-Configuration&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Automatic detection and discovery&lt;/td&gt; 
   &lt;td&gt;Auto-discovers everything on the nodes it runs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ML-Powered&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Unsupervised anomaly detection&lt;/td&gt; 
   &lt;td&gt;Trains multiple ML models per metric at the edge&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Long-Term Retention&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;High-performance storage&lt;/td&gt; 
   &lt;td&gt;~0.5 bytes per sample with tiered storage for archiving&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Advanced Visualization&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Rich, interactive dashboards&lt;/td&gt; 
   &lt;td&gt;Slice and dice data without query language&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Extreme Scalability&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Native horizontal scaling&lt;/td&gt; 
   &lt;td&gt;Parent-Child centralization with multi-million samples/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Complete Visibility&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;From infrastructure to applications&lt;/td&gt; 
   &lt;td&gt;Simplifies operations and eliminates silos&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Edge-Based&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Processing at your premises&lt;/td&gt; 
   &lt;td&gt;Distributes code instead of centralizing data&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Want to put Netdata to the test against Prometheus? Explore the &lt;a href=&quot;https://www.netdata.cloud/blog/netdata-vs-prometheus-2025/&quot;&gt;full comparison&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Netdata Ecosystem&lt;/h2&gt; 
&lt;p&gt;This three-part architecture enables you to scale from single nodes to complex multi-cloud environments:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Component&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;License&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Netdata Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• Core monitoring engine&lt;br /&gt;• Handles collection, storage, ML, alerts, exports&lt;br /&gt;• Runs on servers, cloud, K8s, IoT&lt;br /&gt;• Zero production impact&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0&quot;&gt;GPL v3+&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Netdata Cloud&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• Enterprise features&lt;br /&gt;• User management, RBAC, horizontal scaling&lt;br /&gt;• Centralized alerts&lt;br /&gt;• Free community tier&lt;br /&gt;• No metric storage centralization&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Netdata UI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• Dashboards and visualizations&lt;br /&gt;• Free to use&lt;br /&gt;• Included in standard packages&lt;br /&gt;• Latest version via CDN&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://app.netdata.cloud/LICENSE.txt&quot;&gt;NCUL1&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;What You Can Monitor&lt;/h2&gt; 
&lt;p&gt;With Netdata you can monitor all these components across platforms:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;right&quot;&gt;Component&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Linux&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;FreeBSD&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;macOS&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Windows&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;System Resources&lt;/strong&gt;&lt;small&gt;&lt;br /&gt;CPU, Memory and system shared resources&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Full&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;small&gt;&lt;br /&gt;Disks, Mount points, Filesystems, RAID arrays&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Full&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;Network&lt;/strong&gt;&lt;small&gt;&lt;br /&gt;Network Interfaces, Protocols, Firewall, etc&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Full&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;Hardware &amp;amp; Sensors&lt;/strong&gt;&lt;small&gt;&lt;br /&gt;Fans, Temperatures, Controllers, GPUs, etc&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Full&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Some&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Some&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Some&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;O/S Services&lt;/strong&gt;&lt;small&gt;&lt;br /&gt;Resources, Performance and Status&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;small&gt;&lt;br /&gt;&lt;code&gt;systemd&lt;/code&gt;&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;Processes&lt;/strong&gt;&lt;small&gt;&lt;br /&gt;Resources, Performance, OOM, and more&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;System and Application &lt;strong&gt;Logs&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;small&gt;&lt;br /&gt;&lt;code&gt;systemd&lt;/code&gt;-journal&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;small&gt;&lt;br /&gt;&lt;code&gt;Windows Event Log&lt;/code&gt;, &lt;code&gt;ETW&lt;/code&gt;&lt;/small&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;Network Connections&lt;/strong&gt;&lt;small&gt;&lt;br /&gt;Live TCP and UDP sockets per PID&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;Containers&lt;/strong&gt;&lt;small&gt;&lt;br /&gt;Docker/containerd, LXC/LXD, Kubernetes, etc&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;VMs&lt;/strong&gt; (from the host)&lt;small&gt;&lt;br /&gt;KVM, qemu, libvirt, Proxmox, etc&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;small&gt;&lt;br /&gt;&lt;code&gt;cgroups&lt;/code&gt;&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;-&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;small&gt;&lt;br /&gt;&lt;code&gt;Hyper-V&lt;/code&gt;&lt;/small&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;Synthetic Checks&lt;/strong&gt;&lt;small&gt;&lt;br /&gt;Test APIs, TCP ports, Ping, Certificates, etc&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;Packaged Applications&lt;/strong&gt;&lt;small&gt;&lt;br /&gt;nginx, apache, postgres, redis, mongodb,&lt;br /&gt;and hundreds more&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;Cloud Provider Infrastructure&lt;/strong&gt;&lt;small&gt;&lt;br /&gt;AWS, GCP, Azure, and more&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;right&quot;&gt;&lt;strong&gt;Custom Applications&lt;/strong&gt;&lt;small&gt;&lt;br /&gt;OpenMetrics, StatsD and soon OpenTelemetry&lt;/small&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;On Linux, you can continuously monitor all kernel features and hardware sensors for errors, including Intel/AMD/Nvidia GPUs, PCI AER, RAM EDAC, IPMI, S.M.A.R.T, Intel RAPL, NVMe, fans, power supplies, and voltage readings.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You can install Netdata on all major operating systems. To begin:&lt;/p&gt; 
&lt;h3&gt;1. Install Netdata&lt;/h3&gt; 
&lt;p&gt;Choose your platform and follow the installation guide:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.netdata.cloud/docs/installing/one-line-installer-for-all-linux-systems&quot;&gt;Linux Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.netdata.cloud/docs/installing/macos&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.netdata.cloud/docs/installing/freebsd&quot;&gt;FreeBSD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.netdata.cloud/docs/netdata-agent/installation/windows&quot;&gt;Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/netdata/netdata/master/packaging/docker/README.md&quot;&gt;Docker Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.netdata.cloud/docs/installation/install-on-specific-environments/kubernetes&quot;&gt;Kubernetes Setup&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You can access the Netdata UI at &lt;code&gt;http://localhost:19999&lt;/code&gt; (or &lt;code&gt;http://NODE:19999&lt;/code&gt; if remote).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;2. Configure Collectors&lt;/h3&gt; 
&lt;p&gt;Netdata auto-discovers most metrics, but you can manually configure some collectors:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.netdata.cloud/docs/data-collection/&quot;&gt;All collectors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.netdata.cloud/docs/data-collection/monitor-anything/networking/snmp&quot;&gt;SNMP monitoring&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. Configure Alerts&lt;/h3&gt; 
&lt;p&gt;You can use hundreds of built-in alerts and integrate with:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;email&lt;/code&gt;, &lt;code&gt;Slack&lt;/code&gt;, &lt;code&gt;Telegram&lt;/code&gt;, &lt;code&gt;PagerDuty&lt;/code&gt;, &lt;code&gt;Discord&lt;/code&gt;, &lt;code&gt;Microsoft Teams&lt;/code&gt;, and more.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Email alerts work by default if there&#39;s a configured MTA.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;4. Configure Parents&lt;/h3&gt; 
&lt;p&gt;You can centralize dashboards, alerts, and storage with Netdata Parents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.netdata.cloud/docs/streaming/streaming-configuration-reference&quot;&gt;Streaming Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; You can use Netdata Parents for central dashboards, longer retention, and alert configuration.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;5. Connect to Netdata Cloud&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.netdata.cloud/sign-in&quot;&gt;Sign in to Netdata Cloud&lt;/a&gt; and connect your nodes for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Access from anywhere&lt;/li&gt; 
 &lt;li&gt;Horizontal scalability and multi-node dashboards&lt;/li&gt; 
 &lt;li&gt;UI configuration for alerts and data collection&lt;/li&gt; 
 &lt;li&gt;Role-based access control&lt;/li&gt; 
 &lt;li&gt;Free tier available&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Netdata Cloud is optional. Your data stays in your infrastructure.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Live Demo Sites&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;b&gt;See Netdata in action&lt;/b&gt;&lt;br /&gt; &lt;a href=&quot;https://frankfurt.netdata.rocks&quot;&gt;&lt;b&gt;FRANKFURT&lt;/b&gt;&lt;/a&gt; | &lt;a href=&quot;https://newyork.netdata.rocks&quot;&gt;&lt;b&gt;NEWYORK&lt;/b&gt;&lt;/a&gt; | &lt;a href=&quot;https://atlanta.netdata.rocks&quot;&gt;&lt;b&gt;ATLANTA&lt;/b&gt;&lt;/a&gt; | &lt;a href=&quot;https://sanfrancisco.netdata.rocks&quot;&gt;&lt;b&gt;SANFRANCISCO&lt;/b&gt;&lt;/a&gt; | &lt;a href=&quot;https://toronto.netdata.rocks&quot;&gt;&lt;b&gt;TORONTO&lt;/b&gt;&lt;/a&gt; | &lt;a href=&quot;https://singapore.netdata.rocks&quot;&gt;&lt;b&gt;SINGAPORE&lt;/b&gt;&lt;/a&gt; | &lt;a href=&quot;https://bangalore.netdata.rocks&quot;&gt;&lt;b&gt;BANGALORE&lt;/b&gt;&lt;/a&gt; &lt;br /&gt; &lt;i&gt;These demo clusters run with default configuration and show real monitoring data.&lt;/i&gt; &lt;br /&gt; &lt;i&gt;Choose the instance closest to you for the best performance.&lt;/i&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;How It Works&lt;/h2&gt; 
&lt;p&gt;With Netdata you can run a modular pipeline for metrics collection, processing, and visualization.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;flowchart TB
  A[Netdata Agent]:::mainNode
  A1(Collect):::green --&amp;gt; A
  A2(Store):::green --&amp;gt; A
  A3(Learn):::green --&amp;gt; A
  A4(Detect):::green --&amp;gt; A
  A5(Check):::green --&amp;gt; A
  A6(Stream):::green --&amp;gt; A
  A7(Archive):::green --&amp;gt; A
  A8(Query):::green --&amp;gt; A
  A9(Score):::green --&amp;gt; A

  classDef green fill:#bbf3bb,stroke:#333,stroke-width:1px,color:#000
  classDef mainNode fill:#f0f0f0,stroke:#333,stroke-width:1px,color:#333
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With each Agent you can:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Collect&lt;/strong&gt; – Gather metrics from systems, containers, apps, logs, APIs, and synthetic checks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Store&lt;/strong&gt; – Save metrics to a high-efficiency, tiered time-series database.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learn&lt;/strong&gt; – Train ML models per metric using recent behavior.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Detect&lt;/strong&gt; – Identify anomalies using trained ML models.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Check&lt;/strong&gt; – Evaluate metrics against pre-set or custom alert rules.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Stream&lt;/strong&gt; – Send metrics to Netdata Parents in real time.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Archive&lt;/strong&gt; – Export metrics to Prometheus, InfluxDB, OpenTSDB, Graphite, and others.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Query&lt;/strong&gt; – Access metrics via an API for dashboards or third-party tools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Score&lt;/strong&gt; – Use a scoring engine to find patterns and correlations across metrics.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Learn more: &lt;a href=&quot;https://learn.netdata.cloud/docs/netdata-agent/#distributed-observability-pipeline&quot;&gt;Netdata&#39;s architecture&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Agent Capabilities&lt;/h2&gt; 
&lt;p&gt;With the Netdata Agent, you can use these core capabilities out-of-the-box:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Capability&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Comprehensive Collection&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• 800+ integrations&lt;br /&gt;• Systems, containers, VMs, hardware sensors&lt;br /&gt;• OpenMetrics, StatsD, and logs&lt;br /&gt;• OpenTelemetry support coming soon&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Performance &amp;amp; Precision&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• Per-second collection&lt;br /&gt;• Real-time visualization with 1-second latency&lt;br /&gt;• High-resolution metrics&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Edge-Based ML&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• ML models trained at the edge&lt;br /&gt;• Automatic anomaly detection per metric&lt;br /&gt;• Pattern recognition based on historical behavior&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Advanced Log Management&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• Direct systemd-journald and Windows Event Log integration&lt;br /&gt;• Process logs at the edge&lt;br /&gt;• Rich log visualization&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Observability Pipeline&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• Parent-Child relationships&lt;br /&gt;• Flexible centralization&lt;br /&gt;• Multi-level replication and retention&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Automated Visualization&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• NIDL data model&lt;br /&gt;• Auto-generated dashboards&lt;br /&gt;• No query language needed&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Smart Alerting&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• Pre-configured alerts&lt;br /&gt;• Multiple notification methods&lt;br /&gt;• Proactive detection&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Low Maintenance&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• Auto-detection&lt;br /&gt;• Zero-touch ML&lt;br /&gt;• Easy scalability&lt;br /&gt;• CI/CD friendly&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Open &amp;amp; Extensible&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• Modular architecture&lt;br /&gt;• Easy to customize&lt;br /&gt;• Integrates with existing tools&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;CNCF Membership&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://raw.githubusercontent.com/cncf/artwork/master/other/cncf/horizontal/white/cncf-white.svg&quot; /&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://raw.githubusercontent.com/cncf/artwork/master/other/cncf/horizontal/color/cncf-color.svg&quot; /&gt; 
  &lt;img alt=&quot;CNCF Logo&quot; src=&quot;https://raw.githubusercontent.com/cncf/artwork/master/other/cncf/horizontal/color/cncf-color.svg?sanitize=true&quot; width=&quot;300&quot; /&gt; 
 &lt;/picture&gt; &lt;br /&gt; Netdata actively supports and is a member of the Cloud Native Computing Foundation (CNCF).&lt;br /&gt; It is one of the most starred projects in the &lt;a href=&quot;https://landscape.cncf.io/?item=observability-and-analysis--observability--netdata&quot;&gt;CNCF landscape&lt;/a&gt;. &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Is Netdata secure?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Yes. Netdata follows &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/en/projects/2231&quot;&gt;OpenSSF best practices&lt;/a&gt;, has a security-first design, and is regularly audited by the community.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://learn.netdata.cloud/docs/security-and-privacy-design&quot;&gt;Security design&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://github.com/netdata/netdata/security&quot;&gt;Security policies and advisories&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Does Netdata use a lot of resources?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;No. Even with ML and per-second metrics, Netdata uses minimal resources.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;~5% CPU and 150MiB RAM by default on production systems&lt;/li&gt; 
  &lt;li&gt;&amp;lt;1% CPU and ~100MiB RAM when ML and alerts are disabled and using ephemeral storage&lt;/li&gt; 
  &lt;li&gt;Parents scale to millions of metrics per second with appropriate hardware&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;You can use the &lt;strong&gt;Netdata Monitoring&lt;/strong&gt; section in the dashboard to inspect its resource usage.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;How much data retention is possible?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;As much as your disk allows.&lt;/p&gt; 
 &lt;p&gt;With Netdata you can use tiered retention:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Tier 0: per-second resolution&lt;/li&gt; 
  &lt;li&gt;Tier 1: per-minute resolution&lt;/li&gt; 
  &lt;li&gt;Tier 2: per-hour resolution&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;These are queried automatically based on the zoom level.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Can Netdata scale to many servers?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Yes. With Netdata you can:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Scale horizontally with many Agents&lt;/li&gt; 
  &lt;li&gt;Scale vertically with powerful Parents&lt;/li&gt; 
  &lt;li&gt;Scale infinitely via Netdata Cloud&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;You can use Netdata Cloud to merge many independent infrastructures into one logical view.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Is disk I/O a concern?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;No. Netdata minimizes disk usage:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Metrics are flushed to disk every 17 minutes, spread out evenly&lt;/li&gt; 
  &lt;li&gt;Uses direct I/O and compression (ZSTD)&lt;/li&gt; 
  &lt;li&gt;Can run entirely in RAM or stream to a Parent&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;You can use &lt;code&gt;alloc&lt;/code&gt; or &lt;code&gt;ram&lt;/code&gt; mode for no disk writes.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;How is Netdata different from Prometheus + Grafana?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;With Netdata you get a complete monitoring solution—not just tools.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;No manual setup or dashboards needed&lt;/li&gt; 
  &lt;li&gt;Built-in ML, alerts, dashboards, and correlations&lt;/li&gt; 
  &lt;li&gt;More efficient and easier to deploy&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;a href=&quot;https://blog.netdata.cloud/netdata-vs-prometheus-performance-analysis/&quot;&gt;Performance comparison&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;How is Netdata different from commercial SaaS tools?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;With Netdata you can store all metrics on your infrastructure—no sampling, no aggregation, no loss.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;High-resolution metrics by default&lt;/li&gt; 
  &lt;li&gt;ML per metric, not shared models&lt;/li&gt; 
  &lt;li&gt;Unlimited scalability without skyrocketing cost&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Can Netdata run alongside Nagios, Zabbix, etc.?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Yes. You can use Netdata together with traditional tools.&lt;/p&gt; 
 &lt;p&gt;With Netdata you get:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Real-time, high-resolution monitoring&lt;/li&gt; 
  &lt;li&gt;Zero configuration and auto-generated dashboards&lt;/li&gt; 
  &lt;li&gt;Anomaly detection and advanced visualization&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;What if I feel overwhelmed?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;You can start small:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use the dashboard&#39;s table of contents and search&lt;/li&gt; 
  &lt;li&gt;Explore anomaly scoring (&quot;AR&quot; toggle)&lt;/li&gt; 
  &lt;li&gt;Create custom dashboards in Netdata Cloud&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;a href=&quot;https://learn.netdata.cloud/guides&quot;&gt;Docs and guides&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Do I have to use Netdata Cloud?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;No. Netdata Cloud is optional.&lt;/p&gt; 
 &lt;p&gt;Netdata works without it, but with Cloud you can:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Access remotely with SSO&lt;/li&gt; 
  &lt;li&gt;Save dashboard customizations&lt;/li&gt; 
  &lt;li&gt;Configure alerts centrally&lt;/li&gt; 
  &lt;li&gt;Collaborate with role-based access&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;What telemetry does Netdata collect?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Anonymous telemetry helps improve the product. You can disable it:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Add &lt;code&gt;--disable-telemetry&lt;/code&gt; to the installer, or&lt;/li&gt; 
  &lt;li&gt;Create &lt;code&gt;/etc/netdata/.opt-out-from-anonymous-statistics&lt;/code&gt; and restart Netdata&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Telemetry helps us understand usage, not track users. No private data is collected.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Who uses Netdata?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;You&#39;ll join users including:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Major companies (Amazon, ABN AMRO Bank, Facebook, Google, IBM, Intel, Netflix, Samsung)&lt;/li&gt; 
  &lt;li&gt;Universities (NYU, Columbia, Seoul National, UCL)&lt;/li&gt; 
  &lt;li&gt;Government organizations worldwide&lt;/li&gt; 
  &lt;li&gt;Infrastructure-intensive organizations&lt;/li&gt; 
  &lt;li&gt;Technology operators&lt;/li&gt; 
  &lt;li&gt;Startups and freelancers&lt;/li&gt; 
  &lt;li&gt;SysAdmins and DevOps professionals&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;&lt;span&gt;📖&lt;/span&gt; Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href=&quot;https://learn.netdata.cloud&quot;&gt;Netdata Learn&lt;/a&gt; for full documentation and guides.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Includes deployment, configuration, alerting, exporting, troubleshooting, and more.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;&lt;span&gt;🎉&lt;/span&gt; Community&lt;/h2&gt; 
&lt;p&gt;Join the Netdata community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.com/invite/2mEmfW735j&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://community.netdata.cloud&quot;&gt;Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/netdata/netdata/discussions&quot;&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; &lt;a href=&quot;https://github.com/netdata/.github/raw/main/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Follow us on: &lt;a href=&quot;https://twitter.com/netdatahq&quot;&gt;Twitter&lt;/a&gt; | &lt;a href=&quot;https://www.reddit.com/r/netdata/&quot;&gt;Reddit&lt;/a&gt; | &lt;a href=&quot;https://www.youtube.com/c/Netdata&quot;&gt;YouTube&lt;/a&gt; | &lt;a href=&quot;https://www.linkedin.com/company/netdata-cloud/&quot;&gt;LinkedIn&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;&lt;span&gt;🙏&lt;/span&gt; Contribute&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions.&lt;/p&gt; 
&lt;p&gt;Ways you help us stay sharp:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Share best practices and monitoring insights&lt;/li&gt; 
 &lt;li&gt;Report issues or missing features&lt;/li&gt; 
 &lt;li&gt;Improve documentation&lt;/li&gt; 
 &lt;li&gt;Develop new integrations or collectors&lt;/li&gt; 
 &lt;li&gt;Help users in forums and chats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; &lt;a href=&quot;https://github.com/netdata/.github/raw/main/CONTRIBUTING.md&quot;&gt;Contribution guide&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;&lt;span&gt;📜&lt;/span&gt; License&lt;/h2&gt; 
&lt;p&gt;The Netdata ecosystem includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Netdata Agent&lt;/strong&gt; – Open-source core (GPLv3+). &lt;strong&gt;Includes&lt;/strong&gt; data collection, storage, ML, alerting, APIs and &lt;strong&gt;redistributes&lt;/strong&gt; several other open-source tools and libraries. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/netdata/netdata/raw/master/LICENSE&quot;&gt;Netdata Agent License&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/netdata/netdata/raw/master/REDISTRIBUTED.md&quot;&gt;Netdata Agent Redistributed&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Netdata UI&lt;/strong&gt; – Closed-source but free to use with Netdata Agent and Cloud. Delivered via CDN. It integrates third-party open-source components. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://app.netdata.cloud/LICENSE.txt&quot;&gt;Netdata Cloud UI License&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://app.netdata.cloud/3D_PARTY_LICENSES.txt&quot;&gt;Netdata UI third-party licenses&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Netdata Cloud&lt;/strong&gt; – Closed-source, with free and paid tiers. Adds remote access, SSO, scalability.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
