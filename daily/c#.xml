<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub C# Daily Trending</title>
    <description>Daily Trending of C# in GitHub</description>
    <pubDate>Sat, 27 Sep 2025 01:30:37 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>jellyfin/jellyfin</title>
      <link>https://github.com/jellyfin/jellyfin</link>
      <description>&lt;p&gt;The Free Software Media System - Server Backend &amp; API&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt;Jellyfin&lt;/h1&gt; 
&lt;h3 align=&quot;center&quot;&gt;The Free Software Media System&lt;/h3&gt; 
&lt;hr /&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Logo Banner&quot; src=&quot;https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/banner-logo-solid.svg?sanitize=true&quot; /&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href=&quot;https://github.com/jellyfin/jellyfin&quot;&gt; &lt;img alt=&quot;GPL 2.0 License&quot; src=&quot;https://img.shields.io/github/license/jellyfin/jellyfin.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/jellyfin/jellyfin/releases&quot;&gt; &lt;img alt=&quot;Current Release&quot; src=&quot;https://img.shields.io/github/release/jellyfin/jellyfin.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://translate.jellyfin.org/projects/jellyfin/jellyfin-core/?utm_source=widget&quot;&gt; &lt;img alt=&quot;Translation Status&quot; src=&quot;https://translate.jellyfin.org/widgets/jellyfin/-/jellyfin-core/svg-badge.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/jellyfin/jellyfin&quot;&gt; &lt;img alt=&quot;Docker Pull Count&quot; src=&quot;https://img.shields.io/docker/pulls/jellyfin/jellyfin.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://opencollective.com/jellyfin&quot;&gt; &lt;img alt=&quot;Donate&quot; src=&quot;https://img.shields.io/opencollective/all/jellyfin.svg?label=backers&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://features.jellyfin.org&quot;&gt; &lt;img alt=&quot;Submit Feature Requests&quot; src=&quot;https://img.shields.io/badge/fider-vote%20on%20features-success.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://matrix.to/#/#jellyfinorg:matrix.org&quot;&gt; &lt;img alt=&quot;Chat on Matrix&quot; src=&quot;https://img.shields.io/matrix/jellyfinorg:matrix.org.svg?logo=matrix&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/jellyfin/jellyfin/releases.atom&quot;&gt; &lt;img alt=&quot;Release RSS Feed&quot; src=&quot;https://img.shields.io/badge/rss-releases-ffa500?logo=rss&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/jellyfin/jellyfin/commits/master.atom&quot;&gt; &lt;img alt=&quot;Master Commits RSS Feed&quot; src=&quot;https://img.shields.io/badge/rss-commits-ffa500?logo=rss&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby&#39;s 3.5.2 release and ported to the .NET platform to enable full cross-platform support.&lt;/p&gt; 
&lt;p&gt;There are no strings attached, no premium licenses or features, and no hidden agendas: just a team that wants to build something better and work together to achieve it. We welcome anyone who is interested in joining us in our quest!&lt;/p&gt; 
&lt;p&gt;For further details, please see &lt;a href=&quot;https://jellyfin.org/docs/&quot;&gt;our documentation page&lt;/a&gt;. To receive the latest updates, get help with Jellyfin, and join the community, please visit &lt;a href=&quot;https://jellyfin.org/docs/general/getting-help&quot;&gt;one of our communication channels&lt;/a&gt;. For more information about the project, please see our &lt;a href=&quot;https://jellyfin.org/docs/general/about&quot;&gt;about page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want to get started?&lt;/strong&gt;&lt;br /&gt; Check out our &lt;a href=&quot;https://jellyfin.org/downloads&quot;&gt;downloads page&lt;/a&gt; or our &lt;a href=&quot;https://jellyfin.org/docs/general/installation/&quot;&gt;installation guide&lt;/a&gt;, then see our &lt;a href=&quot;https://jellyfin.org/docs/general/quick-start&quot;&gt;quick start guide&lt;/a&gt;. You can also &lt;a href=&quot;https://jellyfin.org/docs/general/installation/source&quot;&gt;build from source&lt;/a&gt;.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Something not working right?&lt;/strong&gt;&lt;br /&gt; Open an &lt;a href=&quot;https://jellyfin.org/docs/general/contributing/issues&quot;&gt;Issue&lt;/a&gt; on GitHub.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want to contribute?&lt;/strong&gt;&lt;br /&gt; Check out our &lt;a href=&quot;https://jellyfin.org/contribute&quot;&gt;contributing choose-your-own-adventure&lt;/a&gt; to see where you can help, then see our &lt;a href=&quot;https://jellyfin.org/docs/general/contributing/&quot;&gt;contributing guide&lt;/a&gt; and our &lt;a href=&quot;https://jellyfin.org/docs/general/community-standards&quot;&gt;community standards&lt;/a&gt;.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;New idea or improvement?&lt;/strong&gt;&lt;br /&gt; Check out our &lt;a href=&quot;https://features.jellyfin.org/?view=most-wanted&quot;&gt;feature request hub&lt;/a&gt;.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Don&#39;t see Jellyfin in your language?&lt;/strong&gt;&lt;br /&gt; Check out our &lt;a href=&quot;https://translate.jellyfin.org&quot;&gt;Weblate instance&lt;/a&gt; to help translate Jellyfin and its subprojects.&lt;br /&gt;&lt;/p&gt; 
&lt;a href=&quot;https://translate.jellyfin.org/engage/jellyfin/?utm_source=widget&quot;&gt; &lt;img src=&quot;https://translate.jellyfin.org/widgets/jellyfin/-/jellyfin-web/multi-auto.svg?sanitize=true&quot; alt=&quot;Detailed Translation Status&quot; /&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Jellyfin Server&lt;/h2&gt; 
&lt;p&gt;This repository contains the code for Jellyfin&#39;s backend server. Note that this is only one of many projects under the Jellyfin GitHub &lt;a href=&quot;https://github.com/jellyfin/&quot;&gt;organization&lt;/a&gt; on GitHub. If you want to contribute, you can start by checking out our &lt;a href=&quot;https://jellyfin.org/docs/general/contributing/index.html&quot;&gt;documentation&lt;/a&gt; to see what to work on.&lt;/p&gt; 
&lt;h2&gt;Server Development&lt;/h2&gt; 
&lt;p&gt;These instructions will help you get set up with a local development environment in order to contribute to this repository. Before you start, please be sure to completely read our &lt;a href=&quot;https://jellyfin.org/docs/general/contributing/development.html&quot;&gt;guidelines on development contributions&lt;/a&gt;. Note that this project is supported on all major operating systems except FreeBSD, which is still incompatible.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;Before the project can be built, you must first install the &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet&quot;&gt;.NET 9.0 SDK&lt;/a&gt; on your system.&lt;/p&gt; 
&lt;p&gt;Instructions to run this project from the command line are included here, but you will also need to install an IDE if you want to debug the server while it is running. Any IDE that supports .NET 6 development will work, but two options are recent versions of &lt;a href=&quot;https://visualstudio.microsoft.com/downloads/&quot;&gt;Visual Studio&lt;/a&gt; (at least 2022) and &lt;a href=&quot;https://code.visualstudio.com/Download&quot;&gt;Visual Studio Code&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/jellyfin/jellyfin-ffmpeg&quot;&gt;ffmpeg&lt;/a&gt; will also need to be installed.&lt;/p&gt; 
&lt;h3&gt;Cloning the Repository&lt;/h3&gt; 
&lt;p&gt;After dependencies have been installed you will need to clone a local copy of this repository. If you just want to run the server from source you can clone this repository directly, but if you are intending to contribute code changes to the project, you should &lt;a href=&quot;https://jellyfin.org/docs/general/contributing/development.html#set-up-your-copy-of-the-repo&quot;&gt;set up your own fork&lt;/a&gt; of the repository. The following example shows how you can clone the repository directly over HTTPS.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/jellyfin/jellyfin.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Installing the Web Client&lt;/h3&gt; 
&lt;p&gt;The server is configured to host the static files required for the &lt;a href=&quot;https://github.com/jellyfin/jellyfin-web&quot;&gt;web client&lt;/a&gt; in addition to serving the backend by default. Before you can run the server, you will need to get a copy of the web client since they are not included in this repository directly.&lt;/p&gt; 
&lt;p&gt;Note that it is also possible to &lt;a href=&quot;https://raw.githubusercontent.com/jellyfin/jellyfin/master/#hosting-the-web-client-separately&quot;&gt;host the web client separately&lt;/a&gt; from the web server with some additional configuration, in which case you can skip this step.&lt;/p&gt; 
&lt;p&gt;There are three options to get the files for the web client.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download one of the finished builds from the &lt;a href=&quot;https://dev.azure.com/jellyfin-project/jellyfin/_build?definitionId=27&quot;&gt;Azure DevOps pipeline&lt;/a&gt;. You can download the build for a specific release by looking at the &lt;a href=&quot;https://dev.azure.com/jellyfin-project/jellyfin/_build?definitionId=27&amp;amp;_a=summary&amp;amp;repositoryFilter=6&amp;amp;view=branches&quot;&gt;branches tab&lt;/a&gt; of the pipelines page.&lt;/li&gt; 
 &lt;li&gt;Build them from source following the instructions on the &lt;a href=&quot;https://github.com/jellyfin/jellyfin-web&quot;&gt;jellyfin-web repository&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Get the pre-built files from an existing installation of the server. For example, with a Windows server installation the client files are located at &lt;code&gt;C:\Program Files\Jellyfin\Server\jellyfin-web&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Running The Server&lt;/h3&gt; 
&lt;p&gt;The following instructions will help you get the project up and running via the command line, or your preferred IDE.&lt;/p&gt; 
&lt;h4&gt;Running With Visual Studio&lt;/h4&gt; 
&lt;p&gt;To run the project with Visual Studio you can open the Solution (&lt;code&gt;.sln&lt;/code&gt;) file and then press &lt;code&gt;F5&lt;/code&gt; to run the server.&lt;/p&gt; 
&lt;h4&gt;Running With Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;To run the project with Visual Studio Code you will first need to open the repository directory with Visual Studio Code using the &lt;code&gt;Open Folder...&lt;/code&gt; option.&lt;/p&gt; 
&lt;p&gt;Second, you need to &lt;a href=&quot;https://code.visualstudio.com/docs/editor/extension-gallery#_recommended-extensions&quot;&gt;install the recommended extensions for the workspace&lt;/a&gt;. Note that extension recommendations are classified as either &quot;Workspace Recommendations&quot; or &quot;Other Recommendations&quot;, but only the &quot;Workspace Recommendations&quot; are required.&lt;/p&gt; 
&lt;p&gt;After the required extensions are installed, you can run the server by pressing &lt;code&gt;F5&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Running From the Command Line&lt;/h4&gt; 
&lt;p&gt;To run the server from the command line you can use the &lt;code&gt;dotnet run&lt;/code&gt; command. The example below shows how to do this if you have cloned the repository into a directory named &lt;code&gt;jellyfin&lt;/code&gt; (the default directory name) and should work on all operating systems.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd jellyfin                          # Move into the repository directory
dotnet run --project Jellyfin.Server --webdir /absolute/path/to/jellyfin-web/dist # Run the server startup project
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A second option is to build the project and then run the resulting executable file directly. When running the executable directly you can easily add command line options. Add the &lt;code&gt;--help&lt;/code&gt; flag to list details on all the supported command line options.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Build the project&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;dotnet build                       # Build the project
cd Jellyfin.Server/bin/Debug/net9.0 # Change into the build output directory
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Execute the build output. On Linux, Mac, etc. use &lt;code&gt;./jellyfin&lt;/code&gt; and on Windows use &lt;code&gt;jellyfin.exe&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Accessing the Hosted Web Client&lt;/h4&gt; 
&lt;p&gt;If the Server is configured to host the Web Client, and the Server is running, the Web Client can be accessed at &lt;code&gt;http://localhost:8096&lt;/code&gt; by default.&lt;/p&gt; 
&lt;p&gt;API documentation can be viewed at &lt;code&gt;http://localhost:8096/api-docs/swagger/index.html&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Running from GitHub Codespaces&lt;/h3&gt; 
&lt;p&gt;As Jellyfin will run on a container on a GitHub hosted server, JF needs to handle some things differently.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Depending on the selected configuration (if you just click &#39;create codespace&#39; it will create a default configuration one) it might take 20-30 seconds to load all extensions and prepare the environment while VS Code is already open. Just give it some time and wait until you see &lt;code&gt;Downloading .NET version(s) 7.0.15~x64 ...... Done!&lt;/code&gt; in the output tab.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you want to access the JF instance from outside, like with a WebClient on another PC, remember to set the &quot;ports&quot; in the lower VS Code window to public.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; When first opening the server instance with any WebUI, you will be sent to the login instead of the setup page. Refresh the login page once and you should be redirected to the Setup.&lt;/p&gt; 
&lt;p&gt;There are two configurations for you to choose from.&lt;/p&gt; 
&lt;h4&gt;Default - Development Jellyfin Server&lt;/h4&gt; 
&lt;p&gt;This creates a container that has everything to run and debug the Jellyfin Media server but does not setup anything else. Each time you create a new container you have to run through the whole setup again. There is also no ffmpeg, webclient or media preloaded. Use the &lt;code&gt;.NET Launch (nowebclient)&lt;/code&gt; launch config to start the server.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Keep in mind that as this has no web client you have to connect to it via an external client. This can be just another codespace container running the WebUI. vuejs does not work from the get-go as it does not support the setup steps.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Development Jellyfin Server ffmpeg&lt;/h4&gt; 
&lt;p&gt;this extends the default server with a default installation of ffmpeg6 though the means described here: &lt;a href=&quot;https://jellyfin.org/docs/general/installation/linux#repository-manual&quot;&gt;https://jellyfin.org/docs/general/installation/linux#repository-manual&lt;/a&gt; If you want to install a specific ffmpeg version, follow the comments embedded in the &lt;code&gt;.devcontainer/Dev - Server Ffmpeg/install.ffmpeg.sh&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;Use the &lt;code&gt;ghcs .NET Launch (nowebclient, ffmpeg)&lt;/code&gt; launch config to run with the jellyfin-ffmpeg enabled.&lt;/p&gt; 
&lt;h3&gt;Running The Tests&lt;/h3&gt; 
&lt;p&gt;This repository also includes unit tests that are used to validate functionality as part of a CI pipeline on Azure. There are several ways to run these tests.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run tests from the command line using &lt;code&gt;dotnet test&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run tests in Visual Studio using the &lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/test/run-unit-tests-with-test-explorer&quot;&gt;Test Explorer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run individual tests in Visual Studio Code using the associated &lt;a href=&quot;https://github.com/OmniSharp/omnisharp-vscode/wiki/How-to-run-and-debug-unit-tests&quot;&gt;CodeLens annotation&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Advanced Configuration&lt;/h3&gt; 
&lt;p&gt;The following sections describe some more advanced scenarios for running the server from source that build upon the standard instructions above.&lt;/p&gt; 
&lt;h4&gt;Hosting The Web Client Separately&lt;/h4&gt; 
&lt;p&gt;It is not necessary to host the frontend web client as part of the backend server. Hosting these two components separately may be useful for frontend developers who would prefer to host the client in a separate webpack development server for a tighter development loop. See the &lt;a href=&quot;https://github.com/jellyfin/jellyfin-web#getting-started&quot;&gt;jellyfin-web&lt;/a&gt; repo for instructions on how to do this.&lt;/p&gt; 
&lt;p&gt;To instruct the server not to host the web content, there is a &lt;code&gt;nowebclient&lt;/code&gt; configuration flag that must be set. This can be specified using the command line switch &lt;code&gt;--nowebclient&lt;/code&gt; or the environment variable &lt;code&gt;JELLYFIN_NOWEBCONTENT=true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Since this is a common scenario, there is also a separate launch profile defined for Visual Studio called &lt;code&gt;Jellyfin.Server (nowebcontent)&lt;/code&gt; that can be selected from the &#39;Start Debugging&#39; dropdown in the main toolbar.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The setup wizard cannot be run if the web client is hosted separately.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align=&quot;center&quot;&gt; This project is supported by: &lt;br /&gt; &lt;br /&gt; &lt;a href=&quot;https://www.digitalocean.com&quot;&gt;&lt;img src=&quot;https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg?sanitize=true&quot; height=&quot;50px&quot; alt=&quot;DigitalOcean&quot; /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;https://www.jetbrains.com&quot;&gt;&lt;img src=&quot;https://gist.githubusercontent.com/anthonylavado/e8b2403deee9581e0b4cb8cd675af7db/raw/fa104b7d73f759d7262794b94569f1b89df41c0b/jetbrains.svg?sanitize=true&quot; height=&quot;50px&quot; alt=&quot;JetBrains logo&quot; /&gt;&lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/mcp</title>
      <link>https://github.com/microsoft/mcp</link>
      <description>&lt;p&gt;Catalog of official Microsoft MCP (Model Context Protocol) server implementations for AI-powered data access and tool integration&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🌟 Microsoft MCP Servers&lt;/h1&gt; 
&lt;h2&gt;📘 What is MCP?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Model Context Protocol (MCP)&lt;/strong&gt; is an open protocol that standardizes how applications provide context to large language models (LLMs). It allows AI applications to connect with various data sources and tools in a consistent manner, enhancing their capabilities and flexibility. MCP follows a client-server architecture:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Hosts&lt;/strong&gt;: Applications like AI assistants or IDEs that initiate connections.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Clients&lt;/strong&gt;: Connectors within the host application that maintain 1:1 connections with servers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Servers&lt;/strong&gt;: Services that provide context and capabilities through the standardized MCP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more details, visit the &lt;a href=&quot;https://modelcontextprotocol.io&quot;&gt;official MCP website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📁 Which MCP Servers are built from this repository?&lt;/h2&gt; 
&lt;p&gt;This repository contains core libraries, test frameworks, engineering systems, pipelines, and tooling for Microsoft MCP Server contributors to unify engineering investments; and reduce duplication and divergence:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;MCP Server&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;README&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Source Code&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;CHANGELOG&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Releases&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Documentation&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Troubleshooting&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Azure MCP&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Azure.Mcp.Server/README.md&quot;&gt;Azure MCP README&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Azure.Mcp.Server&quot;&gt;Azure MCP Source Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Azure.Mcp.Server/CHANGELOG.md&quot;&gt;Azure MCP CHANGELOG&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/releases?q=Azure.Mcp.Server-0&quot;&gt;Azure MCP Releases&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/azure/developer/azure-mcp-server/&quot;&gt;Azure MCP Documentation&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Azure.Mcp.Server/TROUBLESHOOTING.md&quot;&gt;Azure MCP Troubleshooting&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Azure.Mcp.Server/SUPPORT.md&quot;&gt;Azure MCP Support&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Microsoft Fabric MCP&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Fabric.Mcp.Server/README.md&quot;&gt;Fabric MCP README&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Fabric.Mcp.Server&quot;&gt;Fabric MCP Source Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Fabric.Mcp.Server/CHANGELOG.md&quot;&gt;Fabric MCP CHANGELOG&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/releases?q=Fabric.Mcp.Server-0&quot;&gt;Fabric MCP Releases&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/fabric/&quot;&gt;Fabric Documentation&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Fabric.Mcp.Server/TROUBLESHOOTING.md&quot;&gt;Fabric MCP Troubleshooting&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Fabric.Mcp.Server/SUPPORT.md&quot;&gt;Fabric MCP Support&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;📚 Which MCP Servers are available from Microsoft?&lt;/h2&gt; 
&lt;h3&gt;&lt;img height=&quot;18&quot; width=&quot;18&quot; src=&quot;https://cdn-dynmedia-1.microsoft.com/is/content/microsoftcorp/acom_social_icon_azure&quot; alt=&quot;Microsoft Azure Logo&quot; /&gt; Azure&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/mcp/tree/main/servers/Azure.Mcp.Server#readme&quot;&gt;microsoft/mcp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: All Azure MCP tools in a single server. The Azure MCP Server implements the MCP specification to create a seamless connection between AI agents and Azure services. Azure MCP Server can be used alone or with the GitHub Copilot for Azure extension in VS Code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;CLOUD AND INFRASTRUCTURE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://vscode.dev/redirect?url=vscode:extension/ms-azuretools.vscode-azure-mcp-server&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Azure_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Azure MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://vscode.dev/redirect?url=vscode-insiders:extension/ms-azuretools.vscode-azure-mcp-server&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Azure_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Azure MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=github-copilot-azure.GitHubCopilotForAzure2022&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Azure_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Azure MCP in Visual Studio&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://plugins.jetbrains.com/plugin/8053&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/IntelliJ%20IDEA-Install%20Azure%20MCP%20Server-1495b1?style=flat-square&amp;amp;logo=intellijidea&amp;amp;logoColor=white&quot; alt=&quot;Install Azure MCP Server&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✨ Azure AI Foundry&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/azure-ai-foundry/mcp-foundry&quot;&gt;azure-ai-foundry/mcp-foundry&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: A Model Context Protocol server for Azure AI Foundry, providing a unified set of tools for models, knowledge, evaluation, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;CLOUD AND INFRASTRUCTURE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://vscode.dev/redirect?url=vscode:mcp/install?%7B%22name%22%3A%22ai_foundry_server%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22--prerelease%3Dallow%22%2C%22--from%22%2C%22git%2Bhttps%3A%2F%2Fgithub.com%2Fazure-ai-foundry%2Fmcp-foundry.git%22%2C%22run-azure-ai-foundry-mcp%22%2C%22--envFile%22%2C%22%24%7BworkspaceFolder%7D%2F.env%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_AI_Foundry_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=ffffff&quot; alt=&quot;Install Azure AI Foundry MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://vscode.dev/redirect?url=vscode-insiders:mcp/install?%7B%22name%22%3A%22ai_foundry_server%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22--prerelease%3Dallow%22%2C%22--from%22%2C%22git%2Bhttps%3A%2F%2Fgithub.com%2Fazure-ai-foundry%2Fmcp-foundry.git%22%2C%22run-azure-ai-foundry-mcp%22%2C%22--envFile%22%2C%22%24%7BworkspaceFolder%7D%2F.env%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_AI_Foundry_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=ffffff&quot; alt=&quot;Install Azure AI Foundry in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22ai_foundry_server%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22--prerelease%3Dallow%22%2C%22--from%22%2C%22git%2Bhttps%3A%2F%2Fgithub.com%2Fazure-ai-foundry%2Fmcp-foundry.git%22%2C%22run-azure-ai-foundry-mcp%22%2C%22--envFile%22%2C%22%24%7BworkspaceFolder%7D%2F.env%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Azure_AI_Foundry_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Azure AI Foundry in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img height=&quot;18&quot; width=&quot;18&quot; src=&quot;https://cdn-dynmedia-1.microsoft.com/is/content/microsoftcorp/1062064-Products-1.2-24x24&quot; alt=&quot;Microsoft Azure DevOps Logo&quot; /&gt; Azure DevOps&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/azure-devops-mcp&quot;&gt;Azure DevOps MCP Server - Public Preview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: This TypeScript project provides a local MCP server for Azure DevOps, enabling you to perform a wide range of Azure DevOps tasks directly from your code editor.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=ado&amp;amp;type=stdio&amp;amp;command=npx&amp;amp;args=%5B%22-y%22%2C%22%40azure-devops%2Fmcp%22%2C%22%24%7Binput%3Aado_org%7D%22%5D&amp;amp;inputs=%5B%7B%22id%22%3A%22ado_org%22%2C%22type%22%3A%22promptString%22%2C%22description%22%3A%22Azure%20DevOps%20organization%20name%20(e.g.%20contoso)%22%7D%5D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Azure_DevOps_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Azure DevOps in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=ado&amp;amp;quality=insiders&amp;amp;type=stdio&amp;amp;command=npx&amp;amp;args=%5B%22-y%22%2C%22%40azure-devops%2Fmcp%22%2C%22%24%7Binput%3Aado_org%7D%22%5D&amp;amp;inputs=%5B%7B%22id%22%3A%22ado_org%22%2C%22type%22%3A%22promptString%22%2C%22description%22%3A%22Azure%20DevOps%20organization%20name%20(e.g.%20contoso)%22%7D%5D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Azure_Devops_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Azure DevOps in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/microsoft/azure-devops-mcp/raw/main/docs/GETTINGSTARTED.md#%EF%B8%8F-visual-studio-2022--github-copilot&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Azure_DevOps_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Azure DevOps in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;☸️ Azure Kubernetes Service (AKS)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Azure/aks-mcp&quot;&gt;Azure/aks-mcp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: An MCP server that enables AI assistants to interact with Azure Kubernetes Service (AKS) clusters. It serves as a bridge between AI tools and AKS, translating natural language requests into AKS operations and returning the results in a format the AI tools can understand.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;CLOUD AND INFRASTRUCTURE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://vscode.dev/redirect?url=vscode:extension/ms-kubernetes-tools.vscode-aks-tools&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_AKS_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install AKS MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://vscode.dev/redirect?url=vscode-insiders:extension/ms-kubernetes-tools.vscode-aks-tools&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_AKS_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install AKS MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Azure/aks-mcp&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_AKS_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install AKS MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img height=&quot;18&quot; width=&quot;18&quot; src=&quot;https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png&quot; alt=&quot;GitHub Logo&quot; /&gt; GitHub&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/github/github-mcp-server&quot;&gt;github/github-mcp-server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: Access GitHub repositories, issues, and pull requests through secure API integration.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;REMOTE&lt;/code&gt; - &lt;code&gt;https://api.githubcopilot.com/mcp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=github&amp;amp;config=%7B%22type%22%3A%20%22http%22%2C%22url%22%3A%20%22https%3A%2F%2Fapi.githubcopilot.com%2Fmcp%2F%22%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_GitHub_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install GitHub MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=github&amp;amp;config=%7B%22type%22%3A%20%22http%22%2C%22url%22%3A%20%22https%3A%2F%2Fapi.githubcopilot.com%2Fmcp%2F%22%7D&amp;amp;quality=insiders&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_GitHub_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install GitHub MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22github%22%2C%22type%22%3A%22http%22%2C%22url%22%3A%22https%3A%2F%2Fapi.githubcopilot.com%2Fmcp%2F%22%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_GitHub_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install GitHub MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img height=&quot;18&quot; width=&quot;18&quot; src=&quot;https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png&quot; alt=&quot;GitHub Logo&quot; /&gt; GitHub Awesome-Copilot&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/github/awesome-copilot&quot;&gt;github/awesome-copilot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: Community-contributed instructions, prompts, and configurations to help you make the most of GitHub Copilot.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://aka.ms/awesome-copilot/mcp/vscode&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Awesome_Copilot_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Awesome Copilot MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/awesome-copilot/mcp/vscode-insiders&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Awesome_Copilot_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Awesome Copilot MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/awesome-copilot/mcp/vs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Awesome_Copilot_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📝 Markitdown&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/markitdown&quot;&gt;microsoft/markitdown&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: A specialized MCP server for Markdown processing and manipulation. Enables AI models to read, write, and transform Markdown content with robust parsing and formatting capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://vscode.dev/redirect?url=vscode:mcp/install?%7B%22name%22%3A%22markitdown%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22markitdown-mcp%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Markitdown_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=ffffff&quot; alt=&quot;Install Markitdown MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://vscode.dev/redirect?url=vscode-insiders:mcp/install?%7B%22name%22%3A%22markitdown%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22markitdown-mcp%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Markitdown_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=ffffff&quot; alt=&quot;Install Markitdown MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22markitdown%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22markitdown-mcp%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Markitdown_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Markitdown MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💻 Microsoft 365 Agents Toolkit&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/OfficeDev/microsoft-365-agents-toolkit/&quot;&gt;OfficeDev/microsoft-365-agents-toolkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: The Microsoft 365 Agents Toolkit MCP Server is a Model Context Protocol (MCP) server that provides a seamless connection between AI agents and developers for building apps and agents for Microsoft 365 and Microsoft 365 Copilot.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://vscode.dev/redirect?url=vscode:extension/TeamsDevApp.ms-teams-vscode-extension&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Microsoft_365_Agents_Toolkit-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Microsoft 365 Agents Toolkit in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://vscode.dev/redirect?url=vscode-insiders:extension/TeamsDevApp.ms-teams-vscode-extension&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Microsoft_365_Agents_Toolkit-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Microsoft 365 Agents Toolkit in VS Code Insiders&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📊 Microsoft Clarity&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/clarity-mcp-server&quot;&gt;microsoft/clarity-mcp-server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: This is a Model Context Protocol (MCP) server for the Microsoft Clarity data export API. It allows you to fetch analytics data from Clarity using Claude for Desktop or other MCP-compatible clients.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DATA AND ANALYTICS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/clarity-mcp-server&quot;&gt;microsoft/clarity-mcp-server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🗃️ Microsoft Dataverse&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://go.microsoft.com/fwlink/?linkid=2320176&quot;&gt;Microsoft Dataverse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: Chat over your business data using NL - Discover tables, run queries, retrieve data, insert or update records, and execute custom prompts grounded in business knowledge and context.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DATA AND ANALYTICS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://go.microsoft.com/fwlink/?linkid=2320176&quot;&gt;Microsoft Dataverse&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💻 Microsoft Dev Box&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://www.npmjs.com/package/@microsoft/devbox-mcp?activeTab=readme&quot;&gt;@microsoft/devbox-mcp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: An MCP server for Microsoft Dev Box. Enables natural language interactions for developer-focused operations like managing Dev Boxes, configuring environments, and handling pools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=DevBox&amp;amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40microsoft%2Fdevbox-mcp%40latest%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Dev_Box_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Dev Box MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=DevBox&amp;amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40microsoft%2Fdevbox-mcp%40latest%22%5D%7D&amp;amp;quality=insiders&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Dev_Box_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Dev Box MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22DevBox%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40microsoft%2Fdevbox-mcp%40latest%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Dev_Box_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Dev Box MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img height=&quot;18&quot; width=&quot;18&quot; src=&quot;https://learn.microsoft.com/fabric/media/fabric-icon.png&quot; alt=&quot;Microsoft Fabric Logo&quot; /&gt; Microsoft Fabric (Public Preview)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/mcp/tree/main/servers/Fabric.Mcp.Server#readme&quot;&gt;microsoft/mcp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: A local-first MCP server providing AI agents with comprehensive access to Microsoft Fabric&#39;s public APIs, item definitions, and best practices. Enables AI-assisted development for all Fabric workloads without connecting to live environments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DATA AND ANALYTICS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/mcp/tree/main/servers/Fabric.Mcp.Server#readme&quot;&gt;microsoft/mcp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛢️ Microsoft Fabric Real-Time Intelligence&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://aka.ms/rti.mcp.repo&quot;&gt;RTI MCP Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: This server enables AI agents to interact with Fabric RTI services by providing tools through the MCP interface, allowing for seamless data querying and analysis capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DATA AND ANALYTICS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=ms-fabric-rti&amp;amp;config=%7B%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22microsoft-fabric-rti-mcp%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Microsoft_Fabric_RTI_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Fabric RTI MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=ms-fabric-rti&amp;amp;config=%7B%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22microsoft-fabric-rti-mcp%22%5D%7D&amp;amp;quality=insiders&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Microsoft_Fabric_RTI_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Fabric RTI MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22ms-fabric-rti%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22microsoft-fabric-rti-mcp%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Microsoft_Fabric_RTI_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Fabric RTI MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📁 Microsoft Files&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/files-mcp-server&quot;&gt;microsoft/files-mcp-server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: Provides a declarative control plane for managing file-based resources, supporting AI workflows that involve static files and documentation synchronization.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/files-mcp-server&quot;&gt;microsoft/files-mcp-server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📚 Microsoft Learn&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoftdocs/mcp&quot;&gt;microsoftdocs/mcp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: AI assistant with real-time access to official Microsoft documentation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;PRODUCTIVITY&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;REMOTE&lt;/code&gt; - &lt;code&gt;https://learn.microsoft.com/api/mcp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://vscode.dev/redirect/mcp/install?name=microsoft.docs.mcp&amp;amp;config=%7B%22type%22%3A%22http%22%2C%22url%22%3A%22https%3A%2F%2Flearn.microsoft.com%2Fapi%2Fmcp%22%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Microsoft_Docs_MCP-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Microsoft Learn MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=microsoft.docs.mcp&amp;amp;config=%7B%22type%22%3A%22http%22%2C%22url%22%3A%22https%3A%2F%2Flearn.microsoft.com%2Fapi%2Fmcp%22%7D&amp;amp;quality=insiders&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Microsoft_Docs_MCP-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Microsoft Learn MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22microsoft.docs.mcp%22%2C%22type%22%3A%22http%22%2C%22url%22%3A%22https%3A%2F%2Flearn.microsoft.com%2Fapi%2Fmcp%22%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Microsoft_Docs_MCP-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Microsoft Learn MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛢️ Microsoft SQL&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://aka.ms/MssqlMcp&quot;&gt;MSSQL MCP Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: Chat with your business data the new agentic way using natural language and AI. Connect to any SQL database—from ground (on-premises) to Azure cloud to Microsoft Fabric via a simple connection string. Discover and define table schemas, manage tables, and perform CRUD operations through conversational prompts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://aka.ms/MssqlMcp&quot;&gt;MSSQL MCP Server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💻 NuGet MCP Server&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/NuGet/Home&quot;&gt;NuGet/Home&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: This is a Model Context Protocol (MCP) server for NuGet, enabling advanced tooling and automation scenarios for NuGet package management.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://www.nuget.org/packages/NuGet.Mcp.Server&quot;&gt;Nuget MCP Server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎭 Playwright&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/playwright-mcp&quot;&gt;microsoft/playwright-mcp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: This server enables LLMs to interact with web pages through structured accessibility snapshots, bypassing the need for screenshots or visually-tuned models.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522playwright%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522%2540playwright%252Fmcp%2540latest%2522%255D%257D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Playwright_MCP-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Playwright MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522playwright%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522%2540playwright%252Fmcp%2540latest%2522%255D%257D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Playwright_MCP-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Playwright MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22playwright%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22%40playwright%2Fmcp%40latest%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Playwright_MCP-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Playwright MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏗️ Looking for starter templates that use MCP?&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://azure.github.io/awesome-azd/?tags=mcp&quot;&gt;Azure Developer CLI (azd) templates&lt;/a&gt; tagged with MCP.&lt;/p&gt; 
&lt;h2&gt;📎 Related Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/tree/main/Resources&quot;&gt;Microsoft MCP Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://modelcontextprotocol.io/introduction&quot;&gt;MCP Pattern Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://modelcontextprotocol.io/sdk&quot;&gt;MCP SDKs and Building Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://spec.modelcontextprotocol.io/specification/&quot;&gt;MCP Specification&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&quot;https://www.microsoft.com/legal/intellectualproperty/trademarks/usage/general&quot;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Unity-Technologies/ml-agents</title>
      <link>https://github.com/Unity-Technologies/ml-agents</link>
      <description>&lt;p&gt;The Unity Machine Learning Agents Toolkit (ML-Agents) is an open-source project that enables games and simulations to serve as environments for training intelligent agents using deep reinforcement learning and imitation learning.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unity ML-Agents Toolkit&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-reference-blue.svg?sanitize=true&quot; alt=&quot;docs badge&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/raw/release/4.0.0/LICENSE.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-Apache--2.0-green.svg?sanitize=true&quot; alt=&quot;license badge&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;(&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/releases/tag/latest_release&quot;&gt;latest release&lt;/a&gt;) (&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/releases&quot;&gt;all releases&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The Unity Machine Learning Agents Toolkit&lt;/strong&gt; (ML-Agents) is an open-source project that enables games and simulations to serve as environments for training intelligent agents. We provide implementations (based on PyTorch) of state-of-the-art algorithms to enable game developers and hobbyists to easily train intelligent agents for 2D, 3D and VR/AR games. Researchers can also use the provided simple-to-use Python API to train Agents using reinforcement learning, imitation learning, neuroevolution, or any other methods. These trained agents can be used for multiple purposes, including controlling NPC behavior (in a variety of settings such as multi-agent and adversarial), automated testing of game builds and evaluating different game design decisions pre-release. The ML-Agents Toolkit is mutually beneficial for both game developers and AI researchers as it provides a central platform where advances in AI can be evaluated on Unity’s rich environments and then made accessible to the wider research and game developer communities.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;17+ &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@latest/index.html?subfolder=/manual/Learning-Environment-Examples.html&quot;&gt;example Unity environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Support for multiple environment configurations and training scenarios&lt;/li&gt; 
 &lt;li&gt;Flexible Unity SDK that can be integrated into your game or custom Unity scene&lt;/li&gt; 
 &lt;li&gt;Support for training single-agent, multi-agent cooperative, and multi-agent competitive scenarios via several Deep Reinforcement Learning algorithms (PPO, SAC, MA-POCA, self-play).&lt;/li&gt; 
 &lt;li&gt;Support for learning from demonstrations through two Imitation Learning algorithms (BC and GAIL).&lt;/li&gt; 
 &lt;li&gt;Quickly and easily add your own &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@latest/index.html?subfolder=/manual/Python-Custom-Trainer-Plugin.html&quot;&gt;custom training algorithm&lt;/a&gt; and/or components.&lt;/li&gt; 
 &lt;li&gt;Easily definable Curriculum Learning scenarios for complex tasks&lt;/li&gt; 
 &lt;li&gt;Train robust agents using environment randomization&lt;/li&gt; 
 &lt;li&gt;Flexible agent control with On Demand Decision Making&lt;/li&gt; 
 &lt;li&gt;Train using multiple concurrent Unity environment instances&lt;/li&gt; 
 &lt;li&gt;Utilizes the &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@latest/index.html?subfolder=/manual/Inference-Engine.html&quot;&gt;Inference Engine&lt;/a&gt; to provide native cross-platform support&lt;/li&gt; 
 &lt;li&gt;Unity environment &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@latest/index.html?subfolder=/manual/Python-LLAPI.html&quot;&gt;control from Python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Wrap Unity learning environments as a &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@latest/index.html?subfolder=/manual/Python-Gym-API.html&quot;&gt;gym&lt;/a&gt; environment&lt;/li&gt; 
 &lt;li&gt;Wrap Unity learning environments as a &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@latest/index.html?subfolder=/manual/Python-PettingZoo-API.html&quot;&gt;PettingZoo&lt;/a&gt; environment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Releases &amp;amp; Documentation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Documentation Migration Notice&lt;/strong&gt; We have moved to &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@latest&quot;&gt;Unity Package documentation&lt;/a&gt; as the &lt;strong&gt;primary developer documentation&lt;/strong&gt; and have &lt;strong&gt;deprecated&lt;/strong&gt; the maintenance of &lt;a href=&quot;https://unity-technologies.github.io/ml-agents/&quot;&gt;web docs&lt;/a&gt;. Please use the Unity Package documentation for the most up-to-date information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The table below shows our latest release, including our &lt;code&gt;develop&lt;/code&gt; branch which is under active development and may be unstable. A few helpful guidelines:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@latest/index.html?subfolder=/manual/Versioning.html&quot;&gt;Versioning page&lt;/a&gt; overviews how we manage our GitHub releases and the versioning process for each of the ML-Agents components.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/releases&quot;&gt;Releases page&lt;/a&gt; contains details of the changes between releases.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@latest/index.html?subfolder=/manual/Migrating.html&quot;&gt;Migration page&lt;/a&gt; contains details on how to upgrade from earlier releases of the ML-Agents Toolkit.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;com.unity.ml-agents&lt;/code&gt; package is &lt;a href=&quot;https://docs.unity3d.com/2020.1/Documentation/Manual/pack-safe.html&quot;&gt;verified&lt;/a&gt; for Unity 2020.1 and later. Verified packages releases are numbered 1.0.x.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Release Date&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Source&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Download&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Python Package&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;&lt;strong&gt;Unity Package&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;Release 23&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;August 15, 2025&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/tree/release_23&quot;&gt;source&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@4.0/manual/index.html&quot;&gt;docs&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/archive/release_23.zip&quot;&gt;download&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://pypi.org/project/mlagents/1.1.0/&quot;&gt;1.1.0&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;4.0.0&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;develop (unstable)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;--&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/tree/develop&quot;&gt;source&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/tree/develop/com.unity.ml-agents/Documentation~/index.md&quot;&gt;docs&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/archive/develop.zip&quot;&gt;download&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;--&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you are a researcher interested in a discussion of Unity as an AI platform, see a pre-print of our &lt;a href=&quot;https://arxiv.org/abs/1809.02627&quot;&gt;reference paper on Unity and the ML-Agents Toolkit&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you use Unity or the ML-Agents Toolkit to conduct research, we ask that you cite the following paper as a reference:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@article{juliani2020,
  title={Unity: A general platform for intelligent agents},
  author={Juliani, Arthur and Berges, Vincent-Pierre and Teng, Ervin and Cohen, Andrew and Harper, Jonathan and Elion, Chris and Goy, Chris and Gao, Yuan and Henry, Hunter and Mattar, Marwan and Lange, Danny},
  journal={arXiv preprint arXiv:1809.02627},
  url={https://arxiv.org/pdf/1809.02627.pdf},
  year={2020}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally, if you use the MA-POCA trainer in your research, we ask that you cite the following paper as a reference:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@article{cohen2022,
  title={On the Use and Misuse of Absorbing States in Multi-agent Reinforcement Learning},
  author={Cohen, Andrew and Teng, Ervin and Berges, Vincent-Pierre and Dong, Ruo-Ping and Henry, Hunter and Mattar, Marwan and Zook, Alexander and Ganguly, Sujoy},
  journal={RL in Games Workshop AAAI 2022},
  url={http://aaai-rlg.mlanctot.info/papers/AAAI22-RLG_paper_32.pdf},
  year={2022}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Additional Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discussions.unity.com/tag/ml-agents&quot;&gt;Unity Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLzDRvYVwl53vehwiN_odYJkPBzcqFw110&quot;&gt;ML-Agents tutorials by CodeMonkeyUnity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://huggingface.co/learn/deep-rl-course/en/unit5/introduction&quot;&gt;Introduction to ML-Agents by Huggingface&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discussions.unity.com/t/post-your-ml-agents-project/816756&quot;&gt;Community created ML-Agents projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://huggingface.co/models?library=ml-agents&quot;&gt;ML-Agents models on Huggingface&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@latest/index.html?subfolder=/manual/Blog-posts.html&quot;&gt;Blog posts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.com/channels/489222168727519232/1202574086115557446&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community and Feedback&lt;/h2&gt; 
&lt;p&gt;The ML-Agents Toolkit is an open-source project and we encourage and welcome contributions. If you wish to contribute, be sure to review our &lt;a href=&quot;https://docs.unity3d.com/Packages/com.unity.ml-agents@latest/index.html?subfolder=/manual/CONTRIBUTING.html&quot;&gt;contribution guidelines&lt;/a&gt; and &lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/raw/release/4.0.0/CODE_OF_CONDUCT.md&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For problems with the installation and setup of the ML-Agents Toolkit, or discussions about how to best setup or train your agents, please create a new thread on the &lt;a href=&quot;https://discussions.unity.com/tag/ml-agents&quot;&gt;Unity ML-Agents discussion forum&lt;/a&gt;. Be sure to include as many details as possible to help others assist you effectively. If you run into any other problems using the ML-Agents Toolkit or have a specific feature request, please &lt;a href=&quot;https://github.com/Unity-Technologies/ml-agents/issues&quot;&gt;submit a GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please tell us which samples you would like to see shipped with the ML-Agents Unity package by replying to &lt;a href=&quot;https://discussions.unity.com/t/help-shape-the-future-of-ml-agents/1661019&quot;&gt;this discussion thread&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;In order to improve the developer experience for Unity ML-Agents Toolkit, we have added in-editor analytics. Please refer to &quot;Information that is passively collected by Unity&quot; in the &lt;a href=&quot;https://unity3d.com/legal/privacy-policy&quot;&gt;Unity Privacy Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>abpframework/abp</title>
      <link>https://github.com/abpframework/abp</link>
      <description>&lt;p&gt;Open-source web application framework for ASP.NET Core! Offers an opinionated architecture to build enterprise software solutions with best practices on top of the .NET. Provides the fundamental infrastructure, cross-cutting-concern implementations, startup templates, application modules, UI themes, tooling and documentation.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/abpframework/abp/build-and-test.yml?branch=dev&amp;amp;style=flat-square&quot; alt=&quot;build and test&quot; /&gt; 🔹 &lt;a href=&quot;https://codecov.io/gh/abpframework/abp&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/abpframework/abp/branch/dev/graph/badge.svg?token=jUKLCxa6HF&quot; alt=&quot;codecov&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://www.nuget.org/packages/Volo.Abp.Core&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Volo.Abp.Core.svg?style=flat-square&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://www.nuget.org/packages/Volo.Abp.Core&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Volo.Abp.Core.svg?style=flat-square&quot; alt=&quot;NuGet (with prereleases)&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://abp.io/docs/latest/release-info/nightly-builds&quot;&gt;&lt;img src=&quot;https://img.shields.io/myget/abp-nightly/vpre/Volo.Abp.svg?style=flat-square&quot; alt=&quot;MyGet (nightly builds)&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://www.nuget.org/packages/Volo.Abp.Core&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/Volo.Abp.Core.svg?style=flat-square&quot; alt=&quot;NuGet Download&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://github.com/abpframework/abp/raw/dev/CODE_OF_CONDUCT.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true&quot; alt=&quot;Code of Conduct&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://cla-assistant.io/abpframework/abp&quot;&gt;&lt;img src=&quot;https://cla-assistant.io/readme/badge/abpframework/abp&quot; alt=&quot;CLA Signed&quot; /&gt;&lt;/a&gt; 🔹 &lt;a href=&quot;https://abp.io/join-discord&quot;&gt;&lt;img src=&quot;https://discord.com/api/guilds/951497912645476422/widget.png?style=shield&quot; alt=&quot;Discord Shield&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://abp.io/&quot;&gt;ABP&lt;/a&gt; offers an &lt;strong&gt;opinionated architecture&lt;/strong&gt; to build enterprise software solutions with &lt;strong&gt;best practices&lt;/strong&gt; on top of the &lt;strong&gt;.NET&lt;/strong&gt; and the &lt;strong&gt;ASP.NET Core&lt;/strong&gt; platforms. It provides the fundamental infrastructure, production-ready startup templates, pre-built application modules, UI themes, tooling, guides and documentation to implement that architecture properly and &lt;strong&gt;automate the details&lt;/strong&gt; and repetitive works as much as possible.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://abp.io&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/c4356ec7-4d0f-4e00-a1d2-fc74ad985fb8&quot; alt=&quot;ABP Platform&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/get-started&quot;&gt;The Getting Started guide&lt;/a&gt; can be used to create and run ABP-based solutions with different options and details.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/tutorials/todo&quot;&gt;Quick Start&lt;/a&gt; is a single-part, quick-start tutorial to build a simple application with the ABP Framework. Start with this tutorial if you want to understand how ABP works quickly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/tutorials/book-store&quot;&gt;Web Application Development Tutorial&lt;/a&gt; is a complete tutorial on developing a full-stack web application with all aspects of a real-life solution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/tutorials/modular-crm/index&quot;&gt;Modular Monolith Application&lt;/a&gt;: A multi-part tutorial that demonstrates how to create application modules, compose and communicate them to build a monolith modular web application.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What ABP Provides?&lt;/h2&gt; 
&lt;p&gt;ABP bridges the gap between ASP.NET Core and real-world business application requirements, and makes you focus on your own business code.&lt;/p&gt; 
&lt;p&gt;The following diagram contains the core components of the &lt;strong&gt;ABP Platform&lt;/strong&gt; and shows how ABP sits between &lt;strong&gt;ASP.NET Core&lt;/strong&gt; and &lt;strong&gt;Your Application&lt;/strong&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/abpframework/abp/dev/docs/en/images/abp-overall-diagram.png&quot; alt=&quot;abp-overall-diagram&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Architecture&lt;/h3&gt; 
&lt;p&gt;ABP offers a complete architectural model to build modern enterprise software solutions. Here, the fundamental architectural structures offered and first-class supported by ABP:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/framework/architecture/domain-driven-design&quot;&gt;Domain Driven Design (DDD)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/framework/architecture/microservices&quot;&gt;Microservices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/framework/architecture/modularity/basics&quot;&gt;Modularity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/framework/architecture/multi-tenancy&quot;&gt;Multi-Tenancy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Infrastructure&lt;/h3&gt; 
&lt;p&gt;There are a lot of infrastructure features provided by the ABP Framework to achieve real-world scenarios easier, like &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/event-bus&quot;&gt;Event Bus&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/background-jobs&quot;&gt;Background Job System&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/audit-logging&quot;&gt;Audit Logging&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/blob-storing&quot;&gt;BLOB Storing&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/data-seeding&quot;&gt;Data Seeding&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/data-filtering&quot;&gt;Data Filtering&lt;/a&gt;, and much more.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://abp.io/framework&quot;&gt;See ABP Framework features&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Cross-Cutting Concerns&lt;/h4&gt; 
&lt;p&gt;ABP also simplifies (and even automates wherever possible) cross-cutting concerns and common non-functional requirements like &lt;a href=&quot;https://abp.io/docs/latest/framework/fundamentals/exception-handling&quot;&gt;Exception Handling&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/fundamentals/validation&quot;&gt;Validation&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/fundamentals/authorizationn&quot;&gt;Authorization&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/fundamentals/localization&quot;&gt;Localization&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/fundamentals/caching&quot;&gt;Caching&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/fundamentals/dependency-injection&quot;&gt;Dependency Injection&lt;/a&gt;, &lt;a href=&quot;https://abp.io/docs/latest/framework/infrastructure/settings&quot;&gt;Setting Management&lt;/a&gt;, etc.&lt;/p&gt; 
&lt;h3&gt;Application Modules&lt;/h3&gt; 
&lt;p&gt;ABP is a modular framework and the &lt;a href=&quot;https://abp.io/modules&quot;&gt;application modules&lt;/a&gt; provide &lt;strong&gt;pre-built application functionalities&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Some examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/modules/Volo.Account.Pro&quot;&gt;&lt;strong&gt;Account&lt;/strong&gt;&lt;/a&gt;: Provides UI for the account management and allows user to login/register to the application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/modules/Volo.CmsKit&quot;&gt;CMS Kit&lt;/a&gt;: Brings CMS (Content Management System) capabilities to your application.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://abp.io/modules/Volo.Identity.Pro&quot;&gt;Identity&lt;/a&gt;&lt;/strong&gt;: Manages organization units, roles, users and their permissions based on the Microsoft Identity library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/modules/Volo.OpenIddict.Pro&quot;&gt;&lt;strong&gt;OpenIddict&lt;/strong&gt;&lt;/a&gt;: Integrates to OpenIddict library and provides a management UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/modules/Volo.Saas&quot;&gt;&lt;strong&gt;SaaS&lt;/strong&gt;&lt;/a&gt;: Manages tenants and editions for a &lt;a href=&quot;https://abp.io/docs/latest/framework/architecture/multi-tenancy&quot;&gt;multi-tenant&lt;/a&gt; (SaaS) application.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href=&quot;https://abp.io/modules&quot;&gt;all official modules&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Startup Templates&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://abp.io/docs/latest/solution-templates&quot;&gt;Startup templates&lt;/a&gt; are pre-built Visual Studio solution templates. You can create your own solution based on these templates to &lt;strong&gt;immediately start your development&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Tooling&lt;/h3&gt; 
&lt;p&gt;ABP provides CLI and UI tools to simplify your daily development work flows.&lt;/p&gt; 
&lt;h4&gt;ABP Studio&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://abp.io/studio&quot;&gt;ABP Studio&lt;/a&gt; is a cross-platform desktop application for ABP developers.&lt;/p&gt; 
&lt;p&gt;It is well integrated to the ABP Framework and aims to provide a comfortable development environment for you by automating things, providing insights about your solution, making develop, run and deploy your solutions much easier.&lt;/p&gt; 
&lt;h4&gt;ABP Suite&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://abp.io/suite&quot;&gt;ABP Suite&lt;/a&gt; allows you to automatically generate web pages in a matter of minutes.&lt;/p&gt; 
&lt;h4&gt;ABP CLI&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://abp.io/cli&quot;&gt;ABP CLI&lt;/a&gt; is a command line tool to perform common operations for ABP based solutions.&lt;/p&gt; 
&lt;h2&gt;Mastering ABP Framework Book&lt;/h2&gt; 
&lt;p&gt;This book will help you to gain a complete understanding of the ABP Framework and modern web application development techniques. It is written by the creator and team lead of the ABP Framework. You can buy from &lt;a href=&quot;https://www.amazon.com/gp/product/B097Z2DM8Q&quot;&gt;Amazon&lt;/a&gt; or &lt;a href=&quot;https://www.packtpub.com/product/mastering-abp-framework/9781801079242&quot;&gt;Packt Publishing&lt;/a&gt;. Find further info about the book at &lt;a href=&quot;https://abp.io/books/mastering-abp-framework&quot;&gt;abp.io/books/mastering-abp-framework&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/abpframework/abp/dev/docs/en/images/book-mastering-abp-framework.png&quot; alt=&quot;book-mastering-abp-framework&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;The Community&lt;/h2&gt; 
&lt;h3&gt;ABP Community Web Site&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://abp.io/community&quot;&gt;ABP Community&lt;/a&gt; is a central hub to publish &lt;strong&gt;articles&lt;/strong&gt; and share &lt;strong&gt;knowledge&lt;/strong&gt; about the ABP Framework.&lt;/p&gt; 
&lt;h3&gt;Blog&lt;/h3&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://abp.io/blog&quot;&gt;ABP Blog&lt;/a&gt; to learn the latest happenings in the ABP Framework.&lt;/p&gt; 
&lt;h3&gt;Samples&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://abp.io/docs/latest/samples&quot;&gt;sample projects&lt;/a&gt; built with the ABP Framework.&lt;/p&gt; 
&lt;h3&gt;Want to Contribute?&lt;/h3&gt; 
&lt;p&gt;ABP is a community-driven open-source project. See &lt;a href=&quot;https://abp.io/docs/latest/contribution&quot;&gt;the contribution guide&lt;/a&gt; if you want to participate in this project.&lt;/p&gt; 
&lt;h2&gt;Official Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io&quot;&gt;Home Website&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://abp.io/get-started&quot;&gt;Get Started&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://abp.io/framework&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest&quot;&gt;Documents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/docs/latest/samples&quot;&gt;Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/blog&quot;&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://abp.io/community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/tagged/abp&quot;&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/abpframework&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support ABP&lt;/h2&gt; 
&lt;p&gt;GitHub repository stars are an important indicator of popularity and the size of the community. If you like ABP Framework, support us by clicking the star &lt;span&gt;⭐&lt;/span&gt; on the repository.&lt;/p&gt; 
&lt;h2&gt;Discord Server&lt;/h2&gt; 
&lt;p&gt;We have a Discord server where you can chat with other ABP users. Share your ideas, report technical issues, showcase your creations, share the tips that worked for you and catch up with the latest news and announcements about ABP Framework. Join 👉 &lt;a href=&quot;https://abp.io/join-discord&quot;&gt;https://abp.io/join-discord&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AvaloniaUI/Avalonia</title>
      <link>https://github.com/AvaloniaUI/Avalonia</link>
      <description>&lt;p&gt;Develop Desktop, Embedded, Mobile and WebAssembly apps with C# and XAML. The most popular .NET UI client technology&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/AvaloniaUI&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/d55eb468-fa5c-499f-858e-54618beb6f92&quot; alt=&quot;Star_Banner@3x&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://avaloniaui.net?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7436f0e7-8aea-4cff-886a-e2faef29ca37&quot; alt=&quot;Hero&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/Avalonia&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Patrolavia/telegram-badge/master/chat.svg?sanitize=true&quot; alt=&quot;Telegram&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/AvaloniaUI/AvaloniaUI/_build/latest?definitionId=4&quot;&gt;&lt;img src=&quot;https://dev.azure.com/AvaloniaUI/AvaloniaUI/_apis/build/status/AvaloniaUI.Avalonia&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/#backers&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/backers/Avalonia?logo=opencollective&quot; alt=&quot;Backers on Open Collective&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/#sponsors&quot;&gt;&lt;img src=&quot;https://img.shields.io/opencollective/sponsors/Avalonia?logo=opencollective&quot; alt=&quot;Sponsors on Open Collective&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/sponsors/AvaloniaUI&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/sponsors/AvaloniaUI?logo=github&quot; alt=&quot;GitHub Sponsors&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/license/avaloniaui/avalonia.svg?sanitize=true&quot; alt=&quot;License&quot; /&gt; &lt;br /&gt; &lt;a href=&quot;https://www.nuget.org/packages/Avalonia&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Avalonia.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Avalonia&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/avalonia&quot; alt=&quot;downloads&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/repo-size/avaloniaui/avalonia.svg?sanitize=true&quot; alt=&quot;Size&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;📖 About&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://avaloniaui.net?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;Avalonia&lt;/a&gt; is a cross-platform UI framework for dotnet, providing a flexible styling system and supporting a wide range of platforms such as Windows, macOS, Linux, iOS, Android and WebAssembly. Avalonia is mature and production ready and is used by companies, including &lt;a href=&quot;https://avaloniaui.net/showcase#se&quot;&gt;Schneider Electric&lt;/a&gt;, &lt;a href=&quot;https://avaloniaui.net/showcase#unity&quot;&gt;Unity&lt;/a&gt;, &lt;a href=&quot;https://avaloniaui.net/showcase#rider&quot;&gt;JetBrains&lt;/a&gt; and &lt;a href=&quot;https://avaloniaui.net/showcase#github&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Considered by many to be the spiritual successor to WPF, Avalonia UI provides a familiar, modern development experience for XAML developers creating cross-platform applications. While Avalonia UI is &lt;a href=&quot;https://docs.avaloniaui.net/docs/next/get-started/wpf/&quot;&gt;similar to WPF&lt;/a&gt;, it isn&#39;t a 1:1 copy, and you&#39;ll find plenty of improvements.&lt;/p&gt; 
&lt;p&gt;For those seeking a cross-platform WPF, we have created &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/%5Bhttps://avaloniaui.net/xpf%5D(https://avaloniaui.net/xpf?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link)&quot;&gt;Avalonia XPF&lt;/a&gt;, enabling WPF applications to run on macOS and Linux with little to no code changes. Avalonia XPF is a commercial product and is licensed per-app, per-platform.&lt;/p&gt; 
&lt;h4&gt;Blog&lt;/h4&gt; 
&lt;p&gt;To see the latest announcements and read about the state of Avalonia, check out the &lt;a href=&quot;https://www.avaloniaui.net/blog?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;Avalonia UI Blog&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Breaking Changes&lt;/h4&gt; 
&lt;p&gt;You can also see what &lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia/issues/3538&quot;&gt;breaking changes&lt;/a&gt; we have planned and what our &lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia/wiki/Breaking-Changes&quot;&gt;past breaking changes&lt;/a&gt; have been.&lt;/p&gt; 
&lt;h4&gt;Awesome Avalonia&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/AvaloniaCommunity/awesome-avalonia&quot;&gt;Awesome Avalonia&lt;/a&gt; is community-curated list of awesome Avalonia UI tools, libraries, projects and resources. Go and see what people are building with Avalonia!&lt;/p&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;See our &lt;a href=&quot;https://avaloniaui.net/gettingstarted?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;Get Started&lt;/a&gt; guide to begin developing apps with Avalonia UI.&lt;/p&gt; 
&lt;h3&gt;Visual Studio&lt;/h3&gt; 
&lt;p&gt;The Avalonia &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=AvaloniaTeam.AvaloniaVS&quot;&gt;Visual Studio Extension&lt;/a&gt; contains project and control templates that will help you get started, or you can use the .NET Core CLI. For a starter guide see our &lt;a href=&quot;https://docs.avaloniaui.net/docs/getting-started&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;JetBrains Rider&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/rider/whatsnew/?mkt_tok=eyJpIjoiTURBNU1HSmhNV0kwTUdFMiIsInQiOiJtNnU2VEc1TlNLa1ZRVkROYmdZYVpYREJsaU1qdUhmS3dxSzRHczdYWHl0RVlTNDMwSFwvNUs3VENTNVM0bVcyNFdaRmVYZzVWTTF1N3VrQWNGTkJreEhlam1hMlB4UVVWcHBGM1dNOUxoXC95YnRQdGgyUXl1YmZCM3h3d3BVWWdBIn0%3D#avalonia-support&quot;&gt;JetBrains Rider&lt;/a&gt; now has official support for Avalonia.&lt;/p&gt; 
&lt;p&gt;Code completion, inspections and refactorings are supported out of the box, for XAML previewer add &lt;code&gt;https://plugins.jetbrains.com/plugins/dev/14839&lt;/code&gt; to plugin repositories and install &lt;a href=&quot;https://github.com/ForNeVeR/AvaloniaRider&quot;&gt;AvaloniaRider&lt;/a&gt; plugin.&lt;/p&gt; 
&lt;h3&gt;Avalonia Packages&lt;/h3&gt; 
&lt;p&gt;Avalonia is delivered via &lt;b&gt;NuGet&lt;/b&gt; package manager. You can find the packages here: &lt;a href=&quot;https://www.nuget.org/packages/Avalonia/&quot;&gt;https://www.nuget.org/packages/Avalonia/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Use these commands in the Package Manager console to install Avalonia manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Install-Package Avalonia
Install-Package Avalonia.Desktop
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Showcase&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://avaloniaui.net/showcase?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/42d21506-3d5a-4213-a4b4-7889a48acdc8&quot; alt=&quot;Showcase_Banner@3x&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;See what others have built with Avalonia UI on our &lt;a href=&quot;https://avaloniaui.net/showcase?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;Showcase&lt;/a&gt;. We welcome submissions!&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Avalonia development is supported by the generous sponsorship of &lt;a href=&quot;https://devolutions.net/?utm_source=pr&amp;amp;utm_medium=partnership&amp;amp;utm_campaign=avalonia&amp;amp;utm_id=C086&amp;amp;member_status=responded&quot;&gt;Devolutions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://devolutions.net/?utm_source=pr&amp;amp;utm_medium=partnership&amp;amp;utm_campaign=avalonia&amp;amp;utm_id=C086&amp;amp;member_status=responded&quot;&gt;&lt;img width=&quot;200&quot; alt=&quot;devolutions-color-hr&quot; src=&quot;https://github.com/user-attachments/assets/597e3650-0b80-496e-84b2-db51fbe7e06e&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our community hub to get early access to upcoming features, share your thoughts, and connect directly with the Avalonia team. &lt;a href=&quot;https://avaloniaui.community&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/21950b56-cd28-4574-9a0a-73bb17b89d31&quot; alt=&quot;communityannouncement-banner 1&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Bleeding Edge Builds&lt;/h2&gt; 
&lt;p&gt;We also have a &lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia/wiki/Using-nightly-build-feed&quot;&gt;nightly build&lt;/a&gt; which tracks the current state of master. Although these packages are less stable than the release on NuGet.org, you&#39;ll get all the latest features and bugfixes right away and many of our users actually prefer this feed!&lt;/p&gt; 
&lt;h2&gt;Learning&lt;/h2&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;Documentation can be found at &lt;a href=&quot;https://docs.avaloniaui.net&quot;&gt;https://docs.avaloniaui.net&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tutorials&lt;/h3&gt; 
&lt;p&gt;We also have a &lt;a href=&quot;https://docs.avaloniaui.net/docs/getting-started/programming-with-avalonia&quot;&gt;tutorial&lt;/a&gt; over there for newcomers.&lt;/p&gt; 
&lt;h3&gt;Samples&lt;/h3&gt; 
&lt;p&gt;We have a &lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia.Samples&quot;&gt;range of samples&lt;/a&gt; to help you get started.&lt;/p&gt; 
&lt;h2&gt;Building and Using&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/docs/build.md&quot;&gt;build instructions here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/Avalonia/contributors.svg?width=890&amp;amp;button=false&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please read the &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; before submitting a pull request.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community. For more information see the &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Licence&lt;/h2&gt; 
&lt;p&gt;Avalonia is licenced under the &lt;a href=&quot;https://raw.githubusercontent.com/AvaloniaUI/Avalonia/master/licence.md&quot;&gt;MIT licence&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;Donating to the project is a fantastic way to thank our valued contributors for their hard work. Your donations are shared among our community and awarded for significant contributions.&lt;/p&gt; 
&lt;p&gt;If you need support see Commercial Support section below.&lt;/p&gt; 
&lt;p&gt;Donate with BTC or use &lt;a href=&quot;https://opencollective.com/avalonia&quot;&gt;Open Collective&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;BTC&lt;/strong&gt;: bc1q05wx78qemgy9x6ytl5ljk2xrt00yqargyjm8gx&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href=&quot;https://opencollective.com/Avalonia#backer&quot;&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/Avalonia#backers&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://opencollective.com/Avalonia/backers.svg?width=890&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Commercial Support&lt;/h2&gt; 
&lt;p&gt;We have a range of &lt;a href=&quot;https://avaloniaui.net/support?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_link&quot;&gt;support plans available&lt;/a&gt; for those looking to partner with the creators of Avalonia, enabling access to the best support at every step of the development process.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Please note that donations are not considered payment for commercial support agreements. Please contact us to discuss your needs first. &lt;a href=&quot;mailto://team@avaloniaui.net&quot;&gt;team@avaloniaui.net&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Avalonia XPF - Our cross-platform WPF&lt;/h2&gt; 
&lt;p&gt;Unleash the full potential of your existing WPF apps with our cross-platform UI framework, enabling WPF apps to run on macOS and Linux without requiring expensive and risky rewrites. &lt;a href=&quot;https://avaloniaui.net/xpf?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_content=readme_ad&quot;&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/a6176267-1187-45ff-b82b-fcc7048e54b7&quot; alt=&quot;GH_Banner&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ZiggyCreatures/FusionCache</title>
      <link>https://github.com/ZiggyCreatures/FusionCache</link>
      <description>&lt;p&gt;FusionCache is an easy to use, fast and robust hybrid cache with advanced resiliency features.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/logo-256x256.png&quot; alt=&quot;FusionCache logo&quot; /&gt;&lt;/p&gt; 
 &lt;h1&gt;FusionCache&lt;/h1&gt; 
&lt;/div&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;License: MIT&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;FusionCache is an easy to use, fast and robust hybrid cache with advanced resiliency features.&lt;/h3&gt; 
&lt;p&gt;It was born after years of dealing with all sorts of different types of caches: memory, distributed, hybrid, HTTP caching, CDNs, browser cache, offline cache, you name it.&lt;/p&gt; 
&lt;p&gt;So I tried to put together these experiences and came up with FusionCache.&lt;/p&gt; 
&lt;div style=&quot;text-align:center;&quot;&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/images/diagram.png&quot; alt=&quot;FusionCache diagram&quot; /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Being a hybrid cache means it can transparently work as either a normal memory cache (L1) or as a multi-level cache (L1+L2), where the distributed 2nd level (L2) can be any implementation of the standard &lt;code&gt;IDistributedCache&lt;/code&gt; interface: this will get us better cold starts, better horizontal scalability, more resiliency and overall better performance.&lt;/p&gt; 
&lt;p&gt;FusionCache includes an optional &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Backplane.md&quot;&gt;backplane&lt;/a&gt; for realtime sync between multiple nodes and advanced resiliency features like &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/CacheStampede.md&quot;&gt;cache stampede&lt;/a&gt; protection, a &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/FailSafe.md&quot;&gt;fail-safe&lt;/a&gt; mechanism, &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Timeouts.md&quot;&gt;soft/hard timeouts&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/EagerRefresh.md&quot;&gt;eager refresh&lt;/a&gt;, full observability via &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Logging.md&quot;&gt;logging&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/OpenTelemetry.md&quot;&gt;OpenTelemetry&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Tagging.md&quot;&gt;tagging&lt;/a&gt; and much more.&lt;/p&gt; 
&lt;p&gt;It&#39;s being used in production on real-world projects with huge volumes for years, and is even used by Microsoft itself in its products like &lt;a href=&quot;https://devblogs.microsoft.com/azure-sql/data-api-builder-ga/&quot;&gt;Data API Builder&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It&#39;s also compatible with the new HybridCache from Microsoft, thanks to a &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/MicrosoftHybridCache.md&quot;&gt;powerful integration&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🏆 Awards&lt;/h2&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/google-award-128x128.png&quot; alt=&quot;Google OSS Award&quot; /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;FusionCache received the &lt;a href=&quot;https://twitter.com/jodydonetti/status/1422550932433350666&quot;&gt;Google Open Source Award&lt;/a&gt;: here is the &lt;a href=&quot;https://opensource.googleblog.com/2021/09/announcing-latest-open-source-peer-bonus-winners.html&quot;&gt;official blogpost&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📕 Getting Started&lt;/h2&gt; 
&lt;p&gt;With &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/AGentleIntroduction.md&quot;&gt;🦄 A Gentle Introduction&lt;/a&gt; you&#39;ll get yourself comfortable with the overall concepts.&lt;/p&gt; 
&lt;p&gt;Want to start using it immediately? There&#39;s a &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/#-quick-start&quot;&gt;⭐ Quick Start&lt;/a&gt; for you.&lt;/p&gt; 
&lt;p&gt;What about each global or entry option? Sure thing, there&#39;s an 🎚️ &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Options.md&quot;&gt;Options&lt;/a&gt; page for that.&lt;/p&gt; 
&lt;p&gt;Curious about what you can achieve from start to finish? There&#39;s a &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/StepByStep.md&quot;&gt;👩‍🏫 Step By Step &lt;/a&gt; guide.&lt;/p&gt; 
&lt;p&gt;In search of all the docs? There&#39;s a &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/README.md&quot;&gt;page&lt;/a&gt; for that, too.&lt;/p&gt; 
&lt;h2&gt;🧑‍🏫 Courses&lt;/h2&gt; 
&lt;p&gt;If you are interested in all things caching, I published &lt;a href=&quot;https://dometrain.com/course/getting-started-caching-in-dotnet/?ref=jody-donetti&quot;&gt;a course&lt;/a&gt; on Dometrain:&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://dometrain.com/course/getting-started-caching-in-dotnet/?ref=jody-donetti&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/images/dometrain-getting-started-cover.png&quot; alt=&quot;Caching Course on Dometrain&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;If you like the FusionCache docs, you may like it too.&lt;/p&gt; 
&lt;p&gt;But mind you, it&#39;s not just about FusionCache but about caching as a whole: we&#39;ll go from the very foundations to pretty advanced topics and scenarios. We&#39;ll cover performance, robustness, resiliency and we&#39;ll see different real-world problems and, most importantly, solutions for them.&lt;/p&gt; 
&lt;p&gt;I tried condensing 20+ years dealing with caching in one place, all in an approachable way.&lt;/p&gt; 
&lt;h2&gt;🧬 Diagrams&lt;/h2&gt; 
&lt;p&gt;Sometimes it&#39;s nice to be able to visualize the internal flow of a system, even more so for such a complex beast as an hybrid cache like FusionCache.&lt;/p&gt; 
&lt;p&gt;So, diagrams!&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Diagrams.md&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/images/diagrams.png&quot; alt=&quot;FusionCache flow diagrams&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📺 Media&lt;/h2&gt; 
&lt;p&gt;Are you more into videos?&lt;/p&gt; 
&lt;p&gt;I&#39;ve been lucky enough to be invited on some shows and podcasts here and there: you can find them in the &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Media.md&quot;&gt;Media&lt;/a&gt; section.&lt;/p&gt; 
&lt;p&gt;A good example is when the fine folks at &lt;a href=&quot;https://learn.microsoft.com/en-us/shows/on-net/&quot;&gt;On .NET&lt;/a&gt; invited me on the show to allow me to mumbling random caching stuff.&lt;/p&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=hCswI2goi7s&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/images/talks/on-dotnet-small.jpg&quot; alt=&quot;On .NET Talk&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;✔ Features&lt;/h2&gt; 
&lt;p&gt;FusionCache has a lot of features, let&#39;s see them grouped together:&lt;/p&gt; 
&lt;h4&gt;Resiliency&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/CacheStampede.md&quot;&gt;&lt;strong&gt;🛡️ Cache Stampede&lt;/strong&gt;&lt;/a&gt;: automatic protection from the Cache Stampede problem&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/FailSafe.md&quot;&gt;&lt;strong&gt;💣 Fail-Safe&lt;/strong&gt;&lt;/a&gt;: a mechanism to avoids transient failures, by reusing an expired entry as a temporary fallback&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/AutoRecovery.md&quot;&gt;&lt;strong&gt;↩️ Auto-Recovery&lt;/strong&gt;&lt;/a&gt;: self-healing for the entire cache, all automatically&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Performance &amp;amp; Scalability&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/CacheLevels.md&quot;&gt;&lt;strong&gt;🔀 L1+L2&lt;/strong&gt;&lt;/a&gt;: any implementation of &lt;code&gt;IDistributedCache&lt;/code&gt; can be used as an optional 2nd level, all transparently&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Backplane.md&quot;&gt;&lt;strong&gt;📢 Backplane&lt;/strong&gt;&lt;/a&gt;: in a multi-node scenario, it can notify the other nodes about changes in the cache, so all will be in-sync&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Timeouts.md&quot;&gt;&lt;strong&gt;⏱ Soft/Hard Timeouts&lt;/strong&gt;&lt;/a&gt;: a slow factory (or distributed cache) will not slow down your application, and no data will be wasted&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/EagerRefresh.md&quot;&gt;&lt;strong&gt;🦅 Eager Refresh&lt;/strong&gt;&lt;/a&gt;: start a non-blocking background refresh before the expiration occurs&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/ConditionalRefresh.md&quot;&gt;&lt;strong&gt;🔂 Conditional Refresh&lt;/strong&gt;&lt;/a&gt;: like HTTP Conditional Requests, but for caching&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/BackgroundDistributedOperations.md&quot;&gt;&lt;strong&gt;🚀 Background Distributed Operations&lt;/strong&gt;&lt;/a&gt;: distributed operations can easily be executed in the background, safely, for better performance&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Flexibility&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/NamedCaches.md&quot;&gt;&lt;strong&gt;📛 Named Caches&lt;/strong&gt;&lt;/a&gt;: easily work with multiple named caches, even if differently configured&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Tagging.md&quot;&gt;&lt;strong&gt;🏷️ Tagging&lt;/strong&gt;&lt;/a&gt;: tags can be associated to entries, to later expire them all at once&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Clear.md&quot;&gt;&lt;strong&gt;🧼 Clear&lt;/strong&gt;&lt;/a&gt;: clear an entire cache, even with shared L2, cache key prefix, etc&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/MicrosoftHybridCache.md&quot;&gt;&lt;strong&gt;Ⓜ️ Microsoft HybridCache&lt;/strong&gt;&lt;/a&gt;: can be used as an implementation of the new HybridCache abstraction from Microsoft, all while adding extra features&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/AdaptiveCaching.md&quot;&gt;&lt;strong&gt;🧙‍♂️ Adaptive Caching&lt;/strong&gt;&lt;/a&gt;: for when you don&#39;t know upfront the entry options (eg: &lt;code&gt;Duration&lt;/code&gt;), since they depends on the value being cached itself&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/DependencyInjection.md&quot;&gt;&lt;strong&gt;🔃 Dependency Injection + Builder&lt;/strong&gt;&lt;/a&gt;: native support for Dependency Injection, with a nice fluent interface including a Builder support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/AutoClone.md&quot;&gt;&lt;strong&gt;♊ Auto-Clone&lt;/strong&gt;&lt;/a&gt;: be sure that cached values returned can be safely modified&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/CoreMethods.md&quot;&gt;&lt;strong&gt;💫 Fully sync/async&lt;/strong&gt;&lt;/a&gt;: native support for both the synchronous and asynchronous programming model&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Plugins.md&quot;&gt;&lt;strong&gt;🧩 Plugins&lt;/strong&gt;&lt;/a&gt;: extend FusionCache with additional behavior like adding support for metrics, statistics, etc...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Observability&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/OpenTelemetry.md&quot;&gt;&lt;strong&gt;🔭 OpenTelemetry&lt;/strong&gt;&lt;/a&gt;: native observability support via OpenTelemetry&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Logging.md&quot;&gt;&lt;strong&gt;📜 Logging&lt;/strong&gt;&lt;/a&gt;: comprehensive, structured and customizable, via the standard &lt;code&gt;ILogger&lt;/code&gt; interface&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Events.md&quot;&gt;&lt;strong&gt;📞 Events&lt;/strong&gt;&lt;/a&gt;: a comprehensive set of events, both at a high level and at lower levels (memory/distributed)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;That was a lot, but not all!&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Something more 😏 ?&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;Also, FusionCache has some nice &lt;strong&gt;additional features&lt;/strong&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;✅ Portable&lt;/strong&gt;: targets .NET Standard 2.0, so it can run almost everywhere&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;✅ High Performance&lt;/strong&gt;: FusionCache is optimized to minimize CPU usage and memory allocations to get better performance and lower the cost of your infrastructure all while obtaining a more stable, error resilient application&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;✅ Null caching&lt;/strong&gt;: explicitly supports caching of &lt;code&gt;null&lt;/code&gt; values differently than &quot;no value&quot;. This creates a less ambiguous usage, and typically leads to better performance because it avoids the classic problem of not being able to differentiate between &lt;em&gt;&quot;the value was not in the cache, go check the database&quot;&lt;/em&gt; and &lt;em&gt;&quot;the value was in the cache, and it was &lt;code&gt;null&lt;/code&gt;&quot;&lt;/em&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;✅ Circuit-breaker&lt;/strong&gt;: it is possible to enable a simple circuit-breaker for when the distributed cache or the backplane become temporarily unavailable. This will prevent those components to be hit with an excessive load of requests (that would probably fail anyway) in a problematic moment, so it can gracefully get back on its feet. More advanced scenarios can be covered using a dedicated solution, like &lt;a href=&quot;https://github.com/App-vNext/Polly&quot;&gt;Polly&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;✅ Dynamic Jittering&lt;/strong&gt;: setting &lt;code&gt;JitterMaxDuration&lt;/code&gt; will add a small randomized extra duration to a cache entry&#39;s normal duration. This is useful to prevent variations of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_stampede&quot;&gt;Cache Stampede problem&lt;/a&gt; in a multi-node scenario&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;✅ Cancellation&lt;/strong&gt;: every method supports cancellation via the standard &lt;code&gt;CancellationToken&lt;/code&gt;, so it is easy to cancel an entire pipeline of operation gracefully&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;✅ Code comments&lt;/strong&gt;: every property and method is fully documented in code, with useful informations provided via IntelliSense or similar technologies&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;✅ Fully annotated for &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/nullable-references&quot;&gt;nullability&lt;/a&gt;&lt;/strong&gt;: every usage of nullable references has been annotated for a better flow analysis by the compiler&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Ⓜ️ Microsoft HybridCache&lt;/h2&gt; 
&lt;p&gt;We&#39;ve probably all heard about the new kid on the block introduced by Microsoft with .NET 9: &lt;code&gt;HybridCache&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;So what does it mean for FusionCache? Does one replace the other? Or can they somehow work together?&lt;/p&gt; 
&lt;p&gt;It&#39;s pretty cool actually, so let&#39;s &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/MicrosoftHybridCache.md&quot;&gt;find out&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;📦 Packages&lt;/h2&gt; 
&lt;p&gt;Main packages:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Version&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Downloads&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache/&quot;&gt;ZiggyCreatures.FusionCache&lt;/a&gt; &lt;br /&gt; The core package&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.OpenTelemetry/&quot;&gt;ZiggyCreatures.FusionCache.OpenTelemetry&lt;/a&gt; &lt;br /&gt; Adds native support for OpenTelemetry setup&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.OpenTelemetry/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.OpenTelemetry.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.OpenTelemetry&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Chaos/&quot;&gt;ZiggyCreatures.FusionCache.Chaos&lt;/a&gt; &lt;br /&gt; A package to add some controlled chaos, for testing&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Chaos/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Chaos.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Chaos&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Serializers:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Version&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Downloads&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson/&quot;&gt;ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson&lt;/a&gt; &lt;br /&gt; A serializer, based on Newtonsoft Json.NET&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Serialization.NewtonsoftJson&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.SystemTextJson/&quot;&gt;ZiggyCreatures.FusionCache.Serialization.SystemTextJson&lt;/a&gt; &lt;br /&gt; A serializer, based on the new System.Text.Json&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.SystemTextJson/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Serialization.SystemTextJson.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Serialization.SystemTextJson&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack/&quot;&gt;ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack&lt;/a&gt; &lt;br /&gt; A MessagePack serializer, based on the most used &lt;a href=&quot;https://github.com/neuecc/MessagePack-CSharp&quot;&gt;MessagePack&lt;/a&gt; serializer on .NET&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Serialization.NeueccMessagePack&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.ProtoBufNet/&quot;&gt;ZiggyCreatures.FusionCache.Serialization.ProtoBufNet&lt;/a&gt; &lt;br /&gt; A Protobuf serializer, based on one of the most used &lt;a href=&quot;https://github.com/protobuf-net/protobuf-net&quot;&gt;protobuf-net&lt;/a&gt; serializer on .NET&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.ProtoBufNet/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Serialization.ProtoBufNet.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Serialization.ProtoBufNet&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack/&quot;&gt;ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack&lt;/a&gt; &lt;br /&gt; A serializer based on the uber fast new serializer by Neuecc, &lt;a href=&quot;https://github.com/Cysharp/MemoryPack&quot;&gt;MemoryPack&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Serialization.CysharpMemoryPack&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.ServiceStackJson/&quot;&gt;ZiggyCreatures.FusionCache.Serialization.ServiceStackJson&lt;/a&gt; &lt;br /&gt; A serializer based on the &lt;a href=&quot;https://servicestack.net/&quot;&gt;ServiceStack&lt;/a&gt; JSON serializer&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Serialization.ServiceStackJson/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Serialization.ServiceStackJson.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Serialization.ServiceStackJson&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Backplanes:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Version&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Downloads&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Backplane.Memory/&quot;&gt;ZiggyCreatures.FusionCache.Backplane.Memory&lt;/a&gt; &lt;br /&gt; An in-memory backplane (mainly for testing)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Backplane.Memory/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Backplane.Memory.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Backplane.Memory&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis/&quot;&gt;ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis&lt;/a&gt; &lt;br /&gt; A Redis backplane, based on StackExchange.Redis&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/ZiggyCreatures.FusionCache.Backplane.StackExchangeRedis&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Third-party packages:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Version&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Downloads&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/JoeShook.ZiggyCreatures.FusionCache.Metrics.Core/&quot;&gt;JoeShook.ZiggyCreatures.FusionCache.Metrics.Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/JoeShook.ZiggyCreatures.FusionCache.Metrics.Core/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/JoeShook.ZiggyCreatures.FusionCache.Metrics.Core.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/JoeShook.ZiggyCreatures.FusionCache.Metrics.Core&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/JoeShook.ZiggyCreatures.FusionCache.Metrics.EventCounters/&quot;&gt;JoeShook.ZiggyCreatures.FusionCache.Metrics.EventCounters&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/JoeShook.ZiggyCreatures.FusionCache.Metrics.EventCounters/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/JoeShook.ZiggyCreatures.FusionCache.Metrics.EventCounters.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/JoeShook.ZiggyCreatures.FusionCache.Metrics.EventCounters&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/JoeShook.ZiggyCreatures.FusionCache.Metrics.AppMetrics/&quot;&gt;JoeShook.ZiggyCreatures.FusionCache.Metrics.AppMetrics&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://www.nuget.org/packages/JoeShook.ZiggyCreatures.FusionCache.Metrics.AppMetrics/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/JoeShook.ZiggyCreatures.FusionCache.Metrics.AppMetrics.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/JoeShook.ZiggyCreatures.FusionCache.Metrics.AppMetrics&quot; alt=&quot;Nuget&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;⭐ Quick Start&lt;/h2&gt; 
&lt;p&gt;Just install the &lt;code&gt;ZiggyCreatures.FusionCache&lt;/code&gt; Nuget package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-PowerShell&quot;&gt;PM&amp;gt; Install-Package ZiggyCreatures.FusionCache
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, let&#39;s say we have a method that loads a product from the database:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Product GetProductFromDb(int id) {
	// DATABASE CALL HERE
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(This is using the &lt;strong&gt;sync&lt;/strong&gt; programming model, but it would be equally valid with the newer &lt;strong&gt;async&lt;/strong&gt; one)&lt;/p&gt; 
&lt;p&gt;Then we create a FusionCache instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cache = new FusionCache(new FusionCacheOptions());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, if using &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/DependencyInjection.md&quot;&gt;dependency injection&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;services.AddFusionCache();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, to get the product from the cache and, if not there, get it from the database in an optimized way and cache it for &lt;code&gt;30 sec&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var id = 42;

cache.GetOrSet&amp;lt;Product&amp;gt;(
	$&quot;product:{id}&quot;,
	_ =&amp;gt; GetProductFromDb(id),
	TimeSpan.FromSeconds(30)
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That&#39;s it.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Want a little bit more 😏 ?&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;We can also specify some global options, like a default &lt;code&gt;FusionCacheEntryOptions&lt;/code&gt; object to serve as a default for each call we&#39;ll make, with a duration of &lt;code&gt;2 minutes&lt;/code&gt; and a &lt;code&gt;Low&lt;/code&gt; priority:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cache = new FusionCache(new FusionCacheOptions() {
	DefaultEntryOptions = new FusionCacheEntryOptions {
		Duration = TimeSpan.FromMinutes(2),
		Priority = CacheItemPriority.Low
	}
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Or, using DI, like this:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;services.AddFusionCache()
	.WithDefaultEntryOptions(new FusionCacheEntryOptions {
		Duration = TimeSpan.FromMinutes(2),
		Priority = CacheItemPriority.Low
	})
;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Now, imagine we want to do the same, but also:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;set the &lt;strong&gt;priority&lt;/strong&gt; of the cache item to &lt;code&gt;High&lt;/code&gt; (mainly used in the underlying memory cache)&lt;/li&gt; 
  &lt;li&gt;enable &lt;strong&gt;fail-safe&lt;/strong&gt; for &lt;code&gt;2 hours&lt;/code&gt;, to allow an expired value to be used again in case of problems with the database (&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/FailSafe.md&quot;&gt;read more&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;set a factory &lt;strong&gt;soft timeout&lt;/strong&gt; of &lt;code&gt;100 ms&lt;/code&gt;, to avoid too slow factories crumbling your application when there&#39;s a fallback value readily available (&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Timeouts.md&quot;&gt;read more&lt;/a&gt;)&lt;/li&gt; 
  &lt;li&gt;set a factory &lt;strong&gt;hard timeout&lt;/strong&gt; of &lt;code&gt;2 sec&lt;/code&gt;, so that, even if there is no fallback value to use, you will not wait undefinitely but instead an exception will be thrown to let you handle it however you want (&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Timeouts.md&quot;&gt;read more&lt;/a&gt;)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;To do all of that we simply have to change the last line (reformatted for better readability):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;cache.GetOrSet&amp;lt;Product&amp;gt;(
	$&quot;product:{id}&quot;,
	_ =&amp;gt; GetProductFromDb(id),
	// THIS IS WHERE THE MAGIC HAPPENS
	options =&amp;gt; options
		.SetDuration(TimeSpan.FromSeconds(30))
		.SetPriority(CacheItemPriority.High)
		.SetFailSafe(true, TimeSpan.FromHours(2))
		.SetFactoryTimeouts(TimeSpan.FromMilliseconds(100), TimeSpan.FromSeconds(2))
);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Basically, on top of specifying the &lt;em&gt;cache key&lt;/em&gt; and the &lt;em&gt;factory&lt;/em&gt;, instead of specifying just a &lt;em&gt;duration&lt;/em&gt; as a &lt;code&gt;TimeSpan&lt;/code&gt; we specify a &lt;code&gt;FusionCacheEntryOptions&lt;/code&gt; object - which contains all the options needed to control the behavior of FusionCache during each operation - in the form of a lambda that automatically duplicates the default entry options defined before (to copy all our defaults) while giving us a chance to modify it as we like for this specific call.&lt;/p&gt; 
 &lt;p&gt;Now let&#39;s say we really like these set of options (&lt;em&gt;priority&lt;/em&gt;, &lt;em&gt;fail-safe&lt;/em&gt; and &lt;em&gt;factory timeouts&lt;/em&gt;) and we want them to be the overall defaults, while keeping the ability to change something on a per-call basis (like the &lt;em&gt;duration&lt;/em&gt;).&lt;/p&gt; 
 &lt;p&gt;To do that we simply &lt;strong&gt;move&lt;/strong&gt; the customization of the entry options where we created the &lt;code&gt;DefaultEntryOptions&lt;/code&gt;, by changing it to something like this (the same is true for the DI way):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var cache = new FusionCache(new FusionCacheOptions() {
	DefaultEntryOptions = new FusionCacheEntryOptions()
		.SetDuration(TimeSpan.FromMinutes(2))
		.SetPriority(CacheItemPriority.High)
		.SetFailSafe(true, TimeSpan.FromHours(2))
		.SetFactoryTimeouts(TimeSpan.FromMilliseconds(100), TimeSpan.FromSeconds(2))
});
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Now these options will serve as the &lt;strong&gt;cache-wide default&lt;/strong&gt;, usable in every method call as a &quot;starting point&quot;.&lt;/p&gt; 
 &lt;p&gt;Then, we just change our method call to simply this:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;var id = 42;

cache.GetOrSet&amp;lt;Product&amp;gt;(
	$&quot;product:{id}&quot;,
	_ =&amp;gt; GetProductFromDb(id),
	options =&amp;gt; options.SetDuration(TimeSpan.FromSeconds(30))
);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The &lt;code&gt;DefaultEntryOptions&lt;/code&gt; we did set before will be duplicated and only the duration will be changed for this call.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;&lt;strong&gt;👩‍🏫 Step By Step&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;If you are in for a ride you can read a complete &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/StepByStep.md&quot;&gt;step by step example&lt;/a&gt; of why a cache is useful, why FusionCache could be even more so, how to apply most of the options available and what &lt;strong&gt;results&lt;/strong&gt; you can expect to obtain.&lt;/p&gt; 
&lt;div style=&quot;text-align:center;&quot;&gt; 
 &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/images/stepbystep-intro.png&quot; alt=&quot;FusionCache diagram&quot; /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🖥️ Simulator&lt;/h2&gt; 
&lt;p&gt;Distributed systems are, in general, quite complex to understand.&lt;/p&gt; 
&lt;p&gt;When using FusionCache with the &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/CacheLevels.md&quot;&gt;distributed cache&lt;/a&gt;, the &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Backplane.md&quot;&gt;backplane&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/AutoRecovery.md&quot;&gt;auto-recovery&lt;/a&gt; the Simulator can help us &lt;strong&gt;see&lt;/strong&gt; the whole picture.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Simulator.md&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/6jGX6ePgD3Q/maxresdefault.jpg&quot; alt=&quot;FusionCache Simulator&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🧰 Supported Platforms&lt;/h2&gt; 
&lt;p&gt;FusionCache targets &lt;code&gt;.NET Standard 2.0&lt;/code&gt; so any compatible .NET implementation is fine: this means &lt;code&gt;.NET Framework&lt;/code&gt; (the old one), &lt;code&gt;.NET Core 2+&lt;/code&gt; and &lt;code&gt;.NET 5/6/7/8+&lt;/code&gt; (the new ones), &lt;code&gt;Mono&lt;/code&gt; 5.4+ and more (see &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/net-standard#net-implementation-support&quot;&gt;here&lt;/a&gt; for a complete rundown).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: if you are running on &lt;strong&gt;.NET Framework 4.6.1&lt;/strong&gt; and want to use &lt;strong&gt;.NET Standard&lt;/strong&gt; packages Microsoft suggests to upgrade to .NET Framework 4.7.2 or higher (see the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/net-standard#net-implementation-support&quot;&gt;.NET Standard Documentation&lt;/a&gt;) to avoid some known dependency issues.&lt;/p&gt; 
&lt;h2&gt;🆎 Comparison&lt;/h2&gt; 
&lt;p&gt;There are various alternatives out there with different features, different performance characteristics (cpu/memory) and in general a different set of pros/cons.&lt;/p&gt; 
&lt;p&gt;A &lt;a href=&quot;https://raw.githubusercontent.com/ZiggyCreatures/FusionCache/main/docs/Comparison.md&quot;&gt;feature comparison&lt;/a&gt; between existing .NET caching solutions may help you choose which one to use.&lt;/p&gt; 
&lt;h2&gt;💼 Is it Production Ready &lt;span&gt;™&lt;/span&gt; ?&lt;/h2&gt; 
&lt;p&gt;Yes!&lt;/p&gt; 
&lt;p&gt;FusionCache is being used &lt;strong&gt;in production&lt;/strong&gt; on &lt;strong&gt;real world projects&lt;/strong&gt; for years, happily handling billions of requests.&lt;/p&gt; 
&lt;p&gt;Considering that the FusionCache packages have been downloaded more than &lt;strong&gt;15 million times&lt;/strong&gt; (thanks everybody!) it may very well be used even more.&lt;/p&gt; 
&lt;p&gt;Oh, and it is being used in products by Microsoft itself, like &lt;a href=&quot;https://devblogs.microsoft.com/azure-sql/data-api-builder-ga/&quot;&gt;Data API Builder&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;😍 Are you using it?&lt;/h2&gt; 
&lt;p&gt;If you find FusionCache useful please &lt;a href=&quot;https://github.com/ZiggyCreatures/FusionCache/discussions/new?category=show-and-tell&amp;amp;title=I%27m%20using%20FusionCache!&amp;amp;body=%23%23%20Scenario%0ADescribe%20how%20you%20are%20using%20FusionCache:%20commercial%20product,%20oss%20project,%20monolith,%20microservice,%20web,%20mobile%20app,%20CLI,%20etc%0A%0A%23%23%20Liked%0AWhat%20you%20liked,%20features,%20docs%20or%20anything%0A%0A%23%23%20Unliked/Missing%0AThings%20you%20didn%27t%20like%20or%20felt%20was%20missing%0A%0A%23%23%20Closing%20Thoughts%0AAny%20closing%20thoughts&quot;&gt;let me know&lt;/a&gt;, I&#39;m interested in knowing your use case!&lt;/p&gt; 
&lt;p&gt;This is the only way for me to know how it is helping people.&lt;/p&gt; 
&lt;h2&gt;💰 Support&lt;/h2&gt; 
&lt;p&gt;Nothing to do here.&lt;/p&gt; 
&lt;p&gt;After years of using a lot of open source stuff for free, this is just me trying to give something back to the community.&lt;/p&gt; 
&lt;p&gt;Will FusionCache one day switch to a commercial model? Nope, not gonna happen.&lt;/p&gt; 
&lt;p&gt;Mind you: nothing against other projects making the switch, if done in a proper way, but no thanks not interested. And FWIW I don&#39;t even accept donations, which are btw a great thing: that should tell you how much I&#39;m into this for the money.&lt;/p&gt; 
&lt;p&gt;Again, this is me trying to give something back to the community.&lt;/p&gt; 
&lt;p&gt;If you really want to talk about money, please consider making &lt;strong&gt;🩷 a donation to a good cause&lt;/strong&gt; of your choosing, and let me know about that.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QuestPDF/QuestPDF</title>
      <link>https://github.com/QuestPDF/QuestPDF</link>
      <description>&lt;p&gt;Generate and edit PDF documents in your .NET applications using the open-source QuestPDF library and its C# Fluent API. Build invoices, reports and data exports with ease.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;QuestPDF - Modern PDF library for C# developers&lt;/h1&gt; 
&lt;p&gt;Generate and manipulate PDF documents in your .NET applications &lt;br /&gt; using the open-source QuestPDF library and its C# Fluent API.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.questpdf.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/project%20homepage-2E7D32?style=for-the-badge&amp;amp;logo=googledocs&amp;amp;logoColor=white&quot; alt=&quot;QuestPDF Homepage&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.questpdf.com/license.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/LICENSE-Community%20MIT%20and%20professional-2E7D32?style=for-the-badge&amp;amp;logo=googledocs&amp;amp;logoColor=white&quot; alt=&quot;QuestPDF License&quot; /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href=&quot;https://github.com/QuestPDF/QuestPDF&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/QuestPDF/QuestPDF?style=for-the-badge&amp;amp;label=GitHub%20Stars&amp;amp;logo=github&amp;amp;color=FFEB3B&amp;amp;logoColor=white&quot; alt=&quot;GitHub Stars and Stargazers&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/QuestPDF/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/QuestPDF?style=for-the-badge&amp;amp;label=NuGet%20downloads&amp;amp;logo=nuget&amp;amp;color=0277BD&amp;amp;logoColor=white&quot; alt=&quot;Nuget package download&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Quick start 👋&lt;/h2&gt; 
&lt;p&gt;Learn how easy it is to design, implement and generate PDF documents using QuestPDF. &lt;br /&gt; Effortlessly create documents of all types such as invoices and reports.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.questpdf.com/quick-start.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/read%20quick%20start%20tutorial-0288D1?style=for-the-badge&quot; alt=&quot;Learn Quick Start tutorial&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/47d843d6-73d0-4abe-bf4e-1c3701e4a34c&quot; alt=&quot;questpdf-animation&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Please help by giving a star ⭐&lt;/h2&gt; 
&lt;p&gt;GitHub stars guide developers toward great tools. If you find this project valuable, please give it a star – it helps the community and takes just a second!&lt;/p&gt; 
&lt;img src=&quot;https://github.com/user-attachments/assets/47acb256-a67d-4108-ac67-5ea9b463fa33&quot; width=&quot;700&quot; /&gt; 
&lt;br /&gt; 
&lt;h2&gt;Code-Focused Paradigm&lt;/h2&gt; 
&lt;h3&gt;Modular and Maintainable C# Code&lt;/h3&gt; 
&lt;p&gt;Implement modular PDF layouts with reusable well-organized classes and methods. Refactor safely with IntelliSense - your logic stays seamlessly integrated with your domain code.&lt;/p&gt; 
&lt;h3&gt;Familiar Programming Concepts&lt;/h3&gt; 
&lt;p&gt;Use conditions, loops, LINQ, and extension methods to effortlessly generate dynamic, data-driven PDF documents tailored to your unique business needs.&lt;/p&gt; 
&lt;h3&gt;Git-Friendly Workflow&lt;/h3&gt; 
&lt;p&gt;Enjoy straightforward C# code reviews, meaningful pull-request diffs, and cleaner version control histories.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;.Column(column =&amp;gt;
{
    if (Model.Comments != null)
        column.Item().Text(Model.Comments);

    foreach(var item in Model.Items)
       column.Item().Element(c =&amp;gt; CreateItem(c, item);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-diff&quot;&gt;void CreateItem(IContainer container, Item item)
{
    container
-       .Background(Colors.Grey.Lighten2)
+       .Background(item.Color)
        .Padding(10)
        .Text(item.Text);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;QuestPDF Companion App&lt;/h2&gt; 
&lt;p&gt;Accelerate your development with live document preview powered by the hot-reload capability, eliminating the need for C# code recompilation.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Explore PDF document structure and hierarchy&lt;/li&gt; 
 &lt;li&gt;Quickly magnify and measure content&lt;/li&gt; 
 &lt;li&gt;Debug runtime exceptions with stack traces and code snippets&lt;/li&gt; 
 &lt;li&gt;Identify, understand and solve layout errors&lt;/li&gt; 
&lt;/ul&gt; 
&lt;picture&gt; 
 &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://github.com/user-attachments/assets/7ab596d4-eebc-44e6-b36d-c358b16ed0ba&quot; /&gt; 
 &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://github.com/user-attachments/assets/39d4c08c-6a78-4743-8837-208c0c1718fd&quot; /&gt; 
 &lt;img src=&quot;https://github.com/user-attachments/assets/ce394258-1f10-498d-b65f-26c9fbed2994&quot; width=&quot;600&quot; /&gt; 
&lt;/picture&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.questpdf.com/companion/usage.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/learn%20more-0288D1?style=for-the-badge&quot; alt=&quot;Learn about QuestPDF Companion App&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Exactly what you need&lt;/h2&gt; 
&lt;h3&gt;Comprehensive Layout Engine&lt;/h3&gt; 
&lt;p&gt;A powerful layout engine built specifically for PDF generation. Gain full control over document structure, precise content positioning, and automatic pagination for complex reports and invoices.&lt;/p&gt; 
&lt;h3&gt;Rich Toolkit&lt;/h3&gt; 
&lt;p&gt;Accelerate your PDF development workflow with a rich set of reusable components and over 50 layout elements. Easily implement data-driven documents using a Fluent C# API.&lt;/p&gt; 
&lt;h3&gt;High Performance&lt;/h3&gt; 
&lt;p&gt;Generate PDF files at scale with up to thousands of pages per second - while maintaining minimal CPU and memory usage. Perfect for high-throughput .NET applications.&lt;/p&gt; 
&lt;h3&gt;Advanced Language Support&lt;/h3&gt; 
&lt;p&gt;Create multilingual PDF documents with full support for right-to-left (RTL) languages, advanced text shaping, and bi-directional layout handling.&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Perform common PDF operations&lt;/h2&gt; 
&lt;p&gt;Leverage a powerful C# Fluent API to create, customize, and manage your PDF documents with ease.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Merge documents&lt;/li&gt; 
 &lt;li&gt;Attach files&lt;/li&gt; 
 &lt;li&gt;Extract pages&lt;/li&gt; 
 &lt;li&gt;Encrypt / decrypt&lt;/li&gt; 
 &lt;li&gt;Extend metadata – Limit access&lt;/li&gt; 
 &lt;li&gt;Optimize for Web&lt;/li&gt; 
 &lt;li&gt;Overlay / underlay&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;DocumentOperation
    .LoadFile(&quot;input.pdf&quot;)
    .TakePages(&quot;1-10&quot;)
    .MergeFile(&quot;appendix.pdf&quot;, &quot;1-z&quot;) // all pages
    .AddAttachment(new DocumentAttachment
    {
        FilePath = &quot;metadata.xml&quot;
    })
    .Encrypt(new Encryption256Bit
    {
        OwnerPassword = &quot;mypassword&quot;,
        AllowPrinting = true,
        AllowContentExtraction = false
    })
    .Save(&quot;final-document.pdf&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.questpdf.com/concepts/document-operations.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/learn%20more-0288D1?style=for-the-badge&quot; alt=&quot;Learn Document Operation API&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Multiplatform&lt;/h2&gt; 
&lt;p&gt;Supports all major operating systems and works seamlessly with leading IDEs, cloud platforms, and modern development tools.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Technologies&lt;/code&gt;: modern dotnet, legacy .NET Framework, Docker&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Operating systems&lt;/code&gt;: Windows, Linux, MacOS&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Cloud providers&lt;/code&gt;: Azure, AWS, Google Cloud&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IDE&lt;/code&gt;: Visual Studio, Visual Code, JetBrains Rider, others&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Fair and Sustainable License&lt;/h2&gt; 
&lt;p&gt;By offering free access to most users and premium licenses for larger organizations, the project maintains its commitment to excellence:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Long-term and sustainable development&lt;/li&gt; 
 &lt;li&gt;Regular feature, performance, quality and security updates&lt;/li&gt; 
 &lt;li&gt;Active community and enterprise support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Free for individuals, non-profits, and businesses under $1M in annual revenue, as well as all FOSS projects.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.questpdf.com/license.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/check%20pricing-388E3C?style=for-the-badge&quot; alt=&quot;QuestPDF License and Pricing&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Let&#39;s get started&lt;/h2&gt; 
&lt;p&gt;Follow our detailed tutorial, and see how easy it is to generate a fully functional invoice with fewer than 250 lines of C# code.&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/QuestPDF/QuestPDF-Documentation/refs/heads/main/docs/public/homepage/invoice.png&quot; width=&quot;400px&quot; /&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.questpdf.com/getting-started.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/read%20getting%20started%20tutorial-0288D1?style=for-the-badge&quot; alt=&quot;Read getting started tutorial&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Community QuestPDF&lt;/h2&gt; 
&lt;p&gt;We are incredibly grateful to our .NET Community for their positive reviews and recommendations of the QuestPDF library. Your support and feedback are invaluable and motivate us to keep improving and expanding this project. Thank you for helping us grow and reach more developers!&lt;/p&gt; 
&lt;h3&gt;Nick Chapsas: The Easiest Way to Create PDFs in .NET&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_M0IgtGWnvE&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/_M0IgtGWnvE/0.jpg&quot; alt=&quot;Nick Chapsas The Easiest Way to Create PDFs in .NET&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Claudio Bernasconi: QuestPDF - The BEST PDF Generator for .NET?!&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=T89A_7dz1P8&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/T89A_7dz1P8/0.jpg&quot; alt=&quot;Claudio Bernasconi QuestPDF - The BEST PDF Generator for .NET?!&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;JetBrains: OSS Power-Ups: QuestPDF&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=-iYvZvpLX0g&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/-iYvZvpLX0g/0.jpg&quot; alt=&quot;JetBrains OSS Power-Ups: QuestPDF&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Programming with Felipe Gavilan: Generating PDFs with C# - Very Easy (two examples)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=bhR4Cmg16gs&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/bhR4Cmg16gs/0.jpg&quot; alt=&quot;Felipe Gavilan Generating PDFs with C# - Very Easy (two examples)&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Learning materials&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;PDF Generation using QuestPDF in ASP.NET Core&lt;/code&gt; written by &lt;a href=&quot;https://raw.githubusercontent.com/QuestPDF/QuestPDF/main/%5Bolufemioyedepo%5D(https://github.com/olufemioyedepo)&quot;&gt;Olufemi Oyedepo&lt;/a&gt;: &lt;a href=&quot;https://medium.com/@olufemioyedepo/pdf-generation-using-questpdf-in-asp-net-core-part-1-5ef9a63d462a&quot;&gt;Part 1&lt;/a&gt; &lt;a href=&quot;https://medium.com/@olufemioyedepo/pdf-generation-using-questpdf-in-asp-net-core-part-2-aadec120c31a&quot;&gt;Part 2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>2dust/v2rayN</title>
      <link>https://github.com/2dust/v2rayN</link>
      <description>&lt;p&gt;A GUI client for Windows, Linux and macOS, support Xray and sing-box and others&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;v2rayN&lt;/h1&gt; 
&lt;p&gt;A GUI client for Windows, Linux and macOS, support &lt;a href=&quot;https://github.com/XTLS/Xray-core&quot;&gt;Xray&lt;/a&gt; and &lt;a href=&quot;https://github.com/SagerNet/sing-box&quot;&gt;sing-box&lt;/a&gt; and &lt;a href=&quot;https://github.com/2dust/v2rayN/wiki/List-of-supported-cores&quot;&gt;others&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/2dust/v2rayN/commits/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/2dust/v2rayN&quot; alt=&quot;GitHub commit activity&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codefactor.io/repository/github/2dust/v2rayn&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/2dust/v2rayn/badge&quot; alt=&quot;CodeFactor&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/2dust/v2rayN/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/2dust/v2rayN/latest/total?logo=github&quot; alt=&quot;GitHub Releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/v2rayn&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Chat%20on-Telegram-brightgreen.svg?sanitize=true&quot; alt=&quot;Chat on Telegram&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://github.com/2dust/v2rayN/wiki&quot;&gt;Wiki&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Telegram Channel&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/github_2dust&quot;&gt;github_2dust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>studyzy/imewlconverter</title>
      <link>https://github.com/studyzy/imewlconverter</link>
      <description>&lt;p&gt;”深蓝词库转换“ 一款开源免费的输入法词库转换程序&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;深蓝词库转换&lt;/h1&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/studyzy/imewlconverter&quot; alt=&quot;Stars&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://github.com/studyzy/imewlconverter/actions/workflows/commit.yml/badge.svg?sanitize=true&quot; alt=&quot;Actions Check&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/license/studyzy/imewlconverter&quot; alt=&quot;License&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/repo-size/studyzy/imewlconverter&quot; alt=&quot;Repo size&quot; /&gt; &lt;a href=&quot;https://github.com/studyzy/imewlconverter&quot;&gt;&lt;img src=&quot;https://tokei.rs/b1/github/studyzy/imewlconverter&quot; alt=&quot;Code Count&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://gitter.im/studyzy/imewlconverter?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/studyzy/imewlconverter.svg?sanitize=true&quot; alt=&quot;Join the chat&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/studyzy/imewlconverter/releases&quot;&gt;&lt;img src=&quot;https://badgen.net/github/release/studyzy/imewlconverter&quot; alt=&quot;Release&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://badgen.net/github/assets-dl/studyzy/imewlconverter&quot; alt=&quot;Downloads&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;一款输入法词库转换软件，支持以下超过 20 种的输入法工具和词库&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;本程序支持批量转换（一次拖拽多个词库文件，或者按住 Ctrl 选择多个文件），支持命令行模式（在命令行下使用-h命令查看帮助），支持 Windows、Linux、MacOS。&lt;/p&gt; 
&lt;h3&gt;支持列表&lt;/h3&gt; 
&lt;p&gt;PC 端：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chinese-pyim(Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/FIT&quot;&gt;FIT 输入法(Mac)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;libpinyin(Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/MacPlist&quot;&gt;MacOS 自带简体拼音&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/QQ_Pinyin_Win&quot;&gt;QQ 拼音（文本词库和 qpyd 格式分类词库）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/QQ_Wubi&quot;&gt;QQ 五笔&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Rime&quot;&gt;Rime 输入法(Linux 中州韻、Windows 小狼毫、Mac OS 鼠鬚管)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Win10Ms_Pinyin&quot;&gt;Win10 微软拼音&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Win10Ms_Wubi&quot;&gt;Win10 微软五笔&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Baidu_PC&quot;&gt;百度拼音 PC（文本词库、bdict 格式）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Engkoo&quot;&gt;必应输入法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;仓颉平台&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Google_Pinyin&quot;&gt;谷歌拼音&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Jidian&quot;&gt;极点五笔&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Jidian&quot;&gt;极点郑码&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Lingoes_Ld2&quot;&gt;灵格斯词库 ld2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Pinyin_Jiajia&quot;&gt;拼音加加&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;手心输入法&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Sougou_Pinyin&quot;&gt;搜狗拼音（文本词库、Bin 格式备份词库和 scel 格式细胞词库）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Sougou_Wubi&quot;&gt;搜狗五笔&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Ms_Pinyin&quot;&gt;微软拼音 2010&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Xiaoxiao&quot;&gt;小小输入法（拼音、五笔、郑码、二笔）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Xiaoya_Wubi&quot;&gt;小鸭五笔&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Sina_Pinyin&quot;&gt;新浪拼音&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Yahoo&quot;&gt;雅虎奇摩输入法（注音）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/studyzy/imewlconverter/wiki/Ziguang_Pinyin&quot;&gt;紫光拼音（文本词库和 uwl 格式分类词库）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;自定义格式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;手机端：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;QQ 手机拼音&lt;/li&gt; 
 &lt;li&gt;百度手机拼音（文本词库和 bcd 格式）&lt;/li&gt; 
 &lt;li&gt;谷歌拼音输入法&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;该软件支持 6 种以上的输入法编码方法：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;仓颉&lt;/li&gt; 
 &lt;li&gt;二笔（超强二笔，青松二笔等）&lt;/li&gt; 
 &lt;li&gt;拼音（全拼、双拼）&lt;/li&gt; 
 &lt;li&gt;五笔（五笔 86、五笔 98、新世纪五笔）&lt;/li&gt; 
 &lt;li&gt;郑码&lt;/li&gt; 
 &lt;li&gt;注音&lt;/li&gt; 
 &lt;li&gt;自定义&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.fossa.com/projects/git%2Bgithub.com%2Fstudyzy%2Fimewlconverter?ref=badge_large&quot;&gt;&lt;img src=&quot;https://app.fossa.com/api/projects/git%2Bgithub.com%2Fstudyzy%2Fimewlconverter.svg?type=large&quot; alt=&quot;FOSSA Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://star-history.com/#studyzy/imewlconverter&amp;amp;Date&quot;&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=studyzy/imewlconverter&amp;amp;type=Date&quot; alt=&quot;Star History Chart&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ScottPlot/ScottPlot</title>
      <link>https://github.com/ScottPlot/ScottPlot</link>
      <description>&lt;p&gt;Interactive plotting library for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ScottPlot&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/ScottPlot/ScottPlot/actions/workflows/ci.yaml&quot;&gt;&lt;img src=&quot;https://github.com/ScottPlot/ScottPlot/actions/workflows/ci.yaml/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/ScottPlot/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/scottplot?color=004880&amp;amp;label=Downloads&amp;amp;logo=NuGet&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://scottplot.net/discord/&quot;&gt;&lt;img src=&quot;https://badgen.net/discord/members/Dru6fnY2UX?icon=discord&amp;amp;color=5562ea&amp;amp;label=Discord&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ScottPlot is a free and open-source plotting library for .NET&lt;/strong&gt; that makes it easy to interactively display large datasets. The &lt;a href=&quot;https://scottplot.net/cookbook/5.0/&quot;&gt;&lt;strong&gt;ScottPlot Cookbook&lt;/strong&gt;&lt;/a&gt; demonstrates how to create line plots, bar charts, pie graphs, scatter plots, and more with just a few lines of code. The &lt;strong&gt;&lt;a href=&quot;https://scottplot.net/demo/&quot;&gt;ScottPlot Demo&lt;/a&gt;&lt;/strong&gt; shows how to create plots in GUI environments with advanced interactive behaviors. ScottPlot supports &lt;a href=&quot;https://scottplot.net/quickstart/winforms/&quot;&gt;Windows Forms&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/wpf/&quot;&gt;WPF&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/console/&quot;&gt;Console&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/unoplatform/&quot;&gt;Uno Platform&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/blazor/&quot;&gt;Blazor&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/avalonia/&quot;&gt;Avalonia&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/eto/&quot;&gt;Eto&lt;/a&gt;, &lt;a href=&quot;https://scottplot.net/quickstart/notebook/&quot;&gt;Notebooks&lt;/a&gt;, and &lt;a href=&quot;https://scottplot.net/quickstart/&quot;&gt;more&lt;/a&gt;!&lt;/p&gt; 
&lt;h3&gt;Visit &lt;a href=&quot;https://ScottPlot.NET&quot;&gt;https://ScottPlot.NET&lt;/a&gt; for documentation and additional information&lt;/h3&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://scottplot.net&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ScottPlot/ScottPlot/main/dev/graphics/ScottPlot.gif&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://scottplot.net/cookbook/5.0/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ScottPlot/ScottPlot/main/dev/graphics/cookbook.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;Contributing:&lt;/strong&gt; We welcome contributions from the community! We invite contributions from anyone, including developers who may be new to contributing to open-source projects. Visit &lt;a href=&quot;https://ScottPlot.net/contributing/&quot;&gt;https://ScottPlot.net/contributing/&lt;/a&gt; to get started!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;License:&lt;/strong&gt; ScottPlot was created by &lt;a href=&quot;https://swharden.com/about/&quot;&gt;Scott W Harden&lt;/a&gt; and enhanced by &lt;a href=&quot;https://scottplot.net/changelog/&quot;&gt;many contributions&lt;/a&gt; from the &lt;a href=&quot;https://scottplot.net/contributors/&quot;&gt;open-source community&lt;/a&gt;. It is provided under the permissive &lt;a href=&quot;https://raw.githubusercontent.com/ScottPlot/ScottPlot/main/LICENSE&quot;&gt;MIT license&lt;/a&gt; and is free to modify and use for any purpose.&lt;/p&gt; 
&lt;p&gt;If you enjoy ScottPlot &lt;em&gt;&lt;strong&gt;give us a star!&lt;/strong&gt;&lt;/em&gt; ⭐&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/aspire</title>
      <link>https://github.com/dotnet/aspire</link>
      <description>&lt;p&gt;Tools, templates, and packages to accelerate building observable, production-ready apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Aspire&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/dotnet/aspire/actions/workflows/tests.yml&quot;&gt;&lt;img src=&quot;https://github.com/dotnet/aspire/actions/workflows/tests.yml/badge.svg?branch=main&amp;amp;event=push&quot; alt=&quot;Tests&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/dnceng-public/public/_build/latest?definitionId=274&amp;amp;branchName=main&quot;&gt;&lt;img src=&quot;https://dev.azure.com/dnceng-public/public/_apis/build/status%2Fdotnet%2Faspire%2Fdotnet.aspire?branchName=main&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspire/labels/help%20wanted&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/aspire/help%20wanted?style=flat&amp;amp;color=%24EC820&amp;amp;label=help%20wanted&quot; alt=&quot;Help Wanted&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspire/labels/good%20first%20issue&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/aspire/good%20first%20issue?style=flat&amp;amp;color=%24EC820&amp;amp;label=good%20first%20issue&quot; alt=&quot;Good First Issue&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/raNPcaaSj8&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1361488941836140614?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;label=Join%20our%20Discord&amp;amp;labelColor=512bd4&amp;amp;color=cyan&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Aspire?&lt;/h2&gt; 
&lt;p&gt;Aspire provides tools, templates, and packages for building observable, production-ready distributed apps. At the center is the app model—a code-first, single source of truth that defines your app&#39;s services, resources, and connections.&lt;/p&gt; 
&lt;p&gt;Aspire gives you a unified toolchain: launch and debug your entire app locally with one command, then deploy anywhere—Kubernetes, the cloud, or your own servers—using the same composition.&lt;/p&gt; 
&lt;h2&gt;Useful links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/dotnet/aspire/&quot;&gt;Aspire overview and documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/aspire-samples&quot;&gt;Aspire samples repository&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspire/main/docs/dogfooding-pull-requests.md&quot;&gt;Dogfooding pull requests&lt;/a&gt; - Test changes from specific pull requests locally&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Install the Aspire CLI&lt;/h3&gt; 
&lt;p&gt;To install the latest released version of the Aspire CLI:&lt;/p&gt; 
&lt;p&gt;On Windows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;iex &quot;&amp;amp; { $(irm https://aspire.dev/install.ps1) }&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On Linux or macOS:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;curl -sSL https://aspire.dev/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you want to use the latest daily builds instead of the released version, follow the instructions in &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspire/main/docs/using-latest-daily.md&quot;&gt;docs/using-latest-daily.md&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;What is in this repo?&lt;/h2&gt; 
&lt;p&gt;The Aspire application host, dashboard, service discovery infrastructure, and all Aspire integrations. It also contains the project templates.&lt;/p&gt; 
&lt;h2&gt;How can I contribute?&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Many people all over the world have helped make Aspire better.&lt;/p&gt; 
&lt;p&gt;Follow instructions in &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspire/main/docs/contributing.md&quot;&gt;docs/contributing.md&lt;/a&gt; for working in the code in the repository.&lt;/p&gt; 
&lt;h2&gt;Reporting security issues and security bugs&lt;/h2&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&quot;https://www.microsoft.com/msrc/faqs-report-an-issue&quot;&gt;Security TechCenter&lt;/a&gt;. You can also find these instructions in this repo&#39;s &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspire/main/SECURITY.md&quot;&gt;Security doc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also see info about related &lt;a href=&quot;https://www.microsoft.com/msrc/bounty-dot-net-core&quot;&gt;Microsoft .NET Core and ASP.NET Core Bug Bounty Program&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Note on containers used by Aspire resource and client integrations&lt;/h3&gt; 
&lt;p&gt;The .NET team cannot evaluate the underlying third-party containers for which we have API support for suitability for specific customer requirements.&lt;/p&gt; 
&lt;p&gt;You should evaluate whichever containers you chose to compose and automate with Aspire to ensure they meet your, your employers or your government’s requirements on security and safety as well as cryptographic regulations and any other regulatory or corporate standards that may apply to your use of the container.&lt;/p&gt; 
&lt;h2&gt;.NET Foundation&lt;/h2&gt; 
&lt;p&gt;Aspire is a &lt;a href=&quot;https://www.dotnetfoundation.org/projects&quot;&gt;.NET Foundation&lt;/a&gt; project.&lt;/p&gt; 
&lt;p&gt;There are many .NET related projects on GitHub.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/dotnet&quot;&gt;.NET home repo&lt;/a&gt;&amp;nbsp;- links to 100s of .NET projects, from Microsoft and the community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/aspnet/core&quot;&gt;ASP.NET Core home&lt;/a&gt; - the best place to start learning about ASP.NET Core.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This project has adopted the code of conduct defined by the &lt;a href=&quot;https://contributor-covenant.org&quot;&gt;Contributor Covenant&lt;/a&gt; to clarify expected behavior in our community. For more information, see the &lt;a href=&quot;https://www.dotnetfoundation.org/code-of-conduct&quot;&gt;.NET Foundation Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The code in this repo is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspire/main/LICENSE.TXT&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kgrzybek/modular-monolith-with-ddd</title>
      <link>https://github.com/kgrzybek/modular-monolith-with-ddd</link>
      <description>&lt;p&gt;Full Modular Monolith application with Domain-Driven Design approach.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Modular Monolith with DDD&lt;/h1&gt; 
&lt;p&gt;Full Modular Monolith .NET application with Domain-Driven Design approach.&lt;/p&gt; 
&lt;h2&gt;Announcement&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/glory_to_ukraine.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Learn, use and benefit from this project only if:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You &lt;strong&gt;condemn Russia and its military aggression against Ukraine&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;recognize that Russia is an occupant that unlawfully invaded a sovereign state&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;support Ukraine&#39;s territorial integrity, including its claims over temporarily occupied territories of Crimea and Donbas&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;reject false narratives perpetuated by Russian state propaganda&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Otherwise, leave this project immediately and educate yourself.&lt;/p&gt; 
&lt;p&gt;Putin, idi nachuj.&lt;/p&gt; 
&lt;h2&gt;CI&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kgrzybek/modular-monolith-with-ddd/workflows/Build%20Pipeline/badge.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;FrontEnd application&lt;/h2&gt; 
&lt;p&gt;FrontEnd application : &lt;a href=&quot;https://github.com/kgrzybek/modular-monolith-with-ddd-fe-react&quot;&gt;Modular Monolith With DDD: FrontEnd React application&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#1-introduction&quot;&gt;1. Introduction&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#11-purpose-of-this-repository&quot;&gt;1.1 Purpose of this Repository&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#12-out-of-scope&quot;&gt;1.2 Out of Scope&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#13-reason&quot;&gt;1.3 Reason&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#14-disclaimer&quot;&gt;1.4 Disclaimer&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#15-give-a-star&quot;&gt;1.5 Give a Star&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#16-share-it&quot;&gt;1.6 Share It&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#2-domain&quot;&gt;2. Domain&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#21-description&quot;&gt;2.1 Description&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#22-conceptual-model&quot;&gt;2.2 Conceptual Model&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#23-event-storming&quot;&gt;2.3 Event Storming&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#3-architecture&quot;&gt;3. Architecture&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#30-c4-model&quot;&gt;3.0 C4 Model&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#31-high-level-view&quot;&gt;3.1 High Level View&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#32-module-level-view&quot;&gt;3.2 Module Level View&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#33-api-and-module-communication&quot;&gt;3.3 API and Module Communication&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#34-module-requests-processing-via-cqrs&quot;&gt;3.4 Module Requests Processing via CQRS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#35-domain-model-principles-and-attributes&quot;&gt;3.5 Domain Model Principles and Attributes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#36-cross-cutting-concerns&quot;&gt;3.6 Cross-Cutting Concerns&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#37-modules-integration&quot;&gt;3.7 Modules Integration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#38-internal-processing&quot;&gt;3.8 Internal Processing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#39-security&quot;&gt;3.9 Security&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#310-unit-tests&quot;&gt;3.10 Unit Tests&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#311-architecture-decision-log&quot;&gt;3.11 Architecture Decision Log&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#312-architecture-unit-tests&quot;&gt;3.12 Architecture Unit Tests&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#313-integration-tests&quot;&gt;3.13 Integration Tests&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#314-system-integration-testing&quot;&gt;3.14 System Integration Testing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#315-event-sourcing&quot;&gt;3.15 Event Sourcing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#316-database-change-management&quot;&gt;3.16 Database change management&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#317-continuous-integration&quot;&gt;3.17 Continuous Integration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#318-static-code-analysis&quot;&gt;3.18 Static code analysis&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#319-system-under-test-sut&quot;&gt;3.19 System Under Test SUT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#320-mutation-testing&quot;&gt;3.20 Mutation Testing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#4-technology&quot;&gt;4. Technology&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#5-how-to-run&quot;&gt;5. How to Run&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#6-contribution&quot;&gt;6. Contribution&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#7-roadmap&quot;&gt;7. Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#8-authors&quot;&gt;8. Authors&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#9-license&quot;&gt;9. License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#10-inspirations-and-recommendations&quot;&gt;10. Inspirations and Recommendations&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;1. Introduction&lt;/h2&gt; 
&lt;h3&gt;1.1 Purpose of this Repository&lt;/h3&gt; 
&lt;p&gt;This is a list of the main goals of this repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing how you can implement a &lt;strong&gt;monolith&lt;/strong&gt; application in a &lt;strong&gt;modular&lt;/strong&gt; way&lt;/li&gt; 
 &lt;li&gt;Presentation of the &lt;strong&gt;full implementation&lt;/strong&gt; of an application 
  &lt;ul&gt; 
   &lt;li&gt;This is not another simple application&lt;/li&gt; 
   &lt;li&gt;This is not another proof of concept (PoC)&lt;/li&gt; 
   &lt;li&gt;The goal is to present the implementation of an application that would be ready to run in production&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Showing the application of &lt;strong&gt;best practices&lt;/strong&gt; and &lt;strong&gt;object-oriented programming principles&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of the use of &lt;strong&gt;design patterns&lt;/strong&gt;. When, how and why they can be used&lt;/li&gt; 
 &lt;li&gt;Presentation of some &lt;strong&gt;architectural&lt;/strong&gt; considerations, decisions, approaches&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation using &lt;strong&gt;Domain-Driven Design&lt;/strong&gt; approach (&lt;strong&gt;tactical&lt;/strong&gt; patterns)&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation of &lt;strong&gt;Unit Tests&lt;/strong&gt; for Domain Model (Testable Design in mind)&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation of &lt;strong&gt;Integration Tests&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation of &lt;strong&gt;Event Sourcing&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of &lt;strong&gt;C4 Model&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of &lt;strong&gt;diagram as text&lt;/strong&gt; approach&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1.2 Out of Scope&lt;/h3&gt; 
&lt;p&gt;This is a list of subjects which are out of scope for this repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Business requirements gathering and analysis&lt;/li&gt; 
 &lt;li&gt;System analysis&lt;/li&gt; 
 &lt;li&gt;Domain exploration&lt;/li&gt; 
 &lt;li&gt;Domain distillation&lt;/li&gt; 
 &lt;li&gt;Domain-Driven Design &lt;strong&gt;strategic&lt;/strong&gt; patterns&lt;/li&gt; 
 &lt;li&gt;Architecture evaluation, quality attributes analysis&lt;/li&gt; 
 &lt;li&gt;Integration, system tests&lt;/li&gt; 
 &lt;li&gt;Project management&lt;/li&gt; 
 &lt;li&gt;Infrastructure&lt;/li&gt; 
 &lt;li&gt;Containerization&lt;/li&gt; 
 &lt;li&gt;Software engineering process&lt;/li&gt; 
 &lt;li&gt;Deployment process&lt;/li&gt; 
 &lt;li&gt;Maintenance&lt;/li&gt; 
 &lt;li&gt;Documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1.3 Reason&lt;/h3&gt; 
&lt;p&gt;The reason for creating this repository is the lack of something similar. Most sample applications on GitHub have at least one of the following issues:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Very, very simple - few entities and use cases implemented&lt;/li&gt; 
 &lt;li&gt;Not finished (for example there is no authentication, logging, etc..)&lt;/li&gt; 
 &lt;li&gt;Poorly designed (in my opinion)&lt;/li&gt; 
 &lt;li&gt;Poorly implemented (in my opinion)&lt;/li&gt; 
 &lt;li&gt;Not well described&lt;/li&gt; 
 &lt;li&gt;Assumptions and decisions are not clearly explained&lt;/li&gt; 
 &lt;li&gt;Implements &quot;Orders&quot; domain - yes, everyone knows this domain, but something different is needed&lt;/li&gt; 
 &lt;li&gt;Implemented in old technology&lt;/li&gt; 
 &lt;li&gt;Not maintained&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To sum up, there are some very good examples, but there are far too few of them. This repository has the task of filling this gap at some level.&lt;/p&gt; 
&lt;h3&gt;1.4 Disclaimer&lt;/h3&gt; 
&lt;p&gt;Software architecture should always be created to resolve specific &lt;strong&gt;business problems&lt;/strong&gt;. Software architecture always supports some quality attributes and at the same time does not support others. A lot of other factors influence your software architecture - your team, opinions, preferences, experiences, technical constraints, time, budget, etc.&lt;/p&gt; 
&lt;p&gt;Always functional requirements, quality attributes, technical constraints and other factors should be considered before an architectural decision is made.&lt;/p&gt; 
&lt;p&gt;Because of the above, the architecture and implementation presented in this repository is &lt;strong&gt;one of the many ways&lt;/strong&gt; to solve some problems. Take from this repository as much as you want, use it as you like but remember to &lt;strong&gt;always pick the best solution which is appropriate to the problem class you have&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;1.5 Give a Star&lt;/h3&gt; 
&lt;p&gt;My primary focus in this project is on quality. Creating a good quality product involves a lot of analysis, research and work. It takes a lot of time. If you like this project, learned something or you are using it in your applications, please give it a star &lt;span&gt;⭐&lt;/span&gt;. This is the best motivation for me to continue this work. Thanks!&lt;/p&gt; 
&lt;h3&gt;1.6 Share It&lt;/h3&gt; 
&lt;p&gt;There are very few really good examples of this type of application. If you think this repository makes a difference and is worth it, please share it with your friends and on social networks. I will be extremely grateful.&lt;/p&gt; 
&lt;h2&gt;2. Domain&lt;/h2&gt; 
&lt;h3&gt;2.1 Description&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Domain - A sphere of knowledge, influence, or activity. The subject area to which the user applies a program is the domain of the software. &lt;a href=&quot;http://domainlanguage.com/ddd/reference/&quot;&gt;Domain-Driven Design Reference&lt;/a&gt;, Eric Evans&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The &lt;strong&gt;Meeting Groups&lt;/strong&gt; domain was selected for the purposes of this project based on the &lt;a href=&quot;https://www.meetup.com/&quot;&gt;Meetup.com&lt;/a&gt; system.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Main reasons for selecting this domain:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It is common, a lot of people use the Meetup site to organize or attend meetings&lt;/li&gt; 
 &lt;li&gt;There is a system for it, so everyone can check this implementation against a working site which supports this domain&lt;/li&gt; 
 &lt;li&gt;It is not complex so it is easy to understand&lt;/li&gt; 
 &lt;li&gt;It is not trivial - there are some business rules and logic and it is not just CRUD operations&lt;/li&gt; 
 &lt;li&gt;You don&#39;t need much specific domain knowledge unlike other domains like financing, banking, medical&lt;/li&gt; 
 &lt;li&gt;It is not big so it is easier to implement&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Meetings&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The main business entities are &lt;code&gt;Member&lt;/code&gt;, &lt;code&gt;Meeting Group&lt;/code&gt; and &lt;code&gt;Meeting&lt;/code&gt;. A &lt;code&gt;Member&lt;/code&gt; can create a &lt;code&gt;Meeting Group&lt;/code&gt;, be part of a &lt;code&gt;Meeting Group&lt;/code&gt; or can attend a &lt;code&gt;Meeting&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting Group Member&lt;/code&gt; can be an &lt;code&gt;Organizer&lt;/code&gt; of this group or a normal &lt;code&gt;Member&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Only an &lt;code&gt;Organizer&lt;/code&gt; of a &lt;code&gt;Meeting Group&lt;/code&gt; can create a new &lt;code&gt;Meeting&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting&lt;/code&gt; has attendees, not attendees (&lt;code&gt;Members&lt;/code&gt; which declare they will not attend the &lt;code&gt;Meeting&lt;/code&gt;) and &lt;code&gt;Members&lt;/code&gt; on the &lt;code&gt;Waitlist&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting&lt;/code&gt; can have an attendee limit. If the limit is reached, &lt;code&gt;Members&lt;/code&gt; can only sign up to the &lt;code&gt;Waitlist&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting Attendee&lt;/code&gt; can bring guests to the &lt;code&gt;Meeting&lt;/code&gt;. The number of guests allowed is an attribute of the &lt;code&gt;Meeting&lt;/code&gt;. Bringing guests can be unallowed.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting Attendee&lt;/code&gt; can have one of two roles: &lt;code&gt;Attendee&lt;/code&gt; or &lt;code&gt;Host&lt;/code&gt;. A &lt;code&gt;Meeting&lt;/code&gt; must have at least one &lt;code&gt;Host&lt;/code&gt;. The &lt;code&gt;Host&lt;/code&gt; is a special role which grants permission to edit &lt;code&gt;Meeting&lt;/code&gt; information or change the attendees list.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Member&lt;/code&gt; can comment &lt;code&gt;Meetings&lt;/code&gt;. A &lt;code&gt;Member&lt;/code&gt; can reply to, like other &lt;code&gt;Comments&lt;/code&gt;. &lt;code&gt;Organizer&lt;/code&gt; manages commenting of &lt;code&gt;Meeting&lt;/code&gt; by &lt;code&gt;Meeting Commenting Configuration&lt;/code&gt;. &lt;code&gt;Organizer&lt;/code&gt; can delete any &lt;code&gt;Comment&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;Meeting Group&lt;/code&gt; must have an organizer with active &lt;code&gt;Subscription&lt;/code&gt;. One organizer can cover 3 &lt;code&gt;Meeting Groups&lt;/code&gt; by his &lt;code&gt;Subscription&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, Meeting organizer can set an &lt;code&gt;Event Fee&lt;/code&gt;. Each &lt;code&gt;Meeting Attendee&lt;/code&gt; is obliged to pay the fee. All guests should be paid by &lt;code&gt;Meeting Attendee&lt;/code&gt; too.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Administration&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;To create a new &lt;code&gt;Meeting Group&lt;/code&gt;, a &lt;code&gt;Member&lt;/code&gt; needs to propose the group. A &lt;code&gt;Meeting Group Proposal&lt;/code&gt; is sent to &lt;code&gt;Administrators&lt;/code&gt;. An &lt;code&gt;Administrator&lt;/code&gt; can accept or reject a &lt;code&gt;Meeting Group Proposal&lt;/code&gt;. If a &lt;code&gt;Meeting Group Proposal&lt;/code&gt; is accepted, a &lt;code&gt;Meeting Group&lt;/code&gt; is created.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Payments&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;Member&lt;/code&gt; who is the &lt;code&gt;Payer&lt;/code&gt; can buy the &lt;code&gt;Subscription&lt;/code&gt;. He needs to pay the &lt;code&gt;Subscription Payment&lt;/code&gt;. &lt;code&gt;Subscription&lt;/code&gt; can expire so &lt;code&gt;Subscription Renewal&lt;/code&gt; is required (by &lt;code&gt;Subscription Renewal Payment&lt;/code&gt; payment to keep &lt;code&gt;Subscription&lt;/code&gt; active).&lt;/p&gt; 
&lt;p&gt;When the &lt;code&gt;Meeting&lt;/code&gt; fee is required, the &lt;code&gt;Payer&lt;/code&gt; needs to pay &lt;code&gt;Meeting Fee&lt;/code&gt; (through &lt;code&gt;Meeting Fee Payment&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Users&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;Administrator&lt;/code&gt;, &lt;code&gt;Member&lt;/code&gt; and &lt;code&gt;Payer&lt;/code&gt; is a &lt;code&gt;User&lt;/code&gt;. To be a &lt;code&gt;User&lt;/code&gt;, &lt;code&gt;User Registration&lt;/code&gt; is required and confirmed.&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;User&lt;/code&gt; is assigned one or more &lt;code&gt;User Role&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;User Role&lt;/code&gt; has set of &lt;code&gt;Permissions&lt;/code&gt;. A &lt;code&gt;Permission&lt;/code&gt; defines whether &lt;code&gt;User&lt;/code&gt; can invoke a particular action.&lt;/p&gt; 
&lt;h3&gt;2.2 Conceptual Model&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Conceptual Model - A conceptual model is a representation of a system, made of the composition of concepts that are used to help people know, understand, or simulate a subject the model represents. &lt;a href=&quot;https://en.wikipedia.org/wiki/Conceptual_model&quot;&gt;Wikipedia - Conceptual model&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Conceptual Model&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;PlantUML version: &lt;img src=&quot;https://www.plantuml.com/plantuml/proxy?cache=no&amp;amp;src=https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/PlantUML/Conceptual_Model.puml&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;VisualParadigm version (not maintained, only for demonstration): &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Conceptual_Model.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Conceptual Model of commenting feature&lt;/strong&gt; &lt;img src=&quot;https://www.plantuml.com/plantuml/proxy?src=https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/PlantUML/Commenting_Conceptual_Model.puml&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;2.3 Event Storming&lt;/h3&gt; 
&lt;p&gt;While a Conceptual Model focuses on structures and relationships between them, &lt;strong&gt;behavior&lt;/strong&gt; and &lt;strong&gt;events&lt;/strong&gt; that occur in our domain are more important.&lt;/p&gt; 
&lt;p&gt;There are many ways to show behavior and events. One of them is a light technique called &lt;a href=&quot;https://www.eventstorming.com/&quot;&gt;Event Storming&lt;/a&gt; which is becoming more popular. Below are presented 3 main business processes using this technique: user registration, meeting group creation and meeting organization.&lt;/p&gt; 
&lt;p&gt;Note: Event Storming is a light, live workshop. One of the possible outputs of this workshop is presented here. Even if you are not doing Event Storming workshops, this type of process presentation can be very valuable to you and your stakeholders.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;User Registration process&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/User_Registration.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Meeting Group creation&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Meeting_Group_Creation.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Meeting organization&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Meeting_Organization.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Payments&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Payments_EventStorming_Design.jpg&quot; alt=&quot;&quot; /&gt; &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Payments_EventStorming_Design_HighRes.jpg&quot;&gt;Download high resolution file&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;3. Architecture&lt;/h2&gt; 
&lt;h3&gt;3.0 C4 Model&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://c4model.com/&quot;&gt;C4 model&lt;/a&gt; is a lean graphical notation technique for modelling the architecture of software systems. &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;As can be found on the website of the author of this model (&lt;a href=&quot;https://simonbrown.je/&quot;&gt;Simon Brown&lt;/a&gt;): &lt;em&gt;The C4 model was created as a way to help software development teams describe and communicate software architecture, both during up-front design sessions and when retrospectively documenting an existing codebase&lt;/em&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Model C4&lt;/em&gt; defines 4 levels (views) of the system architecture: &lt;em&gt;System Context&lt;/em&gt;, &lt;em&gt;Container&lt;/em&gt;, &lt;em&gt;Component&lt;/em&gt; and &lt;em&gt;Code&lt;/em&gt;. Below are examples of each of these levels that describe the architecture of this system. &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: The &lt;a href=&quot;https://plantuml.com/&quot;&gt;PlantUML&lt;/a&gt; (diagram as text) component was used to describe all C4 model levels. Additionally, for levels C1-C3, a &lt;a href=&quot;https://github.com/plantuml-stdlib/C4-PlantUML&quot;&gt;C4-PlantUML&lt;/a&gt; plug-in connecting PlantUML with the C4 model was used&lt;/em&gt;.&lt;/p&gt; 
&lt;h4&gt;3.0.1 C1 System Context&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;http://www.plantuml.com/plantuml/png/7OrDgeD048JtxnGl1z0ca5LMGWuYutIZulIqz0_6d3vZDbLG5Dytc2VruF9tMsikWHHQ_XVttPu0cev-Nds9AOmqItMgtcTXs6Rzd1Djm89HadOiLKgxTiSLY0YSp4a19Hky7f3levrjuV77UNk_Nzg1AhR-0W00&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.2 C2 Container&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/C4/C2_Containers.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.3 C3 Component (high-level)&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/C4/C3_Components.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.4 C3 Component (module-level)&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;http://www.plantuml.com/plantuml/png/jLHFRzCm5B_dKsI1GojjBOKn5QH9wxeTAgrem7QUdEGrjHJRaVqCgX3V7QVUl7XkbnA2BusUVt_y_7xrXK8YKRCoEi8rC8Yhab0U7L6UbJg7U8rOgS_ZiIG_HmN5jKwr0fa9Zi1nb0asDWHU2vmep4kQZkUd9xTrwNvvCsP48KXJUfWBLWbUSwhQB9hbkIlTaMAGC02al539SVmsBUQY5F8yUNEQmRkpZyamn9ESKKuLIe9KS9y57zBfsNGN2twOBtMfNzYy_pIPJ4bTMmcEJzNLTXcPwFj68R27Iw5vJkHca4sEusIvYPUFXuuj81d6lwBOB0TacoV8hA8lEBFRXIFKovrqGBROUj_yZBvStvaz2PRWuFR3CtjKNefSbs2epifMd5lWwAWBlf94eTGPQjcK6Faxxc0tD9N6kxuw98KwVvxZiCLgLbKbpRRJQ_eqoZsON0b6gATlApr8BpX2OTDtlKrLqoNOx6vubJvtGv0qnveJ9BMmojR0oAkIlwCmB_vVoALcvfNRi-FB10dovGxEaQ-Q30yoRsOgS6vizcnhCnKwsdhFPc7k0jy0qlq8BeC-i4vYu1laiSN4fTBp-gf1my0zr4REzX3RLpjPy9W14yqc7DXA6raZ77s3qhwaUn-tUmM64W8RIV5HkvLw8Be4XHnVj3CXZCtV7P0WEOpXXk7WZL7uIMWTY0_VUxklg_u7aLstlzUcLt8unkvD42JjxFR1-gn_2L-tlY-0vvgLVm00&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.5 C4 Code (meeting group aggregate)&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;http://www.plantuml.com/plantuml/png/5OqxheD0303xTugN0x1kg58XvI3HObk0yAwHFqB9wGFDJ3FIJ1xL8flyFRQEaiHfyhz67Fu4i7gMPOirvtGsr1xSew0ss1VxVcRUeIcbL1kQTfKh7SuRH0IjUh01AJgyHi3nZLBTot7V9kvq-GS0&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;3.1 High Level View&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Architecture_high_level.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Module descriptions:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt; - Very thin ASP.NET MVC Core REST API application. Main responsibilities are: 
  &lt;ol&gt; 
   &lt;li&gt;Accept request&lt;/li&gt; 
   &lt;li&gt;Authenticate and authorize request (using User Access module)&lt;/li&gt; 
   &lt;li&gt;Delegate work to specific module sending Command or Query&lt;/li&gt; 
   &lt;li&gt;Return response&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User Access&lt;/strong&gt; - responsible for user authentication and authorization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Registrations&lt;/strong&gt; - responsible for user registration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Meetings&lt;/strong&gt; - implements Meetings Bounded Context: creating meeting groups, meetings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Administration&lt;/strong&gt; - implements Administration Bounded Context: implements administrative tasks like meeting group proposal verification&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Payments&lt;/strong&gt; - implements Payments Bounded Context: implements all functionalities associated with payments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;In Memory Events Bus&lt;/strong&gt; - Publish/Subscribe implementation to asynchronously integrate all modules using events (&lt;a href=&quot;https://en.wikipedia.org/wiki/Event-driven_architecture&quot;&gt;Event Driven Architecture&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Key assumptions:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;API contains no application logic&lt;/li&gt; 
 &lt;li&gt;API communicates with Modules using a small interface to send Queries and Commands&lt;/li&gt; 
 &lt;li&gt;Each Module has its own interface which is used by API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modules communicate each other only asynchronously using Events Bus&lt;/strong&gt; - direct method calls are not allowed&lt;/li&gt; 
 &lt;li&gt;Each Module &lt;strong&gt;has it&#39;s own data&lt;/strong&gt; in a separate schema - shared data is not allowed 
  &lt;ul&gt; 
   &lt;li&gt;Module data could be moved into separate databases if desired&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Modules can only have a dependency on the integration events assembly of other Module (see &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#32-module-level-view&quot;&gt;Module level view&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Each Module has its own &lt;a href=&quot;https://freecontent.manning.com/dependency-injection-in-net-2nd-edition-understanding-the-composition-root/&quot;&gt;Composition Root&lt;/a&gt;, which implies that each Module has its own Inversion-of-Control container&lt;/li&gt; 
 &lt;li&gt;API as a host needs to initialize each module and each module has an initialization method&lt;/li&gt; 
 &lt;li&gt;Each Module is &lt;strong&gt;highly encapsulated&lt;/strong&gt; - only required types and members are public, the rest are internal or private&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.2 Module Level View&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Module_level_diagram.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Each Module has &lt;a href=&quot;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&quot;&gt;Clean Architecture&lt;/a&gt; and consists of the following submodules (assemblies):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Application&lt;/strong&gt; - the application logic submodule which is responsible for requests processing: use cases, domain events, integration events, internal commands.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Domain&lt;/strong&gt; - Domain Model in Domain-Driven Design terms implements the applicable &lt;a href=&quot;https://martinfowler.com/bliki/BoundedContext.html&quot;&gt;Bounded Context&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Infrastructure&lt;/strong&gt; - infrastructural code responsible for module initialization, background processing, data access, communication with Events Bus and other external components or systems&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IntegrationEvents&lt;/strong&gt; - &lt;strong&gt;Contracts&lt;/strong&gt; published to the Events Bus; only this assembly can be called by other modules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/VSSolution.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Application, Domain and Infrastructure assemblies could be merged into one assembly. Some people like horizontal layering or more decomposition, some don&#39;t. Implementing the Domain Model or Infrastructure in separate assembly allows encapsulation using the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/internal&quot;&gt;&lt;code&gt;internal&lt;/code&gt;&lt;/a&gt; keyword. Sometimes Bounded Context logic is not worth it because it is too simple. As always, be pragmatic and take whatever approach you like.&lt;/p&gt; 
&lt;h3&gt;3.3 API and Module Communication&lt;/h3&gt; 
&lt;p&gt;The API only communicates with Modules in two ways: during module initialization and request processing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Module initialization&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each module has a static &lt;code&gt;Initialize&lt;/code&gt; method which is invoked in the API &lt;code&gt;Startup&lt;/code&gt; class. All configuration needed by this module should be provided as arguments to this method. All services are configured during initialization and the Composition Root is created using the Inversion-of-Control Container.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static void Initialize(
    string connectionString,
    IExecutionContextAccessor executionContextAccessor,
    ILogger logger,
    EmailsConfiguration emailsConfiguration)
{
    var moduleLogger = logger.ForContext(&quot;Module&quot;, &quot;Meetings&quot;);

    ConfigureCompositionRoot(connectionString, executionContextAccessor, moduleLogger, emailsConfiguration);

    QuartzStartup.Initialize(moduleLogger);

    EventsBusStartup.Initialize(moduleLogger);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Request processing&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each module has the same interface signature exposed to the API. It contains 3 methods: command with result, command without result and query.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public interface IMeetingsModule
{
    Task&amp;lt;TResult&amp;gt; ExecuteCommandAsync&amp;lt;TResult&amp;gt;(ICommand&amp;lt;TResult&amp;gt; command);

    Task ExecuteCommandAsync(ICommand command);

    Task&amp;lt;TResult&amp;gt; ExecuteQueryAsync&amp;lt;TResult&amp;gt;(IQuery&amp;lt;TResult&amp;gt; query);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some people say that processing a command should not return a result. This is an understandable approach but sometimes impractical, especially when you want to immediately return the ID of a newly created resource. Sometimes the boundary between Command and Query is blurry. One example is &lt;code&gt;AuthenticateCommand&lt;/code&gt; - it returns a token but it is not a query because it has a side effect.&lt;/p&gt; 
&lt;h3&gt;3.4 Module Requests Processing via CQRS&lt;/h3&gt; 
&lt;p&gt;Processing of Commands and Queries is separated by applying the architectural style/pattern &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/architecture/patterns/cqrs&quot;&gt;Command Query Responsibility Segregation (CQRS)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/CQRS.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Commands are processed using &lt;em&gt;Write Model&lt;/em&gt; which is implemented using DDD tactical patterns:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class CreateNewMeetingGroupCommandHandler : ICommandHandler&amp;lt;CreateNewMeetingGroupCommand&amp;gt;
{
    private readonly IMeetingGroupRepository _meetingGroupRepository;
    private readonly IMeetingGroupProposalRepository _meetingGroupProposalRepository;

    internal CreateNewMeetingGroupCommandHandler(
        IMeetingGroupRepository meetingGroupRepository,
        IMeetingGroupProposalRepository meetingGroupProposalRepository)
    {
        _meetingGroupRepository = meetingGroupRepository;
        _meetingGroupProposalRepository = meetingGroupProposalRepository;
    }

    public async Task Handle(CreateNewMeetingGroupCommand request, CancellationToken cancellationToken)
    {
        var meetingGroupProposal = await _meetingGroupProposalRepository.GetByIdAsync(request.MeetingGroupProposalId);

        var meetingGroup = meetingGroupProposal.CreateMeetingGroup();

        await _meetingGroupRepository.AddAsync(meetingGroup);

        
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Queries are processed using &lt;em&gt;Read Model&lt;/em&gt; which is implemented by executing raw SQL statements on database views:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class GetAllMeetingGroupsQueryHandler : IQueryHandler&amp;lt;GetAllMeetingGroupsQuery, List&amp;lt;MeetingGroupDto&amp;gt;&amp;gt;
{
    private readonly ISqlConnectionFactory _sqlConnectionFactory;

    internal GetAllMeetingGroupsQueryHandler(ISqlConnectionFactory sqlConnectionFactory)
    {
        _sqlConnectionFactory = sqlConnectionFactory;
    }

    public async Task&amp;lt;List&amp;lt;MeetingGroupDto&amp;gt;&amp;gt; Handle(GetAllMeetingGroupsQuery request, CancellationToken cancellationToken)
    {
        var connection = _sqlConnectionFactory.GetOpenConnection();

        const string sql = $&quot;&quot;&quot;
                           SELECT 
                                [MeetingGroup].[Id] as [{nameof(MeetingGroupDto.Id)}] , 
                                [MeetingGroup].[Name] as [{nameof(MeetingGroupDto.Name)}], 
                                [MeetingGroup].[Description] as [{nameof(MeetingGroupDto.Description)}] 
                                [MeetingGroup].[LocationCountryCode] as [{nameof(MeetingGroupDto.LocationCountryCode)}],
                                [MeetingGroup].[LocationCity] as [{nameof(MeetingGroupDto.LocationCity)}]
                           FROM [meetings].[v_MeetingGroups] AS [MeetingGroup]
                           &quot;&quot;&quot;;
        var meetingGroups = await connection.QueryAsync&amp;lt;MeetingGroupDto&amp;gt;(sql);

        return meetingGroups.AsList();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key advantages:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Solution is appropriate to the problem - reading and writing needs are usually different&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;Single Responsibility Principle&lt;/a&gt; (SRP) - one handler does one thing&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href=&quot;https://en.wikipedia.org/wiki/Interface_segregation_principle&quot;&gt;Interface Segregation Principle&lt;/a&gt; (ISP) - each handler implements interface with exactly one method&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href=&quot;https://refactoring.com/catalog/introduceParameterObject.html&quot;&gt;Parameter Object pattern&lt;/a&gt; - Commands and Queries are objects which are easy to serialize/deserialize&lt;/li&gt; 
 &lt;li&gt;Easy way to apply &lt;a href=&quot;https://en.wikipedia.org/wiki/Decorator_pattern&quot;&gt;Decorator pattern&lt;/a&gt; to handle cross-cutting concerns&lt;/li&gt; 
 &lt;li&gt;Supports Loose Coupling by use of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mediator_pattern&quot;&gt;Mediator pattern&lt;/a&gt; - separates invoker of request from handler of request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Disadvantage:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Mediator pattern introduces extra indirection and is harder to reason about which class handles the request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information: &lt;a href=&quot;https://www.kamilgrzybek.com/design/simple-cqrs-implementation-with-raw-sql-and-ddd/&quot;&gt;Simple CQRS implementation with raw SQL and DDD&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.5 Domain Model Principles and Attributes&lt;/h3&gt; 
&lt;p&gt;The Domain Model, which is the central and most critical part in the system, should be designed with special attention. Here are some key principles and attributes which are applied to Domain Models of each module:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;High level of encapsulation&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All members are &lt;code&gt;private&lt;/code&gt; by default, then &lt;code&gt;internal&lt;/code&gt; - only &lt;code&gt;public&lt;/code&gt; at the very edge.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;High level of PI (Persistence Ignorance)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;No dependencies to infrastructure, databases, etc. All classes are &lt;a href=&quot;https://en.wikipedia.org/wiki/Plain_old_CLR_object&quot;&gt;POCOs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rich in behavior&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All business logic is located in the Domain Model. No leaks to the application layer or elsewhere.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Low level of Primitive Obsession&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Primitive attributes of Entites grouped together using ValueObjects.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Business language&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All classes, methods and other members are named in business language used in this Bounded Context.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Testable&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The Domain Model is a critical part of the system so it should be easy to test (Testable Design).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class MeetingGroup : Entity, IAggregateRoot
{
    public MeetingGroupId Id { get; private set; }

    private string _name;

    private string _description;

    private MeetingGroupLocation _location;

    private MemberId _creatorId;

    private List&amp;lt;MeetingGroupMember&amp;gt; _members;

    private DateTime _createDate;

    private DateTime? _paymentDateTo;

    internal static MeetingGroup CreateBasedOnProposal(
        MeetingGroupProposalId meetingGroupProposalId,
        string name,
        string description,
        MeetingGroupLocation location, MemberId creatorId)
    {
        return new MeetingGroup(meetingGroupProposalId, name, description, location, creatorId);
    }

     public Meeting CreateMeeting(
            string title,
            MeetingTerm term,
            string description,
            MeetingLocation location,
            int? attendeesLimit,
            int guestsLimit,
            Term rsvpTerm,
            MoneyValue eventFee,
            List&amp;lt;MemberId&amp;gt; hostsMembersIds,
            MemberId creatorId)
        {
            this.CheckRule(new MeetingCanBeOrganizedOnlyByPayedGroupRule(_paymentDateTo));

            this.CheckRule(new MeetingHostMustBeAMeetingGroupMemberRule(creatorId, hostsMembersIds, _members));

            return new Meeting(this.Id,
                title,
                term,
                description,
                location,
                attendeesLimit,
                guestsLimit,
                rsvpTerm,
                eventFee,
                hostsMembersIds,
                creatorId);
        }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.6 Cross-Cutting Concerns&lt;/h3&gt; 
&lt;p&gt;To support &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;Single Responsibility Principle&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&quot;&gt;Don&#39;t Repeat Yourself&lt;/a&gt; principles, the implementation of cross-cutting concerns is done using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Decorator_pattern&quot;&gt;Decorator Pattern&lt;/a&gt;. Each Command processor is decorated by 3 decorators: logging, validation and unit of work.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Decorator.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Logging&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Logging decorator logs execution, arguments and processing of each Command. This way each log inside a processor has the log context of the processing command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class LoggingCommandHandlerDecorator&amp;lt;T&amp;gt; : ICommandHandler&amp;lt;T&amp;gt; where T:ICommand
{
    private readonly ILogger _logger;
    private readonly IExecutionContextAccessor _executionContextAccessor;
    private readonly ICommandHandler&amp;lt;T&amp;gt; _decorated;

    public LoggingCommandHandlerDecorator(
        ILogger logger,
        IExecutionContextAccessor executionContextAccessor,
        ICommandHandler&amp;lt;T&amp;gt; decorated)
    {
        _logger = logger;
        _executionContextAccessor = executionContextAccessor;
        _decorated = decorated;
    }
    public async Task Handle(T command, CancellationToken cancellationToken)
    {
        if (command is IRecurringCommand)
        {
            return await _decorated.Handle(command, cancellationToken);
        }
        using (
            LogContext.Push(
                new RequestLogEnricher(_executionContextAccessor),
                new CommandLogEnricher(command)))
        {
            try
            {
                this._logger.Information(
                    &quot;Executing command {Command}&quot;,
                    command.GetType().Name);

                var result = await _decorated.Handle(command, cancellationToken);

                this._logger.Information(&quot;Command {Command} processed successful&quot;, command.GetType().Name);

                return result;
            }
            catch (Exception exception)
            {
                this._logger.Error(exception, &quot;Command {Command} processing failed&quot;, command.GetType().Name);
                throw;
            }
        }
    }

    private class CommandLogEnricher : ILogEventEnricher
    {
        private readonly ICommand _command;

        public CommandLogEnricher(ICommand command)
        {
            _command = command;
        }
        public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory)
        {
            logEvent.AddOrUpdateProperty(new LogEventProperty(&quot;Context&quot;, new ScalarValue($&quot;Command:{_command.Id.ToString()}&quot;)));
        }
    }

    private class RequestLogEnricher : ILogEventEnricher
    {
        private readonly IExecutionContextAccessor _executionContextAccessor;
        public RequestLogEnricher(IExecutionContextAccessor executionContextAccessor)
        {
            _executionContextAccessor = executionContextAccessor;
        }
        public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory)
        {
            if (_executionContextAccessor.IsAvailable)
            {
                logEvent.AddOrUpdateProperty(new LogEventProperty(&quot;CorrelationId&quot;, new ScalarValue(_executionContextAccessor.CorrelationId)));
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Validation&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Validation decorator performs Command data validation. It checks rules against Command arguments using the FluentValidation library.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class ValidationCommandHandlerDecorator&amp;lt;T&amp;gt; : ICommandHandler&amp;lt;T&amp;gt; where T:ICommand
{
    private readonly IList&amp;lt;IValidator&amp;lt;T&amp;gt;&amp;gt; _validators;
    private readonly ICommandHandler&amp;lt;T&amp;gt; _decorated;

    public ValidationCommandHandlerDecorator(
        IList&amp;lt;IValidator&amp;lt;T&amp;gt;&amp;gt; validators,
        ICommandHandler&amp;lt;T&amp;gt; decorated)
    {
        this._validators = validators;
        _decorated = decorated;
    }

    public Task&amp;lt;Unit&amp;gt; Handle(T command, CancellationToken cancellationToken)
    {
        var errors = _validators
            .Select(v =&amp;gt; v.Validate(command))
            .SelectMany(result =&amp;gt; result.Errors)
            .Where(error =&amp;gt; error != null)
            .ToList();

        if (errors.Any())
        {
            var errorBuilder = new StringBuilder();

            errorBuilder.AppendLine(&quot;Invalid command, reason: &quot;);

            foreach (var error in errors)
            {
                errorBuilder.AppendLine(error.ErrorMessage);
            }

            throw new InvalidCommandException(errorBuilder.ToString(), null);
        }

        return _decorated.Handle(command, cancellationToken);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Unit Of Work&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;All Command processing has side effects. To avoid calling commit on every handler, &lt;code&gt;UnitOfWorkCommandHandlerDecorator&lt;/code&gt; is used. It additionally marks &lt;code&gt;InternalCommand&lt;/code&gt; as processed (if it is Internal Command) and dispatches all Domain Events (as part of &lt;a href=&quot;https://martinfowler.com/eaaCatalog/unitOfWork.html&quot;&gt;Unit Of Work&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class UnitOfWorkCommandHandlerDecorator&amp;lt;T&amp;gt; : ICommandHandler&amp;lt;T&amp;gt; where T:ICommand
{
    private readonly ICommandHandler&amp;lt;T&amp;gt; _decorated;
    private readonly IUnitOfWork _unitOfWork;
    private readonly MeetingsContext _meetingContext;

    public UnitOfWorkCommandHandlerDecorator(
        ICommandHandler&amp;lt;T&amp;gt; decorated,
        IUnitOfWork unitOfWork,
        MeetingsContext meetingContext)
    {
        _decorated = decorated;
        _unitOfWork = unitOfWork;
        _meetingContext = meetingContext;
    }

    public async Task Handle(T command, CancellationToken cancellationToken)
    {
        await this._decorated.Handle(command, cancellationToken);

        if (command is InternalCommandBase)
        {
            var internalCommand =
                await _meetingContext.InternalCommands.FirstOrDefaultAsync(x =&amp;gt; x.Id == command.Id,
                    cancellationToken: cancellationToken);

            if (internalCommand != null)
            {
                internalCommand.ProcessedDate = DateTime.UtcNow;
            }
        }

        await this._unitOfWork.CommitAsync(cancellationToken);

        
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.7 Modules Integration&lt;/h3&gt; 
&lt;p&gt;Integration between modules is strictly &lt;strong&gt;asynchronous&lt;/strong&gt; using Integration Events and the In Memory Event Bus as broker. In this way coupling between modules is minimal and exists only on the structure of Integration Events.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Modules don&#39;t share data&lt;/strong&gt; so it is not possible nor desirable to create a transaction which spans more than one module. To ensure maximum reliability, the &lt;a href=&quot;http://www.kamilgrzybek.com/design/the-outbox-pattern/&quot;&gt;Outbox / Inbox pattern&lt;/a&gt; is used. This pattern provides accordingly &lt;em&gt;&quot;At-Least-Once delivery&quot;&lt;/em&gt; and &lt;em&gt;&quot;At-Least-Once processing&quot;&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/OutboxInbox.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;The Outbox and Inbox is implemented using two SQL tables and a background worker for each module. The background worker is implemented using the Quartz.NET library.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Saving to Outbox:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/OutboxSave.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Processing Outbox:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/OutboxProcessing.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;3.8 Internal Processing&lt;/h3&gt; 
&lt;p&gt;The main principle of this system is that you can change its state only by calling a specific Command.&lt;/p&gt; 
&lt;p&gt;Commands can be called not only by the API, but by the processing module itself. The main use case which implements this mechanism is data processing in eventual consistency mode when we want to process something in a different process and transaction. This applies, for example, to Inbox processing because we want to do something (calling a Command) based on an Integration Event from the Inbox.&lt;/p&gt; 
&lt;p&gt;This idea is taken from Alberto&#39;s Brandolini&#39;s Event Storming picture called &quot;The picture that explains “almost” everything&quot; which shows that every side effect (domain event) is created by invoking a Command on Aggregate. See &lt;a href=&quot;https://xebia.com/blog/eventstorming-cheat-sheet/&quot;&gt;EventStorming cheat sheet&lt;/a&gt; article for more details.&lt;/p&gt; 
&lt;p&gt;Implementation of internal processing is very similar to implementation of the Outbox and Inbox. One SQL table and one background worker for processing. Each internally processing Command must inherit from &lt;code&gt;InternalCommandBase&lt;/code&gt; class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal abstract class InternalCommandBase : ICommand
{
    public Guid Id { get; }

    protected InternalCommandBase(Guid id)
    {
        this.Id = id;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is important because the &lt;code&gt;UnitOfWorkCommandHandlerDecorator&lt;/code&gt; must mark an internal Command as processed during committing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async Task Handle(T command, CancellationToken cancellationToken)
{
    await this._decorated.Handle(command, cancellationToken);

    if (command is InternalCommandBase)
    {
        var internalCommand =
            await _meetingContext.InternalCommands.FirstOrDefaultAsync(x =&amp;gt; x.Id == command.Id,
                cancellationToken: cancellationToken);

        if (internalCommand != null)
        {
            internalCommand.ProcessedDate = DateTime.UtcNow;
        }
    }

    await this._unitOfWork.CommitAsync(cancellationToken);

    
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.9 Security&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Authentication&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Authentication is implemented using JWT Token and Bearer scheme using IdentityServer. For now, only one authentication method is implemented: forms style authentication (username and password) via the OAuth2 &lt;a href=&quot;https://www.oauth.com/oauth2-servers/access-tokens/password-grant/&quot;&gt;Resource Owner Password Grant Type&lt;/a&gt;. It requires implementation of the &lt;code&gt;IResourceOwnerPasswordValidator&lt;/code&gt; interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class ResourceOwnerPasswordValidator : IResourceOwnerPasswordValidator
{
    private readonly IUserAccessModule _userAccessModule;

    public ResourceOwnerPasswordValidator(IUserAccessModule userAccessModule)
    {
        _userAccessModule = userAccessModule;
    }

    public async Task ValidateAsync(ResourceOwnerPasswordValidationContext context)
    {
        var authenticationResult = await _userAccessModule.ExecuteCommandAsync(new AuthenticateCommand(context.UserName, context.Password));
        if (!authenticationResult.IsAuthenticated)
        {
            context.Result = new GrantValidationResult(
                TokenRequestErrors.InvalidGrant,
                authenticationResult.AuthenticationError);
            return;
        }
        context.Result = new GrantValidationResult(
            authenticationResult.User.Id.ToString(),
            &quot;forms&quot;,
            authenticationResult.User.Claims);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Authorization&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Authorization is achieved by implementing &lt;a href=&quot;https://en.wikipedia.org/wiki/Role-based_access_control&quot;&gt;RBAC (Role Based Access Control)&lt;/a&gt; using Permissions. Permissions are more granular and a much better way to secure your application than Roles alone. Each User has a set of Roles and each Role contains one or more Permission. The User&#39;s set of Permissions is extracted from all Roles the User belongs to. Permissions are always checked on &lt;code&gt;Controller&lt;/code&gt; level - never Roles:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[HttpPost]
[Route(&quot;&quot;)]
[HasPermission(MeetingsPermissions.ProposeMeetingGroup)]
public async Task&amp;lt;IActionResult&amp;gt; ProposeMeetingGroup(ProposeMeetingGroupRequest request)
{
    await _meetingsModule.ExecuteCommandAsync(
        new ProposeMeetingGroupCommand(
            request.Name,
            request.Description,
            request.LocationCity,
            request.LocationCountryCode));

    return Ok();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.10 Unit Tests&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A unit test is an automated piece of code that invokes the unit of work being tested, and then checks some assumptions about a single end result of that unit. A unit test is almost always written using a unit testing framework. It can be written easily and runs quickly. It’s trustworthy, readable, and maintainable. It’s consistent in its results as long as production code hasn’t changed. &lt;a href=&quot;https://www.manning.com/books/the-art-of-unit-testing-second-edition&quot;&gt;Art of Unit Testing 2nd Edition&lt;/a&gt; Roy Osherove&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Attributes of good unit test&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automated&lt;/li&gt; 
 &lt;li&gt;Maintainable&lt;/li&gt; 
 &lt;li&gt;Runs very fast (in ms)&lt;/li&gt; 
 &lt;li&gt;Consistent, Deterministic (always the same result)&lt;/li&gt; 
 &lt;li&gt;Isolated from other tests&lt;/li&gt; 
 &lt;li&gt;Readable&lt;/li&gt; 
 &lt;li&gt;Can be executed by anyone&lt;/li&gt; 
 &lt;li&gt;Testing public API, not internal behavior (overspecification)&lt;/li&gt; 
 &lt;li&gt;Looks like production code&lt;/li&gt; 
 &lt;li&gt;Treated as production code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Unit tests should mainly test business logic (domain model): &lt;br /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/unit_tests.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Each unit test has 3 standard sections: Arrange, Act and Assert:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/UnitTestsGeneral.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Arrange&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Arrange section is responsible for preparing the Aggregate for testing the public method that we want to test. This public method is often called (from the unit tests perspective) the SUT (system under test).&lt;/p&gt; 
&lt;p&gt;Creating an Aggregate ready for testing involves &lt;strong&gt;calling one or more other public constructors/methods&lt;/strong&gt; on the Domain Model. At first it may seem that we are testing too many things at the same time, but this is not true. We need to be one hundred percent sure that the Aggregate is in a state exactly as it will be in production. This can only be ensured when we:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Use only public API of Domain Model&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Don&#39;t use &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.internalsvisibletoattribute?view=netframework-4.8&quot;&gt;InternalsVisibleToAttribute&lt;/a&gt; class 
  &lt;ul&gt; 
   &lt;li&gt;This exposes the Domain Model to the Unit Tests library, removing encapsulation so our tests and production code are treated differently and it is a very bad thing&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Don&#39;t use &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.conditionalattribute?view=netframework-4.8&quot;&gt;ConditionalAttribute&lt;/a&gt; classes - it reduces readability and increases complexity&lt;/li&gt; 
 &lt;li&gt;Don&#39;t create any special constructors/factory methods for tests (even with conditional compilation symbols) 
  &lt;ul&gt; 
   &lt;li&gt;Special constructor/factory method only for unit tests causes duplication of business logic in the test itself and focuses on state - this kind of approach causes the test to be very sensitive to changes and hard to maintain&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Don&#39;t remove encapsulation from Domain Model (for example: change keywords from &lt;code&gt;internal&lt;/code&gt;/&lt;code&gt;private&lt;/code&gt; to &lt;code&gt;public&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Don&#39;t make methods &lt;code&gt;protected&lt;/code&gt; to inherit from tested class and in this way provide access to internal methods/properties&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Isolation of external dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;There are 2 main concepts - stubs and mocks:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A stub is a controllable replacement for an existing dependency (or collaborator) in the system. By using a stub, you can test your code without dealing with the dependency directly.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A mock object is a fake object in the system that decides whether the unit test has passed or failed. It does so by verifying whether the object under test called the fake object as expected. There’s usually no more than one mock per test. &lt;a href=&quot;https://www.manning.com/books/the-art-of-unit-testing-second-edition&quot;&gt;Art of Unit Testing 2nd Edition&lt;/a&gt; Roy Osherove&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Good advice: use stubs if you need to, but try to avoid mocks. Mocking causes us to test too many internal things and leads to overspecification.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. Act&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This section is very easy - we execute &lt;strong&gt;exactly one&lt;/strong&gt; public method on aggregate (SUT).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Assert&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In this section we check expectations. There are only 2 possible outcomes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Method completed and Domain Event(s) published&lt;/li&gt; 
 &lt;li&gt;Business rule was broken&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Simple example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[Test]
public void NewUserRegistration_WithUniqueLogin_IsSuccessful()
{
    // Arrange
    var usersCounter = Substitute.For&amp;lt;IUsersCounter&amp;gt;();

    // Act
    var userRegistration =
        UserRegistration.RegisterNewUser(
            &quot;login&quot;, &quot;password&quot;, &quot;test@email&quot;,
            &quot;firstName&quot;, &quot;lastName&quot;, usersCounter);

    // Assert
    var newUserRegisteredDomainEvent = AssertPublishedDomainEvent&amp;lt;NewUserRegisteredDomainEvent&amp;gt;(userRegistration);
    Assert.That(newUserRegisteredDomainEvent.UserRegistrationId, Is.EqualTo(userRegistration.Id));
}

[Test]
public void NewUserRegistration_WithoutUniqueLogin_BreaksUserLoginMustBeUniqueRule()
{
    // Arrange
    var usersCounter = Substitute.For&amp;lt;IUsersCounter&amp;gt;();
    usersCounter.CountUsersWithLogin(&quot;login&quot;).Returns(x =&amp;gt; 1);

    // Assert
    AssertBrokenRule&amp;lt;UserLoginMustBeUniqueRule&amp;gt;(() =&amp;gt;
    {
        // Act
        UserRegistration.RegisterNewUser(
            &quot;login&quot;, &quot;password&quot;, &quot;test@email&quot;,
            &quot;firstName&quot;, &quot;lastName&quot;, usersCounter);
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Advanced example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[Test]
public void AddAttendee_WhenMemberIsAlreadyAttendeeOfMeeting_IsNotPossible()
{
    // Arrange
    var creatorId = new MemberId(Guid.NewGuid());
    var meetingTestData = CreateMeetingTestData(new MeetingTestDataOptions
    {
        CreatorId = creatorId
    });
    var newMemberId = new MemberId(Guid.NewGuid());
    meetingTestData.MeetingGroup.JoinToGroupMember(newMemberId);
    meetingTestData.Meeting.AddAttendee(meetingTestData.MeetingGroup, newMemberId, 0);

    // Assert
    AssertBrokenRule&amp;lt;MemberCannotBeAnAttendeeOfMeetingMoreThanOnceRule&amp;gt;(() =&amp;gt;
    {
        // Act
        meetingTestData.Meeting.AddAttendee(meetingTestData.MeetingGroup, newMemberId, 0);
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;CreateMeetingTestData&lt;/code&gt; method is an implementation of &lt;a href=&quot;https://blog.ploeh.dk/2009/02/13/SUTFactory/&quot;&gt;SUT Factory&lt;/a&gt; described by Mark Seemann which allows keeping common creation logic in one place:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;protected MeetingTestData CreateMeetingTestData(MeetingTestDataOptions options)
{
    var proposalMemberId = options.CreatorId ?? new MemberId(Guid.NewGuid());
    var meetingProposal = MeetingGroupProposal.ProposeNew(
        &quot;name&quot;, &quot;description&quot;,
        new MeetingGroupLocation(&quot;Warsaw&quot;, &quot;PL&quot;), proposalMemberId);

    meetingProposal.Accept();

    var meetingGroup = meetingProposal.CreateMeetingGroup();

    meetingGroup.UpdatePaymentInfo(DateTime.Now.AddDays(1));

    var meetingTerm = options.MeetingTerm ??
                      new MeetingTerm(DateTime.UtcNow.AddDays(1), DateTime.UtcNow.AddDays(2));

    var rsvpTerm = options.RvspTerm ?? Term.NoTerm;
    var meeting = meetingGroup.CreateMeeting(&quot;title&quot;,
        meetingTerm,
        &quot;description&quot;,
        new MeetingLocation(&quot;Name&quot;, &quot;Address&quot;, &quot;PostalCode&quot;, &quot;City&quot;),
        options.AttendeesLimit,
        options.GuestsLimit,
        rsvpTerm,
        MoneyValue.Zero,
        new List&amp;lt;MemberId&amp;gt;(),
        proposalMemberId);

    DomainEventsTestHelper.ClearAllDomainEvents(meetingGroup);

    return new MeetingTestData(meetingGroup, meeting);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.11 Architecture Decision Log&lt;/h3&gt; 
&lt;p&gt;All Architectural Decisions (AD) are documented in the &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/architecture-decision-log&quot;&gt;Architecture Decision Log (ADL)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;More information about documenting architecture-related decisions in this way : &lt;a href=&quot;https://github.com/joelparkerhenderson/architecture_decision_record&quot;&gt;https://github.com/joelparkerhenderson/architecture_decision_record&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.12 Architecture Unit Tests&lt;/h3&gt; 
&lt;p&gt;In some cases it is not possible to enforce the application architecture, design or established conventions using compiler (compile-time). For this reason, code implementations can diverge from the original design and architecture. We want to minimize this behavior, not only by code review.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;To do this, unit tests of system architecture, design, major conventions and assumptions have been written. In .NET there is special library for this task: &lt;a href=&quot;https://github.com/BenMorris/NetArchTest&quot;&gt;NetArchTest&lt;/a&gt;. This library has been written based on the very popular JAVA architecture unit tests library - &lt;a href=&quot;https://www.archunit.org/&quot;&gt;ArchUnit&lt;/a&gt;.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;Using this kind of tests we can test proper layering of our application, dependencies, encapsulation, immutability, DDD correct implementation, naming, conventions and so on - everything what we need to test. Example:&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/architecture_unit_tests.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;More information about architecture unit tests here: &lt;a href=&quot;https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit&quot;&gt;https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.13 Integration Tests&lt;/h3&gt; 
&lt;h4&gt;Definition&lt;/h4&gt; 
&lt;p&gt;&quot;Integration Test&quot; term is blurred. It can mean test between classes, modules, services, even systems - see &lt;a href=&quot;https://martinfowler.com/bliki/IntegrationTest.html&quot;&gt;this&lt;/a&gt; article (by Martin Fowler). &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;For this reason, the definition of integration test in this project is as follows:&lt;br /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;it verifies how system works in integration with &quot;out-of-process&quot; dependencies - database, messaging system, file system or external API&lt;/li&gt; 
 &lt;li&gt;it tests particular use case&lt;/li&gt; 
 &lt;li&gt;it can be slow (as opposed to Unit Test)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Approach&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Do not mock dependencies over which you have full control&lt;/strong&gt; (like database). Full control dependency means you can always revert all changes (remove side-effects) and no one can notice it. They are not visible to others. See next point, please.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Use &quot;production&quot;, normal, real database version&lt;/strong&gt;. Some use e.g. in memory repository, some use light databases instead &quot;production&quot; version. This is still mocking. Testing makes sense if we have full confidence in testing. You can&#39;t trust the test if you know that the infrastructure in the production environment will vary. Be always as close to production environment as possible.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mock dependencies over which you don&#39;t have control&lt;/strong&gt;. No control dependency means you can&#39;t remove side-effects after interaction with this dependency (external API, messaging system, SMTP server etc.). They can be visible to others.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Implementation&lt;/h4&gt; 
&lt;p&gt;Integration test should test exactly one use case. One use case is represented by one Command/Query processing so CommandHandler/QueryHandler in Application layer is perfect starting point for running the Integration Test:&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/integration_tests.jpg&quot; alt=&quot;&quot; /&gt; For each test, the following preparation steps must be performed:&lt;br /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clear database&lt;/li&gt; 
 &lt;li&gt;Prepare mocks&lt;/li&gt; 
 &lt;li&gt;Initialize testing module&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[SetUp]
public async Task BeforeEachTest()
{
    const string connectionStringEnvironmentVariable =
        &quot;ASPNETCORE_MyMeetings_IntegrationTests_ConnectionString&quot;;
    ConnectionString = Environment.GetEnvironmentVariable(connectionStringEnvironmentVariable, EnvironmentVariableTarget.Machine);
    if (ConnectionString == null)
    {
        throw new ApplicationException(
            $&quot;Define connection string to integration tests database using environment variable: {connectionStringEnvironmentVariable}&quot;);
    }

    using (var sqlConnection = new SqlConnection(ConnectionString))
    {
        await ClearDatabase(sqlConnection);
    }

    Logger = Substitute.For&amp;lt;ILogger&amp;gt;();
    EmailSender = Substitute.For&amp;lt;IEmailSender&amp;gt;();
    EventsBus = new EventsBusMock();
    ExecutionContext = new ExecutionContextMock(Guid.NewGuid());
    
    PaymentsStartup.Initialize(
        ConnectionString,
        ExecutionContext,
        Logger,
        EventsBus,
        false);

    PaymentsModule = new PaymentsModule();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After preparation, test is performed on clear database. Usually, it is the execution of some (or many) Commands and: &lt;br /&gt; a) running a Query or/and &lt;br /&gt; b) verifying mocks &lt;br /&gt; to check the result.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[TestFixture]
public class MeetingPaymentTests : TestBase
{
    [Test]
    public async Task CreateMeetingPayment_Test()
    {
        PayerId payerId = new PayerId(Guid.NewGuid());
        MeetingId meetingId = new MeetingId(Guid.NewGuid());
        decimal value = 100;
        string currency = &quot;EUR&quot;;
        await PaymentsModule.ExecuteCommandAsync(new CreateMeetingPaymentCommand(Guid.NewGuid(),
            payerId, meetingId, value, currency));

        var payment = await PaymentsModule.ExecuteQueryAsync(new GetMeetingPaymentQuery(meetingId.Value, payerId.Value));

        Assert.That(payment.PayerId, Is.EqualTo(payerId.Value));
        Assert.That(payment.MeetingId, Is.EqualTo(meetingId.Value));
        Assert.That(payment.FeeValue, Is.EqualTo(value));
        Assert.That(payment.FeeCurrency, Is.EqualTo(currency));
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Each Command/Query processing is a separate execution (with different object graph resolution, context, database connection etc.) thanks to Composition Root of each module. This behavior is important and desirable.&lt;/p&gt; 
&lt;h3&gt;3.14 System Integration Testing&lt;/h3&gt; 
&lt;h4&gt;Definition&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/System_integration_testing&quot;&gt;System Integration Testing (SIT)&lt;/a&gt; is performed to verify the interactions between the modules of a software system. It involves the overall testing of a complete system of many subsystem components or elements.&lt;/p&gt; 
&lt;h4&gt;Implementation&lt;/h4&gt; 
&lt;p&gt;Implementation of system integration tests is based on approach of integration testing of modules in isolation (invoking commands and queries) described in the previous section.&lt;/p&gt; 
&lt;p&gt;The problem is that in this case we are dealing with &lt;strong&gt;asynchronous communication&lt;/strong&gt;. Due to asynchrony, our &lt;strong&gt;test must wait for the result&lt;/strong&gt; at certain times.&lt;/p&gt; 
&lt;p&gt;To correctly implement such tests, the &lt;strong&gt;Sampling&lt;/strong&gt; technique and implementation described in the &lt;a href=&quot;https://www.amazon.com/Growing-Object-Oriented-Software-Guided-Tests/dp/0321503627&quot;&gt;Growing Object-Oriented Software, Guided by Tests&lt;/a&gt; book was used:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;An asynchronous test must wait for success and use timeouts to detect failure. This implies that every tested activity must have an observable effect: a test must affect the system so that its observable state becomes different. This sounds obvious but it drives how we think about writing asynchronous tests. If an activity has no observable effect, there is nothing the test can wait for, and therefore no way for the test to synchronize with the system it is testing. There are two ways a test can observe the system: by sampling its observable state or by listening for events that it sends out.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/SystemIntegrationTests.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Test below:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Creates Meeting Group Proposal in Meetings module&lt;/li&gt; 
 &lt;li&gt;Waits until Meeting Group Proposal to verification will be available in Administration module with 10 seconds timeout&lt;/li&gt; 
 &lt;li&gt;Accepts Meeting Group Proposal in Administration module&lt;/li&gt; 
 &lt;li&gt;Waits until Meeting Group is created in Meetings module with 15 seconds timeout&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class CreateMeetingGroupTests : TestBase
{
    [Test]
    public async Task CreateMeetingGroupScenario_WhenProposalIsAccepted()
    {
        var meetingGroupId = await MeetingsModule.ExecuteCommandAsync(
            new ProposeMeetingGroupCommand(&quot;Name&quot;,
            &quot;Description&quot;,
            &quot;Location&quot;,
            &quot;PL&quot;));

        AssertEventually(
            new GetMeetingGroupProposalFromAdministrationProbe(meetingGroupId, AdministrationModule), 
            10000);

        await AdministrationModule.ExecuteCommandAsync(new AcceptMeetingGroupProposalCommand(meetingGroupId));

        AssertEventually(
            new GetCreatedMeetingGroupFromMeetingsProbe(meetingGroupId, MeetingsModule),
            15000);
    }

    private class GetCreatedMeetingGroupFromMeetingsProbe : IProbe
    {
        private readonly Guid _expectedMeetingGroupId;

        private readonly IMeetingsModule _meetingsModule;

        private List&amp;lt;MeetingGroupDto&amp;gt; _allMeetingGroups;

        public GetCreatedMeetingGroupFromMeetingsProbe(
            Guid expectedMeetingGroupId, 
            IMeetingsModule meetingsModule)
        {
            _expectedMeetingGroupId = expectedMeetingGroupId;
            _meetingsModule = meetingsModule;
        }

        public bool IsSatisfied()
        {
            return _allMeetingGroups != null &amp;amp;&amp;amp; 
                   _allMeetingGroups.Any(x =&amp;gt; x.Id == _expectedMeetingGroupId);
        }

        public async Task SampleAsync()
        {
            _allMeetingGroups = await _meetingsModule.ExecuteQueryAsync(new GetAllMeetingGroupsQuery());
        }

        public string DescribeFailureTo() 
            =&amp;gt; $&quot;Meeting group with ID: {_expectedMeetingGroupId} is not created&quot;;
    }

    private class GetMeetingGroupProposalFromAdministrationProbe : IProbe
    {
        private readonly Guid _expectedMeetingGroupProposalId;

        private MeetingGroupProposalDto _meetingGroupProposal;

        private readonly IAdministrationModule _administrationModule;

        public GetMeetingGroupProposalFromAdministrationProbe(Guid expectedMeetingGroupProposalId, IAdministrationModule administrationModule)
        {
            _expectedMeetingGroupProposalId = expectedMeetingGroupProposalId;
            _administrationModule = administrationModule;
        }

        public bool IsSatisfied()
        {
            if (_meetingGroupProposal == null)
            {
                return false;
            }

            if (_meetingGroupProposal.Id == _expectedMeetingGroupProposalId &amp;amp;&amp;amp;
                _meetingGroupProposal.StatusCode == MeetingGroupProposalStatus.ToVerify.Value)
            {
                return true;
            }

            return false;
        }

        public async Task SampleAsync()
        {
            try
            {
                _meetingGroupProposal =
                    await _administrationModule.ExecuteQueryAsync(
                        new GetMeetingGroupProposalQuery(_expectedMeetingGroupProposalId));
            }
            catch
            {
                // ignored
            }
        }

        public string DescribeFailureTo()
            =&amp;gt; $&quot;Meeting group proposal with ID: {_expectedMeetingGroupProposalId} to verification not created&quot;;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Poller class implementation (based on example in the book):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class Poller
{
    private readonly int _timeoutMillis;

    private readonly int _pollDelayMillis;

    public Poller(int timeoutMillis)
    {
        _timeoutMillis = timeoutMillis;
        _pollDelayMillis = 1000;
    }

    public void Check(IProbe probe)
    {
        var timeout = new Timeout(_timeoutMillis);
        while (!probe.IsSatisfied())
        {
            if (timeout.HasTimedOut())
            {
                throw new AssertErrorException(DescribeFailureOf(probe));
            }

            Thread.Sleep(_pollDelayMillis);
            probe.SampleAsync();
        }
    }

    private static string DescribeFailureOf(IProbe probe)
    {
        return probe.DescribeFailureTo();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.15 Event Sourcing&lt;/h3&gt; 
&lt;h4&gt;Theory&lt;/h4&gt; 
&lt;p&gt;During the implementation of the Payment module, &lt;em&gt;Event Sourcing&lt;/em&gt; was used. &lt;em&gt;Event Sourcing&lt;/em&gt; is a way of preserving the state of our system by recording a sequence of events. No less, no more.&lt;/p&gt; 
&lt;p&gt;It is important here to really restore the state of our application from events. If we collect events only for auditing purposes, it is an &lt;a href=&quot;https://en.wikipedia.org/wiki/Audit_trail&quot;&gt;Audit Log/Trail&lt;/a&gt; - not the &lt;em&gt;Event Sourcing&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;The main elements of &lt;em&gt;Event Sourcing&lt;/em&gt; are as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Events Stream&lt;/li&gt; 
 &lt;li&gt;Objects that are restored based on events. There are 2 types of such objects depending on the purpose: -- Objects responsible for the change of state. In Domain-Driven Design they will be &lt;em&gt;Aggregates&lt;/em&gt;. -- &lt;em&gt;Projections&lt;/em&gt;: read models prepared for a specific purpose&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Subscriptions&lt;/em&gt; : a way to receive information about new events&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Snapshots&lt;/em&gt;: from time to time, objects saved in the traditional way for performance purposes. Mainly used if there are many events to restore the object from the entire event history. (Note: there is currently no snapshot implementation in the project)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_elements.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;Tool&lt;/h4&gt; 
&lt;p&gt;In order not to reinvent the wheel, the &lt;em&gt;SQL Stream Store&lt;/em&gt; library was used. As the &lt;a href=&quot;https://sqlstreamstore.readthedocs.io/en/latest/&quot;&gt;documentation&lt;/a&gt; says:&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;SQL Stream Store is a .NET library to assist with developing applications that use event sourcing or wish to use stream based patterns over a relational database and existing operational infrastructure.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Like every library, it has its limitations and assumptions (I recommend the linked documentation chapter &quot;Things you need to know before adopting&quot;). For me, the most important 2 points from this chapter are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;em&gt;&quot;Subscriptions (and thus projections) are &lt;strong&gt;eventually consistent&lt;/strong&gt; and always will be.&quot;&lt;/em&gt; This means that there will always be an inconsistency time from saving the event to the stream and processing the event by the projector(s).&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;&quot;No support for ambient System.Transaction scopes enforcing the concept of the stream as the consistency and transactional boundary.&quot;&lt;/em&gt; This means that if we save the event to a events stream and want to save something &lt;strong&gt;in the same transaction&lt;/strong&gt;, we must use &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/system.transactions.transactionscope?view=net-8.0&quot;&gt;TransactionScope&lt;/a&gt;. If we cannot use &lt;em&gt;TransactionScope&lt;/em&gt; for some reason, we must accept the Eventual Consistency also in this case.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Other popular tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eventstore.com/&quot;&gt;EventStore&lt;/a&gt; &lt;em&gt;&quot;An industrial-strength database solution built from the ground up for event sourcing.&quot;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://martendb.io/&quot;&gt;Marten&lt;/a&gt; &lt;em&gt;&quot;.NET Transactional Document DB and Event Store on PostgreSQL&quot;&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Implementation&lt;/h4&gt; 
&lt;p&gt;There are 2 main &quot;flows&quot; to handle:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Command handling: change of state - adding new events to stream (writing)&lt;/li&gt; 
 &lt;li&gt;Projection of events to create read models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Command Handling&lt;/h5&gt; 
&lt;p&gt;The whole process looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_command_handling.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;We create / update an aggregate by creating an event&lt;/li&gt; 
 &lt;li&gt;We add changes to the Aggregate Store. This is the class responsible for writing / loading our aggregates. We are not saving changes yet.&lt;/li&gt; 
 &lt;li&gt;As part of Unit Of Work a) Aggregate Store adds events to the stream b) messages are added to the Outbox&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Command Handler:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class BuySubscriptionCommandHandler : ICommandHandler&amp;lt;BuySubscriptionCommand, Guid&amp;gt;
{
    private readonly IAggregateStore _aggregateStore;

    private readonly IPayerContext _payerContext;

    private readonly ISqlConnectionFactory _sqlConnectionFactory;

    public BuySubscriptionCommandHandler(
        IAggregateStore aggregateStore, 
        IPayerContext payerContext, 
        ISqlConnectionFactory sqlConnectionFactory)
    {
        _aggregateStore = aggregateStore;
        _payerContext = payerContext;
        _sqlConnectionFactory = sqlConnectionFactory;
    }

    public async Task&amp;lt;Guid&amp;gt; Handle(BuySubscriptionCommand command, CancellationToken cancellationToken)
    {
        var priceList = await PriceListProvider.GetPriceList(_sqlConnectionFactory.GetOpenConnection());

        var subscriptionPayment = SubscriptionPayment.Buy(
            _payerContext.PayerId,
            SubscriptionPeriod.Of(command.SubscriptionTypeCode),
            command.CountryCode,
            MoneyValue.Of(command.Value, command.Currency),
            priceList);
        
        _aggregateStore.AppendChanges(subscriptionPayment);

        return subscriptionPayment.Id;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;SubscriptionPayment&lt;/code&gt; Aggregate:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SubscriptionPayment : AggregateRoot
{
    private PayerId _payerId;

    private SubscriptionPeriod _subscriptionPeriod;

    private string _countryCode;

    private SubscriptionPaymentStatus _subscriptionPaymentStatus;

    private MoneyValue _value;

    protected override void Apply(IDomainEvent @event)
    {
        this.When((dynamic)@event);
    }

    public static SubscriptionPayment Buy(
        PayerId payerId,
        SubscriptionPeriod period,
        string countryCode,
        MoneyValue priceOffer,
        PriceList priceList)
    {
        var priceInPriceList = priceList.GetPrice(countryCode, period, PriceListItemCategory.New);
        CheckRule(new PriceOfferMustMatchPriceInPriceListRule(priceOffer, priceInPriceList));

        var subscriptionPayment = new SubscriptionPayment();

        var subscriptionPaymentCreated = new SubscriptionPaymentCreatedDomainEvent(
            Guid.NewGuid(),
            payerId.Value,
            period.Code,
            countryCode,
            SubscriptionPaymentStatus.WaitingForPayment.Code,
            priceOffer.Value,
            priceOffer.Currency);

        subscriptionPayment.Apply(subscriptionPaymentCreated);
        subscriptionPayment.AddDomainEvent(subscriptionPaymentCreated);

        return subscriptionPayment;
    }

    private void When(SubscriptionPaymentCreatedDomainEvent @event)
    {
        this.Id = @event.SubscriptionPaymentId;
        _payerId = new PayerId(@event.PayerId);
        _subscriptionPeriod = SubscriptionPeriod.Of(@event.SubscriptionPeriodCode);
        _countryCode = @event.CountryCode;
        _subscriptionPaymentStatus = SubscriptionPaymentStatus.Of(@event.Status);
        _value = MoneyValue.Of(@event.Value, @event.Currency);
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;AggregateRoot&lt;/code&gt; base class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public abstract class AggregateRoot
{
    public Guid Id { get; protected set; }

    public int Version { get; private set; }

    private readonly List&amp;lt;IDomainEvent&amp;gt; _domainEvents;

    protected AggregateRoot()
    {
        _domainEvents = new List&amp;lt;IDomainEvent&amp;gt;();

        Version = -1;
    }

    protected void AddDomainEvent(IDomainEvent @event)
    {
        _domainEvents.Add(@event);
    }

    public IReadOnlyCollection&amp;lt;IDomainEvent&amp;gt; GetDomainEvents() =&amp;gt; _domainEvents.AsReadOnly();

    public void Load(IEnumerable&amp;lt;IDomainEvent&amp;gt; history)
    {
        foreach (var e in history)
        {
            Apply(e);
            Version++;
        }
    }

    protected abstract void Apply(IDomainEvent @event);

    protected static void CheckRule(IBusinessRule rule)
    {
        if (rule.IsBroken())
        {
            throw new BusinessRuleValidationException(rule);
        }
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Aggregate Store implementation with SQL Stream Store library usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SqlStreamAggregateStore : IAggregateStore
{
    private readonly IStreamStore _streamStore;

    private readonly List&amp;lt;IDomainEvent&amp;gt; _appendedChanges;

    private readonly List&amp;lt;AggregateToSave&amp;gt; _aggregatesToSave;

    public SqlStreamAggregateStore(
        ISqlConnectionFactory sqlConnectionFactory)
    {
        _appendedChanges = new List&amp;lt;IDomainEvent&amp;gt;();

        _streamStore =
            new MsSqlStreamStore(
                new MsSqlStreamStoreSettings(sqlConnectionFactory.GetConnectionString())
                    {
                        Schema = DatabaseSchema.Name
                });

        _aggregatesToSave = new List&amp;lt;AggregateToSave&amp;gt;();
    }

    public async Task Save()
    {
        foreach (var aggregateToSave in _aggregatesToSave)
        {
            await _streamStore.AppendToStream(
                GetStreamId(aggregateToSave.Aggregate),
                aggregateToSave.Aggregate.Version,
                aggregateToSave.Messages.ToArray());
        }

        _aggregatesToSave.Clear();
    }

    public async Task&amp;lt;T&amp;gt; Load&amp;lt;T&amp;gt;(AggregateId&amp;lt;T&amp;gt; aggregateId) where T : AggregateRoot
    {
        var streamId = GetStreamId(aggregateId);

        IList&amp;lt;IDomainEvent&amp;gt; domainEvents = new List&amp;lt;IDomainEvent&amp;gt;();
        ReadStreamPage readStreamPage;
        do
        {
            readStreamPage = await _streamStore.ReadStreamForwards(streamId, StreamVersion.Start, maxCount: 100);
            var messages = readStreamPage.Messages;
            foreach (var streamMessage in messages)
            {
                Type type = DomainEventTypeMappings.Dictionary[streamMessage.Type];
                var jsonData = await streamMessage.GetJsonData();
                var domainEvent = JsonConvert.DeserializeObject(jsonData, type) as IDomainEvent;

                domainEvents.Add(domainEvent);
            }
        } while (!readStreamPage.IsEnd);

        var aggregate = (T)Activator.CreateInstance(typeof(T), true);

        aggregate.Load(domainEvents);

        return aggregate;
    }

&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Events Projection&lt;/h5&gt; 
&lt;p&gt;The whole process looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_events_projection.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Special class &lt;code&gt;Subscriptions Manager&lt;/code&gt; subscribes to Events Store (using SQL Store Stream library)&lt;/li&gt; 
 &lt;li&gt;Events Store raises &lt;code&gt;StreamMessageRecievedEvent&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Subscriptions Manager&lt;/code&gt; invokes all projectors&lt;/li&gt; 
 &lt;li&gt;If projector know how to handle given event, it updates particular read model. In current implementation it updates special table in SQL database.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;SubscriptionsManager&lt;/code&gt; class implementation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SubscriptionsManager
{
    private readonly IStreamStore _streamStore;

    public SubscriptionsManager(
        IStreamStore streamStore)
    {
        _streamStore = streamStore;
    }

    public void Start()
    {
        long? actualPosition;

        using (var scope = PaymentsCompositionRoot.BeginLifetimeScope())
        {
            var checkpointStore = scope.Resolve&amp;lt;ICheckpointStore&amp;gt;();

            actualPosition = checkpointStore.GetCheckpoint(SubscriptionCode.All);
        }

        _streamStore.SubscribeToAll(actualPosition, StreamMessageReceived);
    }

    public void Stop()
    {
        _streamStore.Dispose();
    }

    private static async Task StreamMessageReceived(
        IAllStreamSubscription subscription, StreamMessage streamMessage, CancellationToken cancellationToken)
    {
        var type = DomainEventTypeMappings.Dictionary[streamMessage.Type];
        var jsonData = await streamMessage.GetJsonData(cancellationToken);
        var domainEvent = JsonConvert.DeserializeObject(jsonData, type) as IDomainEvent;

        using var scope = PaymentsCompositionRoot.BeginLifetimeScope();

        var projectors = scope.Resolve&amp;lt;IList&amp;lt;IProjector&amp;gt;&amp;gt;();

        var tasks = projectors
            .Select(async projector =&amp;gt;
            {
                await projector.Project(domainEvent);
            });

        await Task.WhenAll(tasks);

        var checkpointStore = scope.Resolve&amp;lt;ICheckpointStore&amp;gt;();
        await checkpointStore.StoreCheckpoint(SubscriptionCode.All, streamMessage.Position);
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example projector:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class SubscriptionDetailsProjector : ProjectorBase, IProjector
{
    private readonly IDbConnection _connection;

    public SubscriptionDetailsProjector(ISqlConnectionFactory sqlConnectionFactory)
    {
        _connection = sqlConnectionFactory.GetOpenConnection();
    }

    public async Task Project(IDomainEvent @event)
    {
        await When((dynamic) @event);
    }

    private async Task When(SubscriptionRenewedDomainEvent subscriptionRenewed)
    {
        var period = SubscriptionPeriod.GetName(subscriptionRenewed.SubscriptionPeriodCode);
        
        await _connection.ExecuteScalarAsync(&quot;UPDATE payments.SubscriptionDetails &quot; +
                                                &quot;SET &quot; +
                                                    &quot;[Status] = @Status, &quot; +
                                                    &quot;[ExpirationDate] = @ExpirationDate, &quot; +
                                                    &quot;[Period] = @Period &quot; +
                                                &quot;WHERE [Id] = @SubscriptionId&quot;,
            new
            {
                subscriptionRenewed.SubscriptionId,
                subscriptionRenewed.Status,
                subscriptionRenewed.ExpirationDate,
                period
            });
    }

    private async Task When(SubscriptionExpiredDomainEvent subscriptionExpired)
    {
        await _connection.ExecuteScalarAsync(&quot;UPDATE payments.SubscriptionDetails &quot; +
                                             &quot;SET &quot; +
                                             &quot;[Status] = @Status &quot; +
                                             &quot;WHERE [Id] = @SubscriptionId&quot;,
            new
            {
                subscriptionExpired.SubscriptionId,
                subscriptionExpired.Status
            });
    }

    private async Task When(SubscriptionCreatedDomainEvent subscriptionCreated)
    {
        var period = SubscriptionPeriod.GetName(subscriptionCreated.SubscriptionPeriodCode);
        
        await _connection.ExecuteScalarAsync(&quot;INSERT INTO payments.SubscriptionDetails &quot; +
                                       &quot;([Id], [Period], [Status], [CountryCode], [ExpirationDate]) &quot; +
                                       &quot;VALUES (@SubscriptionId, @Period, @Status, @CountryCode, @ExpirationDate)&quot;,
            new
            {
                subscriptionCreated.SubscriptionId,
                period,
                subscriptionCreated.Status,
                subscriptionCreated.CountryCode,
                subscriptionCreated.ExpirationDate
            });
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Sample view of Event Store&lt;/h4&gt; 
&lt;p&gt;Sample &lt;em&gt;Event Store&lt;/em&gt; view after execution of SubscriptionLifecycleTests Integration Test which includes following steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Creating Price List&lt;/li&gt; 
 &lt;li&gt;Buying Subscription&lt;/li&gt; 
 &lt;li&gt;Renewing Subscription&lt;/li&gt; 
 &lt;li&gt;Expiring Subscription&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;looks like this (&lt;em&gt;SQL Stream Store&lt;/em&gt; table - &lt;em&gt;payments.Messages&lt;/em&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_event_store_db_sample.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;3.16 Database Change Management&lt;/h3&gt; 
&lt;p&gt;Database change management is accomplished by &lt;em&gt;migrations/transitions&lt;/em&gt; versioning. Additionally, the current state of the database structure is also versioned.&lt;/p&gt; 
&lt;p&gt;Migrations are applied using a simple &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/DatabaseMigrator&quot;&gt;DatabaseMigrator&lt;/a&gt; console application that uses the &lt;a href=&quot;https://dbup.readthedocs.io/en/latest/&quot;&gt;DbUp&lt;/a&gt; library. The current state of the database structure is kept in the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/ssdt/how-to-create-a-new-database-project&quot;&gt;SSDT Database Project&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The database update is performed by running the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;dotnet DatabaseMigrator.dll &quot;connection_string&quot; &quot;scripts_directory_path&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The entire solution is described in detail in the following articles:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamilgrzybek.com/database/database-change-management/&quot;&gt;Database change management&lt;/a&gt; (theory)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamilgrzybek.com/database/using-database-project-and-dbup-for-database-management/&quot;&gt;Using database project and DbUp for database management&lt;/a&gt; (implementation)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.17 Continuous Integration&lt;/h3&gt; 
&lt;h4&gt;Definition&lt;/h4&gt; 
&lt;p&gt;As defined on &lt;a href=&quot;https://martinfowler.com/articles/continuousIntegration.html&quot;&gt;Martin Fowler&#39;s website&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Continuous Integration is a software development practice where members of a team integrate their work frequently, usually each person integrates at least daily - leading to multiple integrations per day. Each integration is verified by an automated build (including test) to detect integration errors as quickly as possible.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;YAML Implementation [OBSOLETE]&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Originally the build was implemented using yaml and GitHub Actions functionality. Currently, the build is implemented with NUKE (see next section). See &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/.github/workflows/buildPipeline.yml&quot;&gt;buildPipeline.yml&lt;/a&gt;&lt;/em&gt; file history.&lt;/p&gt; 
&lt;h5&gt;Pipeline description&lt;/h5&gt; 
&lt;p&gt;CI was implemented using &lt;a href=&quot;https://docs.github.com/en/actions/getting-started-with-github-actions/about-github-actions&quot;&gt;GitHub Actions&lt;/a&gt;. For this purpose, one workflow, which triggers on Pull Request to &lt;em&gt;master&lt;/em&gt; branch or Push to &lt;em&gt;master&lt;/em&gt; branch was created. It contains 2 jobs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;build test, execute Unit Tests and Architecture Tests&lt;/li&gt; 
 &lt;li&gt;execute Integration Tests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ci.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Steps description&lt;/strong&gt;&lt;br /&gt; a) Checkout repository - clean checkout of git repository &lt;br /&gt; b) Setup .NET - install .NET 8.0 SDK&lt;br /&gt; c) Install dependencies - resolve NuGet packages&lt;br /&gt; d) Build - build solution&lt;br /&gt; e) Run Unit Tests - run automated Unit Tests (see section 3.10)&lt;br /&gt; f) Run Architecture Tests - run automated Architecture Tests (see section 3.12)&lt;br /&gt; g) Initialize containers - setup Docker container for MS SQL Server&lt;br /&gt; h) Wait for SQL Server initialization - after container initialization MS SQL Server is not ready, initialization of server itself takes some time so 30 seconds timeout before execution of next step is needed&lt;br /&gt; i) Create Database - create and initialize database&lt;br /&gt; j) Migrate Database - execute database upgrade using &lt;em&gt;DatabaseMigrator&lt;/em&gt; application (see 3.16 section)&lt;br /&gt; k) Run Integration Tests - perform Integration and System Integration Testing (see section 3.13 and 3.14)&lt;br /&gt;&lt;/p&gt; 
&lt;h5&gt;Workflow definition&lt;/h5&gt; 
&lt;p&gt;Workflow definition: &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/.github/workflows/buildPipeline.yml&quot;&gt;buildPipeline.yml&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;Example workflow execution&lt;/h5&gt; 
&lt;p&gt;Example workflow output:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ci_job1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ci_job2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;NUKE&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://nuke.build/&quot;&gt;Nuke&lt;/a&gt; is &lt;em&gt;the cross-platform build automation solution for .NET with C# DSL.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The 2 main advantages of its use over pure yaml defined in GitHub actions are as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You run the same code on local machine and in the build server. See &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/.github/workflows/buildPipeline.yml&quot;&gt;buildPipeline.yml&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;You use C# with all the goodness (debugging, compilation, packages, refactoring and so on)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This is how one of the stage definition looks like (execute Build, Unit Tests, Architecture Tests) &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/build/Build.cs&quot;&gt;Build.cs&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;partial class Build : NukeBuild
{
    /// Support plugins are available for:
    ///   - JetBrains ReSharper        https://nuke.build/resharper
    ///   - JetBrains Rider            https://nuke.build/rider
    ///   - Microsoft VisualStudio     https://nuke.build/visualstudio
    ///   - Microsoft VSCode           https://nuke.build/vscode

    public static int Main () =&amp;gt; Execute&amp;lt;Build&amp;gt;(x =&amp;gt; x.Compile);

    [Parameter(&quot;Configuration to build - Default is &#39;Debug&#39; (local) or &#39;Release&#39; (server)&quot;)]
    readonly Configuration Configuration = IsLocalBuild ? Configuration.Debug : Configuration.Release;

    [Solution] readonly Solution Solution;

    Target Clean =&amp;gt; _ =&amp;gt; _
        .Before(Restore)
        .Executes(() =&amp;gt;
        {
            EnsureCleanDirectory(WorkingDirectory);
        });

    Target Restore =&amp;gt; _ =&amp;gt; _
        .Executes(() =&amp;gt;
        {
            DotNetRestore(s =&amp;gt; s
                .SetProjectFile(Solution));
        });

    Target Compile =&amp;gt; _ =&amp;gt; _
        .DependsOn(Restore)
        .Executes(() =&amp;gt;
        {
            DotNetBuild(s =&amp;gt; s
                .SetProjectFile(Solution)
                .SetConfiguration(Configuration)
                .EnableNoRestore());
        });

    Target UnitTests =&amp;gt; _ =&amp;gt; _
        .DependsOn(Compile)
        .Executes(() =&amp;gt;
        {
            DotNetTest(s =&amp;gt; s
                .SetProjectFile(Solution)
                .SetFilter(&quot;UnitTests&quot;)
                .SetConfiguration(Configuration)
                .EnableNoRestore()
                .EnableNoBuild());
        });

    Target ArchitectureTests =&amp;gt; _ =&amp;gt; _
        .DependsOn(UnitTests)
        .Executes(() =&amp;gt;
        {
            DotNetTest(s =&amp;gt; s
                .SetProjectFile(Solution)
                .SetFilter(&quot;ArchTests&quot;)
                .SetConfiguration(Configuration)
                .EnableNoRestore()
                .EnableNoBuild());
        });

    Target BuildAndUnitTests =&amp;gt; _ =&amp;gt; _
        .Triggers(ArchitectureTests)
        .Executes(() =&amp;gt;
        {
        });
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to see more complex scenario when integration tests are executed (with SQL Server database creation using docker) see &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/build/BuildIntegrationTests.cs&quot;&gt;BuildIntegrationTests.cs&lt;/a&gt; file.&lt;/p&gt; 
&lt;h4&gt;SQL Server database project build&lt;/h4&gt; 
&lt;p&gt;Currently, compilation of database projects is not supported by the .NET Core and dotnet tool. For this reason, the &lt;a href=&quot;https://github.com/rr-wfm/MSBuild.Sdk.SqlProj/&quot;&gt;MSBuild.Sdk.SqlProj&lt;/a&gt; library was used. In order to do that, you need to create .NET standard library, change SDK and create links to scripts folders. Final &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database.Build/CompanyName.MyMeetings.Database.Build.csproj&quot;&gt;database project&lt;/a&gt; looks as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;Project Sdk=&quot;MSBuild.Sdk.SqlProj/1.6.0&quot;&amp;gt;
    &amp;lt;PropertyGroup&amp;gt;
        &amp;lt;TargetFramework&amp;gt;netstandard2.0&amp;lt;/TargetFramework&amp;gt;
    &amp;lt;/PropertyGroup&amp;gt;
    &amp;lt;ItemGroup&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\administration\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\app\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\meetings\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\payments\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\users\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\Security\**\*.sql&quot; /&amp;gt;
    &amp;lt;/ItemGroup&amp;gt;
&amp;lt;/Project&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.18 Static code analysis&lt;/h3&gt; 
&lt;p&gt;In order to standardize the appearance of the code and increase its readability, the &lt;a href=&quot;https://github.com/DotNetAnalyzers/StyleCopAnalyzers&quot;&gt;StyleCopAnalyzers&lt;/a&gt; library was used. This library implements StyleCop rules using the .NET Compiler Platform and is responsible for the static code analysis.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;Using this library is trivial - it is just added as a NuGet package to all projects. There are many ways to configure rules, but currently the best way to do this is to edit the &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/.editorconfig&quot;&gt;.editorconfig&lt;/a&gt; file. More information can be found at the link above.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note! Static code analysis works best when the following points are met:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Each developer has an IDE that respects the rules and helps to follow them&lt;/li&gt; 
 &lt;li&gt;The rules are checked during the project build process as part of Continuous Integration&lt;/li&gt; 
 &lt;li&gt;The rules are set to &lt;em&gt;help your system grow&lt;/em&gt;. &lt;strong&gt;Static analysis is not a value in itself.&lt;/strong&gt; Some rules may not make complete sense and should be turned off. Other rules may have higher priority. It all depends on the project, company standards and people involved in the project. Be pragmatic.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.19 System Under Test SUT&lt;/h3&gt; 
&lt;p&gt;There is always a need to prepare the entire system in a specific state, e.g. for manual, exploratory, UX / UI tests. The fact that the tests are performed manually does not mean that we cannot automate the preparation phase (Given / Arrange). Thanks to the automation of system state preparation (&lt;a href=&quot;https://en.wikipedia.org/wiki/System_under_test&quot;&gt;System Under Test&lt;/a&gt;), we are able to recreate exactly the same state in any environment. In addition, such automation can be used later to automate the entire test (e.g. through an &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#313-integration-tests&quot;&gt;3.13 Integration Tests&lt;/a&gt;).&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;The implementation of such automation based on the use of NUKE and the test framework is presented below. As in the case of integration testing, we use the public API of modules.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/sut-preparation.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Below is a SUT whose task is to go through the whole process - from setting up a &lt;em&gt;Meeting Group&lt;/em&gt;, through its &lt;em&gt;Payment&lt;/em&gt;, adding a new &lt;em&gt;Meeting&lt;/em&gt; and signing up for it by another user.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class CreateMeeting : TestBase
{
    protected override bool PerformDatabaseCleanup =&amp;gt; true;

    [Test]
    public async Task Prepare()
    {
        await UsersFactory.GivenAdmin(
            UserAccessModule,
            &quot;testAdmin@mail.com&quot;,
            &quot;testAdminPass&quot;,
            &quot;Jane Doe&quot;,
            &quot;Jane&quot;,
            &quot;Doe&quot;,
            &quot;testAdmin@mail.com&quot;);

        var userId = await UsersFactory.GivenUser(
            UserAccessModule,
            ConnectionString,
            &quot;adamSmith@mail.com&quot;,
            &quot;adamSmithPass&quot;,
            &quot;Adam&quot;,
            &quot;Smith&quot;,
            &quot;adamSmith@mail.com&quot;);

        ExecutionContextAccessor.SetUserId(userId);

        var meetingGroupId = await MeetingGroupsFactory.GivenMeetingGroup(
            MeetingsModule,
            AdministrationModule,
            ConnectionString,
            &quot;Software Craft&quot;,
            &quot;Group for software craft passionates&quot;,
            &quot;Warsaw&quot;,
            &quot;PL&quot;);

        await TestPriceListManager.AddPriceListItems(PaymentsModule, ConnectionString);

        await TestPaymentsManager.BuySubscription(
            PaymentsModule,
            ExecutionContextAccessor);
        
        SetDate(new DateTime(2022, 7, 1, 10, 0, 0));

        var meetingId = await TestMeetingFactory.GivenMeeting(
            MeetingsModule,
            meetingGroupId,
            &quot;Tactical DDD&quot;,
            new DateTime(2022, 7, 10, 18, 0, 0),
            new DateTime(2022, 7, 10, 20, 0, 0),
            &quot;Meeting about Tactical DDD patterns&quot;,
            &quot;Location Name&quot;,
            &quot;Location Address&quot;,
            &quot;01-755&quot;,
            &quot;Warsaw&quot;,
            50,
            0,
            null,
            null,
            0,
            null,
            new List&amp;lt;Guid&amp;gt;()
        );
        
        var attendeeUserId = await UsersFactory.GivenUser(
            UserAccessModule,
            ConnectionString,
            &quot;rickmorty@mail.com&quot;,
            &quot;rickmortyPass&quot;,
            &quot;Rick&quot;,
            &quot;Morty&quot;,
            &quot;rickmorty@mail.com&quot;);
        
        ExecutionContextAccessor.SetUserId(attendeeUserId);

        await TestMeetingGroupManager.JoinToGroup(MeetingsModule, meetingGroupId);

        await TestMeetingManager.AddAttendee(MeetingsModule, meetingId, guestsNumber: 1);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can create this SUT using following &lt;em&gt;NUKE&lt;/em&gt; target providing connection string and particular test name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt; .\build PrepareSUT --DatabaseConnectionString &quot;connection_string&quot; --SUTTestName CreateMeeting
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.20 Mutation Testing&lt;/h3&gt; 
&lt;h4&gt;Description&lt;/h4&gt; 
&lt;p&gt;Mutation testing is an approach to test and evaluate our existing tests. During mutation testing a special framework modifies pieces of our code and runs our tests. These modifications are called &lt;em&gt;mutations&lt;/em&gt; or &lt;em&gt;mutants&lt;/em&gt;. If a given &lt;em&gt;mutation&lt;/em&gt; does not cause a failure of at least once test, it means that the mutant has &lt;em&gt;survived&lt;/em&gt; so our tests are probably not sufficient.&lt;/p&gt; 
&lt;h4&gt;Example&lt;/h4&gt; 
&lt;p&gt;In this repository, the &lt;a href=&quot;https://stryker-mutator.io/docs/stryker-net/Introduction&quot;&gt;Stryker.NET&lt;/a&gt; framework was used for mutation testing. In the simplest use, after installation, all you need to do is enter the directory of tests that you want to mutate and run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;dotnet stryker
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result of this command is the &lt;em&gt;mutation report file&lt;/em&gt;. Assuming we want to test the unit tests of the Meetings module, such a &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/mutation-tests-reports/mutation-report.html&quot;&gt;report&lt;/a&gt; has been generated. This is its first page:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/mutation_testing_report.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Let us analyze one of the places where the mutant survived. This is the &lt;em&gt;AddNotAttendee&lt;/em&gt; method of the &lt;em&gt;Meeting&lt;/em&gt; class. This method is used to add a &lt;em&gt;Member&lt;/em&gt; to the list of people who have decided not to attend the meeting. According to the logic, if the same person previously indicated that he was going to the &lt;em&gt;Meeting&lt;/em&gt; and later changed his mind, then if there is someone on the &lt;em&gt;Waiting List&lt;/em&gt;, he should be added to the attendees. Based on requirements, this should be the person who signed up on the &lt;em&gt;Waiting List&lt;/em&gt; &lt;strong&gt;first&lt;/strong&gt; (based on &lt;strong&gt;SignUpDate&lt;/strong&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/mutation_testing_example.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;As you can see, the mutation framework changed our sorting in linq query (from default ascending to descending). However, each test was successful, so it means that mutant survived so we don&#39;t have a test that checks the correct sort based on &lt;em&gt;SignUpDate&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;From the example above, one more important thing can be deduced - &lt;strong&gt;code coverage is insufficient&lt;/strong&gt;. In the given example, this code is covered, but our tests do not check the given requirement, therefore our code may have errors. Mutation testing allow to detect such situations. Of course, as with any tool, we should use it wisely, as not every case requires our attention.&lt;/p&gt; 
&lt;h2&gt;4. Technology&lt;/h2&gt; 
&lt;p&gt;List of technologies, frameworks and libraries used for implementation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download&quot;&gt;.NET 8.0&lt;/a&gt; (platform). Note for Visual Studio users: &lt;strong&gt;VS 2019&lt;/strong&gt; is required.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/sql-server/sql-server-editions-express&quot;&gt;MS SQL Server Express&lt;/a&gt; (database)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/ef/core/&quot;&gt;Entity Framework Core 8.0&lt;/a&gt; (ORM Write Model implementation for DDD)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://autofac.org/&quot;&gt;Autofac&lt;/a&gt; (Inversion of Control Container)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://docs.identityserver.io&quot;&gt;IdentityServer4&lt;/a&gt; (Authentication and Authorization)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://serilog.net/&quot;&gt;Serilog&lt;/a&gt; (structured logging)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/khellang/Middleware/tree/master/src/ProblemDetails&quot;&gt;Hellang.Middleware.ProblemDetails&lt;/a&gt; (API Problem Details support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/domaindrivendev/Swashbuckle&quot;&gt;Swashbuckle&lt;/a&gt; (Swagger automated documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/StackExchange/Dapper&quot;&gt;Dapper&lt;/a&gt; (micro ORM for Read Model)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newtonsoft.com/json&quot;&gt;Newtonsoft.Json&lt;/a&gt; (serialization/deserialization to/from JSON)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.quartz-scheduler.net/&quot;&gt;Quartz.NET&lt;/a&gt; (background processing)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fluentvalidation.net/&quot;&gt;FluentValidation&lt;/a&gt; (data validation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jbogard/MediatR&quot;&gt;MediatR&lt;/a&gt; (mediator implementation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getpostman.com/&quot;&gt;Postman&lt;/a&gt; (API tests)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nunit.org/&quot;&gt;NUnit&lt;/a&gt; (Testing framework)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nsubstitute.github.io/&quot;&gt;NSubstitute&lt;/a&gt; (Testing isolation framework)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.visual-paradigm.com/download/community.jsp&quot;&gt;Visual Paradigm Community Edition&lt;/a&gt; (CASE tool for modeling and documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BenMorris/NetArchTest&quot;&gt;NetArchTest&lt;/a&gt; (Architecture Unit Tests library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/App-vNext/Polly&quot;&gt;Polly&lt;/a&gt; (Resilience and transient-fault-handling library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SQLStreamStore&quot;&gt;SQL Stream Store&lt;/a&gt; (Library to assist with Event Sourcing)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dbup.readthedocs.io/en/latest/&quot;&gt;DbUp&lt;/a&gt; (Database migrations deployment)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/ssdt/how-to-create-a-new-database-project&quot;&gt;SSDT Database Project&lt;/a&gt; (Database structure versioning)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/actions&quot;&gt;GitHub Actions&lt;/a&gt; (Continuous Integration workflows implementation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DotNetAnalyzers/StyleCopAnalyzers&quot;&gt;StyleCopAnalyzers&lt;/a&gt; (Static code analysis library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://plantuml.com&quot;&gt;PlantUML&lt;/a&gt; (UML diagrams from textual description, diagrams as text)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://c4model.com/&quot;&gt;C4 Model&lt;/a&gt; (Model for visualising software architecture)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/plantuml-stdlib/C4-PlantUML&quot;&gt;C4-PlantUML&lt;/a&gt; (C4 Model for PlantUML plugin)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nuke.build/&quot;&gt;NUKE&lt;/a&gt; (Build automation system)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rr-wfm/MSBuild.Sdk.SqlProj/&quot;&gt;MSBuild.Sdk.SqlProj&lt;/a&gt; (Database project compilation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stryker-mutator.io/docs/stryker-net/Introduction&quot;&gt;Stryker.NET&lt;/a&gt; (Mutation Testing framework)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;5. How to Run&lt;/h2&gt; 
&lt;h3&gt;Install .NET 8.0 SDK&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&quot;&gt;Download&lt;/a&gt; and install .NET 8.0 SDK&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Create database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and install MS SQL Server Express or other&lt;/li&gt; 
 &lt;li&gt;Create an empty database using &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/CreateDatabase_Windows.sql&quot;&gt;CreateDatabase_Windows.sql&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/CreateDatabase_Linux.sql&quot;&gt;CreateDatabase_Linux.sql&lt;/a&gt;. Script adds &lt;strong&gt;app&lt;/strong&gt; schema which is needed for migrations journal table. Change database file path if needed.&lt;/li&gt; 
 &lt;li&gt;Run database migrations using &lt;strong&gt;MigrateDatabase&lt;/strong&gt; NUKE target by executing the build.sh script present in the root folder:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;.\build MigrateDatabase --DatabaseConnectionString &quot;connection_string&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&quot;connection_string&quot;&lt;/em&gt; - connection string to your database&lt;/p&gt; 
&lt;h3&gt;Seed database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Execute &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/SeedDatabase.sql&quot;&gt;SeedDatabase.sql&lt;/a&gt; script&lt;/li&gt; 
 &lt;li&gt;2 test users will be created - check the script for usernames and passwords&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configure connection string&lt;/h3&gt; 
&lt;p&gt;Set a database connection string called &lt;code&gt;MeetingsConnectionString&lt;/code&gt; in the root of the API project&#39;s appsettings.json or use &lt;a href=&quot;https://blogs.msdn.microsoft.com/mihansen/2017/09/10/managing-secrets-in-net-core-2-0-apps/&quot;&gt;Secrets&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Example config setting in appsettings.json for a database called &lt;code&gt;MyMeetings&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
 &quot;MeetingsConnectionString&quot;: &quot;Server=(localdb)\\mssqllocaldb;Database=MyMeetings;Trusted_Connection=True;&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure startup in IDE&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set the Startup Item in your IDE to the API Project, not IIS Express&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Authenticate&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Once it is running you&#39;ll need a token to make API calls. This is done via OAuth2 &lt;a href=&quot;https://www.oauth.com/oauth2-servers/access-tokens/password-grant/&quot;&gt;Resource Owner Password Grant Type&lt;/a&gt;. By default IdentityServer is configured with the following:&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client_id = ro.client&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client_secret = secret&lt;/code&gt; &lt;strong&gt;(this is literally the value - not a statement that this value is secret!)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;scope = myMeetingsAPI openid profile&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;grant_type = password&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Include the credentials of a test user created in the &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/SeedDatabase.sql&quot;&gt;SeedDatabase.sql&lt;/a&gt; script - for example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;username = testMember@mail.com&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;password = testMemberPass&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Example HTTP Request for an Access Token:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-http&quot;&gt;POST /connect/token HTTP/1.1
Host: localhost:5000
 
grant_type=password
&amp;amp;username=testMember@mail.com
&amp;amp;password=testMemberPass
&amp;amp;client_id=ro.client
&amp;amp;client_secret=secret
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will fetch an access token for this user to make authorized API requests using the HTTP request header &lt;code&gt;Authorization: Bearer &amp;lt;access_token&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you use a tool such as Postman to test your API, the token can be fetched and stored within the tool itself and appended to all API calls. Check your tool documentation for instructions.&lt;/p&gt; 
&lt;h3&gt;Run using Docker Compose&lt;/h3&gt; 
&lt;p&gt;You can run whole application using &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;docker compose&lt;/a&gt; from root folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It will create following services: &lt;br /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MS SQL Server Database&lt;/li&gt; 
 &lt;li&gt;Database Migrator&lt;/li&gt; 
 &lt;li&gt;Application&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run Integration Tests in Docker&lt;/h3&gt; 
&lt;p&gt;You can run all Integration Tests in Docker (exactly the same process is executed on CI) using &lt;strong&gt;RunAllIntegrationTests&lt;/strong&gt; NUKE target:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;.\build RunAllIntegrationTests
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;6. Contribution&lt;/h2&gt; 
&lt;p&gt;This project is still under analysis and development. I assume its maintenance for a long time and I would appreciate your contribution to it. Please let me know by creating an Issue or Pull Request.&lt;/p&gt; 
&lt;h2&gt;7. Roadmap&lt;/h2&gt; 
&lt;p&gt;List of features/tasks/approaches to add:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Release date&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Domain Model Unit Tests&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2019-09-10&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Architecture Decision Log update&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2019-11-09&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Integration automated tests&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-02-24&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Migration to .NET Core 3.1&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-03-04&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;System Integration Testing&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-03-28&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;More advanced Payments module&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-07-11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Event Sourcing implementation&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-07-11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Database Change Management&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-08-23&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Continuous Integration&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-09-01&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;StyleCop Static Code Analysis&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-09-05&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FrontEnd SPA application&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-11-08&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docker support&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-11-26&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PlantUML Conceptual Model&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-03-22&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;C4 Model&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-03-29&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Meeting comments feature&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-03-30&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NUKE build automation&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-06-15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Database project compilation on CI&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-06-15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;System Under Test implementation&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2022-07-17&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mutation Testing&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2022-08-23&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Migration to .NET 8.0&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2023-12-09&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;NOTE: Please don&#39;t hesitate to suggest something else or a change to the existing code. All proposals will be considered.&lt;/p&gt; 
&lt;h2&gt;8. Authors&lt;/h2&gt; 
&lt;p&gt;Kamil Grzybek&lt;/p&gt; 
&lt;p&gt;Blog: &lt;a href=&quot;https://kamilgrzybek.com&quot;&gt;https://kamilgrzybek.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Twitter: &lt;a href=&quot;https://twitter.com/kamgrzybek&quot;&gt;https://twitter.com/kamgrzybek&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;LinkedIn: &lt;a href=&quot;https://www.linkedin.com/in/kamilgrzybek/&quot;&gt;https://www.linkedin.com/in/kamilgrzybek/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;GitHub: &lt;a href=&quot;https://github.com/kgrzybek&quot;&gt;https://github.com/kgrzybek&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;8.1 Main contributors&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndreiGanichev&quot;&gt;Andrei Ganichev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bistok&quot;&gt;Bela Istok&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlmarAubel&quot;&gt;Almar Aubel&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;9. License&lt;/h2&gt; 
&lt;p&gt;The project is under &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;10. Inspirations and Recommendations&lt;/h2&gt; 
&lt;h3&gt;Modular Monolith&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamilgrzybek.com/design/modular-monolith-primer/&quot;&gt;&quot;Modular Monolith: A Primer&quot;&lt;/a&gt; Modular Monolith architecture article series, Kamil Grzybek&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=njDSXUWeik0&quot;&gt;&quot;Modular Monolith Architecture: One to rule them all&quot;&lt;/a&gt; presentation, Kamil Grzybek&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5OjqD-ow8GE&quot;&gt;&quot;Modular Monoliths&quot;&lt;/a&gt; presentation, Simon Brown&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BOvxJaklcr0&quot;&gt;&quot;Majestic Modular Monoliths&quot;&lt;/a&gt; presentation, Axel Fontaine&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/olivergierke/building-better-monoliths-modulithic-applications-with-spring-boot-cd16e6ec-d334-497d-b9f6-3f92d5db035a&quot;&gt;&quot;Building Better Monoliths – Modulithic Applications with Spring Boot&quot;&lt;/a&gt; slides, Oliver Drotbohm&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/bliki/MonolithFirst.html&quot;&gt;&quot;MonolithFirst&quot;&lt;/a&gt; article, Martin Fowler&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://microservices.io/patterns/monolithic.html&quot;&gt;&quot;Pattern: Monolithic Architecture&quot;&lt;/a&gt; pattern description, Chris Richardson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Domain-Driven Design&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215&quot;&gt;&quot;Domain-Driven Design: Tackling Complexity in the Heart of Software&quot;&lt;/a&gt; book, Eric Evans&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Implementing-Domain-Driven-Design-Vaughn-Vernon/dp/0321834577&quot;&gt;&quot;Implementing Domain-Driven Design&quot;&lt;/a&gt; book, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/dp/0134434420&quot;&gt;&quot;Domain-Driven Design Distilled&quot;&lt;/a&gt; book, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design-ebook/dp/B00XLYUA0W&quot;&gt;&quot;Patterns, Principles, and Practices of Domain-Driven Design&quot;&lt;/a&gt; book, Scott Millett, Nick Tune&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Secure-Design-Daniel-Deogun/dp/1617294357&quot;&gt;&quot;Secure By Design&quot;&lt;/a&gt; book, Daniel Deogun, Dan Bergh Johnsson, Daniel Sawano&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Hands-Domain-Driven-Design-NET-ebook/dp/B07C5WSR9B&quot;&gt;&quot;Hands-On Domain-Driven Design with .NET Core: Tackling complexity in the heart of software by putting DDD principles into practice&quot;&lt;/a&gt; book, Alexey Zimarev&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB&quot;&gt;&quot;Domain Modeling Made Functional: Tackle Software Complexity with Domain-Driven Design and F#&quot;&lt;/a&gt; book, Scott Wlaschin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ddd-by-examples/library&quot;&gt;&quot;DDD by examples - library&quot;&lt;/a&gt; GH repository, Jakub Pilimon, Bartłomiej Słota&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VaughnVernon/IDDD_Samples&quot;&gt;&quot;IDDD_Samples&quot;&lt;/a&gt; GH repository, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VaughnVernon/IDDD_Samples_NET&quot;&gt;&quot;IDDD_Samples_NET&quot;&lt;/a&gt; GH repository, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/heynickc/awesome-ddd&quot;&gt;&quot;Awesome Domain-Driven Design&quot;&lt;/a&gt; GH repository, Nick Chamberlain&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Application Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/books/eaa.html&quot;&gt;&quot;Patterns of Enterprise Application Architecture&quot;&lt;/a&gt; book, Martin Fowler&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/dependency-injection-principles-practices-patterns&quot;&gt;&quot;Dependency Injection Principles, Practices, and Patterns&quot;&lt;/a&gt; book, Steven van Deursen, Mark Seemann&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Clean-Architecture-Craftsmans-Software-Structure/dp/0134494164&quot;&gt;&quot;Clean Architecture: A Craftsman&#39;s Guide to Software Structure and Design (Robert C. Martin Series&quot;&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&quot;&gt;&quot;The Clean Architecture&quot;&lt;/a&gt; article, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jeffreypalermo.com/2008/07/the-onion-architecture-part-1/&quot;&gt;&quot;The Onion Architecture&quot;&lt;/a&gt; article series, Jeffrey Palermo&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20180822100852/http://alistair.cockburn.us/Hexagonal+architecture&quot;&gt;&quot;Hexagonal/Ports &amp;amp; Adapters Architecture&quot;&lt;/a&gt; article, Alistair Cockburn&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://herbertograca.com/2017/11/16/explicit-architecture-01-ddd-hexagonal-onion-clean-cqrs-how-i-put-it-all-together/&quot;&gt;&quot;DDD, Hexagonal, Onion, Clean, CQRS, … How I put it all together&quot;&lt;/a&gt; article, Herberto Graca&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Software Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Software-Architecture-Practice-3rd-Engineering/dp/0321815734&quot;&gt;&quot;Software Architecture in Practice (3rd Edition)&quot;&lt;/a&gt; book, Len Bass, Paul Clements, Rick Kazman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://softwarearchitecturefordevelopers.com/&quot;&gt;&quot;Software Architecture for Developers Vol 1 &amp;amp; 2&quot;&lt;/a&gt; book, Simon Brown&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Just-Enough-Software-Architecture-Risk-Driven/dp/0984618104&quot;&gt;&quot;Just Enough Software Architecture: A Risk-Driven Approach&quot;&lt;/a&gt; book, George H. Fairbanks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Software-Systems-Architecture-Stakeholders-Perspectives/dp/032171833X/&quot;&gt;&quot;Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives (2nd Edition)&quot;&lt;/a&gt; book, Nick Rozanski, Eóin Woods&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Design-Programmer-Architect-Pragmatic-Programmers/dp/1680502093&quot;&gt;&quot;Design It!: From Programmer to Software Architect (The Pragmatic Programmers)&quot;&lt;/a&gt; book, Michael Keeling&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;System Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.enterpriseintegrationpatterns.com/&quot;&gt;&quot;Enterprise Integration Patterns : Designing, Building, and Deploying Messaging Solutions&quot;&lt;/a&gt; book and catalogue, Gregor Hohpe, Bobby Woolf&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Designing-Data-Intensive-Applications-Reliable-Maintainable/dp/1449373321&quot;&gt;&quot;Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems &quot;&lt;/a&gt; book, Martin Kleppman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Building-Evolutionary-Architectures-Support-Constant/dp/1491986360&quot;&gt;&quot;Building Evolutionary Architectures: Support Constant Change&quot;&lt;/a&gt; book, Neal Ford&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Building-Microservices-Designing-Fine-Grained-Systems/dp/1491950358&quot;&gt;&quot;Building Microservices: Designing Fine-Grained Systems&quot;&lt;/a&gt; book, Sam Newman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Design&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672&quot;&gt;&quot;Refactoring: Improving the Design of Existing Code&quot;&lt;/a&gt; book, Martin Fowler, Kent Beck, John Brant, William Opdyke, Don Roberts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot;&gt;&quot;Clean Code: A Handbook of Agile Software Craftsmanship&quot;&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Agile-Principles-Patterns-Practices-C/dp/0131857258&quot;&gt;&quot;Agile Principles, Patterns, and Practices in C#&quot;&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Applying-UML-Patterns-Introduction-Object-Oriented/dp/0131489062&quot;&gt;&quot;Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development (3rd Edition)&quot;&lt;/a&gt; book, Craig Larman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052&quot;&gt;&quot;Working Effectively with Legacy Code&quot;&lt;/a&gt; book, Michael Feathers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670&quot;&gt;&quot;Code Complete: A Practical Handbook of Software Construction, Second Edition&quot;&lt;/a&gt; book, Steve McConnell&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612&quot;&gt;&quot;Design Patterns: Elements of Reusable Object-Oriented Software&quot;&lt;/a&gt; book, Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Craftsmanship&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073&quot;&gt;&quot;The Clean Coder: A Code of Conduct for Professional Programmers&quot;&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X&quot;&gt;&quot;The Pragmatic Programmer: From Journeyman to Master&quot;&lt;/a&gt; book, Andrew Hunt&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Art-Unit-Testing-examples/dp/1617290890&quot;&gt;&quot;The Art of Unit Testing: with examples in C#&quot;&lt;/a&gt; book, Roy Osherove&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit&quot;&gt;&quot;Unit Test Your Architecture with ArchUnit&quot;&lt;/a&gt; article, Jonas Havers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Unit-Testing-Principles-Practices-Patterns/dp/1617296279&quot;&gt;&quot;Unit Testing Principles, Practices, and Patterns&quot;&lt;/a&gt; book, Vladimir Khorikov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Growing-Object-Oriented-Software-Guided-Tests/dp/0321503627&quot;&gt;&quot;Growing Object-Oriented Software, Guided by Tests&quot;&lt;/a&gt; book, Steve Freeman, Nat Pryce&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamilgrzybek.com/blog/series/automated-tests&quot;&gt;Automated Tests&lt;/a&gt; article series, Kamil Grzybek&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;UML&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/UML-Distilled-Standard-Modeling-Language/dp/0321193687&quot;&gt;&quot;UML Distilled: A Brief Guide to the Standard Object Modeling Language (3rd Edition)&quot;&lt;/a&gt; book, Martin Fowler&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Event Storming&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leanpub.com/introducing_eventstorming&quot;&gt;&quot;Introducing EventStorming&quot;&lt;/a&gt; book, Alberto Brandolini&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mariuszgil/awesome-eventstorming&quot;&gt;&quot;Awesome EventStorming&quot;&lt;/a&gt; GH repository, Mariusz Gil&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Event Sourcing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Hands-Domain-Driven-Design-NET-ebook/dp/B07C5WSR9B&quot;&gt;&quot;Hands-On Domain-Driven Design with .NET Core: Tackling complexity in the heart of software by putting DDD principles into practice&quot;&lt;/a&gt; book, Alexey Zimarev&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leanpub.com/esversioning&quot;&gt;&quot;Versioning in an Event Sourced System&quot;&lt;/a&gt; book, Greg Young&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PacktPublishing/Hands-On-Domain-Driven-Design-with-.NET-Core&quot;&gt;Hands-On-Domain-Driven-Design-with-.NET-Core&lt;/a&gt; GH repository, Alexey Zimarev&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oskardudycz/EventSourcing.NetCore&quot;&gt;EventSourcing.NetCore&lt;/a&gt; GH repository, Oskar Dudycz&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>dotnet/aspnetcore</title>
      <link>https://github.com/dotnet/aspnetcore</link>
      <description>&lt;p&gt;ASP.NET Core is a cross-platform .NET framework for building modern cloud-based web applications on Windows, Mac, or Linux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ASP.NET Core&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.dotnetfoundation.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/.NET%20Foundation-blueviolet.svg?sanitize=true&quot; alt=&quot;.NET Foundation&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspnetcore/raw/main/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/dotnet/aspnetcore?color=%230b0&amp;amp;style=flat-square&quot; alt=&quot;MIT License&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspnetcore/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/aspnetcore/help%20wanted?color=%232EA043&amp;amp;label=help%20wanted&amp;amp;style=flat-square&quot; alt=&quot;Help Wanted&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/dotnet/aspnetcore/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/dotnet/aspnetcore/good%20first%20issue?color=%23512BD4&amp;amp;label=good%20first%20issue&amp;amp;style=flat-square&quot; alt=&quot;Good First Issues&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/dotnet-discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/732297728826277939?style=flat-square&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=7289DA&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;ASP.NET Core is an open-source and cross-platform framework for building modern cloud-based internet-connected applications, such as web apps, IoT apps, and mobile backends. ASP.NET Core apps run on &lt;a href=&quot;https://dot.net&quot;&gt;.NET&lt;/a&gt;, a free, cross-platform, and open-source application runtime. It was architected to provide an optimized development framework for apps that are deployed to the cloud or run on-premises. It consists of modular components with minimal overhead, so you retain flexibility while constructing your solutions. You can develop and run your ASP.NET Core apps cross-platform on Windows, Mac, and Linux. &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/&quot;&gt;Learn more about ASP.NET Core&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/getting-started&quot;&gt;Getting Started&lt;/a&gt; instructions.&lt;/p&gt; 
&lt;p&gt;Also check out the &lt;a href=&quot;https://www.microsoft.com/net&quot;&gt;.NET Homepage&lt;/a&gt; for released versions of .NET, getting started guides, and learning resources.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/dotnet/aspnetcore/raw/main/docs/TriageProcess.md&quot;&gt;Triage Process&lt;/a&gt; document for more information on how we handle incoming issues.&lt;/p&gt; 
&lt;h2&gt;How to engage, contribute, and give feedback&lt;/h2&gt; 
&lt;p&gt;Some of the best ways to contribute are to try things out, file issues, join in design conversations, and make pull-requests.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspnetcore/main/docs/DailyBuilds.md&quot;&gt;Download our latest daily builds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow along with the development of ASP.NET Core: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://live.asp.net&quot;&gt;Community Standup&lt;/a&gt;: The community standup is held every week and streamed live on YouTube. You can view past standups in the linked playlist.&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://aka.ms/aspnet/roadmap&quot;&gt;Roadmap&lt;/a&gt;: The schedule and milestone themes for ASP.NET Core.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspnetcore/main/docs/BuildFromSource.md&quot;&gt;Build ASP.NET Core source code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspnetcore/main/CONTRIBUTING.md&quot;&gt;contributing&lt;/a&gt; page to see the best places to log issues and start discussions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting security issues and bugs&lt;/h2&gt; 
&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&quot;mailto:secure@microsoft.com&quot;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&quot;https://technet.microsoft.com/en-us/security/ff852094.aspx&quot;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Related projects&lt;/h2&gt; 
&lt;p&gt;These are some other repos for related projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/aspnet/Docs&quot;&gt;Documentation&lt;/a&gt; - documentation sources for &lt;a href=&quot;https://learn.microsoft.com/aspnet/core/&quot;&gt;https://learn.microsoft.com/aspnet/core/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/efcore&quot;&gt;Entity Framework Core&lt;/a&gt; - data access technology&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/runtime&quot;&gt;Runtime&lt;/a&gt; - cross-platform runtime for cloud, mobile, desktop, and IoT apps&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/razor&quot;&gt;Razor&lt;/a&gt; - the Razor compiler and tooling for working with Razor syntax (.cshtml, .razor)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code of conduct&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/aspnetcore/main/CODE-OF-CONDUCT.md&quot;&gt;CODE-OF-CONDUCT&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Nightly builds&lt;/h2&gt; 
&lt;p&gt;This table includes links to download the latest builds of the ASP.NET Core Shared Framework. Also included are links to download the Windows Hosting Bundle, which includes the ASP.NET Core Shared Framework, the .NET Runtime Shared Framework, and the IIS plugin (ASP.NET Core Module). You can download the latest .NET Runtime builds &lt;a href=&quot;https://github.com/dotnet/runtime/raw/main/docs/project/dogfooding.md#nightly-builds-table&quot;&gt;here&lt;/a&gt;, and the latest .NET SDK builds &lt;a href=&quot;https://github.com/dotnet/installer#table&quot;&gt;here&lt;/a&gt;. &lt;strong&gt;If you&#39;re unsure what you need, then install the SDK; it has everything except the IIS plugin.&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Platform&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Shared Framework (Installer)&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Shared Framework (Binaries)&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Hosting Bundle (Installer)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Windows x64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-win-x64.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-win-x64.zip&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/dotnet-hosting-win.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Windows x86&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-win-x86.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-win-x86.zip&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/dotnet-hosting-win.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Windows arm64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-win-arm64.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-win-arm64.zip&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/dotnet-hosting-win.exe&quot;&gt;Installer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;macOS x64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-osx-x64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;macOS arm64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-osx-arm64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux x64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-x64.deb&quot;&gt;Deb Installer&lt;/a&gt; - &lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-x64.rpm&quot;&gt;RPM Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-linux-x64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux arm&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-linux-arm.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux arm64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-aarch64.rpm&quot;&gt;RPM Installer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-linux-arm64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux-musl-x64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-linux-musl-x64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux-musl-arm&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-linux-musl-arm.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;strong&gt;Linux-musl-arm64&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://aka.ms/dotnet/10.0/daily/aspnetcore-runtime-linux-musl-arm64.tar.gz&quot;&gt;Binaries&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;strong&gt;N/A&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>2394425147/astrodx</title>
      <link>https://github.com/2394425147/astrodx</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;/p&gt; 
 &lt;h3&gt;This GitHub repository is the ONLY official source for downloading the game.&lt;/h3&gt; 
 &lt;p&gt;AstroDX is &lt;strong&gt;100% free&lt;/strong&gt;, and will never require payment from you.&lt;br /&gt; If you purchased this game from any third-party website, store, or seller, you have been misled. These entities are not authorized to distribute or monetize this work. Request a refund immediately through the platform/store where you made the purchase. Report the listing to the platform&#39;s support team to help prevent further scams.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;AstroDX&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/2394425147/maipaddx/total?label=Android&quot; alt=&quot;Downloads&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/v/release/2394425147/astrodx?label=Stable&quot; alt=&quot;GitHub release (latest by date)&quot; /&gt;&lt;br /&gt; &lt;a href=&quot;https://discord.gg/6fpETgpvjZ&quot;&gt;&lt;img src=&quot;https://dcbadge.vercel.app/api/server/6fpETgpvjZ?style=flat&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;AstroDX (Formerly MaipadDX) is a mobile maimai simulator intended for those who do not yet have access to a cabinet, those who want to practice, and everyone interested in maimai who otherwise could not play the arcade game.&lt;br /&gt; This game is a clean-room implementation of maimai, and has been developed without using any use of original arcade data.&lt;/p&gt; 
&lt;h1&gt;Open-source projects&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simai serializer/deserializer: &lt;a href=&quot;https://github.com/reflektone-games/SimaiSharp&quot;&gt;SimaiSharp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Gameplay logic: &lt;a href=&quot;https://github.com/2394425147/maipaddx/tree/main/core-dump&quot;&gt;AstroDX core-dump&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We intended to open-source AstroDX after publishing to the iOS/Android app stores. Paid assets will be excluded to comply with licenses.&lt;/p&gt; 
&lt;h1&gt;Q&amp;amp;A&lt;/h1&gt; 
&lt;h2&gt;How do I download the iOS version?&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; Only 10k users can be in a group at any time. Don&#39;t join multiple groups if you joined one already.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Join the testing program through &lt;a href=&quot;https://testflight.apple.com/join/rACTLjPL&quot;&gt;TestFlight Group A&lt;/a&gt;, &lt;a href=&quot;https://testflight.apple.com/join/ocj3yptn&quot;&gt;TestFlight Group B&lt;/a&gt;, &lt;a href=&quot;https://testflight.apple.com/join/CuMxZE2M&quot;&gt;TestFlight Group C&lt;/a&gt;, or &lt;a href=&quot;https://testflight.apple.com/join/T6qKfV6f&quot;&gt;TestFlight Group D&lt;/a&gt; or &lt;a href=&quot;https://testflight.apple.com/join/sMm1MCYc&quot;&gt;TestFlight Group E&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://discord.com/channels/892807792996536453/1210127565986205726/1210428179001380946&quot;&gt;Discord server&lt;/a&gt; also offers a live tracker of available seats.&lt;/p&gt; 
&lt;h2&gt;How do I get songs/levels?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.astrodx.com/install/android&quot;&gt;Installation Guide for Android&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wiki.astrodx.com/install/ios&quot;&gt;Installation Guide for iOS/iPadOS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Can I play converts from maimai?&lt;/h2&gt; 
&lt;p&gt;We &lt;strong&gt;don&#39;t recommend&lt;/strong&gt; doing this, as it violates SEGA&#39;s policies.&lt;/p&gt; 
&lt;h2&gt;I&#39;m having some issues...&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Writing your issue in English allows more people to understand and help you.&lt;br /&gt; We also recommend searching for other people&#39;s issues for solutions first.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Open an issue &lt;a href=&quot;https://github.com/2394425147/astrodx/issues&quot;&gt;here&lt;/a&gt;, or join our &lt;a href=&quot;https://discord.gg/6fpETgpvjZ&quot;&gt;Discord server&lt;/a&gt; to talk about it.&lt;/p&gt; 
&lt;h2&gt;問題が発生した場合&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] イシューを英語で記載すると、より多くの人が理解し、助けてくれるでしょう。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/2394425147/astrodx/issues&quot;&gt;こちらから&lt;/a&gt;イシューを提出するか、&lt;a href=&quot;https://discord.com/channels/892807792996536453/1210127565986205726/1210428179001380946&quot;&gt;Discordサーバー&lt;/a&gt;に参加して相談してください。&lt;/p&gt; 
&lt;h2&gt;我遇到了問題！&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] 我們强烈建議提供英文翻譯（或綫上翻譯），以便其他人理解，并幫助到你。我們也建議搜索現有的issue，以避免重複或疑慮。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;在&lt;a href=&quot;https://github.com/2394425147/astrodx/issues&quot;&gt;這裏&lt;/a&gt;提交你的issue，或在我們的&lt;a href=&quot;https://discord.gg/6fpETgpvjZ&quot;&gt;Discord伺服器&lt;/a&gt;上一起討論。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MassTransit/MassTransit</title>
      <link>https://github.com/MassTransit/MassTransit</link>
      <description>&lt;p&gt;Distributed Application Framework for .NET&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MassTransit&lt;/h1&gt; 
&lt;p&gt;MassTransit is a &lt;em&gt;free, open-source&lt;/em&gt; distributed application framework for .NET. MassTransit makes it easy to create applications and services that leverage message-based, loosely-coupled asynchronous communication for higher availability, reliability, and scalability.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/317796?s=200&amp;amp;v=4&quot; alt=&quot;Mass Transit&quot; title=&quot;Mass Transit&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;MassTransit is Apache 2.0 licensed.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Get started by &lt;a href=&quot;https://masstransit-project.com/&quot;&gt;reading through the documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Build Status&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Branch&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;master&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MassTransit/MassTransit/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/MassTransit/MassTransit/actions/workflows/build.yml/badge.svg?branch=master&amp;amp;event=push&quot; alt=&quot;master&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;develop&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/MassTransit/MassTransit/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/MassTransit/MassTransit/actions/workflows/build.yml/badge.svg?branch=develop&amp;amp;event=push&quot; alt=&quot;develop&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;MassTransit NuGet Packages&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package Name&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;.NET&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;.NET Standard&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;.NET Framework&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Main&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit&quot;&gt;MassTransit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Abstractions&quot;&gt;MassTransit.Abstractions&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Newtonsoft&quot;&gt;MassTransit.Newtonsoft&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.MessagePack&quot;&gt;MassTransit.MessagePack&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Other&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Analyzers&quot;&gt;MassTransit.Analyzers&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Templates&quot;&gt;MassTransit.Templates&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.SignalR&quot;&gt;MassTransit.SignalR&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Interop.NServiceBus&quot;&gt;MassTransit.Interop.NServiceBus&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.TestFramework&quot;&gt;MassTransit.TestFramework&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Persistence&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.AmazonS3&quot;&gt;MassTransit.AmazonS3&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Azure.Cosmos&quot;&gt;MassTransit.Azure.Cosmos&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Azure.Storage&quot;&gt;MassTransit.Azure.Storage&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Azure.Table&quot;&gt;MassTransit.Azure.Table&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.DapperIntegration&quot;&gt;MassTransit.Dapper&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.DynamoDb&quot;&gt;MassTransit.DynamoDb&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.EntityFrameworkCore&quot;&gt;MassTransit.EntityFrameworkCore&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.EntityFramework&quot;&gt;MassTransit.EntityFramework&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Marten&quot;&gt;MassTransit.Marten&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.MongoDb&quot;&gt;MassTransit.MongoDb&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.NHibernate&quot;&gt;MassTransit.NHibernate&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Redis&quot;&gt;MassTransit.Redis&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Scheduling&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Hangfire&quot;&gt;MassTransit.Hangfire&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Quartz&quot;&gt;MassTransit.Quartz&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Transports&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.ActiveMQ&quot;&gt;MassTransit.ActiveMQ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.AmazonSQS&quot;&gt;MassTransit.AmazonSQS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Azure.ServiceBus.Core&quot;&gt;MassTransit.Azure.ServiceBus.Core&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.RabbitMQ&quot;&gt;MassTransit.RabbitMQ&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://nuget.org/packages/MassTransit.SqlTransport.PostgreSQL/&quot;&gt;MassTransit.SqlTransport.PostgreSQL&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://nuget.org/packages/MassTransit.SqlTransport.SqlServer/&quot;&gt;MassTransit.SqlTransport.SqlServer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.WebJobs.EventHubs&quot;&gt;MassTransit.WebJobs.EventHubs&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.WebJobs.ServiceBus&quot;&gt;MassTransit.WebJobs.ServiceBus&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Riders&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.Kafka&quot;&gt;MassTransit.Kafka&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/MassTransit.EventHub&quot;&gt;MassTransit.EventHub&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8.0, 9.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;2.0&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4.7.2&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Discord&lt;/h2&gt; 
&lt;p&gt;Get help live at the MassTransit Discord server.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/rNpQgYn&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/682238261753675864.svg?sanitize=true&quot; alt=&quot;alt Join the conversation&quot; title=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;GitHub Issues&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Pay attention&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Please do not open an issue on GitHub, unless you have spotted an actual bug in MassTransit.&lt;/p&gt; 
&lt;p&gt;Use &lt;a href=&quot;https://github.com/MassTransit/MassTransit/discussions&quot;&gt;GitHub Discussions&lt;/a&gt; to ask questions, bring up ideas, or other general items. Issues are not the place for questions, and will either be converted to a discussion or closed.&lt;/p&gt; 
&lt;p&gt;This policy is in place to avoid bugs being drowned out in a pile of sensible suggestions for future enhancements and calls for help from people who forget to check back if they get it and so on.&lt;/p&gt; 
&lt;h2&gt;Building from Source&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the latest &lt;a href=&quot;https://dotnet.microsoft.com/en-us/download/dotnet/9.0&quot;&gt;.NET 9 SDK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Clone the source down to your machine&lt;br /&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/MassTransit/MassTransit.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;dotnet build&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Turn off &lt;code&gt;autocrlf&lt;/code&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git config core.autocrlf false
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Hack!&lt;/li&gt; 
 &lt;li&gt;Make a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;REQUIREMENTS&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;.NET 9 SDK&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;CREDITS&lt;/h1&gt; 
&lt;p&gt;Logo Design by &lt;em&gt;The Agile Badger&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RMC-14/RMC-14</title>
      <link>https://github.com/RMC-14/RMC-14</link>
      <description>&lt;p&gt;RMC-14 is an asymmetric PvP game that runs on Robust Toolbox.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Space Station 14&quot; width=&quot;400&quot; height=&quot;400&quot; src=&quot;https://github.com/user-attachments/assets/320ad459-8997-4e5b-9f7e-fc7e7d7dcb73&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;RMC-14 is an asymmetric game, that runs on &lt;a href=&quot;https://github.com/space-wizards/RobustToolbox&quot;&gt;Robust Toolbox&lt;/a&gt;. It is inspired by &lt;a href=&quot;https://github.com/cmss13-devs/cmss13&quot;&gt;CMSS13&lt;/a&gt;, &lt;a href=&quot;https://spacestation13.com/&quot;&gt;Space Station 13&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This is the primary repo for RMC-14. To prevent people forking Robust Toolbox, a &quot;content&quot; pack is loaded by the client and server. This content pack contains everything needed to play the game on one specific server.&lt;/p&gt; 
&lt;p&gt;If you want to host or create content for RMC-14, this is the repo you need. It contains both RobustToolbox and the content pack for development of new content packs.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://wiki.rouny-ss14.com/&quot;&gt;RMC-14 Community Wiki&lt;/a&gt; | &lt;a href=&quot;https://discord.gg/rouny&quot;&gt;Discord&lt;/a&gt; | &lt;a href=&quot;https://store.steampowered.com/app/1255460/Space_Station_14/&quot;&gt;SS14 Steam Launcher&lt;/a&gt; | &lt;a href=&quot;https://spacestation14.io/about/nightlies/&quot;&gt;Standalone Launcher Download&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We are happy to accept contributions from anybody. Get in Discord if you want to help. We&#39;ve got a &lt;a href=&quot;https://github.com/RMC-14/RMC-14/issues&quot;&gt;list of issues&lt;/a&gt; that need to be done and anybody can pick them up. Don&#39;t be afraid to ask for help either!&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repo.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;RUN_THIS.py&lt;/code&gt; to init submodules and download the engine.&lt;/li&gt; 
 &lt;li&gt;Compile the solution.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.spacestation14.com/en/general-development/setup.html&quot;&gt;More detailed instructions on building the project.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;All code for the content repository is licensed under &lt;a href=&quot;https://github.com/space-wizards/space-station-14/raw/master/LICENSE.TXT&quot;&gt;MIT&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Most assets are licensed under &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;CC-BY-SA-3.0&lt;/a&gt; unless stated otherwise. Assets have their license and the copyright in the metadata file. &lt;a href=&quot;https://github.com/space-wizards/space-station-14/raw/master/Resources/Textures/Objects/Tools/crowbar.rsi/meta.json&quot;&gt;Example&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Note that some assets are licensed under the non-commercial &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/3.0/&quot;&gt;CC-BY-NC-SA 3.0&lt;/a&gt; or similar non-commercial licenses and will need to be removed if you wish to use this project commercially.&lt;/p&gt; 
&lt;h2&gt;Partners&lt;/h2&gt; 
&lt;p&gt;Proxy/VPN detection by &lt;a href=&quot;http://getipintel.net/&quot;&gt;GetIPIntel.net&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>winsw/winsw</title>
      <link>https://github.com/winsw/winsw</link>
      <description>&lt;p&gt;A wrapper executable that can run any executable as a Windows service, in a permissive license.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Windows Service Wrapper in a permissive license&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/winsw/winsw/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/winsw/winsw/total?style=flat-square&quot; alt=&quot;Github All Releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/winsw/winsw/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/winsw/winsw?include_prereleases&amp;amp;sort=semver&amp;amp;style=flat-square&quot; alt=&quot;GitHub Release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/WinSW/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/WinSW?style=flat-square&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/winsw/winsw/_build?definitionId=1&amp;amp;_a=summary&quot;&gt;&lt;img src=&quot;https://img.shields.io/azure-devops/build/winsw/aabe43dd-6f6d-4660-b5dd-5b79e1e2ef4e/1?style=flat-square&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://dev.azure.com/winsw/winsw/_release?_a=releases&amp;amp;view=mine&amp;amp;definitionId=1&quot;&gt;&lt;img src=&quot;https://img.shields.io/azure-devops/release/winsw/aabe43dd-6f6d-4660-b5dd-5b79e1e2ef4e/1/1?style=flat-square&quot; alt=&quot;Deployment Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/winsw/winsw?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://img.shields.io/gitter/room/winsw/winsw?style=flat-square&quot; alt=&quot;Gitter&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/winsw/winsw?style=flat-square&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;WinSW wraps and manages any application as a Windows service.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We are actively developing WinSW 3. Please refer to the &lt;a href=&quot;https://github.com/winsw/winsw/tree/master&quot;&gt;v2&lt;/a&gt; branch for previous version documentation.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Why?&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/MANIFEST.md&quot;&gt;project manifest&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported platforms&lt;/h2&gt; 
&lt;p&gt;WinSW 3 can run on Windows platforms with .NET Framework 4.6.1 or later versions installed. For systems without .NET Framework, the project provides native 64-bit and 32-bit executables based on .NET 7.&lt;/p&gt; 
&lt;p&gt;More executables can be added upon request.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/dotnet/framework/get-started/system-requirements&quot;&gt;.NET Framework system requirements&lt;/a&gt;&lt;br /&gt; Preinstalled since Windows 10, version 1511 and Windows Server 2016.&lt;br /&gt; Installable since Windows 7 SP1 and Windows Server 2008 R2 SP1.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/dotnet/core/raw/main/release-notes/7.0/supported-os.md&quot;&gt;.NET 7 system requirements&lt;/a&gt;&lt;br /&gt; Supported since Windows 10, version 1607, Windows Server (Core) 2012 R2 and Nano Server, version 1809.&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;Latest release and pre-release WinSW binaries are available on &lt;a href=&quot;https://github.com/winsw/winsw/releases&quot;&gt;GitHub Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Alternative sources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CI builds are available on &lt;a href=&quot;https://dev.azure.com/winsw/winsw/_build?definitionId=1&quot;&gt;Azure Pipelines&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.nuget.org/packages/WinSW/&quot;&gt;NuGet&lt;/a&gt;. (2.x)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jenkinsci/winsw-maven-packaging&quot;&gt;Maven packaging&lt;/a&gt; for executables, hosted by the &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins project&lt;/a&gt;. Binaries are available &lt;a href=&quot;https://repo.jenkins-ci.org/releases/com/sun/winsw/winsw/&quot;&gt;here&lt;/a&gt;. (2.x)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;h3&gt;Use WinSW as a global tool&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Take &lt;em&gt;WinSW.exe&lt;/em&gt; or &lt;em&gt;WinSW.zip&lt;/em&gt; from the distribution.&lt;/li&gt; 
 &lt;li&gt;Write &lt;em&gt;myapp.xml&lt;/em&gt; (see the &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/xml-config-file.md&quot;&gt;XML config file specification&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/samples&quot;&gt;samples&lt;/a&gt; for more details).&lt;/li&gt; 
 &lt;li&gt;Run &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#install-command&quot;&gt;&lt;code&gt;winsw install myapp.xml [options]&lt;/code&gt;&lt;/a&gt; to install the service.&lt;/li&gt; 
 &lt;li&gt;Run &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#start-command&quot;&gt;&lt;code&gt;winsw start myapp.xml&lt;/code&gt;&lt;/a&gt; to start the service.&lt;/li&gt; 
 &lt;li&gt;Run &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#status-command&quot;&gt;&lt;code&gt;winsw status myapp.xml&lt;/code&gt;&lt;/a&gt; to see if your service is up and running.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Use WinSW as a bundled tool&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Take &lt;em&gt;WinSW.exe&lt;/em&gt; or &lt;em&gt;WinSW.zip&lt;/em&gt; from the distribution, and rename the &lt;em&gt;.exe&lt;/em&gt; to your taste (such as &lt;em&gt;myapp.exe&lt;/em&gt;).&lt;/li&gt; 
 &lt;li&gt;Write &lt;em&gt;myapp.xml&lt;/em&gt; (see the &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/xml-config-file.md&quot;&gt;XML config file specification&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/samples&quot;&gt;samples&lt;/a&gt; for more details).&lt;/li&gt; 
 &lt;li&gt;Place those two files side by side, because that&#39;s how WinSW discovers its co-related configuration.&lt;/li&gt; 
 &lt;li&gt;Run &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#install-command&quot;&gt;&lt;code&gt;myapp.exe install [options]&lt;/code&gt;&lt;/a&gt; to install the service.&lt;/li&gt; 
 &lt;li&gt;Run &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#start-command&quot;&gt;&lt;code&gt;myapp.exe start&lt;/code&gt;&lt;/a&gt; to start the service.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Sample configuration file&lt;/h3&gt; 
&lt;p&gt;You write the configuration file that defines your service. The example below is a primitive example being used in the Jenkins project:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;service&amp;gt;
  &amp;lt;id&amp;gt;jenkins&amp;lt;/id&amp;gt;
  &amp;lt;name&amp;gt;Jenkins&amp;lt;/name&amp;gt;
  &amp;lt;description&amp;gt;This service runs Jenkins continuous integration system.&amp;lt;/description&amp;gt;
  &amp;lt;env name=&quot;JENKINS_HOME&quot; value=&quot;%BASE%&quot;/&amp;gt;
  &amp;lt;executable&amp;gt;java&amp;lt;/executable&amp;gt;
  &amp;lt;arguments&amp;gt;-Xrs -Xmx256m -jar &quot;%BASE%\jenkins.war&quot; --httpPort=8080&amp;lt;/arguments&amp;gt;
  &amp;lt;log mode=&quot;roll&quot;&amp;gt;&amp;lt;/log&amp;gt;
&amp;lt;/service&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The full specification of the configuration file is available &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/xml-config-file.md&quot;&gt;here&lt;/a&gt;. You can find more samples &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/samples&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;WinSW is being managed by the &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/xml-config-file.md&quot;&gt;XML configuration file&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Your renamed &lt;em&gt;WinSW.exe&lt;/em&gt; binary also accepts the following commands:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#install-command&quot;&gt;install&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Installs the service.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#uninstall-command&quot;&gt;uninstall&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Uninstalls the service.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#start-command&quot;&gt;start&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Starts the service.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#stop-command&quot;&gt;stop&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stops the service.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#restart-command&quot;&gt;restart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stops and then starts the service.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#status-command&quot;&gt;status&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Checks the status of the service.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#refresh-command&quot;&gt;refresh&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Refreshes the service properties without reinstallation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#customize-command&quot;&gt;customize&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Customizes the wrapper executable.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;dev&lt;/td&gt; 
   &lt;td&gt;Experimental commands.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Experimental commands:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#dev-ps-command&quot;&gt;dev ps&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Draws the process tree associated with the service.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#dev-kill-command&quot;&gt;dev kill&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Terminates the service if it has stopped responding.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/cli-commands.md#dev-list-command&quot;&gt;dev list&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Lists services managed by the current executable.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Most commands require Administrator privileges to execute. WinSW will prompt for UAC in non-elevated sessions.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/migrate-to-3-x.md&quot;&gt;Migrate to WinSW 3.x&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Configuration: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/xml-config-file.md&quot;&gt;XML configuration file&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/logging-and-error-reporting.md&quot;&gt;Logging and error reporting&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/extensions/extensions.md&quot;&gt;Extensions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Use cases: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/self-restarting-service.md&quot;&gt;Self-restarting services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/docs/deferred-file-operations.md&quot;&gt;Deferred file operations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! See the &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;WinSW is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/winsw/winsw/v3/LICENSE.txt&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rocksdanister/lively</title>
      <link>https://github.com/rocksdanister/lively</link>
      <description>&lt;p&gt;Free and open-source software that allows users to set animated desktop wallpapers and screensavers powered by WinUI 3.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Files Logo&quot; src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/figma_promo_16x9.jpg&quot; width=&quot;450&quot; /&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;Lively Wallpaper&lt;/h2&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/rocksdanister/lively/all.svg?sanitize=true&quot; alt=&quot;GitHub release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rocksdanister/lively/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/rocksdanister/lively/total.svg?sanitize=true&quot; alt=&quot;Github all releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rocksdanister/lively/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/rocksdanister/lively.svg?sanitize=true&quot; alt=&quot;GitHub stars&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rocksdanister/lively/wiki&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Docs-WIP-red.svg?sanitize=true&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rocksdanister/lively/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/rocksdanister/lively.svg?sanitize=true&quot; alt=&quot;Issues&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://crowdin.com/project/lively-wallpaper&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/lively-wallpaper/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#download&quot;&gt;Download&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#support&quot;&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/main_preview.gif&quot; width=&quot;600&quot; height=&quot;338&quot; /&gt; 
&lt;p&gt;Animated desktop wallpapers, bring your desktop to life!&lt;/p&gt; 
&lt;h4&gt;Join Discussions:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/LivelyWallpaper/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/discussions/&quot;&gt;Github&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Wait a sec, preview gif clips take some time to load.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Types Of Wallpapers&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Wallpaper&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
   &lt;th&gt;Interactive&lt;/th&gt; 
   &lt;th&gt;Resolution&lt;/th&gt; 
   &lt;th&gt;Performance&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Video/GIF&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/wallpaper_video.gif&quot; width=&quot;256&quot; height=&quot;144&quot; /&gt;&lt;br /&gt;&lt;a href=&quot;https://www.pexels.com/video/blue-texture-abstract-leaves-7710243/&quot;&gt;Video&lt;/a&gt; by Rostislav Uzunov&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Fixed&lt;/td&gt; 
   &lt;td&gt;Fixed&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Webpage&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/wallpaper_html.gif&quot; width=&quot;256&quot; height=&quot;144&quot; /&gt;&lt;br /&gt;&lt;a href=&quot;http://louie.co.nz/25th_hour/&quot;&gt; 25th Hour&lt;/a&gt; by Loius Coyle&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Variable&lt;/td&gt; 
   &lt;td&gt;Variable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Application/Games&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/wallpaper_emulator.gif&quot; width=&quot;256&quot; height=&quot;144&quot; /&gt;&lt;br /&gt;Run Unity or Godot games as wallpaper&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Variable&lt;/td&gt; 
   &lt;td&gt;Variable&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Screensavers&lt;/h4&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/screen_saver.gif&quot; width=&quot;600&quot; height=&quot;338&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lively supports Windows screensaver.&lt;/li&gt; 
 &lt;li&gt;Any wallpaper can be used as screensaver.&lt;/li&gt; 
 &lt;li&gt;Multiple monitor supported.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Screen-Saver&quot;&gt;Learn more..&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Automation&lt;/h4&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/rotary_demo.gif&quot; width=&quot;600&quot; height=&quot;338&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lively can be controlled with command line arguments from terminal.&lt;/li&gt; 
 &lt;li&gt;Integrate with other languages like Python or scripting software AutoHotKey.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Command-Line-Controls&quot;&gt;Learn more..&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Lively API&lt;/h4&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/music_api.gif&quot; width=&quot;600&quot; height=&quot;338&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Powerful set of API for developers to create interactive wallpapers.&lt;/li&gt; 
 &lt;li&gt;Get hardware readings, audio graph, music information..&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/API&quot;&gt;Learn more..&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Machine Learning&lt;/h4&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/wallpaper_depth.gif&quot; width=&quot;600&quot; height=&quot;338&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Leverage Machine Learning inference to create dynamic wallpapers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Machine-Learning&quot;&gt;Learn more..&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;More Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimal webpage renderer powered by chromium.&lt;/li&gt; 
 &lt;li&gt;Hardware accelerated video playback using mpv/vlc player with customizable video filters.&lt;/li&gt; 
 &lt;li&gt;Easy to use; Just drag&#39;n&#39;drop media or webpages into lively to set as wallpaper.&lt;/li&gt; 
 &lt;li&gt;Latest Windows 11 design using WinUI 3 + WindowsAppSDK framework.&lt;/li&gt; 
 &lt;li&gt;Efficient, Lively is native application designed for Windows.&lt;/li&gt; 
 &lt;li&gt;Fully opensource &amp;amp; free; no blackmagic, no features behind paywall.&lt;/li&gt; 
 &lt;li&gt;Shadertoy.com urls are supported as wallpaper.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Performance&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Wallpaper playback pauses when fullscreen application/games run on the machine (~0% cpu, gpu usage).&lt;/li&gt; 
 &lt;li&gt;Set wallpaper playback rules based on running foreground application.&lt;/li&gt; 
 &lt;li&gt;Can be set to pause wallpaper when running on battery power (laptops.)&lt;/li&gt; 
 &lt;li&gt;Wallpaper automatically pauses when running remote desktop session.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Lively is not officially affiliated with Unity technologies, godot, shadertoy;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;h5&gt;Microsoft Store (Windows 10 1809 or above)&lt;/h5&gt; 
&lt;p&gt;&lt;a href=&quot;https://apps.microsoft.com/store/detail/9NTM2QC6QWS7&quot;&gt;&lt;img src=&quot;https://get.microsoft.com/images/en-us%20dark.svg?sanitize=true&quot; alt=&quot;Get it from Microsoft&quot; width=&quot;142px&quot; height=&quot;52px&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/releases/latest&quot;&gt;Installer (Windows 10 1903 or above)&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Installer may give Smartscreen warning, &lt;a href=&quot;https://github.com/rocksdanister/lively/issues/9&quot;&gt;discussion.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Differences-Between-Distributions&quot;&gt;Which version do I download?&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Are you a Lively fan and want to help out? here are some options..&lt;/p&gt; 
&lt;h4&gt;Programmer&lt;/h4&gt; 
&lt;p&gt;Code contributions are welcome, &lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Contributing-Guidelines&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Designer&lt;/h4&gt; 
&lt;p&gt;Help improve UI/UX of Lively, &lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Contributing-Guidelines&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Localization&lt;/h4&gt; 
&lt;p&gt;Help translate Lively to more languages, &lt;a href=&quot;https://github.com/rocksdanister/lively-translations&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Suggestions &amp;amp; Bug report&lt;/h4&gt; 
&lt;p&gt;Suggest new features or file bug reports to improve Lively, &lt;a href=&quot;https://github.com/rocksdanister/lively/issues&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Patreon&lt;/h4&gt; 
&lt;p&gt;Financially support Lively by become a patreon member and get your name listed in-app, &lt;a href=&quot;https://patreon.com/rocksdanister&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Spread the word&lt;/h4&gt; 
&lt;p&gt;Star this repository, leave a Microsoft store review or tell your friend.. any help is welcome :)&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Lively is licensed under &lt;a href=&quot;https://github.com/rocksdanister/lively/raw/core-separation/LICENSE&quot;&gt;GPL-v3.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OPCFoundation/UA-.NETStandard</title>
      <link>https://github.com/OPCFoundation/UA-.NETStandard</link>
      <description>&lt;p&gt;OPC Unified Architecture .NET Standard&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Official OPC UA .NET Standard Stack from the OPC Foundation&lt;/h1&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;This OPC UA reference implementation is targeting the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/net-standard&quot;&gt;.NET Standard&lt;/a&gt; specification.&lt;/p&gt; 
&lt;p&gt;.NET Standard allows to develop apps that run on all common platforms available today, including Linux, iOS, Android (via Xamarin) and Windows 7/8/8.1/10/11 (including embedded/IoT editions) without requiring platform-specific modifications.&lt;/p&gt; 
&lt;p&gt;One of the reference implementations inside this project has been certified for compliance through an OPC Foundation Certification Test Lab to prove its high quality. Fixes and enhancements since the certification process have been tested and verified for compliance using the latest Compliance Test Tool (CTT).&lt;/p&gt; 
&lt;p&gt;Furthermore, cloud applications and services (such as ASP.NET, DNX, Azure Websites, Azure Webjobs, Azure Nano Server and Azure Service Fabric) are also supported.&lt;/p&gt; 
&lt;p&gt;More samples based on the official &lt;a href=&quot;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua/&quot;&gt;Nuget&lt;/a&gt; packages can be found in the &lt;a href=&quot;https://github.com/OPCFoundation/UA-.NETStandard-Samples&quot;&gt;OPC UA .NET Standard Samples&lt;/a&gt; repository. For development there is also a &lt;a href=&quot;https://opcfoundation.visualstudio.com/opcua-netstandard/_packaging?_a=feed&amp;amp;feed=opcua-preview%40Local&quot;&gt;preview Nuget feed&lt;/a&gt; available. For local testing a &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/ContainerReferenceServer.md&quot;&gt;Docker container of the Reference Server&lt;/a&gt; is available for preview and release builds.&lt;/p&gt; 
&lt;h2&gt;For more information and license terms, see &lt;a href=&quot;http://opcfoundation.github.io/UA-.NETStandard&quot;&gt;here&lt;/a&gt;.&lt;/h2&gt; 
&lt;h3&gt;Features included&lt;/h3&gt; 
&lt;h4&gt;Core and Libraries&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully ported Core OPC UA Stack and Libraries (Client, Server, Configuration, Complex Types &amp;amp; GDS assemblies).&lt;/li&gt; 
 &lt;li&gt;Reference sample Server and Client.&lt;/li&gt; 
 &lt;li&gt;X.509 &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/Certificates.md&quot;&gt;Certificate&lt;/a&gt; support for client and server authentication.&lt;/li&gt; 
 &lt;li&gt;SHA-2 support (up to SHA512) including security profile Basic256Sha256, Aes128Sha256RsaOaep and Aes256Sha256RsaPss for configurations with high security needs.&lt;/li&gt; 
 &lt;li&gt;ECC Security policies ECC_nistP256, ECC_nistP384, ECC_brainpoolP256r1 and ECC_brainpoolP384r1.&lt;/li&gt; 
 &lt;li&gt;Anonymous, username and X.509 certificate user authentication.&lt;/li&gt; 
 &lt;li&gt;UA-TCP &amp;amp; HTTPS transports (client and server).&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/ReverseConnect.md&quot;&gt;Reverse Connect&lt;/a&gt; for the UA-TCP transport (client and server).&lt;/li&gt; 
 &lt;li&gt;Folder &amp;amp; OS-level (X509Store) &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/Certificates.md&quot;&gt;Certificate Stores&lt;/a&gt; with &lt;em&gt;Global Discovery Server&lt;/em&gt; and &lt;em&gt;Server Push&lt;/em&gt; support.&lt;/li&gt; 
 &lt;li&gt;Sessions and (durable) Subscriptions.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/PubSub.md&quot;&gt;PubSub&lt;/a&gt; library with samples.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Key Features and Updates in OPC UA 1.05&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Security Enhancements&lt;/strong&gt;: Improved encryption and authentication mechanisms.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CRL Support&lt;/strong&gt;: Added Certificate Revocation List support for X509Store on Windows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Improvements&lt;/strong&gt;: Faster binary encoding and decoding, reducing memory usage and latency.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Role-Based Management&lt;/strong&gt;: Support for WellKnownRoles and RoleBasedUserManagement &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/RoleBasedUserManagement.md&quot;&gt;WellKnownRoles &amp;amp; RoleBasedUserManagement&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Improved Logging&lt;/strong&gt;: Enhanced logging with &lt;code&gt;ILogger&lt;/code&gt; and &lt;code&gt;EventSource&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ECC Profiles&lt;/strong&gt;: Support for NIST &amp;amp; Brainpool &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/EccProfiles.md&quot;&gt;Security Profiles&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Durable Subscriptions&lt;/strong&gt;: Support for Durable Subscriptions &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/DurableSubscription.md&quot;&gt;Durable Subscriptions&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Breaking Changes and Heads-Up when upgrading from 1.04 to 1.05&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;A few features are still missing to fully comply for 1.05, but certification for V1.04 is still possible with the 1.05 release.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Thread Safety and Locking&lt;/strong&gt;: Improved thread safety and reduced locking in secure channel operations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Audit and Redaction&lt;/strong&gt;: New interfaces for auditing and redacting sensitive information.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;New in 1.05.378.&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for AsyncNodeManagers in the Server Library, see &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/AsyncServerSupport.md&quot;&gt;Server Async (TAP) Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Reworked &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/Observability.md&quot;&gt;Observability&lt;/a&gt; via &lt;code&gt;ITelemetryContext&lt;/code&gt; in preparation for better DI support. See documentation for breaking changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;New in 1.05.376.&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/DurableSubscription.md&quot;&gt;Durable Subscriptions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;New in 1.05.375&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/EccProfiles.md&quot;&gt;ECC Certificates&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;New in 1.05.374.70&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;CRL Support for the X509Store on Windows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;New in 1.05.373&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;1.05 Nodeset&lt;/li&gt; 
 &lt;li&gt;Support for &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/RoleBasedUserManagement.md&quot;&gt;WellKnownRoles &amp;amp; RoleBasedUserManagement&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;New in 1.04.368&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Improved support for &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/Observability.md&quot;&gt;Logging&lt;/a&gt; with &lt;code&gt;ILogger&lt;/code&gt; and &lt;code&gt;EventSource&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Support for custom certificate stores with refactored &lt;code&gt;ICertificateStore&lt;/code&gt; and &lt;code&gt;CertificateStoreType&lt;/code&gt; interface.&lt;/li&gt; 
 &lt;li&gt;Client and Server support for &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/TransferSubscription.md&quot;&gt;TransferSubscriptions&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;How to use &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/ContainerReferenceServer.md&quot;&gt;Container support&lt;/a&gt; with reference server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Samples and Nuget packages&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;OPC UA &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Applications/ConsoleReferenceServer&quot;&gt;Console Reference Server&lt;/a&gt; for .NET Core. A Linux Container of the latest builds is available &lt;a href=&quot;https://github.com/OPCFoundation/UA-.NETStandard/pkgs/container/uanetstandard%2Frefserver&quot;&gt;here&lt;/a&gt;. See also &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/ContainerReferenceServer.md&quot;&gt;Container support&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The OPC UA &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Applications/README.md&quot;&gt;Reference Server&lt;/a&gt; has been certified for compliance through an OPC Foundation Certification Test Lab. Fixes and enhancements since the certification process have been tested and verified for compliance using the &lt;a href=&quot;https://opcfoundation.org/developer-tools/certification-test-tools/opc-ua-compliance-test-tool-uactt/&quot;&gt;Compliance Test Tool (CTT)&lt;/a&gt;. All releases are verified for compliance with the latest official Compliance Test Tool by the maintainers.&lt;/li&gt; 
 &lt;li&gt;OPC UA &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Applications/ConsoleReferencePublisher/README.md&quot;&gt;Console Reference Publisher&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Applications/ConsoleReferenceSubscriber/README.md&quot;&gt;Console Reference Subscriber&lt;/a&gt; for .NET Core and .NET Framework.&lt;/li&gt; 
 &lt;li&gt;An official OPC UA &lt;a href=&quot;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua/&quot;&gt;Nuget&lt;/a&gt; package of the core, client, server and configuration libraries is available for integration in .NET projects. Note: The package has been split into &lt;a href=&quot;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua.Core/&quot;&gt;Core&lt;/a&gt;, &lt;a href=&quot;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua.Client/&quot;&gt;Client&lt;/a&gt; and &lt;a href=&quot;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua.Server/&quot;&gt;Server&lt;/a&gt; packages to reduce the dependencies in projects where only client or server is needed. The &lt;a href=&quot;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua.Bindings.Https/&quot;&gt;https binding&lt;/a&gt; is now a seperate optional package.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href=&quot;https://opcfoundation.visualstudio.com/opcua-netstandard/_packaging?_a=feed&amp;amp;feed=opcua-preview%40Local&quot;&gt;preview Nuget feed&lt;/a&gt; is available from Azure Devops.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Information&lt;/h2&gt; 
&lt;h3&gt;General Project Info&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/OPCFoundation/UA-.NETStandard&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/languages/top/OPCFoundation/UA-.NETStandard&quot; alt=&quot;Github top language&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/OPCFoundation/UA-.NETStandard&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/OPCFoundation/UA-.NETStandard?style=flat&quot; alt=&quot;Github stars&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/OPCFoundation/UA-.NETStandard&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/OPCFoundation/UA-.NETStandard?style=flat&quot; alt=&quot;Github forks&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/OPCFoundation/UA-.NETStandard&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/repo-size/OPCFoundation/UA-.NETStandard?style=flat&quot; alt=&quot;Github size&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/OPCFoundation/UA-.NETStandard/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/OPCFoundation/UA-.NETStandard?style=flat&quot; alt=&quot;Github release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/OPCFoundation.NetStandard.Opc.Ua/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/OPCFoundation.NetStandard.Opc.Ua&quot; alt=&quot;Nuget Downloads&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Build Status&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opcfoundation.visualstudio.com/opcua-netstandard/_build/latest?definitionId=14&amp;amp;branchName=master&quot;&gt;&lt;img src=&quot;https://opcfoundation.visualstudio.com/opcua-netstandard/_apis/build/status/OPCFoundation.UA-.NETStandard?branchName=master&quot; alt=&quot;Azure DevOps&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/OPCFoundation/UA-.NETStandard/actions/workflows/buildandtest.yml&quot;&gt;&lt;img src=&quot;https://github.com/OPCFoundation/UA-.NETStandard/actions/workflows/buildandtest.yml/badge.svg?sanitize=true&quot; alt=&quot;Github Actions&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Code Quality&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://opcfoundation.visualstudio.com/opcua-netstandard/_test/analytics?definitionId=14&amp;amp;contextType=build&quot;&gt;&lt;img src=&quot;https://img.shields.io/azure-devops/tests/opcfoundation/opcua-netstandard/14/master?style=plastic&amp;amp;label=Tests&quot; alt=&quot;Tests&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/OPCFoundation/UA-.NETStandard/actions/workflows/codeql-analysis.yml&quot;&gt;&lt;img src=&quot;https://github.com/OPCFoundation/UA-.NETStandard/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true&quot; alt=&quot;CodeQL&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/OPCFoundation/UA-.NETStandard&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/OPCFoundation/UA-.NETStandard/branch/master/graph/badge.svg?token=vDf5AnilUt&quot; alt=&quot;Coverage Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;All the tools you need for .NET Standard come with the .NET Core tools. See &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/articles/core/getting-started&quot;&gt;Get started with .NET Core&lt;/a&gt; for what you need.&lt;/p&gt; 
&lt;h2&gt;How to build and run the reference samples in Visual Studio on Windows&lt;/h2&gt; 
&lt;p&gt;Note: Since .NET Core 2.1 is end of life,&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;VS 2017 has only limited support for .NET 4.8.&lt;/li&gt; 
 &lt;li&gt;VS 2019 has only limited support for .NET 4.8 because .NET Core 3.1 reached end of life.&lt;/li&gt; 
 &lt;li&gt;VS 2022 is the current supported version, including .NET 6.0 (LTS) and .NET 8.0 (LTS).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open the UA Reference.sln solution file using Visual Studio.&lt;/li&gt; 
 &lt;li&gt;Choose a project in the Solution Explorer and set it with a right click as &lt;code&gt;Startup Project&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Hit &lt;code&gt;F5&lt;/code&gt; to build and execute the sample.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;How to build and run the console samples on Windows, Linux and iOS&lt;/h2&gt; 
&lt;p&gt;This section describes how to run the &lt;strong&gt;ConsoleReferenceServer&lt;/strong&gt; sample application.&lt;/p&gt; 
&lt;p&gt;Please follow instructions in this &lt;a href=&quot;https://aka.ms/dotnetcoregs&quot;&gt;article&lt;/a&gt; to setup the dotnet command line environment for your platform. As of today .NET Core SDK 3.1 is required for Visual Studio 2019 and .NET SDK 6.0 is required for Visual Studio 2022.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Once the &lt;code&gt;dotnet&lt;/code&gt; command is available, navigate to the root folder in your local copy of the repository and execute &lt;code&gt;dotnet restore &#39;UA Reference.sln&#39;&lt;/code&gt;. This command calls into NuGet to restore the tree of dependencies.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Start the server&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open a command prompt.&lt;/li&gt; 
 &lt;li&gt;Navigate to the folder &lt;strong&gt;Applications/ConsoleReferenceServer&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;To run the server sample type &lt;code&gt;dotnet run --project ConsoleReferenceServer.csproj -a&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;The server is now running and waiting for connections.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Remarks&lt;/h2&gt; 
&lt;h3&gt;Self signed certificates for the sample applications&lt;/h3&gt; 
&lt;p&gt;All required application certificates for OPC UA are created at the first start of each application in a directory or OS-level certificate store and remain in use until deleted from the store. Please read &lt;a href=&quot;https://raw.githubusercontent.com/OPCFoundation/UA-.NETStandard/master/Docs/Certificates.md&quot;&gt;Certificates&lt;/a&gt; for more information about certificates and stores&lt;/p&gt; 
&lt;h3&gt;Local Discovery Server&lt;/h3&gt; 
&lt;p&gt;By default all sample applications are configured to register with a Local Discovery Server (LDS). A reference implementation of a LDS for Windows can be downloaded &lt;a href=&quot;https://opcfoundation.org/developer-tools/developer-kits-unified-architecture/local-discovery-server-lds&quot;&gt;here&lt;/a&gt;. To setup trust with the LDS the certificates need to be exchanged or registration will fail.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We strongly encourage community participation and contribution to this project. First, please fork the repository and commit your changes there. Once happy with your changes you can generate a &#39;pull request&#39;.&lt;/p&gt; 
&lt;p&gt;You must agree to the contributor license agreement before we can accept your changes. The CLA and &quot;I AGREE&quot; button is automatically displayed when you perform the pull request. You can preview CLA &lt;a href=&quot;https://opcfoundation.org/license/cla/ContributorLicenseAgreementv1.0.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JasperFx/wolverine</title>
      <link>https://github.com/JasperFx/wolverine</link>
      <description>&lt;p&gt;Supercharged .NET server side development!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wolverine&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/WMxrvegf8H&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1074998995086225460?color=blue&amp;amp;label=Chat%20on%20Discord&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Wolverine is a &lt;em&gt;Next Generation .NET Mediator and Message Bus&lt;/em&gt;. Check out the &lt;a href=&quot;https://wolverinefx.net/&quot;&gt;documentation website at https://wolverinefx.net/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support Plans&lt;/h2&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;img src=&quot;https://www.jasperfx.net/logo.png&quot; alt=&quot;JasperFx logo&quot; width=&quot;70%&quot; /&gt; 
&lt;/div&gt; 
&lt;p&gt;While Wolverine is open source, &lt;a href=&quot;https://jasperfx.net&quot;&gt;JasperFx Software offers paid support and consulting contracts&lt;/a&gt; for Wolverine.&lt;/p&gt; 
&lt;h2&gt;Help us keep working on this project 💚&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/JasperFX&quot;&gt;Become a Sponsor on GitHub&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Working with the Code&lt;/h2&gt; 
&lt;p&gt;To work with the code, just open the &lt;code&gt;wolverine.sln&lt;/code&gt; file in the root of the repository and go. If you want to run integration tests though, you&#39;ll want Docker installed locally and to start the matching testing services with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There&#39;s a separate README in the Azure Service Bus tests as those require an actual cloud set up (sorry, but blame Microsoft for not having a local Docker based emulator ala Localstack).&lt;/p&gt; 
&lt;h2&gt;Contributor&#39;s Guide&lt;/h2&gt; 
&lt;p&gt;For contributors, there&#39;s a light naming style Jeremy refuses to let go of that he&#39;s used for &lt;em&gt;gulp&lt;/em&gt; 20+ years:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;All public or internal members should be Pascal cased&lt;/li&gt; 
 &lt;li&gt;All private or protected members should be Camel cased&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;_&lt;/code&gt; as a prefix for private fields&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The build is scripted out with &lt;a href=&quot;https://github.com/adamralph/bullseye&quot;&gt;Bullseye&lt;/a&gt; in the &lt;code&gt;/build&lt;/code&gt; folder. To run the build file locally, use &lt;code&gt;build&lt;/code&gt; with Windows or &lt;code&gt;./build.sh&lt;/code&gt; on OSX or Linux.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All the documentation content is in the &lt;code&gt;/docs&lt;/code&gt; folder. The documentation is built and published with &lt;a href=&quot;https://vitepress.vuejs.org/&quot;&gt;Vitepress&lt;/a&gt; and uses &lt;a href=&quot;https://github.com/SimonCropp/MarkdownSnippets&quot;&gt;Markdown Snippets&lt;/a&gt; for code samples. To run the documentation locally, you&#39;ll need a recent version of Node.js installed. To start the documentation website, first run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then start the actual website with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run docs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To update the code sample snippets, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;npm run mdsnippets
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;This is a little sad, but Wolverine started as a project named &quot;&lt;a href=&quot;https://github.com/jasperfx/jasper&quot;&gt;Jasper&lt;/a&gt;&quot; way, way back in 2015 as an intended reboot of an even older project named &lt;a href=&quot;https://fubumvc.github.io&quot;&gt;FubuMVC / FubuTransportation&lt;/a&gt; that was a combination web api framework and asynchronous message bus. What is now Wolverine was meant to build upon what we thought was the positive aspects of fubu&#39;s programming model but do so with a much more efficient runtime. Wolverine was largely rebooted, revamped, and renamed in 2022 with the intention of being combined with &lt;a href=&quot;https://martendb.io&quot;&gt;Marten&lt;/a&gt; into the &quot;critter stack&quot; for highly productive and highly performant server side development in .NET.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git-ecosystem/git-credential-manager</title>
      <link>https://github.com/git-ecosystem/git-credential-manager</link>
      <description>&lt;p&gt;Secure, cross-platform Git credential storage with authentication to GitHub, Azure Repos, and other popular Git hosting services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Git Credential Manager&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/actions/workflows/continuous-integration.yml&quot;&gt;&lt;img src=&quot;https://github.com/git-ecosystem/git-credential-manager/actions/workflows/continuous-integration.yml/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager&quot;&gt;Git Credential Manager&lt;/a&gt; (GCM) is a secure &lt;a href=&quot;https://git-scm.com/docs/gitcredentials&quot;&gt;Git credential helper&lt;/a&gt; built on &lt;a href=&quot;https://dotnet.microsoft.com&quot;&gt;.NET&lt;/a&gt; that runs on Windows, macOS, and Linux. It aims to provide a consistent and secure authentication experience, including multi-factor auth, to every major source control hosting service and platform.&lt;/p&gt; 
&lt;p&gt;GCM supports (in alphabetical order) &lt;a href=&quot;https://azure.microsoft.com/en-us/products/devops&quot;&gt;Azure DevOps&lt;/a&gt;, Azure DevOps Server (formerly Team Foundation Server), Bitbucket, GitHub, and GitLab. Compare to Git&#39;s &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Credential-Storage&quot;&gt;built-in credential helpers&lt;/a&gt; (Windows: wincred, macOS: osxkeychain, Linux: gnome-keyring/libsecret), which provide single-factor authentication support for username/password only.&lt;/p&gt; 
&lt;p&gt;GCM replaces both the .NET Framework-based &lt;a href=&quot;https://github.com/microsoft/Git-Credential-Manager-for-Windows&quot;&gt;Git Credential Manager for Windows&lt;/a&gt; and the Java-based &lt;a href=&quot;https://github.com/microsoft/Git-Credential-Manager-for-Mac-and-Linux&quot;&gt;Git Credential Manager for Mac and Linux&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/raw/release/docs/install.md&quot;&gt;installation instructions&lt;/a&gt; for the current version of GCM for install options for your operating system.&lt;/p&gt; 
&lt;h2&gt;Current status&lt;/h2&gt; 
&lt;p&gt;Git Credential Manager is currently available for Windows, macOS, and Linux*. GCM only works with HTTP(S) remotes; you can still use Git with SSH:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops&quot;&gt;Azure DevOps SSH&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://help.github.com/en/articles/connecting-to-github-with-ssh&quot;&gt;GitHub SSH&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://confluence.atlassian.com/bitbucket/ssh-keys-935365775.html&quot;&gt;Bitbucket SSH&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Windows&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;macOS&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Linux*&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Installer/uninstaller&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Secure platform credential storage &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/raw/release/docs/credstores.md&quot;&gt;(see more)&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi-factor authentication support for Azure DevOps&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Two-factor authentication support for GitHub&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Two-factor authentication support for Bitbucket&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Two-factor authentication support for GitLab&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows Integrated Authentication (NTLM/Kerberos) support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Basic HTTP authentication support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Proxy support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;amd64&lt;/code&gt; support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;x86&lt;/code&gt; support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✗&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;arm64&lt;/code&gt; support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;best effort&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;armhf&lt;/code&gt; support&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;em&gt;N/A&lt;/em&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;(*) GCM guarantees support only for &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/core/install/linux&quot;&gt;the Linux distributions that are officially supported by dotnet&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Git versions&lt;/h2&gt; 
&lt;p&gt;Git Credential Manager tries to be compatible with the broadest set of Git versions (within reason). However there are some known problematic releases of Git that are not compatible.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Git 1.x&lt;/p&gt; &lt;p&gt;The initial major version of Git is not supported or tested with GCM.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Git 2.26.2&lt;/p&gt; &lt;p&gt;This version of Git introduced a breaking change with parsing credential configuration that GCM relies on. This issue was fixed in commit &lt;a href=&quot;https://github.com/git/git/commit/12294990c90e043862be9eb7eb22c3784b526340&quot;&gt;&lt;code&gt;12294990&lt;/code&gt;&lt;/a&gt; of the Git project, and released in Git 2.27.0.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;p&gt;Once it&#39;s installed and configured, Git Credential Manager is called implicitly by Git. You don&#39;t have to do anything special, and GCM isn&#39;t intended to be called directly by the user. For example, when pushing (&lt;code&gt;git push&lt;/code&gt;) to &lt;a href=&quot;https://azure.microsoft.com/en-us/products/devops&quot;&gt;Azure DevOps&lt;/a&gt;, &lt;a href=&quot;https://bitbucket.org&quot;&gt;Bitbucket&lt;/a&gt;, or &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;, a window will automatically open and walk you through the sign-in process. (This process will look slightly different for each Git host, and even in some cases, whether you&#39;ve connected to an on-premises or cloud-hosted Git host.) Later Git commands in the same repository will re-use existing credentials or tokens that GCM has stored for as long as they&#39;re valid.&lt;/p&gt; 
&lt;p&gt;Read full command line usage &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/raw/release/docs/usage.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Configuring a proxy&lt;/h3&gt; 
&lt;p&gt;See detailed information &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/raw/release/docs/netconfig.md#http-proxy&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Additional Resources&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/raw/release/docs/README.md&quot;&gt;documentation index&lt;/a&gt; for links to additional resources.&lt;/p&gt; 
&lt;h2&gt;Experimental Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/raw/release/docs/windows-broker.md&quot;&gt;Windows broker (experimental)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Future features&lt;/h2&gt; 
&lt;p&gt;Curious about what&#39;s coming next in the GCM project? Take a look at the &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/milestones?direction=desc&amp;amp;sort=due_date&amp;amp;state=open&quot;&gt;project roadmap&lt;/a&gt;! You can find more details about the construction of the roadmap and how to interpret it &lt;a href=&quot;https://github.com/git-ecosystem/git-credential-manager/discussions/1203&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. See the &lt;a href=&quot;https://raw.githubusercontent.com/git-ecosystem/git-credential-manager/main/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;This project follows &lt;a href=&quot;https://raw.githubusercontent.com/git-ecosystem/git-credential-manager/main/CODE_OF_CONDUCT.md&quot;&gt;GitHub&#39;s Open Source Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;We&#39;re &lt;a href=&quot;https://raw.githubusercontent.com/git-ecosystem/git-credential-manager/main/LICENSE&quot;&gt;MIT&lt;/a&gt; licensed. When using GitHub logos, please be sure to follow the &lt;a href=&quot;https://github.com/logos&quot;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>codebude/QRCoder</title>
      <link>https://github.com/codebude/QRCoder</link>
      <description>&lt;p&gt;A pure C# Open Source QR Code implementation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;QRCoder&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Build&lt;/th&gt; 
   &lt;th&gt;Code coverage&lt;/th&gt; 
   &lt;th&gt;Build status&lt;/th&gt; 
   &lt;th&gt;NuGet Package&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Latest / Stable&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://codecov.io/gh/codebude/QRCoder&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/codebude/QRCoder/branch/master/graph/badge.svg?token=3yNs88KD8S&quot; alt=&quot;codecov&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/actions/workflows/wf-build-release.yml&quot;&gt;&lt;img src=&quot;https://github.com/codebude/QRCoder/actions/workflows/wf-build-release.yml/badge.svg?sanitize=true&quot; alt=&quot;Build, test, pack, push (Release)&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.nuget.org/packages/QRCoder/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/QRCoder&quot; alt=&quot;NuGet Badge&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CI / Last commit&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://codecov.io/gh/codebude/QRCoder&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/codebude/QRCoder/branch/master/graph/badge.svg?token=3yNs88KD8S&quot; alt=&quot;codecov&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/actions/workflows/wf-build-release-ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/codebude/QRCoder/actions/workflows/wf-build-release-ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Build, test, pack, push (CI)&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/codebude/qrcoder/packages&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Github-Packages-blue&quot; alt=&quot;Github packages&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Info&lt;/h2&gt; 
&lt;p&gt;QRCoder is a simple library, written in C#.NET, which enables you to create QR codes. It hasn&#39;t any dependencies to external libraries&lt;sup&gt;1&lt;/sup&gt;, is available as package on NuGet and supports .NET Framework, .NET Core, .NET Standard and .NET. A full list of supported target frameworks can be &lt;a href=&quot;https://www.nuget.org/packages/QRCoder/#supportedframeworks-body-tab&quot;&gt;found here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Feel free to grab-up/fork the project and make it better!&lt;/p&gt; 
&lt;p&gt;For more information see: &lt;a href=&quot;https://github.com/codebude/QRCoder/wiki&quot;&gt;&lt;strong&gt;QRCode Wiki&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;http://en.code-bude.net/2013/10/17/qrcoder-an-open-source-qr-code-generator-implementation-in-csharp/&quot;&gt;Creator&#39;s blog (english)&lt;/a&gt; | &lt;a href=&quot;http://code-bude.net/2013/10/17/qrcoder-eine-open-source-qr-code-implementierung-in-csharp/&quot;&gt;Creator&#39;s blog (german)&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Release Notes&lt;/h3&gt; 
&lt;p&gt;The release notes for the current and all past releases can be read here: &lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Release-notes&quot;&gt;📄 Release Notes&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Legal information and credits&lt;/h2&gt; 
&lt;p&gt;QRCoder is a project by &lt;a href=&quot;https://raffaelherrmann.de&quot;&gt;Raffael Herrmann&lt;/a&gt; and was first released in 10/2013. It&#39;s licensed under the &lt;a href=&quot;https://github.com/codebude/QRCoder/raw/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Either checkout this Github repository or install QRCoder via NuGet Package Manager. If you want to use NuGet just search for &quot;QRCoder&quot; or run the following command in the NuGet Package Manager console:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;PM&amp;gt; Install-Package QRCoder
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;CI builds&lt;/h4&gt; 
&lt;p&gt;The NuGet feed contains only &lt;strong&gt;major/stable&lt;/strong&gt; releases. If you want the latest functions and features, you can use the CI builds &lt;a href=&quot;https://github.com/codebude/qrcoder/packages&quot;&gt;via Github packages&lt;/a&gt;. &lt;em&gt;(More information on how to use Github Packages in Nuget Package Manager can be &lt;a href=&quot;https://samlearnsazure.blog/2021/08/08/consuming-a-nuget-package-from-github-packages/&quot;&gt;found here&lt;/a&gt;.)&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;You only need a couple lines of code, to generate your first QR code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using (QRCodeGenerator qrGenerator = new QRCodeGenerator())
using (QRCodeData qrCodeData = qrGenerator.CreateQrCode(&quot;The text which should be encoded.&quot;, QRCodeGenerator.ECCLevel.Q))
using (PngByteQRCode qrCode = new PngByteQRCode(qrCodeData))
{
    byte[] qrCodeImage = qrCode.GetGraphic(20);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are a plenty of other options. So feel free to read more on that in our wiki: &lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/How-to-use-QRCoder&quot;&gt;Wiki: How to use QRCoder&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Special rendering types&lt;/h3&gt; 
&lt;p&gt;Besides the normal PngByteQRCode-class (which is shown in the example above) for creating QR codes in Bitmap format, there are some more QR code rendering classes, each for another special purpose.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers#21-qrcode-renderer-in-detail&quot;&gt;QRCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers#211-artqrcode-renderer-in-detail&quot;&gt;ArtQRCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers#22-asciiqrcode-renderer-in-detail&quot;&gt;AsciiQRCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers#23-base64qrcode-renderer-in-detail&quot;&gt;Base64QRCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers#24-bitmapbyteqrcode-renderer-in-detail&quot;&gt;BitmapByteQRCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers#210-pdfbyteqrcode-renderer-in-detail&quot;&gt;PdfByteQRCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers#25-pngbyteqrcode-renderer-in-detail&quot;&gt;PngByteQRCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers#29-postscriptqrcode-renderer-in-detail&quot;&gt;PostscriptQRCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers#26-svgqrcode-renderer-in-detail&quot;&gt;SvgQRCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers#27-unityqrcode-renderer-in-detail&quot;&gt;UnityQRCode&lt;/a&gt; (&lt;em&gt;via &lt;a href=&quot;https://www.nuget.org/packages/QRCoder.Unity&quot;&gt;QRCoder.Unity&lt;/a&gt;&lt;/em&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers#28-xamlqrcode-renderer-in-detail&quot;&gt;XamlQRCode&lt;/a&gt; (&lt;em&gt;via &lt;a href=&quot;https://www.nuget.org/packages/QRCoder.Xaml&quot;&gt;QRCoder.Xaml&lt;/a&gt;&lt;/em&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Note: Please be aware that not all renderers are available on all target frameworks. Please check the &lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers#2-overview-of-the-different-renderers&quot;&gt;compatibility table&lt;/a&gt; in our wiki, to see if a specific renderer is available on your favourite target framework.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;For more information about the different rendering types click on one of the types in the list above or have a look at: &lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---QR-Code-renderers&quot;&gt;Wiki: Advanced usage - QR-Code renderers&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;PayloadGenerator.cs - Generate QR code payloads&lt;/h2&gt; 
&lt;p&gt;Technically QR code is just a visual representation of a text/string. Nevertheless most QR code readers can read &quot;special&quot; QR codes which trigger different actions.&lt;/p&gt; 
&lt;p&gt;For example: WiFi-QRcodes which, when scanned by smartphone, let the smartphone join an access point automatically.&lt;/p&gt; 
&lt;p&gt;This &quot;special&quot; QR codes are generated by using special structured payload string, when generating the QR code. The &lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators&quot;&gt;PayloadGenerator.cs class&lt;/a&gt; helps you to generate this payload strings. To generate a WiFi payload for example, you need just this one line of code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;PayloadGenerator.WiFi wifiPayload = new PayloadGenerator.WiFi(&quot;MyWiFi-SSID&quot;, &quot;MyWiFi-Pass&quot;, PayloadGenerator.WiFi.Authentication.WPA);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To generate a QR code from this payload, just call the &quot;ToString()&quot;-method and pass it to the QRCoder.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;//[...]
QRCodeData qrCodeData = qrGenerator.CreateQrCode(wifiPayload.ToString(), QRCodeGenerator.ECCLevel.Q);
//[...]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use overloaded method that accepts Payload as parameter. Payload generator can have QR Code Version set (default is auto set), ECC Level (default is M) and ECI mode (default is automatic detection).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;//[...]
QRCodeData qrCodeData = qrGenerator.CreateQrCode(wifiPayload);
//[...]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or if you want to override ECC Level set by Payload generator, you can use overloaded method, that allows setting ECC Level.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;//[...]
QRCodeData qrCodeData = qrGenerator.CreateQrCode(wifiPayload, QRCodeGenerator.ECCLevel.Q);
//[...]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can learn more about the payload generator &lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators&quot;&gt;in our Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The PayloadGenerator supports the following types of payloads:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#31-bezahlcode&quot;&gt;BezahlCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#32-bitcoin-like-crypto-currency-payment-address&quot;&gt;Bitcoin-Like cryptocurrency (Bitcoin, Bitcoin Cash, Litecoin) payment address&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#33-bookmark&quot;&gt;Bookmark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#34-calendar-events-icalvevent&quot;&gt;Calendar events (iCal/vEvent)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#35-contactdata-mecardvcard&quot;&gt;ContactData (MeCard/vCard)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#36-geolocation&quot;&gt;Geolocation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#37-girocode&quot;&gt;Girocode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#38-mail&quot;&gt;Mail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#39-mms&quot;&gt;MMS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#310-monero-addresspayment&quot;&gt;Monero address/payment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#311-one-time-password&quot;&gt;One-Time-Password&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#312-phonenumber&quot;&gt;Phonenumber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#313-russiapaymentorder&quot;&gt;RussiaPaymentOrder (ГОСТ Р 56042-2014)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#314-shadowsocks-configuration&quot;&gt;Shadowsocks configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#315-skype-call&quot;&gt;Skype call&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#316-slovenianupnqr&quot;&gt;SlovenianUpnQr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#317-sms&quot;&gt;SMS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#318-swissqrcode-iso-20022&quot;&gt;SwissQrCode (ISO-20022)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#319-url&quot;&gt;URL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#320-whatsappmessage&quot;&gt;WhatsAppMessage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/codebude/QRCoder/wiki/Advanced-usage---Payload-generators#321-wifi&quot;&gt;WiFi&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;sup&gt;(1)&lt;/sup&gt; &lt;em&gt;Depending on the targeted framework the .NET libraries System.Drawing.Common and System.Text.Encoding.CodePages will used as package dependencies.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevToys-app/DevToys</title>
      <link>https://github.com/DevToys-app/DevToys</link>
      <description>&lt;p&gt;A Swiss Army knife for developers.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;128&quot; align=&quot;center&quot; src=&quot;https://raw.githubusercontent.com/DevToys-app/DevToys/main/assets/logo/Windows-Linux/Stable/Icon-Windows-Linux.png&quot; /&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; DevToys &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; A Swiss Army knife for developers. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a title=&quot;Crowdin&quot; target=&quot;_blank&quot; href=&quot;https://crowdin.com/project/devtoys&quot;&gt; &lt;img src=&quot;https://badges.crowdin.net/devtoys/localized.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://devtoys.app&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Website-devtoys.app-blue&quot; alt=&quot;Website&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;DevToys helps with daily development tasks by offering a bundle of tiny tools designed to do quick, specific tiny tasks. No need to use many untrustworthy websites to simply decode a text or compress an image. With Smart Detection, the app intuitively selects the best tool for the data on your clipboard.&lt;/p&gt; 
&lt;p&gt;DevToys 2.0 comes with 30 default tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Converters&lt;/strong&gt;: JSON &amp;lt;&amp;gt; YAML, Date, Number bases...&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Encoders/Decoders&lt;/strong&gt;: HTML, URLs, Base64, GZip, JWT, QR Code...&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Formatters&lt;/strong&gt;: JSON, SQL, XML...&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generators&lt;/strong&gt;: Hash &amp;amp; Checksum, Lorem Ipsum, Password...&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphics Tools&lt;/strong&gt;: Color Blindness Simulator, PNG/JPEG Compressor...&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Testers&lt;/strong&gt;: JSONPath, RegEx, XML...&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Text Utilities&lt;/strong&gt;: Markdown Preview, Text Comparer, Analyzer &amp;amp; Utilities...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;More tools are available through extensions, and you can &lt;a href=&quot;http://devtoys.app/doc&quot;&gt;develop your own&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/DevToys-app/DevToys/main/assets/hero-screenshot.png&quot; alt=&quot;DevToys&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Rate on Microsoft Store as of 5/7/2024&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/DevToys-app/DevToys/main/assets/ms-store-rate.png&quot; alt=&quot;Microsoft Store rate&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/DevToys-app/DevToys/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Privacy Policy&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/DevToys-app/DevToys/main/PRIVACY-POLICY.md&quot;&gt;PRIVACY POLICY&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Third-Party Softwares&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/DevToys-app/DevToys/main/THIRD-PARTY-NOTICES.md&quot;&gt;ThirdPartyNotices&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/DevToys-app/DevToys/main/LICENSE.md&quot;&gt;LICENSE&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;h3&gt;Code contributors&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://repobeats.axiom.co/api/embed/324efe7f02eac0ea57d264c986651a346e86caf9.svg?sanitize=true&quot; alt=&quot;Alt&quot; title=&quot;Repobeats analytics image&quot; /&gt;&lt;/p&gt; 
&lt;a href=&quot;https://github.com/DevToys-app/DevToys/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=DevToys-app/DevToys&quot; /&gt; &lt;/a&gt; 
&lt;h3&gt;Designers&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/zeealeid&quot;&gt;Zee-Al-Eid&lt;/a&gt; &lt;a href=&quot;https://github.com/AlurDesign&quot;&gt;Jakub&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;DevToysMac developer&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/obuchi_yuki&quot;&gt;ObuchiYuki&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>syncfusion/maui-toolkit</title>
      <link>https://github.com/syncfusion/maui-toolkit</link>
      <description>&lt;p&gt;Syncfusion Toolkit for .NET MAUI offers high-quality UI controls to help you build rich, high-performance applications for iOS, Android, macOS, and Windows from a single codebase&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.syncfusion.com/content/images/maui/maui-toolkit--controls-banner.png&quot; alt=&quot;NET_MAUI__Toolkit_Banner&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;Syncfusion® Toolkit for .NET MAUI&lt;/h1&gt; 
&lt;p&gt;The &lt;a href=&quot;https://www.syncfusion.com/net-maui-toolkit?utm_source=msftdotnet&amp;amp;utm_medium=banner&amp;amp;utm_campaign=mauipremium_sep25&quot;&gt;Syncfusion® Toolkit for .NET MAUI&lt;/a&gt; is a high-performance collection of UI controls designed to streamline cross-platform app development across Android, iOS, macOS, and Windows. With this toolkit, developers can deliver beautiful, feature-rich applications with minimal effort, cutting down development time while ensuring a seamless and engaging user experience across platforms.&lt;/p&gt; 
&lt;p&gt;The Syncfusion® Toolkit is built with community collaboration in mind, aiming to incorporate user feedback and contributions. It is the perfect companion for developers looking to build engaging cross-platform applications faster and more efficiently using the Syncfusion® ecosystem.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/Syncfusion.Maui.Toolkit&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Syncfusion.Maui.Toolkit&quot; alt=&quot;NuGet version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/stats/packages/Syncfusion.Maui.Toolkit?groupby=Version&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/Syncfusion.Maui.Toolkit&quot; alt=&quot;NuGet Downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/syncfusion/maui-toolkit/main/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/syncfusion/maui-toolkit&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/build-passing-brightgreen&quot; alt=&quot;Build Status&quot; /&gt; &lt;img src=&quot;https://img.shields.io/badge/platform-Android%20%7C%20iOS%20%7C%20Mac%20%7C%20Windows-blue&quot; alt=&quot;Platform&quot; /&gt; &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/9.0&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/.NET%209-5C2D91?logo=.net&amp;amp;logoColor=white&quot; alt=&quot;.NET 9&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/badge/contributions-welcome-green.svg?sanitize=true&quot; alt=&quot;Contributions&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/contributors/syncfusion/maui-toolkit&quot; alt=&quot;Contributors&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/issues/syncfusion/maui-toolkit&quot; alt=&quot;GitHub issues&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/issues-pr/syncfusion/maui-toolkit&quot; alt=&quot;GitHub pull requests&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.syncfusion.com/content/images/maui/maui-toolkit--controls.png&quot; alt=&quot;NET_MAUI_Toolkit_product&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dot.net/maui&quot;&gt;Install .NET MAUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://help.syncfusion.com/maui-toolkit/introduction/overview&quot;&gt;Syncfusion .NET MAUI Toolkit Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/syncfusion/maui-toolkit/main/.github/DEVELOPMENT.md&quot;&gt;Development Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Controls list&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Category&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Control&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Data Visualization&lt;/td&gt; 
   &lt;td&gt;Cartesian Charts&lt;/td&gt; 
   &lt;td&gt;Versatile data representation using line, bar, and area charts.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Circular Charts&lt;/td&gt; 
   &lt;td&gt;Display proportions and comparisons using pie and doughnut charts.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Funnel Charts&lt;/td&gt; 
   &lt;td&gt;Represent processes and data flow, often used in sales and analytics.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Polar Charts&lt;/td&gt; 
   &lt;td&gt;Showcase categories in a circular format, ideal for unordered data.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Pyramid Charts&lt;/td&gt; 
   &lt;td&gt;Visualize hierarchical data, perfect for business and analytics applications.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Spark Charts&lt;/td&gt; 
   &lt;td&gt;Display trends using micro charts like line, column, area, and win-loss. Ideal for compact data summaries.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Sunburst Charts&lt;/td&gt; 
   &lt;td&gt;Visualize hierarchical data using concentric circles, ideal for multi-level category data.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Calendars&lt;/td&gt; 
   &lt;td&gt;Calendar&lt;/td&gt; 
   &lt;td&gt;The calendar supports month, year, decade, and century views, multiple selection modes, and customizable appearance.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Editors&lt;/td&gt; 
   &lt;td&gt;Date Picker&lt;/td&gt; 
   &lt;td&gt;User interface element for selecting specific dates.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Date Time Picker&lt;/td&gt; 
   &lt;td&gt;Combined interface to select dates and times.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Numeric Entry&lt;/td&gt; 
   &lt;td&gt;Advanced control for numeric input with support for various formats and validation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Numeric Up Down&lt;/td&gt; 
   &lt;td&gt;Adjust values with up/down buttons and culture-specific formatting.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;OTP Input&lt;/td&gt; 
   &lt;td&gt;Secure input field for one-time passwords with customizable length, masking options, and validation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Picker&lt;/td&gt; 
   &lt;td&gt;Versatile UI Element for making selections in set of options.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Time Picker&lt;/td&gt; 
   &lt;td&gt;Interface for choosing specific times of day.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Navigation&lt;/td&gt; 
   &lt;td&gt;Bottom Sheet&lt;/td&gt; 
   &lt;td&gt;Slides up from the bottom of the screen to display additional content or functionality.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Navigation Drawer&lt;/td&gt; 
   &lt;td&gt;Slide-in menu for navigation, positionable on any side of the app with customizable animations.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Tab View&lt;/td&gt; 
   &lt;td&gt;Organize app content with customizable tabs, enabling easy navigation across sections.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Layout&lt;/td&gt; 
   &lt;td&gt;Accordion&lt;/td&gt; 
   &lt;td&gt;Organizes content into multiple expandable sections, allowing only one section to be open at a time for better navigation and space management.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Cards&lt;/td&gt; 
   &lt;td&gt;Create dismissible cards or a stack of cards, and customize their background, borders, and corners.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Carousel&lt;/td&gt; 
   &lt;td&gt;Smooth, touch-enabled sliding galleries for showcasing images or featured content.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Expander&lt;/td&gt; 
   &lt;td&gt;Allows users to expand or collapse content dynamically, improving space management and user experience.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Popup&lt;/td&gt; 
   &lt;td&gt;Allows users to display an alert message with customizable buttons or load any desired content inside a popup view.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Text Input Layout&lt;/td&gt; 
   &lt;td&gt;Enhances input fields with floating labels and validation, improving user interaction.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Buttons&lt;/td&gt; 
   &lt;td&gt;Button&lt;/td&gt; 
   &lt;td&gt;Customizable button control with icon support, background images, and visual state styling.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Chips&lt;/td&gt; 
   &lt;td&gt;Interactive tags for filtering, labeling, or visual options, perfect for e-commerce or task management.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Segmented Control&lt;/td&gt; 
   &lt;td&gt;Quickly switch between views or categories, ideal for apps with multiple layout options.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Notification&lt;/td&gt; 
   &lt;td&gt;Circular Progress Bar&lt;/td&gt; 
   &lt;td&gt;Represents task progression through a circular visualization.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Linear Progress Bar&lt;/td&gt; 
   &lt;td&gt;Represents task progression through a linear visualization.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Pull to Refresh&lt;/td&gt; 
   &lt;td&gt;Allows users to refresh live data by pulling down, ideal for real-time data syncing.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Miscellaneous&lt;/td&gt; 
   &lt;td&gt;Effects View&lt;/td&gt; 
   &lt;td&gt;Add visual enhancements like shadows, blurs, or highlights to make UI elements stand out.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Shimmer&lt;/td&gt; 
   &lt;td&gt;Indicates loading content with customizable wave directions, great for data-heavy apps.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;You can install the &lt;a href=&quot;https://www.nuget.org/packages/Syncfusion.Maui.Toolkit&quot;&gt;Syncfusion® Toolkit for .NET MAUI&lt;/a&gt; via NuGet:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dotnet add package Syncfusion.Maui.Toolkit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, add it directly in your &lt;code&gt;.csproj&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;PackageReference Include=&quot;Syncfusion.Maui.Toolkit&quot; Version=&quot;x.x.x&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configure Syncfusion® Toolkit&lt;/h2&gt; 
&lt;p&gt;In order to use the Syncfusion® .NET MAUI Toolkit you need to call the extension method in your MauiProgram.cs file as follows:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;MauiProgram.cs&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using Syncfusion.Maui.Toolkit.Hosting;

public static class MauiProgram
{
	public static MauiApp CreateMauiApp()
	{
		var builder = MauiApp.CreateBuilder();
		builder
		.UseMauiApp&amp;lt;App&amp;gt;()
		// Initialize the Syncfusion .NET MAUI Toolkit by adding the below line of code
		.ConfigureSyncfusionToolkit()
		// After initializing the Syncfusion .NET MAUI Toolkit, optionally add additional fonts
		.ConfigureFonts(fonts =&amp;gt;
		{
			fonts.AddFont(&quot;OpenSans-Regular.ttf&quot;, &quot;OpenSansRegular&quot;);
			fonts.AddFont(&quot;OpenSans-Semibold.ttf&quot;, &quot;OpenSansSemibold&quot;);
		});

		// Continue initializing your .NET MAUI App here

		return builder.Build();
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;XAML usage&lt;/h3&gt; 
&lt;p&gt;In order to make use of the toolkit within XAML you can use this namespace:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;xmlns:toolkit=&quot;http://schemas.syncfusion.com/maui/toolkit&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage Example&lt;/h2&gt; 
&lt;p&gt;Here’s a quick example to get you started with one of the controls, such as the Cartesian Chart:&lt;/p&gt; 
&lt;p&gt;The following XAML code demonstrates how to set up a basic &lt;code&gt;SfCartesianChart&lt;/code&gt; using the Syncfusion® MAUI Toolkit. This code snippet should be included in the &lt;code&gt;MainPage.xaml&lt;/code&gt; file of your MAUI project. It sets up the necessary namespaces, binds the &lt;code&gt;ViewModel&lt;/code&gt; to the &lt;code&gt;ContentPage&lt;/code&gt;, and configures the &lt;code&gt;SfCartesianChart&lt;/code&gt; with &lt;code&gt;CategoryAxis&lt;/code&gt; for the X-axis and &lt;code&gt;NumericalAxis&lt;/code&gt; for the Y-axis. The creation of the &lt;code&gt;ViewModel&lt;/code&gt; will be explained in the following section.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;MainPage.xaml&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;ContentPage 
    xmlns=&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;
    xmlns:x=&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;
    x:Class=&quot;ChartGettingStarted.MainPage&quot;
    xmlns:chart=&quot;clr-namespace:Syncfusion.Maui.Toolkit.Charts;assembly=Syncfusion.Maui.Toolkit&quot;
    xmlns:model=&quot;clr-namespace:ChartGettingStarted&quot;&amp;gt;
    
	&amp;lt;!-- Set the BindingContext to the ViewModel --&amp;gt;
    &amp;lt;ContentPage.BindingContext&amp;gt;
        &amp;lt;model:ViewModel/&amp;gt;
    &amp;lt;/ContentPage.BindingContext&amp;gt;

    &amp;lt;!-- Define a Syncfusion Cartesian Chart to visualize data --&amp;gt;
    &amp;lt;chart:SfCartesianChart&amp;gt;

        &amp;lt;!-- Set the title for the Cartesian chart --&amp;gt;
        &amp;lt;chart:SfCartesianChart.Title&amp;gt;
            &amp;lt;Label Text=&quot;Height Comparison&quot; HorizontalOptions=&quot;Center&quot; /&amp;gt;
        &amp;lt;/chart:SfCartesianChart.Title&amp;gt;

        &amp;lt;!-- Add a legend to the chart for identifying series --&amp;gt;
        &amp;lt;chart:SfCartesianChart.Legend&amp;gt;
            &amp;lt;chart:ChartLegend /&amp;gt;
        &amp;lt;/chart:SfCartesianChart.Legend&amp;gt;

        &amp;lt;!-- Define the horizontal (X) axis as a category axis --&amp;gt;
        &amp;lt;chart:SfCartesianChart.XAxes&amp;gt;
            &amp;lt;chart:CategoryAxis&amp;gt;
                &amp;lt;!-- Set the title for the X-axis --&amp;gt;
                &amp;lt;chart:CategoryAxis.Title&amp;gt;
                    &amp;lt;chart:ChartAxisTitle Text=&quot;Name&quot; /&amp;gt;
                &amp;lt;/chart:CategoryAxis.Title&amp;gt;
            &amp;lt;/chart:CategoryAxis&amp;gt;
        &amp;lt;/chart:SfCartesianChart.XAxes&amp;gt;

        &amp;lt;!-- Define the vertical (Y) axis as a numerical axis --&amp;gt;
        &amp;lt;chart:SfCartesianChart.YAxes&amp;gt;
            &amp;lt;chart:NumericalAxis&amp;gt;
                &amp;lt;!-- Set the title for the Y-axis --&amp;gt;
                &amp;lt;chart:NumericalAxis.Title&amp;gt;
                    &amp;lt;chart:ChartAxisTitle Text=&quot;Height(in cm)&quot; /&amp;gt;
                &amp;lt;/chart:NumericalAxis.Title&amp;gt;
            &amp;lt;/chart:NumericalAxis&amp;gt;
        &amp;lt;/chart:SfCartesianChart.YAxes&amp;gt;

        &amp;lt;!-- Initialize a ColumnSeries to visualize the data in columns --&amp;gt;
        &amp;lt;chart:ColumnSeries Label=&quot;Height&quot;
                         EnableTooltip=&quot;True&quot; 
                         ShowDataLabels=&quot;True&quot; 
                         ItemsSource=&quot;{Binding Data}&quot; 
                         XBindingPath=&quot;Name&quot; 
                         YBindingPath=&quot;Height&quot;&amp;gt;
            &amp;lt;!-- Define the settings for data labels of the columns --&amp;gt;
            &amp;lt;chart:ColumnSeries.DataLabelSettings&amp;gt;
                &amp;lt;chart:CartesianDataLabelSettings LabelPlacement=&quot;Inner&quot; /&amp;gt;
            &amp;lt;/chart:ColumnSeries.DataLabelSettings&amp;gt;
        &amp;lt;/chart:ColumnSeries&amp;gt;

    &amp;lt;/chart:SfCartesianChart&amp;gt;
&amp;lt;/ContentPage&amp;gt;

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Define a simple data model C# class named &lt;code&gt;Person&lt;/code&gt; to represent a data point, such as a person with a name and height, in your application.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Person.cs&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;    /// &amp;lt;summary&amp;gt;
    /// Represents a person with a name and height.
    /// &amp;lt;/summary&amp;gt;
    public class Person
    {
        /// &amp;lt;summary&amp;gt;
        /// Gets or sets the name of the person.
        /// &amp;lt;/summary&amp;gt;
        public string Name { get; set; }

        /// &amp;lt;summary&amp;gt;
        /// Gets or sets the height of the person.
        /// &amp;lt;/summary&amp;gt;	
        public double Height { get; set; }
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create a ViewModel class in C# and initialize it with a list of &lt;code&gt;Person&lt;/code&gt; objects:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ViewModel.cs&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;    /// &amp;lt;summary&amp;gt;
    /// ViewModel class that provides a list of Person objects for data binding.
    /// &amp;lt;/summary&amp;gt;
    public class ViewModel
    {
        /// &amp;lt;summary&amp;gt;
        /// Gets or sets the list of Person objects.
        /// &amp;lt;/summary&amp;gt;	
        public List&amp;lt;Person&amp;gt; Data { get; set; }

        /// &amp;lt;summary&amp;gt;
        /// Initializes a new instance of the ViewModel class with sample data.
        /// &amp;lt;/summary&amp;gt;
        public ViewModel()
        {
            // Initialize the Data property with a list of Person objects
            Data = new List&amp;lt;Person&amp;gt;()
            {
                new Person { Name = &quot;David&quot;, Height = 170 },
                new Person { Name = &quot;Michael&quot;, Height = 96 },
                new Person { Name = &quot;Steve&quot;, Height = 65 },
                new Person { Name = &quot;Joel&quot;, Height = 182 },
                new Person { Name = &quot;Bob&quot;, Height = 134 }
            };
        }
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;For any other queries, reach our &lt;a href=&quot;https://mauitoolkit.syncfusion.com&quot;&gt;Syncfusion support team&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! If you&#39;d like to contribute, please check out our &lt;a href=&quot;https://raw.githubusercontent.com/syncfusion/maui-toolkit/main/.github/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; for details on how to get started. Whether you find a bug, have a feature request, or want to submit code, we appreciate your help in improving the toolkit.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/syncfusion/maui-toolkit/main/.github/DEVELOPMENT.md&quot;&gt;Development Guide&lt;/a&gt; for more details about this repository and project structure.&lt;/p&gt; 
&lt;a href=&quot;https://github.com/syncfusion/maui-toolkit/graphs/contributors&quot;&gt; &lt;img src=&quot;https://contrib.rocks/image?repo=syncfusion/maui-toolkit&quot; /&gt; &lt;/a&gt; 
&lt;h2&gt;About Syncfusion®&lt;/h2&gt; 
&lt;p&gt;Founded in 2001 and headquartered in Research Triangle Park, N.C., Syncfusion® has more than 35,000 customers and more than 1 million users, including large financial institutions, Fortune 500 companies, and global IT consultancies.&lt;/p&gt; 
&lt;p&gt;Today, we provide 1800+ components and frameworks for web (&lt;a href=&quot;https://www.syncfusion.com/blazor-components?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;Blazor&lt;/a&gt;, &lt;a href=&quot;https://www.syncfusion.com/aspnet-core-ui-controls?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;ASP.NET Core&lt;/a&gt;, &lt;a href=&quot;https://www.syncfusion.com/aspnet-mvc-ui-controls?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;ASP.NET MVC&lt;/a&gt;, &lt;a href=&quot;https://www.syncfusion.com/javascript-ui-controls?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;JavaScript&lt;/a&gt;, &lt;a href=&quot;https://www.syncfusion.com/angular-ui-components?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;Angular&lt;/a&gt;, &lt;a href=&quot;https://www.syncfusion.com/react-ui-components?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;https://www.syncfusion.com/vue-ui-components?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;Vue&lt;/a&gt;, and &lt;a href=&quot;https://www.syncfusion.com/flutter-widgets?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;Flutter&lt;/a&gt;), mobile (&lt;a href=&quot;https://www.syncfusion.com/maui-controls?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;.NET MAUI&lt;/a&gt;, &lt;a href=&quot;https://www.syncfusion.com/xamarin-ui-controls?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;Xamarin&lt;/a&gt;, &lt;a href=&quot;https://www.syncfusion.com/flutter-widgets?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;Flutter&lt;/a&gt;, &lt;a href=&quot;https://www.syncfusion.com/uwp-ui-controls?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;UWP&lt;/a&gt;, and &lt;a href=&quot;https://www.syncfusion.com/javascript-ui-controls?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;JavaScript&lt;/a&gt;), and desktop development (&lt;a href=&quot;https://www.syncfusion.com/winforms-ui-controls?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;WinForms&lt;/a&gt;, &lt;a href=&quot;https://www.syncfusion.com/wpf-ui-controls?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;WPF&lt;/a&gt;, &lt;a href=&quot;https://www.syncfusion.com/winui-controls?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;WinUI&lt;/a&gt;, &lt;a href=&quot;https://www.syncfusion.com/flutter-widgets?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;Flutter&lt;/a&gt; and &lt;a href=&quot;https://www.syncfusion.com/uwp-ui-controls?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;UWP&lt;/a&gt;).&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href=&quot;mailto:sales@syncfusion.com?Subject=Syncfusion%20Maui%toolkit%20-%20NuGet&quot;&gt;sales@syncfusion.com&lt;/a&gt; | &lt;a href=&quot;https://www.syncfusion.com?utm_source=nuget&amp;amp;utm_medium=listing&amp;amp;utm_campaign=maui-toolkit-nuget&quot;&gt;www.syncfusion.com&lt;/a&gt; | Toll Free: 1-888-9 DOTNET&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>umbraco/Umbraco-CMS</title>
      <link>https://github.com/umbraco/Umbraco-CMS</link>
      <description>&lt;p&gt;Umbraco is a free and open source .NET content management system helping you deliver delightful digital experiences.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://umbraco.com&quot;&gt;Umbraco CMS&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/umbraco/Umbraco-CMS/LICENSE.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&quot; alt=&quot;GitHub license&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Umbraco.Cms&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/Umbraco.Cms&quot; alt=&quot;NuGet Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://umbraco.visualstudio.com/Umbraco%20Cms/_build?definitionId=301&quot;&gt;&lt;img src=&quot;https://img.shields.io/azure-devops/build/umbraco/Umbraco%2520Cms/301?logo=azurepipelines&amp;amp;label=Azure%20Pipelines&quot; alt=&quot;Build status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/umbraco/Umbraco-CMS/main/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://forum.umbraco.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/help-forum-blue&quot; alt=&quot;Forum&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/umbraco&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/869656431308189746?logo=discord&amp;amp;logoColor=fff&quot; alt=&quot;Chat about Umbraco on Discord&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/mastodon/follow/110661369750014952?domain=https%3A%2F%2Fumbracocommunity.social&quot; alt=&quot;Mastodon Follow&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Umbraco is a free and open source .NET content management system. Our mission is to help you deliver delightful digital experiences by making Umbraco friendly, simpler and social.&lt;/h3&gt; 
&lt;p&gt;Learn more at &lt;a href=&quot;https://umbraco.com&quot;&gt;umbraco.com&lt;/a&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/umbraco/Umbraco-CMS/main/img/logo.png&quot; alt=&quot;Umbraco Logo&quot; /&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;a name=&quot;install&quot;&gt;&lt;/a&gt;Looking to install Umbraco?&lt;/h2&gt; 
&lt;p&gt;You can get started using the following commands on Windows, Linux and MacOS (after installing the &lt;a href=&quot;https://docs.umbraco.com/umbraco-cms/fundamentals/setup/requirements&quot;&gt;.NET Runtime and SDK&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dotnet new install Umbraco.Templates
dotnet new umbraco --name MyProject
cd MyProject
dotnet run
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://docs.umbraco.com/umbraco-cms&quot;&gt;comprehensive documentation&lt;/a&gt; takes you from the fundamentals on how to start with Umbraco to deploying it to production.&lt;/p&gt; 
&lt;p&gt;Some important documentation links to get you started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.umbraco.com/umbraco-cms/fundamentals/setup/install&quot;&gt;Installing Umbraco CMS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.umbraco.com/umbraco-cms/fundamentals/get-to-know-umbraco&quot;&gt;Getting to know Umbraco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.umbraco.com/umbraco-cms/tutorials/overview&quot;&gt;Tutorials for creating a basic website and customizing the editing experience&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get help&lt;/h2&gt; 
&lt;p&gt;If you need a bit of feedback while building your Umbraco projects, we are &lt;a href=&quot;https://discord.umbraco.com&quot;&gt;chatty on Discord&lt;/a&gt;. Our Discord server serves as a social space for all Umbracians. If you have any questions or need some help with a problem, head over to our &lt;a href=&quot;https://forum.umbraco.com/&quot;&gt;dedicated forum&lt;/a&gt; where the Umbraco Community will be happy to help.&lt;/p&gt; 
&lt;h2&gt;Looking to contribute back to Umbraco?&lt;/h2&gt; 
&lt;p&gt;You came to the right place! Our GitHub repository is available for all kinds of contributions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/umbraco/Umbraco-CMS/issues&quot;&gt;Create a bug report&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/umbraco/Umbraco-CMS/discussions&quot;&gt;Create a feature request&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Umbraco is contribution-focused and community-driven. If you want to contribute back to the Umbraco source code, please check out our &lt;a href=&quot;https://raw.githubusercontent.com/umbraco/Umbraco-CMS/main/CONTRIBUTING.md&quot;&gt;guide to contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tip: You should not run Umbraco from source code found here. Umbraco is extremely extensible and can do whatever you need. Instead, &lt;a href=&quot;https://raw.githubusercontent.com/umbraco/Umbraco-CMS/main/#looking-to-install-umbraco&quot;&gt;install Umbraco as noted above&lt;/a&gt; and then &lt;a href=&quot;https://docs.umbraco.com/umbraco-cms/extending/&quot;&gt;extend it any way you want to&lt;/a&gt;.&lt;/h3&gt;</description>
    </item>
    
  </channel>
</rss>
