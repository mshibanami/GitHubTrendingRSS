<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub F# Daily Trending</title>
    <description>Daily Trending of F# in GitHub</description>
    <pubDate>Sat, 27 Sep 2025 01:31:51 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>artempyanykh/marksman</title>
      <link>https://github.com/artempyanykh/marksman</link>
      <description>&lt;p&gt;Write Markdown with code assist and intelligence in the comfort of your favourite editor.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/artempyanykh/marksman/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/artempyanykh/marksman/actions/workflows/build.yml/badge.svg?sanitize=true&quot; alt=&quot;Build &amp;amp; Test&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/artempyanykh/marksman/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/artempyanykh/marksman&quot; alt=&quot;release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://formulae.brew.sh/formula/marksman&quot;&gt;&lt;img src=&quot;https://img.shields.io/homebrew/v/marksman&quot; alt=&quot;homebrew&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://snapcraft.io/marksman&quot;&gt;&lt;img src=&quot;https://snapcraft.io/marksman/badge.svg?sanitize=true&quot; alt=&quot;marksman&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/artempyanykh/marksman/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/artempyanykh/marksman/total&quot; alt=&quot;Downloads&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Marksman&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Write Markdown with code assist and intelligence in the comfort of your favourite editor.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/artempyanykh/marksman/main/assets/readme/splash.png&quot; alt=&quot;splash&quot; /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Marksman is a program that integrates with your editor to assist you in writing and maintaining your Markdown documents. Using &lt;a href=&quot;https://microsoft.github.io/language-server-protocol/&quot;&gt;LSP protocol&lt;/a&gt; it provides &lt;strong&gt;completion&lt;/strong&gt;, goto &lt;strong&gt;definition&lt;/strong&gt;, find &lt;strong&gt;references&lt;/strong&gt;, &lt;strong&gt;rename&lt;/strong&gt; refactoring, &lt;strong&gt;diagnostics&lt;/strong&gt;, and more. In addition to regular Markdown, it also supports &lt;strong&gt;wiki-link&lt;/strong&gt;-style references that enable &lt;a href=&quot;https://en.wikipedia.org/wiki/Zettelkasten&quot;&gt;Zettelkasten-like&lt;/a&gt;[^roam-research]&lt;sup&gt;,&lt;/sup&gt; [^markdown-memo] note taking. See more about Marksman&#39;s features below.&lt;/p&gt; 
&lt;p&gt;Marksman &lt;strong&gt;works on MacOS, Linux, and Windows&lt;/strong&gt; and is distributed as a &lt;strong&gt;self-contained binary&lt;/strong&gt; for each OS.&lt;/p&gt; 
&lt;p&gt;The server provides assistance with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Markdown inline links: &lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;This is [inline link](/some-file.md#some-heading).
This is an internal [anchor link](#heading).
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Markdown reference links: &lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;See [reference].

[reference]: /url &quot;Title&quot;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Wiki-links: &lt;pre&gt;&lt;code class=&quot;language-md&quot;&gt;Link to [[another-note]].
Link to [[another-notes#heading]].
Internal link to [[#a-heading]].
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All types of links support completion, hover, goto definition/references. Additionally, Marksman provides diagnostics for wiki-links to detect broken references and duplicate/ambiguous headings.&lt;/p&gt; 
&lt;h2&gt;Existing editor integrations[^lsp]:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;VSCode via &lt;a href=&quot;https://github.com/artempyanykh/marksman-vscode&quot;&gt;Marksman VSCode&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Neovim:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;via &lt;a href=&quot;https://github.com/williamboman/mason.nvim&quot;&gt;mason.nvim&lt;/a&gt; (automatic server installation) (requires &lt;a href=&quot;https://github.com/williamboman/mason-lspconfig.nvim&quot;&gt;mason-lspconfig.nvim&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;via &lt;a href=&quot;https://github.com/neovim/nvim-lspconfig/raw/master/doc/configs.md#marksman&quot;&gt;nvim-lspconfig&lt;/a&gt;,&lt;/li&gt; 
   &lt;li&gt;via &lt;a href=&quot;https://github.com/yaegassy/coc-marksman&quot;&gt;CoC-marksman&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Vim:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;via &lt;a href=&quot;https://raw.githubusercontent.com/artempyanykh/marksman/main/ale&quot;&gt;ale&lt;/a&gt; - Ale has built-in support for Marksman&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;via &lt;a href=&quot;https://raw.githubusercontent.com/artempyanykh/marksman/main/lsp&quot;&gt;lsp&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Example config (add the following to your &lt;code&gt;~/.vim/after/ftplugin/markdown.vim&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-viml&quot;&gt;if exists(&#39;g:loaded_lsp&#39;)
  call LspAddServer([#{ name: &#39;marksman&#39;, filetype: [&#39;markdown&#39;], path: &#39;/path/to/marksman&#39;, args: [&#39;server&#39;], syncInit: v:true }])
end
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Emacs:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;via &lt;a href=&quot;https://emacs-lsp.github.io/lsp-mode/page/lsp-marksman/&quot;&gt;LSP Mode&lt;/a&gt; (automatic server installation).&lt;/p&gt; &lt;p&gt;Example config for &lt;code&gt;use-package&lt;/code&gt; users:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-lisp&quot;&gt;(use-package markdown-mode
  :hook (markdown-mode . lsp)
  :config
  (require &#39;lsp-marksman))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;via &lt;a href=&quot;https://github.com/joaotavora/eglot&quot;&gt;Eglot&lt;/a&gt;, requires configuration (unless &lt;a href=&quot;https://github.com/joaotavora/eglot/pull/1013&quot;&gt;eglot#1013&lt;/a&gt; gets merged); add the following to your &lt;code&gt;init.el&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-lisp&quot;&gt;(add-to-list &#39;eglot-server-programs &#39;(markdown-mode . (&quot;marksman&quot;)))
(add-hook &#39;markdown-mode-hook #&#39;eglot-ensure)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://helix-editor.com/&quot;&gt;Helix&lt;/a&gt; supports Marksman out of the box. However, you need add &lt;code&gt;marksman&lt;/code&gt; binary to your &lt;code&gt;PATH&lt;/code&gt; manually.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://kakoune.org/&quot;&gt;Kakoune&lt;/a&gt; can be used with &lt;a href=&quot;https://github.com/kakoune-lsp/kakoune-lsp&quot;&gt;kakoune-lsp&lt;/a&gt; with no other configuration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Sublime Text via &lt;a href=&quot;https://github.com/sublimelsp/LSP-marksman&quot;&gt;LSP-marksman&lt;/a&gt; (automatic server installation).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;BBEdit &lt;a href=&quot;https://github.com/artempyanykh/marksman/discussions/206#discussioncomment-5906423&quot;&gt;can be configured&lt;/a&gt; to use Marksman as an LSP server for Markdown files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://zed.dev/&quot;&gt;Zed&lt;/a&gt; supports Marksman through it&#39;s integrated LSP support, by addinging it as an available LSP for Markdown in Zed&#39;s &lt;code&gt;settings.json&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-jsonc&quot;&gt;// Zed settings
{
  // ...
  &quot;languages&quot;: {
    &quot;Markdown&quot;: {
      &quot;language_servers&quot;: [&quot;marksman&quot;]
    }
  }
}

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to install&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/artempyanykh/marksman/main/docs/install.md&quot;&gt;installation instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Demos and tutorials&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/artempyanykh/marksman/main/docs/demo.md&quot;&gt;this page&lt;/a&gt; for a mix of Neovim, VSCode, and Emacs screen captures.&lt;/li&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://medium.com/@chrisatmachine/lunarvim-improve-markdown-editing-with-marksman-739d06c73a26&quot;&gt;this post&lt;/a&gt; on how to use Marksman with &lt;a href=&quot;https://www.lunarvim.org&quot;&gt;LunarVim&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Check out &lt;a href=&quot;https://www.youtube.com/watch?v=8GQKOLh_V5E&quot;&gt;this YouTube video&lt;/a&gt; by Luke Pighetti on how to use Marksman with Helix.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/artempyanykh/marksman/main/assets/readme/gifs/completion-markdown.gif&quot; alt=&quot;Completion Markdown&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/artempyanykh/marksman/main/docs/features.md&quot;&gt;the Features page&lt;/a&gt; to learn more about language features, configurations, and single- and multi-file modes.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Cross-file references and completions don&#39;t work. 
  &lt;ul&gt; 
   &lt;li&gt;Either create an empty &lt;code&gt;.marksman.toml&lt;/code&gt; in the root folder of your project or initialize a repository (e.g. &lt;code&gt;git init&lt;/code&gt;). See &lt;a href=&quot;https://raw.githubusercontent.com/artempyanykh/marksman/main/docs/features.md#workspace-folders-project-roots-and-single-file-mode&quot;&gt;this page&lt;/a&gt; to learn more about single- and mult-file modes.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;I&#39;m getting &quot;marksman can’t be opened because Apple cannot check it for malicious software&quot; on MacOS. 
  &lt;ul&gt; 
   &lt;li&gt;Run the following command to bypass it and let Mac know that it&#39;s fine: &lt;code&gt;xattr -d com.apple.quarantine &amp;lt;path-to-marksman-bin&amp;gt;&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;[^roam-research]: You may have heard about &lt;a href=&quot;https://roamresearch.com&quot;&gt;Roam Research&lt;/a&gt;. That is a commercial implementation of the Zettelkasten method and another point of reference for what Marksman is about. However, unlike a proprietary Roam Research, Marksman is free, open-source and integrated into your favourite editor (albeit for not not as feature rich as Roam Research).&lt;/p&gt; 
&lt;p&gt;[^markdown-memo]: There is an excellent VSCode extension called &lt;a href=&quot;https://github.com/svsool/vscode-memo&quot;&gt;Markdown Memo&lt;/a&gt;. You definitely need to check it out if you&#39;re primarily using VSCode as it has some features that are missing in Marksman and &lt;a href=&quot;https://github.com/artempyanykh/marksman-vscode&quot;&gt;Marksman VSCode extension&lt;/a&gt;. However, Markdown Memo is VSCode specific while Marksman is a generic language server, so can be used with any editor that has LSP support: Emacs, Vim, Neovim, etc.&lt;/p&gt; 
&lt;p&gt;[^lsp]: Since Marksman is a regular Language Server most of the functionality works out of the box with any LSP client.&lt;/p&gt; 
&lt;p&gt;[^single-file-mode]: There is an initiative to add a single-file mode to LSP but it&#39;s not a part of the spec at least until and including v3.17.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
