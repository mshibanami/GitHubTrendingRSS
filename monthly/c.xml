<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub C Monthly Trending</title>
    <description>Monthly Trending of C in GitHub</description>
    <pubDate>Sat, 27 Sep 2025 01:51:27 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>BasedHardware/omi</title>
      <link>https://github.com/BasedHardware/omi</link>
      <description>&lt;p&gt;AI wearables. Put it on, speak, transcribe, automatically&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;h1&gt;&lt;strong&gt;omi&lt;/strong&gt;&lt;/h1&gt; 
 &lt;p&gt;Meet Omi, the world’s leading open-source AI wearable that captures conversations, gives summaries, action items and does actions for you. Simply connect Omi to your mobile device and enjoy automatic, high-quality transcriptions of meetings, chats, and voice memos wherever you are.&lt;/p&gt; 
 &lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/834d3fdb-31b5-4f22-ae35-da3d2b9a8f59&quot; alt=&quot;Omi&quot; width=&quot;49%&quot; /&gt; &lt;img src=&quot;https://github.com/user-attachments/assets/fdad4226-e5ce-4c55-b547-9101edfa3203&quot; alt=&quot;Image&quot; width=&quot;49%&quot; /&gt; &lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7a658366-9e02-4057-bde5-a510e1f0217a&quot; alt=&quot;CleanShot 2025-02-08 at 18 22 23&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;http://discord.omi.me&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1192313062041067520?label=Discord&quot; alt=&quot;Discord Follow&quot; /&gt;&lt;/a&gt;     &lt;a href=&quot;https://x.com/kodjima33&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/kodjima33&quot; alt=&quot;Twitter Follow&quot; /&gt;&lt;/a&gt;     &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&quot; alt=&quot;License: MIT&quot; /&gt;&lt;/a&gt;    &lt;a href=&quot;https://github.com/BasedHardware/Omi&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/BasedHardware/Omi&quot; alt=&quot;GitHub Repo stars&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h3&gt; &lt;p&gt;&lt;a href=&quot;https://omi.me/&quot;&gt;Homepage&lt;/a&gt; | &lt;a href=&quot;https://docs.omi.me/&quot;&gt;Documentation&lt;/a&gt; | &lt;a href=&quot;https://www.omi.me/products/omi-dev-kit-2&quot;&gt;Buy omi Developer Kit&lt;/a&gt; | &lt;a href=&quot;https://www.omi.me/glass&quot;&gt;Buy Omi Glass Dev Kit&lt;/a&gt;&lt;/p&gt; &lt;/h3&gt; 
&lt;/div&gt; 
&lt;h2&gt;Quick Start (2 min)&lt;/h2&gt; 
&lt;p&gt;Download omi App&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.friend.ios&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/7/78/Google_Play_Store_badge_EN.svg?sanitize=true&quot; alt=&quot;Get it on Google Play&quot; height=&quot;50px&quot; width=&quot;180px&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://apps.apple.com/us/app/friend-ai-wearable/id6502156163&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/3/3c/Download_on_the_App_Store_Badge.svg?sanitize=true&quot; alt=&quot;Download on the App Store&quot; height=&quot;50px&quot; width=&quot;180px&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create webhook using &lt;a href=&quot;https://webhook.site&quot;&gt;webhook.site&lt;/a&gt; and copy this url&lt;/p&gt; 
&lt;img src=&quot;https://github.com/user-attachments/assets/083a6ec4-4694-4c7a-843a-4a1a0c254453&quot; width=&quot;500&quot; /&gt; 
&lt;p&gt;In omi App:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Explore =&amp;gt; Create an App&lt;/th&gt; 
   &lt;th&gt;Select Capability&lt;/th&gt; 
   &lt;th&gt;Paste Webhook URL&lt;/th&gt; 
   &lt;th&gt;Install App&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/31809b81-7de2-4381-b5fc-5c9714972211&quot; width=&quot;200&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/59cfbe8e-7e3b-437f-81f7-25eb50ccdd7d&quot; width=&quot;200&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/3d864ee8-555f-4ded-b4db-87ff78128323&quot; width=&quot;200&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/58cf6da6-e245-415e-92e7-dc1f46583cfc&quot; width=&quot;200&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Start speaking, you&#39;ll see Real-time transcript on &lt;a href=&quot;https://webhook.site&quot;&gt;webhook.site &lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;In this repo:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/omi&quot;&gt;omi device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/omiGlass&quot;&gt;omi glass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/app&quot;&gt;omi app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BasedHardware/omi/tree/main/personas-open-source&quot;&gt;ai personas (web)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/BasedHardware/omi/main/sdks&quot;&gt;SDKs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/doc/developer/AppSetup&quot;&gt;omi App setup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/doc/assembly/Buying_Guide/&quot;&gt;Buying Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/doc/assembly/Build_the_device/&quot;&gt;Build the device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/doc/get_started/Flash_device/&quot;&gt;Install firmware&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.omi.me/doc/developer/apps/Introduction&quot;&gt;Create your own app in 1 minute&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out our &lt;a href=&quot;https://docs.omi.me/doc/developer/Contribution/&quot;&gt;contributions guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Earn from contributing! Check the &lt;a href=&quot;https://omi.me/bounties&quot;&gt;paid bounties 🤑&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Check out the &lt;a href=&quot;https://github.com/BasedHardware/Omi/issues&quot;&gt;current issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join the &lt;a href=&quot;http://discord.omi.me&quot;&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Build your own &lt;a href=&quot;https://docs.omi.me/doc/developer/apps/Introduction&quot;&gt;Plugins/Integrations&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Omi is available under &lt;a href=&quot;https://github.com/BasedHardware/omi/raw/main/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nothings/stb</title>
      <link>https://github.com/nothings/stb</link>
      <description>&lt;p&gt;stb single-file public domain libraries for C/C++&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;stb&lt;/h1&gt; 
&lt;p&gt;single-file public domain (or MIT licensed) libraries for C/C++&lt;/p&gt; 
&lt;h1&gt;This project discusses security-relevant bugs in public in Github Issues and Pull Requests, and it may take significant time for security fixes to be implemented or merged. If this poses an unreasonable risk to your project, do not use stb libraries.&lt;/h1&gt; 
&lt;p&gt;Noteworthy:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;image loader: &lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_image.h&quot;&gt;stb_image.h&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;image writer: &lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_image_write.h&quot;&gt;stb_image_write.h&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;image resizer: &lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_image_resize2.h&quot;&gt;stb_image_resize2.h&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;font text rasterizer: &lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_truetype.h&quot;&gt;stb_truetype.h&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;typesafe containers: &lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_ds.h&quot;&gt;stb_ds.h&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Most libraries by stb, except: stb_dxt by Fabian &quot;ryg&quot; Giesen, original stb_image_resize by Jorge L. &quot;VinoBS&quot; Rodriguez, and stb_image_resize2 and stb_sprintf by Jeff Roberts.&lt;/p&gt; 
&lt;p&gt;&lt;a name=&quot;stb_libs&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;library&lt;/th&gt; 
   &lt;th&gt;latest version&lt;/th&gt; 
   &lt;th&gt;category&lt;/th&gt; 
   &lt;th&gt;LoC&lt;/th&gt; 
   &lt;th&gt;description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_vorbis.c&quot;&gt;stb_vorbis.c&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.22&lt;/td&gt; 
   &lt;td&gt;audio&lt;/td&gt; 
   &lt;td&gt;5584&lt;/td&gt; 
   &lt;td&gt;decode ogg vorbis files from file/memory to float/16-bit signed output&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_hexwave.h&quot;&gt;stb_hexwave.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.5&lt;/td&gt; 
   &lt;td&gt;audio&lt;/td&gt; 
   &lt;td&gt;680&lt;/td&gt; 
   &lt;td&gt;audio waveform synthesizer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_image.h&quot;&gt;stb_image.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;2.30&lt;/td&gt; 
   &lt;td&gt;graphics&lt;/td&gt; 
   &lt;td&gt;7988&lt;/td&gt; 
   &lt;td&gt;image loading/decoding from file/memory: JPG, PNG, TGA, BMP, PSD, GIF, HDR, PIC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_truetype.h&quot;&gt;stb_truetype.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.26&lt;/td&gt; 
   &lt;td&gt;graphics&lt;/td&gt; 
   &lt;td&gt;5079&lt;/td&gt; 
   &lt;td&gt;parse, decode, and rasterize characters from truetype fonts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_image_write.h&quot;&gt;stb_image_write.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.16&lt;/td&gt; 
   &lt;td&gt;graphics&lt;/td&gt; 
   &lt;td&gt;1724&lt;/td&gt; 
   &lt;td&gt;image writing to disk: PNG, TGA, BMP&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_image_resize2.h&quot;&gt;stb_image_resize2.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;2.14&lt;/td&gt; 
   &lt;td&gt;graphics&lt;/td&gt; 
   &lt;td&gt;10627&lt;/td&gt; 
   &lt;td&gt;resize images larger/smaller with good quality&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_rect_pack.h&quot;&gt;stb_rect_pack.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.01&lt;/td&gt; 
   &lt;td&gt;graphics&lt;/td&gt; 
   &lt;td&gt;623&lt;/td&gt; 
   &lt;td&gt;simple 2D rectangle packer with decent quality&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_perlin.h&quot;&gt;stb_perlin.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.5&lt;/td&gt; 
   &lt;td&gt;graphics&lt;/td&gt; 
   &lt;td&gt;428&lt;/td&gt; 
   &lt;td&gt;perlin&#39;s revised simplex noise w/ different seeds&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_ds.h&quot;&gt;stb_ds.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.67&lt;/td&gt; 
   &lt;td&gt;utility&lt;/td&gt; 
   &lt;td&gt;1895&lt;/td&gt; 
   &lt;td&gt;typesafe dynamic array and hash tables for C, will compile in C++&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_sprintf.h&quot;&gt;stb_sprintf.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.10&lt;/td&gt; 
   &lt;td&gt;utility&lt;/td&gt; 
   &lt;td&gt;1906&lt;/td&gt; 
   &lt;td&gt;fast sprintf, snprintf for C/C++&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_textedit.h&quot;&gt;stb_textedit.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.14&lt;/td&gt; 
   &lt;td&gt;user&amp;nbsp;interface&lt;/td&gt; 
   &lt;td&gt;1429&lt;/td&gt; 
   &lt;td&gt;guts of a text editor for games etc implementing them from scratch&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_voxel_render.h&quot;&gt;stb_voxel_render.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.89&lt;/td&gt; 
   &lt;td&gt;3D&amp;nbsp;graphics&lt;/td&gt; 
   &lt;td&gt;3807&lt;/td&gt; 
   &lt;td&gt;Minecraft-esque voxel rendering &quot;engine&quot; with many more features&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_dxt.h&quot;&gt;stb_dxt.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.12&lt;/td&gt; 
   &lt;td&gt;3D&amp;nbsp;graphics&lt;/td&gt; 
   &lt;td&gt;719&lt;/td&gt; 
   &lt;td&gt;Fabian &quot;ryg&quot; Giesen&#39;s real-time DXT compressor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_easy_font.h&quot;&gt;stb_easy_font.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1.1&lt;/td&gt; 
   &lt;td&gt;3D&amp;nbsp;graphics&lt;/td&gt; 
   &lt;td&gt;305&lt;/td&gt; 
   &lt;td&gt;quick-and-dirty easy-to-deploy bitmap font for printing frame rate, etc&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_tilemap_editor.h&quot;&gt;stb_tilemap_editor.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.42&lt;/td&gt; 
   &lt;td&gt;game&amp;nbsp;dev&lt;/td&gt; 
   &lt;td&gt;4187&lt;/td&gt; 
   &lt;td&gt;embeddable tilemap editor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_herringbone_wang_tile.h&quot;&gt;stb_herringbone_wa...&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.7&lt;/td&gt; 
   &lt;td&gt;game&amp;nbsp;dev&lt;/td&gt; 
   &lt;td&gt;1221&lt;/td&gt; 
   &lt;td&gt;herringbone Wang tile map generator&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_c_lexer.h&quot;&gt;stb_c_lexer.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.12&lt;/td&gt; 
   &lt;td&gt;parsing&lt;/td&gt; 
   &lt;td&gt;941&lt;/td&gt; 
   &lt;td&gt;simplify writing parsers for C-like languages&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_divide.h&quot;&gt;stb_divide.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.94&lt;/td&gt; 
   &lt;td&gt;math&lt;/td&gt; 
   &lt;td&gt;433&lt;/td&gt; 
   &lt;td&gt;more useful 32-bit modulus e.g. &quot;euclidean divide&quot;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_connected_components.h&quot;&gt;stb_connected_comp...&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.96&lt;/td&gt; 
   &lt;td&gt;misc&lt;/td&gt; 
   &lt;td&gt;1049&lt;/td&gt; 
   &lt;td&gt;incrementally compute reachability on grids&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_leakcheck.h&quot;&gt;stb_leakcheck.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.6&lt;/td&gt; 
   &lt;td&gt;misc&lt;/td&gt; 
   &lt;td&gt;194&lt;/td&gt; 
   &lt;td&gt;quick-and-dirty malloc/free leak-checking&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/nothings/stb/master/stb_include.h&quot;&gt;stb_include.h&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.02&lt;/td&gt; 
   &lt;td&gt;misc&lt;/td&gt; 
   &lt;td&gt;295&lt;/td&gt; 
   &lt;td&gt;implement recursive #include support, particularly for GLSL&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Total libraries: 21 Total lines of C code: 51114&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h4&gt;What&#39;s the license?&lt;/h4&gt; 
&lt;p&gt;These libraries are in the public domain. You can do anything you want with them. You have no legal obligation to do anything else, although I appreciate attribution.&lt;/p&gt; 
&lt;p&gt;They are also licensed under the MIT open source license, if you have lawyers who are unhappy with public domain. Every source file includes an explicit dual-license for you to choose from.&lt;/p&gt; 
&lt;h4&gt;How do I use these libraries?&lt;/h4&gt; 
&lt;p&gt;The idea behind single-header file libraries is that they&#39;re easy to distribute and deploy because all the code is contained in a single file. By default, the .h files in here act as their own header files, i.e. they declare the functions contained in the file but don&#39;t actually result in any code getting compiled.&lt;/p&gt; 
&lt;p&gt;So in addition, you should select &lt;em&gt;exactly one&lt;/em&gt; C/C++ source file that actually instantiates the code, preferably a file you&#39;re not editing frequently. This file should define a specific macro (this is documented per-library) to actually enable the function definitions. For example, to use stb_image, you should have exactly one C/C++ file that doesn&#39;t include stb_image.h regularly, but instead does&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;#define STB_IMAGE_IMPLEMENTATION
#include &quot;stb_image.h&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The right macro to define is pointed out right at the top of each of these libraries.&lt;/p&gt; 
&lt;h4&gt;&lt;a name=&quot;other_libs&quot;&gt;&lt;/a&gt; Are there other single-file public-domain/open source libraries with minimal dependencies out there?&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/nothings/single_file_libs&quot;&gt;Yes.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;If I wrap an stb library in a new library, does the new library have to be public domain/MIT?&lt;/h4&gt; 
&lt;p&gt;No, because it&#39;s public domain you can freely relicense it to whatever license your new library wants to be.&lt;/p&gt; 
&lt;h4&gt;What&#39;s the deal with SSE support in GCC-based compilers?&lt;/h4&gt; 
&lt;p&gt;stb_image will either use SSE2 (if you compile with -msse2) or will not use any SIMD at all, rather than trying to detect the processor at runtime and handle it correctly. As I understand it, the approved path in GCC for runtime-detection require you to use multiple source files, one for each CPU configuration. Because stb_image is a header-file library that compiles in only one source file, there&#39;s no approved way to build both an SSE-enabled and a non-SSE-enabled variation.&lt;/p&gt; 
&lt;p&gt;While we&#39;ve tried to work around it, we&#39;ve had multiple issues over the years due to specific versions of gcc breaking what we&#39;re doing, so we&#39;ve given up on it. See &lt;a href=&quot;https://github.com/nothings/stb/issues/280&quot;&gt;https://github.com/nothings/stb/issues/280&lt;/a&gt; and &lt;a href=&quot;https://github.com/nothings/stb/issues/410&quot;&gt;https://github.com/nothings/stb/issues/410&lt;/a&gt; for examples.&lt;/p&gt; 
&lt;h4&gt;Some of these libraries seem redundant to existing open source libraries. Are they better somehow?&lt;/h4&gt; 
&lt;p&gt;Generally they&#39;re only better in that they&#39;re easier to integrate, easier to use, and easier to release (single file; good API; no attribution requirement). They may be less featureful, slower, and/or use more memory. If you&#39;re already using an equivalent library, there&#39;s probably no good reason to switch.&lt;/p&gt; 
&lt;h4&gt;Can I link directly to the table of stb libraries?&lt;/h4&gt; 
&lt;p&gt;You can use &lt;a href=&quot;https://github.com/nothings/stb#stb_libs&quot;&gt;this URL&lt;/a&gt; to link directly to that list.&lt;/p&gt; 
&lt;h4&gt;Why do you list &quot;lines of code&quot;? It&#39;s a terrible metric.&lt;/h4&gt; 
&lt;p&gt;Just to give you some idea of the internal complexity of the library, to help you manage your expectations, or to let you know what you&#39;re getting into. While not all the libraries are written in the same style, they&#39;re certainly similar styles, and so comparisons between the libraries are probably still meaningful.&lt;/p&gt; 
&lt;p&gt;Note though that the lines do include both the implementation, the part that corresponds to a header file, and the documentation.&lt;/p&gt; 
&lt;h4&gt;Why single-file headers?&lt;/h4&gt; 
&lt;p&gt;Windows doesn&#39;t have standard directories where libraries live. That makes deploying libraries in Windows a lot more painful than open source developers on Unix-derivates generally realize. (It also makes library dependencies a lot worse in Windows.)&lt;/p&gt; 
&lt;p&gt;There&#39;s also a common problem in Windows where a library was built against a different version of the runtime library, which causes link conflicts and confusion. Shipping the libs as headers means you normally just compile them straight into your project without making libraries, thus sidestepping that problem.&lt;/p&gt; 
&lt;p&gt;Making them a single file makes it very easy to just drop them into a project that needs them. (Of course you can still put them in a proper shared library tree if you want.)&lt;/p&gt; 
&lt;p&gt;Why not two files, one a header and one an implementation? The difference between 10 files and 9 files is not a big deal, but the difference between 2 files and 1 file is a big deal. You don&#39;t need to zip or tar the files up, you don&#39;t have to remember to attach &lt;em&gt;two&lt;/em&gt; files, etc.&lt;/p&gt; 
&lt;h4&gt;Why &quot;stb&quot;? Is this something to do with Set-Top Boxes?&lt;/h4&gt; 
&lt;p&gt;No, they are just the initials for my name, Sean T. Barrett. This was not chosen out of egomania, but as a moderately sane way of namespacing the filenames and source function names.&lt;/p&gt; 
&lt;h4&gt;Will you add more image types to stb_image.h?&lt;/h4&gt; 
&lt;p&gt;No. As stb_image use has grown, it has become more important for us to focus on security of the codebase. Adding new image formats increases the amount of code we need to secure, so it is no longer worth adding new formats.&lt;/p&gt; 
&lt;h4&gt;Do you have any advice on how to create my own single-file library?&lt;/h4&gt; 
&lt;p&gt;Yes. &lt;a href=&quot;https://github.com/nothings/stb/raw/master/docs/stb_howto.txt&quot;&gt;https://github.com/nothings/stb/blob/master/docs/stb_howto.txt&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Why public domain?&lt;/h4&gt; 
&lt;p&gt;I prefer it over GPL, LGPL, BSD, zlib, etc. for many reasons. Some of them are listed here: &lt;a href=&quot;https://github.com/nothings/stb/raw/master/docs/why_public_domain.md&quot;&gt;https://github.com/nothings/stb/blob/master/docs/why_public_domain.md&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Why C?&lt;/h4&gt; 
&lt;p&gt;Primarily, because I use C, not C++. But it does also make it easier for other people to use them from other languages.&lt;/p&gt; 
&lt;h4&gt;Why not C99? stdint.h, declare-anywhere, etc.&lt;/h4&gt; 
&lt;p&gt;I still use MSVC 6 (1998) as my IDE because it has better human factors for me than later versions of MSVC.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pbatard/rufus</title>
      <link>https://github.com/pbatard/rufus</link>
      <description>&lt;p&gt;The Reliable USB Formatting Utility&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rufus: The Reliable USB Formatting Utility&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/pbatard/rufus/actions/workflows/vs2022.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/pbatard/rufus/vs2022.yml?branch=master&amp;amp;style=flat-square&amp;amp;label=VS2022%20Build&quot; alt=&quot;VS2022 Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/pbatard/rufus/actions/workflows/mingw.yml&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/pbatard/rufus/mingw.yml?branch=master&amp;amp;style=flat-square&amp;amp;label=MinGW%20Build&quot; alt=&quot;MinGW Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://scan.coverity.com/projects/pbatard-rufus&quot;&gt;&lt;img src=&quot;https://img.shields.io/coverity/scan/2172.svg?style=flat-square&amp;amp;label=Coverity%20Analysis&quot; alt=&quot;Coverity Scan Status&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://github.com/pbatard/rufus/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-pre/pbatard/rufus.svg?style=flat-square&amp;amp;label=Latest%20Release&quot; alt=&quot;Latest Release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0.en.html&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-GPLv3-blue.svg?style=flat-square&amp;amp;label=License&quot; alt=&quot;Licence&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/pbatard/rufus/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/pbatard/rufus/total.svg?label=Downloads&amp;amp;style=flat-square&quot; alt=&quot;Download Stats&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/pbatard/rufus/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/pbatard/rufus.svg?style=flat-square&amp;amp;label=Contributors&quot; alt=&quot;Contributors&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pbatard/rufus/master/res/icons/rufus-128.png&quot; alt=&quot;Rufus logo&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Rufus is a utility that helps format and create bootable USB flash drives.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Format USB, flash card and virtual drives to FAT/FAT32/NTFS/UDF/exFAT/ReFS/ext2/ext3&lt;/li&gt; 
 &lt;li&gt;Create DOS bootable USB drives using &lt;a href=&quot;https://www.freedos.org&quot;&gt;FreeDOS&lt;/a&gt; or MS-DOS&lt;/li&gt; 
 &lt;li&gt;Create BIOS or UEFI bootable drives, including &lt;a href=&quot;https://github.com/pbatard/uefi-ntfs&quot;&gt;UEFI bootable NTFS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Create bootable drives from bootable ISOs (Windows, Linux, etc.)&lt;/li&gt; 
 &lt;li&gt;Create bootable drives from bootable disk images, including compressed ones&lt;/li&gt; 
 &lt;li&gt;Create Windows 11 installation drives for PCs that don&#39;t have TPM or Secure Boot&lt;/li&gt; 
 &lt;li&gt;Create &lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_To_Go&quot;&gt;Windows To Go&lt;/a&gt; drives&lt;/li&gt; 
 &lt;li&gt;Create VHD/DD, VHDX and FFU images of an existing drive&lt;/li&gt; 
 &lt;li&gt;Create persistent Linux partitions&lt;/li&gt; 
 &lt;li&gt;Compute MD5, SHA-1, SHA-256 and SHA-512 checksums of the selected image&lt;/li&gt; 
 &lt;li&gt;Perform runtime validation of UEFI bootable media&lt;/li&gt; 
 &lt;li&gt;Improve Windows installation experience by automatically setting up OOBE parameters (local account, privacy options, etc.)&lt;/li&gt; 
 &lt;li&gt;Perform bad blocks checks, including detection of &quot;fake&quot; flash drives&lt;/li&gt; 
 &lt;li&gt;Download official Microsoft Windows 8, Windows 10 or Windows 11 retail ISOs&lt;/li&gt; 
 &lt;li&gt;Download &lt;a href=&quot;https://github.com/pbatard/UEFI-Shell&quot;&gt;UEFI Shell&lt;/a&gt; ISOs&lt;/li&gt; 
 &lt;li&gt;Modern and familiar UI, with &lt;a href=&quot;https://github.com/pbatard/rufus/wiki/FAQ#What_languages_are_natively_supported_by_Rufus&quot;&gt;38 languages natively supported&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Small footprint. No installation required.&lt;/li&gt; 
 &lt;li&gt;Portable. Secure Boot compatible.&lt;/li&gt; 
 &lt;li&gt;100% &lt;a href=&quot;https://www.gnu.org/philosophy/free-sw&quot;&gt;Free Software&lt;/a&gt; (&lt;a href=&quot;https://www.gnu.org/licenses/gpl-3.0&quot;&gt;GPL v3&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Compilation&lt;/h2&gt; 
&lt;p&gt;Use either Visual Studio 2022 or MinGW and then invoke the &lt;code&gt;.sln&lt;/code&gt; or &lt;code&gt;configure&lt;/code&gt;/&lt;code&gt;make&lt;/code&gt; respectively.&lt;/p&gt; 
&lt;h4&gt;Visual Studio&lt;/h4&gt; 
&lt;p&gt;Rufus is an OSI compliant Open Source project. You are entitled to download and use the &lt;em&gt;freely available&lt;/em&gt; &lt;a href=&quot;https://www.visualstudio.com/vs/community/&quot;&gt;Visual Studio Community Edition&lt;/a&gt; to build, run or develop for Rufus. As per the Visual Studio Community Edition license, this applies regardless of whether you are an individual or a corporate user.&lt;/p&gt; 
&lt;h2&gt;Additional information&lt;/h2&gt; 
&lt;p&gt;Rufus provides extensive information about what it is doing, either through its easily accessible log, or through the &lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/debugview&quot;&gt;Windows debug facility&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://rufus.ie&quot;&gt;&lt;strong&gt;Official Website&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/pbatard/rufus/wiki/FAQ&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Enhancements/Bugs&lt;/h2&gt; 
&lt;p&gt;Please use the &lt;a href=&quot;https://github.com/pbatard/rufus/issues&quot;&gt;GitHub issue tracker&lt;/a&gt; for reporting problems or suggesting new features.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pymumu/smartdns</title>
      <link>https://github.com/pymumu/smartdns</link>
      <description>&lt;p&gt;A local DNS server to obtain the fastest website IP for the best Internet experience, support DoT, DoH, DoQ. 一个本地DNS服务器，获取最快的网站IP，获得最佳上网体验，支持DoH，DoT，DoQ。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SmartDNS&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://raw.githubusercontent.com/pymumu/smartdns/master/ReadMe_en.md&quot;&gt;English&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pymumu/smartdns/master/doc/smartdns-banner.png&quot; alt=&quot;SmartDNS&quot; /&gt; SmartDNS 是一个运行在本地的 DNS 服务器，它接受来自本地客户端的 DNS 查询请求，然后从多个上游 DNS 服务器获取 DNS 查询结果，并将访问速度最快的结果返回给客户端，以此提高网络访问速度。 SmartDNS 同时支持指定特定域名 IP 地址，并高性匹配，可达到过滤广告的效果; 支持DOT，DOH，DOQ，DOH3，更好的保护隐私。&lt;/p&gt; 
&lt;p&gt;与 DNSmasq 的 all-servers 不同，SmartDNS 返回的是访问速度最快的解析结果。&lt;/p&gt; 
&lt;p&gt;支持树莓派、OpenWrt、华硕路由器原生固件和 Windows 系统等。&lt;/p&gt; 
&lt;h2&gt;使用指导&lt;/h2&gt; 
&lt;p&gt;SmartDNS官网：&lt;a href=&quot;https://pymumu.github.io/smartdns&quot;&gt;https://pymumu.github.io/smartdns&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;软件效果展示&lt;/h2&gt; 
&lt;h3&gt;仪表盘&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pymumu/smartdns/master/doc/smartdns-webui.png&quot; alt=&quot;SmartDNS-WebUI&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;速度对比&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;阿里 DNS&lt;/strong&gt;&lt;br /&gt; 使用阿里 DNS 查询百度IP，并检测结果。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ nslookup www.baidu.com 223.5.5.5
Server:         223.5.5.5
Address:        223.5.5.5#53

Non-authoritative answer:
www.baidu.com   canonical name = www.a.shifen.com.
Name:   www.a.shifen.com
Address: 180.97.33.108
Name:   www.a.shifen.com
Address: 180.97.33.107

$ ping 180.97.33.107 -c 2
PING 180.97.33.107 (180.97.33.107) 56(84) bytes of data.
64 bytes from 180.97.33.107: icmp_seq=1 ttl=55 time=24.3 ms
64 bytes from 180.97.33.107: icmp_seq=2 ttl=55 time=24.2 ms

--- 180.97.33.107 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 24.275/24.327/24.380/0.164 ms
pi@raspberrypi:~/code/smartdns_build $ ping 180.97.33.108 -c 2
PING 180.97.33.108 (180.97.33.108) 56(84) bytes of data.
64 bytes from 180.97.33.108: icmp_seq=1 ttl=55 time=31.1 ms
64 bytes from 180.97.33.108: icmp_seq=2 ttl=55 time=31.0 ms

--- 180.97.33.108 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 31.014/31.094/31.175/0.193 ms
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;SmartDNS&lt;/strong&gt;&lt;br /&gt; 使用 SmartDNS 查询百度 IP，并检测结果。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ nslookup www.baidu.com
Server:         192.168.1.1
Address:        192.168.1.1#53

Non-authoritative answer:
www.baidu.com   canonical name = www.a.shifen.com.
Name:   www.a.shifen.com
Address: 14.215.177.39

$ ping 14.215.177.39 -c 2
PING 14.215.177.39 (14.215.177.39) 56(84) bytes of data.
64 bytes from 14.215.177.39: icmp_seq=1 ttl=56 time=6.31 ms
64 bytes from 14.215.177.39: icmp_seq=2 ttl=56 time=5.95 ms

--- 14.215.177.39 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 5.954/6.133/6.313/0.195 ms
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;从对比看出，SmartDNS 找到了访问 &lt;code&gt;www.baidu.com&lt;/code&gt; 最快的 IP 地址，比阿里 DNS 速度快了 5 倍。&lt;/p&gt; 
&lt;h2&gt;特性&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;多虚拟DNS服务器&lt;/strong&gt;&lt;br /&gt; 支持多个虚拟DNS服务器，不同虚拟DNS服务器不同的端口，规则，客户端。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;多 DNS 上游服务器&lt;/strong&gt;&lt;br /&gt; 支持配置多个上游 DNS 服务器，并同时进行查询，即使其中有 DNS 服务器异常，也不会影响查询。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持每个客户端独立控制&lt;/strong&gt;&lt;br /&gt; 支持基于MAC，IP地址控制客户端使用不同查询规则，可实现家长控制等功能。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;返回最快 IP 地址&lt;/strong&gt;&lt;br /&gt; 支持从域名所属 IP 地址列表中查找到访问速度最快的 IP 地址，并返回给客户端，提高网络访问速度。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持多种查询协议&lt;/strong&gt;&lt;br /&gt; 支持 UDP、TCP、DOT、DOH、DOQ 和 DOH3 查询及服务，以及非 53 端口查询；支持通过socks5，HTTP代理查询;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;特定域名 IP 地址指定&lt;/strong&gt;&lt;br /&gt; 支持指定域名的 IP 地址，达到广告过滤效果、避免恶意网站的效果。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;域名高性能后缀匹配&lt;/strong&gt;&lt;br /&gt; 支持域名后缀匹配模式，简化过滤配置，过滤 20 万条记录时间 &amp;lt; 1ms。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;域名分流&lt;/strong&gt;&lt;br /&gt; 支持域名分流，不同类型的域名向不同的 DNS 服务器查询，支持iptable和nftable更好的分流；支持测速失败的情况下设置域名结果到对应ipset和nftset集合。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Windows / Linux 多平台支持&lt;/strong&gt;&lt;br /&gt; 支持标准 Linux 系统（树莓派）、OpenWrt 系统各种固件和华硕路由器原生固件。同时还支持 WSL（Windows Subsystem for Linux，适用于 Linux 的 Windows 子系统）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持 IPv4、IPv6 双栈&lt;/strong&gt;&lt;br /&gt; 支持 IPv4 和 IPV 6网络，支持查询 A 和 AAAA 记录，支持双栈 IP 速度优化，并支持完全禁用 IPv6 AAAA 解析。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持DNS64&lt;/strong&gt;&lt;br /&gt; 支持DNS64转换。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;高性能、占用资源少&lt;/strong&gt;&lt;br /&gt; 多线程异步 IO 模式，cache 缓存查询结果。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;主流系统官方支持&lt;/strong&gt;&lt;br /&gt; 主流路由系统官方软件源安装smartdns。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;架构&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/pymumu/test/releases/download/blob/architecture.png&quot; alt=&quot;Architecture&quot; /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;SmartDNS 接收本地网络设备的DNS 查询请求，如 PC、手机的查询请求；&lt;/li&gt; 
 &lt;li&gt;然后将查询请求发送到多个上游 DNS 服务器，可支持 UDP 标准端口或非标准端口查询，以及 TCP 查询；&lt;/li&gt; 
 &lt;li&gt;上游 DNS 服务器返回域名对应的服务器 IP 地址列表，SmartDNS 则会检测从本地网络访问速度最快的服务器 IP；&lt;/li&gt; 
 &lt;li&gt;最后将访问速度最快的服务器 IP 返回给本地客户端。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;编译&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;代码编译：&lt;/p&gt; &lt;p&gt;SmartDNS 提供了编译软件包的脚本（&lt;code&gt;package/build-pkg.sh&lt;/code&gt;），支持编译 LuCI、Debian、OpenWrt 和 Optware 安装包。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;文档编译：&lt;/p&gt; &lt;p&gt;文档分支为&lt;code&gt;doc&lt;/code&gt;，安装&lt;code&gt;mkdocs&lt;/code&gt;工具后，执行&lt;code&gt;mkdocs build&lt;/code&gt;编译。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;捐赠&lt;/h2&gt; 
&lt;p&gt;如果你觉得此项目对你有帮助，请捐助我们，使项目能持续发展和更加完善。&lt;/p&gt; 
&lt;h3&gt;PayPal 贝宝&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://paypal.me/PengNick/&quot;&gt;&lt;img src=&quot;https://cdn.rawgit.com/twolfson/paypal-github-button/1.0.0/dist/button.svg?sanitize=true&quot; alt=&quot;Support via PayPal&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;AliPay 支付宝&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pymumu/smartdns/master/doc/alipay_donate.jpg&quot; alt=&quot;alipay&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;WeChat Pay 微信支付&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pymumu/smartdns/master/doc/wechat_donate.jpg&quot; alt=&quot;wechat&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;开源声明&lt;/h2&gt; 
&lt;p&gt;SmartDNS 基于 GPL V3 协议开源。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>valinet/ExplorerPatcher</title>
      <link>https://github.com/valinet/ExplorerPatcher</link>
      <description>&lt;p&gt;This project aims to enhance the working environment on Windows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ExplorerPatcher&lt;/h1&gt; 
&lt;p&gt;This project aims to enhance the working environment on Windows.&lt;/p&gt; 
&lt;h2&gt;How to?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Follow the antivirus configuration instructions and download the latest version of the setup program in &lt;a href=&quot;https://github.com/valinet/ExplorerPatcher/releases/latest&quot;&gt;here&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Choose &lt;code&gt;ep_setup.exe&lt;/code&gt; if your device uses an Intel or AMD processor, or &lt;code&gt;ep_setup_arm64.exe&lt;/code&gt; if your device uses a Snapdragon processor.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Run the installer. It will automatically prompt for elevation, after which it will close &lt;code&gt;explorer.exe&lt;/code&gt; and install the necessary files. When done, you will see the desktop again and the Windows 10 taskbar.&lt;/li&gt; 
 &lt;li&gt;Right-click the taskbar and choose &quot;Properties&quot;.&lt;/li&gt; 
 &lt;li&gt;To change the taskbar style, go to the &quot;Taskbar&quot; section and look for &quot;Taskbar style&quot;.&lt;/li&gt; 
 &lt;li&gt;To use the Windows 10 Start menu, go to the &quot;Start menu&quot; section and change the Start menu style to Windows 10.&lt;/li&gt; 
 &lt;li&gt;To use the Windows 10 Alt+Tab, go to the &quot;Window switcher&quot; section and change the &quot;Window switcher (Alt+tab) style&quot; to Windows 10.&lt;/li&gt; 
 &lt;li&gt;Feel free to check other configuration options.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;That&#39;s it!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some features may be unavailable on some Windows versions.&lt;/p&gt; 
&lt;h2&gt;Uninstalling&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Right click the taskbar then click &quot;Properties&quot; or search for &quot;ExplorerPatcher&quot;, and go to &quot;Uninstall&quot; section or&lt;/li&gt; 
 &lt;li&gt;Use &quot;Programs and Features&quot; in Control Panel, or &quot;Apps and features&quot; in the Settings app or&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;ep_setup.exe /uninstall&lt;/code&gt; or&lt;/li&gt; 
 &lt;li&gt;Rename &lt;code&gt;ep_setup.exe&lt;/code&gt; to &lt;code&gt;ep_uninstall.exe&lt;/code&gt; and run that.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Updating&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The program features built-in updates: go to &quot;Properties&quot; - &quot;Updates&quot; to configure, check for and install the latest updates. Learn more &lt;a href=&quot;https://github.com/valinet/ExplorerPatcher/wiki/Configure-updates&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Download the latest version&#39;s &lt;a href=&quot;https://github.com/valinet/ExplorerPatcher/releases/latest/download/ep_setup.exe&quot;&gt;setup file for x64&lt;/a&gt; or &lt;a href=&quot;https://github.com/valinet/ExplorerPatcher/releases/latest/download/ep_setup_arm64.exe&quot;&gt;setup file for ARM64&lt;/a&gt; and simply run it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;If you find this project essential to your daily life, please consider donating to support the development through the &lt;a href=&quot;https://github.com/valinet/ExplorerPatcher?sponsor&quot;&gt;Sponsor&lt;/a&gt; button at the top of this page, so that we can continue to keep supporting newer Windows builds.&lt;/p&gt; 
&lt;h2&gt;Discord Server&lt;/h2&gt; 
&lt;p&gt;Join our Discord server if you need support, want to chat regarding this project, or just want to hang out with us!&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://discord.gg/gsPcfqHTD2&quot;&gt;&lt;img src=&quot;https://discordapp.com/api/guilds/1155912047897350204/widget.png?style=shield&quot; alt=&quot;Join on Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/valinet/ExplorerPatcher/wiki&quot;&gt;Read more&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ValdikSS/GoodbyeDPI</title>
      <link>https://github.com/ValdikSS/GoodbyeDPI</link>
      <description>&lt;p&gt;GoodbyeDPI — Deep Packet Inspection circumvention utility (for Windows)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GoodbyeDPI — Deep Packet Inspection circumvention utility&lt;/h1&gt; 
&lt;p&gt;This software designed to bypass Deep Packet Inspection systems found in many Internet Service Providers which block access to certain websites.&lt;/p&gt; 
&lt;p&gt;It handles DPI connected using optical splitter or port mirroring (&lt;strong&gt;Passive DPI&lt;/strong&gt;) which do not block any data but just replying faster than requested destination, and &lt;strong&gt;Active DPI&lt;/strong&gt; connected in sequence.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Windows 7, 8, 8.1, 10 or 11&lt;/strong&gt; with administrator privileges required.&lt;/p&gt; 
&lt;h1&gt;Quick start&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;For Russia&lt;/strong&gt;: Download &lt;a href=&quot;https://github.com/ValdikSS/GoodbyeDPI/releases&quot;&gt;latest version from Releases page&lt;/a&gt;, unpack the file and run &lt;strong&gt;1_russia_blacklist_dnsredir.cmd&lt;/strong&gt; script.&lt;/li&gt; 
 &lt;li&gt;For other countries: Download &lt;a href=&quot;https://github.com/ValdikSS/GoodbyeDPI/releases&quot;&gt;latest version from Releases page&lt;/a&gt;, unpack the file and run &lt;strong&gt;2_any_country_dnsredir.cmd&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These scripts launch GoodbyeDPI in recommended mode with DNS resolver redirection to Yandex DNS on non-standard port (to prevent DNS poisoning).&lt;br /&gt; If it works — congratulations! You can use it as-is or configure further.&lt;/p&gt; 
&lt;h1&gt;How to use&lt;/h1&gt; 
&lt;p&gt;Download &lt;a href=&quot;https://github.com/ValdikSS/GoodbyeDPI/releases&quot;&gt;latest version from Releases page&lt;/a&gt; and run.&lt;/p&gt; 
&lt;h2&gt;Supported arguments&lt;/h2&gt; 
&lt;p&gt;To get relevant information about your version of the program, use the -h (--help) argument at startup.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Usage: goodbyedpi.exe [OPTION...]
 -p          block passive DPI
 -q          block QUIC/HTTP3
 -r          replace Host with hoSt
 -s          remove space between host header and its value
 -m          mix Host header case (test.com -&amp;gt; tEsT.cOm)
 -f &amp;lt;value&amp;gt;  set HTTP fragmentation to value
 -k &amp;lt;value&amp;gt;  enable HTTP persistent (keep-alive) fragmentation and set it to value
 -n          do not wait for first segment ACK when -k is enabled
 -e &amp;lt;value&amp;gt;  set HTTPS fragmentation to value
 -a          additional space between Method and Request-URI (enables -s, may break sites)
 -w          try to find and parse HTTP traffic on all processed ports (not only on port 80)
 --port        &amp;lt;value&amp;gt;    additional TCP port to perform fragmentation on (and HTTP tricks with -w)
 --ip-id       &amp;lt;value&amp;gt;    handle additional IP ID (decimal, drop redirects and TCP RSTs with this ID).
                          This option can be supplied multiple times.
 --dns-addr    &amp;lt;value&amp;gt;    redirect UDP DNS requests to the supplied IP address (experimental)
 --dns-port    &amp;lt;value&amp;gt;    redirect UDP DNS requests to the supplied port (53 by default)
 --dnsv6-addr  &amp;lt;value&amp;gt;    redirect UDPv6 DNS requests to the supplied IPv6 address (experimental)
 --dnsv6-port  &amp;lt;value&amp;gt;    redirect UDPv6 DNS requests to the supplied port (53 by default)
 --dns-verb               print verbose DNS redirection messages
 --blacklist   &amp;lt;txtfile&amp;gt;  perform circumvention tricks only to host names and subdomains from
                          supplied text file (HTTP Host/TLS SNI).
                          This option can be supplied multiple times.
 --allow-no-sni           perform circumvention if TLS SNI can&#39;t be detected with --blacklist enabled.
 --frag-by-sni            if SNI is detected in TLS packet, fragment the packet right before SNI value.
 --set-ttl     &amp;lt;value&amp;gt;    activate Fake Request Mode and send it with supplied TTL value.
                          DANGEROUS! May break websites in unexpected ways. Use with care (or --blacklist).
 --auto-ttl    [a1-a2-m]  activate Fake Request Mode, automatically detect TTL and decrease
                          it based on a distance. If the distance is shorter than a2, TTL is decreased
                          by a2. If it&#39;s longer, (a1; a2) scale is used with the distance as a weight.
                          If the resulting TTL is more than m(ax), set it to m.
                          Default (if set): --auto-ttl 1-4-10. Also sets --min-ttl 3.
                          DANGEROUS! May break websites in unexpected ways. Use with care (or --blacklist).
 --min-ttl     &amp;lt;value&amp;gt;    minimum TTL distance (128/64 - TTL) for which to send Fake Request
                          in --set-ttl and --auto-ttl modes.
 --wrong-chksum           activate Fake Request Mode and send it with incorrect TCP checksum.
                          May not work in a VM or with some routers, but is safer than set-ttl.
 --wrong-seq              activate Fake Request Mode and send it with TCP SEQ/ACK in the past.
 --native-frag            fragment (split) the packets by sending them in smaller packets, without
                          shrinking the Window Size. Works faster (does not slow down the connection)
                          and better.
 --reverse-frag           fragment (split) the packets just as --native-frag, but send them in the
                          reversed order. Works with the websites which could not handle segmented
                          HTTPS TLS ClientHello (because they receive the TCP flow &quot;combined&quot;).
 --fake-from-hex &amp;lt;value&amp;gt;  Load fake packets for Fake Request Mode from HEX values (like 1234abcDEF).
                          This option can be supplied multiple times, in this case each fake packet
                          would be sent on every request in the command line argument order.
 --fake-with-sni &amp;lt;value&amp;gt;  Generate fake packets for Fake Request Mode with given SNI domain name.
                          The packets mimic Mozilla Firefox 130 TLS ClientHello packet
                          (with random generated fake SessionID, key shares and ECH grease).
                          Can be supplied multiple times for multiple fake packets.
 --fake-gen &amp;lt;value&amp;gt;       Generate random-filled fake packets for Fake Request Mode, value of them
                          (up to 30).
 --fake-resend &amp;lt;value&amp;gt;    Send each fake packet value number of times.
                          Default: 1 (send each packet once).
 --max-payload [value]    packets with TCP payload data more than [value] won&#39;t be processed.
                          Use this option to reduce CPU usage by skipping huge amount of data
                          (like file transfers) in already established sessions.
                          May skip some huge HTTP requests from being processed.
                          Default (if set): --max-payload 1200.


LEGACY modesets:
 -1          -p -r -s -f 2 -k 2 -n -e 2 (most compatible mode)
 -2          -p -r -s -f 2 -k 2 -n -e 40 (better speed for HTTPS yet still compatible)
 -3          -p -r -s -e 40 (better speed for HTTP and HTTPS)
 -4          -p -r -s (best speed)

Modern modesets (more stable, more compatible, faster):
 -5          -f 2 -e 2 --auto-ttl --reverse-frag --max-payload
 -6          -f 2 -e 2 --wrong-seq --reverse-frag --max-payload
 -7          -f 2 -e 2 --wrong-chksum --reverse-frag --max-payload
 -8          -f 2 -e 2 --wrong-seq --wrong-chksum --reverse-frag --max-payload
 -9          -f 2 -e 2 --wrong-seq --wrong-chksum --reverse-frag --max-payload -q (this is the default)

 Note: combination of --wrong-seq and --wrong-chksum generates two different fake packets.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to check&lt;/h2&gt; 
&lt;p&gt;To check if your ISP&#39;s DPI could be circumvented, first make sure that your provider does not poison DNS answers by enabling &quot;Secure DNS (DNS over HTTPS)&quot; option in your browser.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Chrome&lt;/strong&gt;: Settings → &lt;a href=&quot;chrome://settings/security&quot;&gt;Privacy and security&lt;/a&gt; → Use secure DNS → With: NextDNS&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Firefox&lt;/strong&gt;: &lt;a href=&quot;about:preferences&quot;&gt;Settings&lt;/a&gt; → Network Settings → Enable DNS over HTTPS → Use provider: NextDNS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then run the &lt;code&gt;goodbyedpi.exe&lt;/code&gt; executable without any options. If it works — congratulations! You can use it as-is or configure further, for example by using &lt;code&gt;--blacklist&lt;/code&gt; option if the list of blocked websites is known and available for your country.&lt;/p&gt; 
&lt;p&gt;If your provider intercepts DNS requests, you may want to use &lt;code&gt;--dns-addr&lt;/code&gt; option to a public DNS resolver running on non-standard port (such as Yandex DNS &lt;code&gt;77.88.8.8:1253&lt;/code&gt;) or configure DNS over HTTPS/TLS using third-party applications.&lt;/p&gt; 
&lt;p&gt;Check the .cmd scripts and modify it according to your preference and network conditions.&lt;/p&gt; 
&lt;h1&gt;How does it work&lt;/h1&gt; 
&lt;h3&gt;Passive DPI&lt;/h3&gt; 
&lt;p&gt;Most Passive DPI send HTTP 302 Redirect if you try to access blocked website over HTTP and TCP Reset in case of HTTPS, faster than destination website. Packets sent by DPI usually have IP Identification field equal to &lt;code&gt;0x0000&lt;/code&gt; or &lt;code&gt;0x0001&lt;/code&gt;, as seen with Russian providers. These packets, if they redirect you to another website (censorship page), are blocked by GoodbyeDPI.&lt;/p&gt; 
&lt;h3&gt;Active DPI&lt;/h3&gt; 
&lt;p&gt;Active DPI is more tricky to fool. Currently the software uses 7 methods to circumvent Active DPI:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;TCP-level fragmentation for first data packet&lt;/li&gt; 
 &lt;li&gt;TCP-level fragmentation for persistent (keep-alive) HTTP sessions&lt;/li&gt; 
 &lt;li&gt;Replacing &lt;code&gt;Host&lt;/code&gt; header with &lt;code&gt;hoSt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Removing space between header name and value in &lt;code&gt;Host&lt;/code&gt; header&lt;/li&gt; 
 &lt;li&gt;Adding additional space between HTTP Method (GET, POST etc) and URI&lt;/li&gt; 
 &lt;li&gt;Mixing case of Host header value&lt;/li&gt; 
 &lt;li&gt;Sending fake HTTP/HTTPS packets with low Time-To-Live value, incorrect checksum or incorrect TCP Sequence/Acknowledgement numbers to fool DPI and prevent delivering them to the destination&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These methods should not break any website as they&#39;re fully compatible with TCP and HTTP standards, yet it&#39;s sufficient to prevent DPI data classification and to circumvent censorship. Additional space may break some websites, although it&#39;s acceptable by HTTP/1.1 specification (see 19.3 Tolerant Applications).&lt;/p&gt; 
&lt;p&gt;The program loads WinDivert driver which uses Windows Filtering Platform to set filters and redirect packets to the userspace. It&#39;s running as long as console window is visible and terminates when you close the window.&lt;/p&gt; 
&lt;h1&gt;How to build from source&lt;/h1&gt; 
&lt;p&gt;This project can be build using &lt;strong&gt;GNU Make&lt;/strong&gt; and &lt;a href=&quot;https://mingw-w64.org&quot;&gt;&lt;strong&gt;mingw&lt;/strong&gt;&lt;/a&gt;. The only dependency is &lt;a href=&quot;https://github.com/basil00/Divert&quot;&gt;WinDivert&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To build x86 exe run:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;make CPREFIX=i686-w64-mingw32- WINDIVERTHEADERS=/path/to/windivert/include WINDIVERTLIBS=/path/to/windivert/x86&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;And for x86_64:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;make CPREFIX=x86_64-w64-mingw32- BIT64=1 WINDIVERTHEADERS=/path/to/windivert/include WINDIVERTLIBS=/path/to/windivert/amd64&lt;/code&gt;&lt;/p&gt; 
&lt;h1&gt;How to install as Windows Service&lt;/h1&gt; 
&lt;p&gt;Check examples in &lt;code&gt;service_install_russia_blacklist.cmd&lt;/code&gt;, &lt;code&gt;service_install_russia_blacklist_dnsredir.cmd&lt;/code&gt; and &lt;code&gt;service_remove.cmd&lt;/code&gt; scripts.&lt;/p&gt; 
&lt;p&gt;Modify them according to your own needs.&lt;/p&gt; 
&lt;h1&gt;Known issues&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Horribly outdated Windows 7 installations are not able to load WinDivert driver due to missing support for SHA256 digital signatures. Install KB3033929 &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=46078&quot;&gt;x86&lt;/a&gt;/&lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=46148&quot;&gt;x64&lt;/a&gt;, or better, update the whole system using Windows Update.&lt;/li&gt; 
 &lt;li&gt;Intel/Qualcomm Killer network cards: &lt;code&gt;Advanced Stream Detect&lt;/code&gt; in Killer Control Center is incompatible with GoodbyeDPI, &lt;a href=&quot;https://github.com/ValdikSS/GoodbyeDPI/issues/541#issuecomment-2296038239&quot;&gt;disable it&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;QUIK trading software &lt;a href=&quot;https://github.com/ValdikSS/GoodbyeDPI/issues/677#issuecomment-2390595606&quot;&gt;may interfere with GoodbyeDPI&lt;/a&gt;. First start QUIK, then GoodbyeDPI.&lt;/li&gt; 
 &lt;li&gt;&lt;del&gt;Some SSL/TLS stacks unable to process fragmented ClientHello packets, and HTTPS websites won&#39;t open. Bug: &lt;a href=&quot;https://github.com/ValdikSS/GoodbyeDPI/issues/4&quot;&gt;#4&lt;/a&gt;, &lt;a href=&quot;https://github.com/ValdikSS/GoodbyeDPI/issues/64&quot;&gt;#64&lt;/a&gt;.&lt;/del&gt; Fragmentation issues are fixed in v0.1.7.&lt;/li&gt; 
 &lt;li&gt;&lt;del&gt;ESET Antivirus is incompatible with WinDivert driver &lt;a href=&quot;https://github.com/ValdikSS/GoodbyeDPI/issues/91&quot;&gt;#91&lt;/a&gt;. This is most probably antivirus bug, not WinDivert.&lt;/del&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Similar projects&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/bol-van/zapret&quot;&gt;zapret&lt;/a&gt;&lt;/strong&gt; by @bol-van (for MacOS, Linux and Windows)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/SadeghHayeri/GreenTunnel&quot;&gt;Green Tunnel&lt;/a&gt;&lt;/strong&gt; by @SadeghHayeri (for MacOS, Linux and Windows)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/nomoresat/DPITunnel-cli&quot;&gt;DPI Tunnel CLI&lt;/a&gt;&lt;/strong&gt; by @zhenyolka (for Linux and routers)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/nomoresat/DPITunnel-android&quot;&gt;DPI Tunnel for Android&lt;/a&gt;&lt;/strong&gt; by @zhenyolka (for Android)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/krlvm/PowerTunnel&quot;&gt;PowerTunnel&lt;/a&gt;&lt;/strong&gt; by @krlvm (for Windows, MacOS and Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/krlvm/PowerTunnel-Android&quot;&gt;PowerTunnel for Android&lt;/a&gt;&lt;/strong&gt; by @krlvm (for Android)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/xvzc/SpoofDPI&quot;&gt;SpoofDPI&lt;/a&gt;&lt;/strong&gt; by @xvzc (for macOS and Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/r3pr3ss10n/SpoofDPI-Platform&quot;&gt;SpoofDPI-Platform&lt;/a&gt;&lt;/strong&gt; by @r3pr3ss10n (for Android, macOS, Windows)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/macronut/ghostcp&quot;&gt;GhosTCP&lt;/a&gt;&lt;/strong&gt; by @macronut (for Windows)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/hufrea/byedpi&quot;&gt;ByeDPI&lt;/a&gt;&lt;/strong&gt; for Linux/Windows + &lt;strong&gt;&lt;a href=&quot;https://github.com/dovecoteescapee/ByeDPIAndroid/&quot;&gt;ByeDPIAndroid&lt;/a&gt;&lt;/strong&gt; for Android (no root)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/Waujito/youtubeUnblock/&quot;&gt;youtubeUnblock&lt;/a&gt;&lt;/strong&gt; by @Waujito (for OpenWRT/Entware routers and Linux)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Kudos&lt;/h1&gt; 
&lt;p&gt;Thanks @basil00 for &lt;a href=&quot;https://github.com/basil00/Divert&quot;&gt;WinDivert&lt;/a&gt;. That&#39;s the main part of this program.&lt;/p&gt; 
&lt;p&gt;Thanks for every &lt;a href=&quot;https://github.com/ValdikSS/blockcheck&quot;&gt;BlockCheck&lt;/a&gt; contributor. It would be impossible to understand DPI behaviour without this utility.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TEN-framework/ten-framework</title>
      <link>https://github.com/TEN-framework/ten-framework</link>
      <description>&lt;p&gt;Open-source framework for conversational voice AI agents&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;a name=&quot;readme-top&quot;&gt;&lt;/a&gt; 
 &lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7c8f72d7-3993-4d01-8504-b71578a22944&quot; alt=&quot;TEN banner&quot; /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/ten-framework/ten-framework?color=369eff&amp;amp;labelColor=gray&amp;amp;logo=github&amp;amp;style=flat-square&quot; alt=&quot;TEN Releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-date/ten-framework/ten-framework?labelColor=gray&amp;amp;style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/discussions/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/discussions/TEN-framework/ten_framework?labelColor=gray&amp;amp;color=%20%23f79009&quot; alt=&quot;Discussion posts&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/graphs/commit-activity&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/TEN-framework/ten_framework?labelColor=gray&amp;amp;color=pink&quot; alt=&quot;Commits&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-search?query=repo%3ATEN-framework%2Ften-framework%20is%3Aclosed&amp;amp;label=issues%20closed&amp;amp;labelColor=gray&amp;amp;color=green&quot; alt=&quot;Issues closed&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/graphs/contributors&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/contributors/ten-framework/ten-framework?color=c4f042&amp;amp;labelColor=gray&amp;amp;style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/pulls&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome!-brightgreen.svg?style=flat-square&quot; alt=&quot;PRs Welcome&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten_framework/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-Apache_2.0_with_certain_conditions-blue.svg?labelColor=%20%23155EEF&amp;amp;color=%20%23528bff&quot; alt=&quot;GitHub license&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://deepwiki.com/TEN-framework/TEN-framework&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg?sanitize=true&quot; alt=&quot;Ask DeepWiki&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://readmex.com/TEN-framework/ten-framework&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/CodePhiliaX/resource-trusteeship/main/readmex.svg?sanitize=true&quot; alt=&quot;ReadmeX&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://GitHub.com/TEN-framework/ten_framework/watchers/?WT.mc_id=academic-105485-koreyst&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/watchers/TEN-framework/ten_framework?style=social&amp;amp;label=Watch&quot; alt=&quot;GitHub watchers&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/TEN-framework/ten_framework/network/?WT.mc_id=academic-105485-koreyst&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/TEN-framework/ten_framework?style=social&amp;amp;label=Fork&quot; alt=&quot;GitHub forks&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://GitHub.com/TEN-framework/ten_framework/stargazers/?WT.mc_id=academic-105485-koreyst&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/TEN-framework/ten_framework?style=social&amp;amp;label=Star&quot; alt=&quot;GitHub stars&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/README.md&quot;&gt;&lt;img alt=&quot;README in English&quot; src=&quot;https://img.shields.io/badge/English-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-CN.md&quot;&gt;&lt;img alt=&quot;简体中文操作指南&quot; src=&quot;https://img.shields.io/badge/简体中文-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-JP.md&quot;&gt;&lt;img alt=&quot;日本語のREADME&quot; src=&quot;https://img.shields.io/badge/日本語-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-KR.md&quot;&gt;&lt;img alt=&quot;README in 한국어&quot; src=&quot;https://img.shields.io/badge/한국어-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-ES.md&quot;&gt;&lt;img alt=&quot;README en Español&quot; src=&quot;https://img.shields.io/badge/Español-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-FR.md&quot;&gt;&lt;img alt=&quot;README en Français&quot; src=&quot;https://img.shields.io/badge/Français-lightgrey&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/raw/main/docs/README-IT.md&quot;&gt;&lt;img alt=&quot;README in Italiano&quot; src=&quot;https://img.shields.io/badge/Italiano-lightgrey&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://theten.ai&quot;&gt;Official Site&lt;/a&gt; • &lt;a href=&quot;https://theten.ai/docs/ten_agent/overview&quot;&gt;Documentation&lt;/a&gt; • &lt;a href=&quot;https://theten.ai/blog&quot;&gt;Blog&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://trendshift.io/repositories/11978&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/11978&quot; alt=&quot;TEN-framework%2Ften_framework | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;kbd&gt;Table of Contents&lt;/kbd&gt;&lt;/summary&gt; 
 &lt;h4&gt;Table of Contents&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-welcome-to-ten&quot;&gt;👋 Welcome to TEN&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-tman-designer&quot;&gt;🎨 TMAN Designer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-features&quot;&gt;✨ Features&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#1%EF%B8%8F%E2%83%A3-real-time-avatar&quot;&gt;1️⃣ Real-time Avatar&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#2%EF%B8%8F%E2%83%A3-real-time-voice-with-mcp-servers&quot;&gt;2️⃣ Real-time voice with MCP servers&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#3%EF%B8%8F%E2%83%A3-real-time-communication-with-hardware&quot;&gt;3️⃣ Real-time communication with hardware&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#4%EF%B8%8F%E2%83%A3-real-time-vision-and-real-time-screenshare-detection&quot;&gt;4️⃣ Real-time vision and real-time screenshare detection&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#5%EF%B8%8F%E2%83%A3-ten-with-other-llm-platforms&quot;&gt;5️⃣ TEN with other LLM platforms&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#6%EF%B8%8F%E2%83%A3-storyteller---ten-image-generation&quot;&gt;6️⃣ StoryTeller - TEN image generation&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-get-ten-agent-up-and-running&quot;&gt;👩‍💻 Get TEN Agent up and running&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%F0%9F%85%B0%EF%B8%8F-run-ten-agent-in-localhost&quot;&gt;🅰️ Run TEN Agent in &lt;code&gt;localhost&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%F0%9F%85%B1%EF%B8%8F-run-ten-agent-in-codespaceno-docker&quot;&gt;🅱️ Run TEN Agent in Codespace(no docker)&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%EF%B8%8F-ten-agent-self-hosting&quot;&gt;🛳️ TEN Agent Self Hosting&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%F0%9F%85%B0%EF%B8%8F-deploying-with-docker&quot;&gt;🅰️ Deploying with Docker&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#%F0%9F%85%B1%EF%B8%8F-deploying-with-other-cloud-services&quot;&gt;🅱️ Deploying with other cloud services&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-ten-ecosystem&quot;&gt;🌍 TEN Ecosystem&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-ask-questions&quot;&gt;❓ Ask Questions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-contributing&quot;&gt;🥰 Contributing&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#code-contributors&quot;&gt;Code Contributors&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#contribution-guidelines&quot;&gt;Contribution Guidelines&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;br /&gt; 
&lt;/details&gt; 
&lt;h2&gt;👋 Welcome to TEN&lt;/h2&gt; 
&lt;p&gt;TEN is a comprehensive open-source ecosystem for creating, customizing, and deploying real-time conversational AI agents with multimodal capabilities including voice, vision, and avatar interactions.&lt;/p&gt; 
&lt;p&gt;TEN includes &lt;a href=&quot;https://github.com/ten-framework/ten-framework&quot;&gt;TEN Framework&lt;/a&gt;, &lt;a href=&quot;https://github.com/ten-framework/ten-turn-detection&quot;&gt;TEN Turn Detection&lt;/a&gt;, &lt;a href=&quot;https://github.com/ten-framework/ten-vad&quot;&gt;TEN VAD&lt;/a&gt;, &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents/demo&quot;&gt;TEN Agent&lt;/a&gt;, &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/core/src/ten_manager/designer_frontend&quot;&gt;TMAN Designer&lt;/a&gt;, and &lt;a href=&quot;https://github.com/ten-framework/portal&quot;&gt;TEN Portal&lt;/a&gt;. Check out &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#-ten-ecosystem&quot;&gt;🌍 TEN Ecosystem&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;br /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Community Channel&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://twitter.com/intent/follow?screen_name=TenFramework&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/TenFramework?logo=X&amp;amp;color=%20%23f5f5f5&quot; alt=&quot;Follow on X&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Follow TEN Framework on X for updates and announcements&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.linkedin.com/company/ten-framework&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/LinkedIn-TEN_Framework-0A66C2?logo=linkedin-white&amp;amp;logoColor=fff&quot; alt=&quot;Follow on LinkedIn&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Follow TEN Framework on LinkedIn for updates and announcements&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://discord.gg/VnPftUzAMJ&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Discord-Join%20TEN%20Community-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&quot; alt=&quot;Discord TEN Community&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Join our Discord community to connect with developers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://huggingface.co/TEN-framework&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Hugging%20Face-TEN%20Framework-yellow?style=flat&amp;amp;logo=huggingface&quot; alt=&quot;Hugging Face Space&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Join our Hugging Face community to explore our spaces and models&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-agent/discussions/170&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/TEN_Framework-WeChat_Group-%2307C160?logo=wechat&amp;amp;labelColor=darkgreen&amp;amp;color=gray&quot; alt=&quot;WeChat&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Join our WeChat group for Chinese community discussions&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Star TEN Repositories&lt;/strong&gt; ⭐️&lt;/p&gt; 
 &lt;p&gt;Get instant notifications for new releases and updates. Your support helps us grow and improve TEN!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/eeebe996-8c14-4bf7-82ae-f1a1f7e30705&quot; alt=&quot;TEN star us gif&quot; /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;kbd&gt;Star History&lt;/kbd&gt;&lt;/summary&gt; 
 &lt;picture&gt; 
  &lt;img width=&quot;100%&quot; src=&quot;https://api.star-history.com/svg?repos=ten-framework/ten-framework&amp;amp;type=Date&quot; /&gt; 
 &lt;/picture&gt; 
&lt;/details&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;🎨 TMAN Designer&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/user-attachments/assets/44c6a087-ec7a-45b0-a084-dab5dac5e36b&quot;&gt;https://github.com/user-attachments/assets/44c6a087-ec7a-45b0-a084-dab5dac5e36b&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;TMAN Designer&lt;/h3&gt; 
&lt;p&gt;TMAN Designer is a low/no-code option to create voice agents with an easy-to-use workflow UI. It can load apps and graphs, and includes an online editor, log viewer, and much more.&lt;/p&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://theten.ai/blog/tman-designer-of-ten-framework&quot;&gt;this blog&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/c6702995-de94-4d3e-8cae-af097f087ac1&quot; alt=&quot;TEN Agent with Trulience&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;1️⃣ Real-time Avatar&lt;/h3&gt; 
&lt;p&gt;Build engaging AI avatars with TEN Agent using &lt;a href=&quot;https://trulience.com&quot;&gt;Trulience&lt;/a&gt;&#39;s diverse collection of free avatar options. To get it up and running, you only need 2 steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Follow the README to finish setting up and running the Playground&lt;/li&gt; 
 &lt;li&gt;Enter the avatar ID and &lt;a href=&quot;https://trulience.com/docs#/authentication/jwt-tokens/jwt-tokens?id=use-your-custom-userid&quot;&gt;token&lt;/a&gt; you get from &lt;a href=&quot;https://trulience.com&quot;&gt;Trulience&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/afb77ad3-9c23-452f-b870-216687779017&quot; alt=&quot;TEN with MCP servers&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;2️⃣ Real-time voice with MCP servers&lt;/h3&gt; 
&lt;p&gt;TEN Agent now integrates seamlessly with MCP servers, expanding its LLM capabilities. To get started:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open the Module Picker in Playground&lt;/li&gt; 
 &lt;li&gt;Add the MCP server tool for LLM integration&lt;/li&gt; 
 &lt;li&gt;Paste a URL from your MCP server in the extension&lt;/li&gt; 
 &lt;li&gt;Start a realtime conversation with TEN Agent&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This integration allows you to leverage MCP&#39;s diverse servers offerings while maintaining TEN Agent&#39;s powerful conversational abilities.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/user-attachments/assets/78647eef-2d66-44e6-99a8-1918a940fb9f&quot;&gt;https://github.com/user-attachments/assets/78647eef-2d66-44e6-99a8-1918a940fb9f&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3️⃣ Real-time communication with hardware&lt;/h3&gt; 
&lt;p&gt;TEN Agent is now running on the Espressif ESP32-S3 Korvo V3 development board, an excellent way to integrate realtime communication with LLM on hardware.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents/esp32-client&quot;&gt;integration guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/a1addb02-a450-47be-8cb2-d25e3b574f53&quot; alt=&quot;Real-time Vision&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;4️⃣ Real-time vision and real-time screenshare detection&lt;/h3&gt; 
&lt;p&gt;Try Google Gemini Multimodal Live API with realtime vision and realtime screenshare detection capabilities, it is a ready-to-use extension, along with powerful tools like Weather Check and Web Search integrated perfectly into TEN Agent.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/234ff443-bef8-4cc4-9a10-09d6ec3f5bc1&quot; alt=&quot;TEN with Dify&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;5️⃣ TEN with other LLM platforms&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://theten.ai/docs/ten_agent/playground/use-cases/voice-assistant/run_dify#steps&quot;&gt;TEN Agent + Dify&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;TEN offers a great support to make the realtime interactive experience even better on other LLM platform as well, check out docs for more.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/fe28a549-ddb9-431e-9282-57539fb87371&quot; alt=&quot;TEN StoryTeller&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;6️⃣ StoryTeller - TEN image generation&lt;/h3&gt; 
&lt;p&gt;Experience the real-time image generation with StoryTeller, it is a ready-to-use extension, along with powerful tools like Weather Check and Web Search integrated perfectly into TEN.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;👩‍💻 Get TEN Agent up and running&lt;/h2&gt; 
&lt;h4&gt;🅰️ Run TEN Agent in localhost&lt;/h4&gt; 
&lt;h4&gt;Step ⓵ - Prerequisites&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Category&lt;/th&gt; 
   &lt;th&gt;Requirements&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Keys&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• Agora &lt;a href=&quot;https://docs.agora.io/en/video-calling/get-started/manage-agora-account?platform=web#create-an-agora-project&quot;&gt;App ID&lt;/a&gt; and &lt;a href=&quot;https://docs.agora.io/en/video-calling/get-started/manage-agora-account?platform=web#create-an-agora-project&quot;&gt;App Certificate&lt;/a&gt; (free minutes every month) &lt;br /&gt;• &lt;a href=&quot;https://openai.com/index/openai-api/&quot;&gt;OpenAI&lt;/a&gt; API key (any LLM that is compatible with OpenAI)&lt;br /&gt;• &lt;a href=&quot;https://deepgram.com/&quot;&gt;Deepgram&lt;/a&gt; ASR (free credits available with signup)&lt;br /&gt;• &lt;a href=&quot;https://elevenlabs.io/&quot;&gt;Elevenlabs&lt;/a&gt; TTS (free credits available with signup)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; / &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;Docker Compose&lt;/a&gt;&lt;br /&gt;• &lt;a href=&quot;https://nodejs.org/en&quot;&gt;Node.js(LTS) v18&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Minimum System Requirements&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;• CPU &amp;gt;= 2 Core&lt;br /&gt;• RAM &amp;gt;= 4 GB&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;macOS: Docker setting on Apple Silicon&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Uncheck &quot;Use Rosetta for x86/amd64 emulation&quot; in Docker settings, it may result in slower build times on ARM, but performance will be normal when deployed to x64 servers.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h4&gt;Step ⓶ - Build agent in VM&lt;/h4&gt; 
&lt;h5&gt;1. Clone down the repo,&lt;code&gt;cd&lt;/code&gt; to &lt;code&gt;ai-agents&lt;/code&gt; and create &lt;code&gt;.env&lt;/code&gt; file from &lt;code&gt;.env.example&lt;/code&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd ai_agents
cp ./.env.example ./.env
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;2. Setup Agora App ID and App Certificate in &lt;code&gt;.env&lt;/code&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;AGORA_APP_ID=
AGORA_APP_CERTIFICATE=
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;3. Start agent development containers&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;4. Enter container&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker exec -it ten_agent_dev bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;5. Build agent with the default &lt;code&gt;graph&lt;/code&gt; ( ~5min - ~8min)&lt;/h5&gt; 
&lt;p&gt;check the &lt;code&gt;/examples&lt;/code&gt; folder for more examples&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# use the chained voice assistant
task use AGENT=voice-assistant

# or use the speech-to-speech voice assistant realtime
task use AGENT=voice-assistant-realtime
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;6. Start the web server&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# run task build if you changed any local source code, this is necessary if you are working on languages which require compilation like TypeScript or Golang.
task build

task run
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h4&gt;Step ⓷ - Customize your agent with TMAN Designer&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open &lt;a href=&quot;http://localhost:49483&quot;&gt;localhost:49483&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Right-click on the STT, LLM, and TTS extensions.&lt;/li&gt; 
 &lt;li&gt;Open their properties and enter APIs respectively.&lt;/li&gt; 
 &lt;li&gt;Right-click the canvas and select &#39;Manage Apps&#39; to open the Apps Manager.&lt;/li&gt; 
 &lt;li&gt;Right under the Actions, click the ▶ to run the App.&lt;/li&gt; 
 &lt;li&gt;Check the &#39;Run with TEN Agent&#39; option and click the Run button.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h3&gt;🅱️ Run TEN Agent in Codespace(no docker)&lt;/h3&gt; 
&lt;p&gt;GitHub offers free Codespace for each repository, you can run the playground in Codespace without using Docker.Also, the speed of Codespace is much faster than localhost.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codespaces.new/ten-framework/ten-agent&quot;&gt;&lt;img src=&quot;https://github.com/codespaces/badge.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://theten.ai/docs/ten_agent/setup_development_env/setting_up_development_inside_codespace&quot;&gt;this guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;🛳️ TEN Agent Self Hosting&lt;/h2&gt; 
&lt;h4&gt;🅰️ Deploying with Docker&lt;/h4&gt; 
&lt;p&gt;Once you have customized your agent (either by using the TMAN Manager, Playground, or editing &lt;code&gt;property.json&lt;/code&gt; directly), you can deploy it by creating a release Docker image for your service.&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://theten.ai/docs/ten_agent/deploy_ten_agent/deploy_agent_service&quot;&gt;Deployment Guide&lt;/a&gt; for detailed information about deployment.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h4&gt;🅱️ Deploying with other cloud services&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;coming soon&lt;/em&gt;&lt;/p&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;🌍 TEN Ecosystem&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Preview&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/ten_framework&quot;&gt;&lt;strong&gt;🏚️ TEN Framework&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN is an open-source framework for real-time, multimodal conversational AI.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/ten_framework?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7c8f72d7-3993-4d01-8504-b71578a22944&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/ten-turn-detection&quot;&gt;&lt;strong>️🔂 TEN Turn Detection&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN is for full-duplex dialogue communication.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/ten-turn-detection?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/8d0ec716-5d0e-43e4-ad9a-d97b17305658&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/ten-vad&quot;&gt;&lt;strong&gt;🔉 TEN VAD&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN VAD is a low-latency, lightweight and high-performance streaming voice activity detector (VAD).&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/ten-vad?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/d45870e4-9453-4047-8163-08737f82863f&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/ai_agents&quot;&gt;&lt;strong&gt;🎙️ TEN Agent&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TEN Agent is a showcase of TEN Framewrok.&lt;br /&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/38de2207-939b-4702-a0aa-04491f5b5275&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-framework/tree/main/core/src/ten_manager/designer_frontend&quot;&gt;&lt;strong&gt;🎨 TMAN Designer&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;TMAN Designer is low/no code option to make a voice agent with easy to use workflow UI.&lt;br /&gt;&lt;br /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/804c3543-0a47-42b7-b40b-ef32b742fb8f&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ten-framework/portal&quot;&gt;&lt;strong&gt;📒 TEN Portal&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;The official site of TEN framework, it has documentation and blog.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;https://img.shields.io/github/stars/ten-framework/portal?color=ffcb47&amp;amp;labelColor=gray&amp;amp;style=flat-square&amp;amp;logo=github&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/e17d8aaa-5928-45dd-ac71-814928e26a89&quot; alt=&quot;&quot; /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;❓ Ask Questions&lt;/h2&gt; 
&lt;p&gt;TEN Framework is available on these AI-powered Q&amp;amp;A platforms. They can help you find answers quickly and accurately in multiple languages, covering everything from basic setup to advanced implementation details.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepWiki&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://deepwiki.com/TEN-framework/TEN-framework&quot;&gt;&lt;img src=&quot;https://deepwiki.com/badge.svg?sanitize=true&quot; alt=&quot;Ask DeepWiki&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ReadmeX&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://readmex.com/TEN-framework/ten-framework&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/CodePhiliaX/resource-trusteeship/main/readmex.svg?sanitize=true&quot; alt=&quot;ReadmeX&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🥰 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome all forms of open-source collaboration! Whether you&#39;re fixing bugs, adding features, improving documentation, or sharing ideas - your contributions help advance personalized AI tools. Check out our GitHub Issues and Projects to find ways to contribute and show your skills. Together, we can build something amazing!&lt;/p&gt; 
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Welcome all kinds of contributions&lt;/strong&gt; 🙏&lt;/p&gt; 
 &lt;p&gt;Join us in building TEN better! Every contribution makes a difference, from code to documentation. Share your TEN Agent projects on social media with to inspire others!&lt;/p&gt; 
 &lt;p&gt;Connect with one of the TEN maintainers &lt;a href=&quot;https://x.com/elliotchen100&quot;&gt;@elliotchen100&lt;/a&gt; on 𝕏 or &lt;a href=&quot;https://github.com/cyfyifanchen&quot;&gt;@cyfyifanchen&lt;/a&gt; on GitHub for project updates, discussions and collaboration opportunities.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h3&gt;Code Contributors&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/TEN-framework/ten-agent/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=TEN-framework/ten-agent&quot; alt=&quot;TEN&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contribution Guidelines&lt;/h3&gt; 
&lt;p&gt;Contributions are welcome! Please read the &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/docs/code-of-conduct/contributing.md&quot;&gt;contribution guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;The entire TEN framework (except for the folders explicitly listed below) is released under the Apache License, Version 2.0, with additional restrictions. For details, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file located in the root directory of the TEN framework.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The components within the &lt;code&gt;packages&lt;/code&gt; directory are released under the Apache License, Version 2.0. For details, please refer to the &lt;code&gt;LICENSE&lt;/code&gt; file located in each package&#39;s root directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The third-party libraries used by the TEN framework are listed and described in detail. For more information, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/third_party/&quot;&gt;third_party&lt;/a&gt; folder.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align=&quot;right&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/TEN-framework/ten-framework/main/#readme-top&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/-Back_to_top-gray?style=flat-square&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Genymobile/scrcpy</title>
      <link>https://github.com/Genymobile/scrcpy</link>
      <description>&lt;p&gt;Display and control your Android device&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;This GitHub repo (&lt;a href=&quot;https://github.com/Genymobile/scrcpy&quot;&gt;https://github.com/Genymobile/scrcpy&lt;/a&gt;) is the only official source for the project. Do not download releases from random websites, even if their name contains &lt;code&gt;scrcpy&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;scrcpy (v3.3.2)&lt;/h1&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/app/data/icon.svg?sanitize=true&quot; width=&quot;128&quot; height=&quot;128&quot; alt=&quot;scrcpy&quot; align=&quot;right&quot; /&gt; 
&lt;p&gt;&lt;em&gt;pronounced &quot;&lt;strong&gt;scr&lt;/strong&gt;een &lt;strong&gt;c&lt;/strong&gt;o&lt;strong&gt;py&lt;/strong&gt;&quot;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This application mirrors Android devices (video and audio) connected via USB or &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/connection.md#tcpip-wireless&quot;&gt;TCP/IP&lt;/a&gt; and allows control using the computer&#39;s keyboard and mouse. It does not require &lt;em&gt;root&lt;/em&gt; access or an app installed on the device. It works on &lt;em&gt;Linux&lt;/em&gt;, &lt;em&gt;Windows&lt;/em&gt;, and &lt;em&gt;macOS&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/assets/screenshot-debian-600.jpg&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;It focuses on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;lightness&lt;/strong&gt;: native, displays only the device screen&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;performance&lt;/strong&gt;: 30~120fps, depending on the device&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;quality&lt;/strong&gt;: 1920×1080 or above&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;low latency&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Genymobile/scrcpy/pull/646&quot;&gt;35~70ms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;low startup time&lt;/strong&gt;: ~1 second to display the first image&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;non-intrusiveness&lt;/strong&gt;: nothing is left installed on the Android device&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;user benefits&lt;/strong&gt;: no account, no ads, no internet required&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;freedom&lt;/strong&gt;: free and open source software&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Its features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/audio.md&quot;&gt;audio forwarding&lt;/a&gt; (Android 11+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/recording.md&quot;&gt;recording&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/virtual_display.md&quot;&gt;virtual display&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;mirroring with &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/device.md#turn-screen-off&quot;&gt;Android device screen off&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/control.md#copy-paste&quot;&gt;copy-paste&lt;/a&gt; in both directions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/video.md&quot;&gt;configurable quality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/camera.md&quot;&gt;camera mirroring&lt;/a&gt; (Android 12+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/v4l2.md&quot;&gt;mirroring as a webcam (V4L2)&lt;/a&gt; (Linux-only)&lt;/li&gt; 
 &lt;li&gt;physical &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/keyboard.md#physical-keyboard-simulation&quot;&gt;keyboard&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md#physical-mouse-simulation&quot;&gt;mouse&lt;/a&gt; simulation (HID)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/gamepad.md&quot;&gt;gamepad&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/otg.md&quot;&gt;OTG mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;and more…&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;The Android device requires at least API 21 (Android 5.0).&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/audio.md&quot;&gt;Audio forwarding&lt;/a&gt; is supported for API &amp;gt;= 30 (Android 11+).&lt;/p&gt; 
&lt;p&gt;Make sure you &lt;a href=&quot;https://developer.android.com/studio/debug/dev-options#enable&quot;&gt;enabled USB debugging&lt;/a&gt; on your device(s).&lt;/p&gt; 
&lt;p&gt;On some devices (especially Xiaomi), you might get the following error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Injecting input events requires the caller (or the source of the instrumentation, if any) to have the INJECT_EVENTS permission.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In that case, you need to enable &lt;a href=&quot;https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323&quot;&gt;an additional option&lt;/a&gt; &lt;code&gt;USB debugging (Security Settings)&lt;/code&gt; (this is an item different from &lt;code&gt;USB debugging&lt;/code&gt;) to control it using a keyboard and mouse. Rebooting the device is necessary once this option is set.&lt;/p&gt; 
&lt;p&gt;Note that USB debugging is not required to run scrcpy in &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/otg.md&quot;&gt;OTG mode&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get the app&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/linux.md&quot;&gt;Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/windows.md&quot;&gt;Windows&lt;/a&gt; (read &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/windows.md#run&quot;&gt;how to run&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/macos.md&quot;&gt;macOS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Must-know tips&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/video.md#size&quot;&gt;Reducing resolution&lt;/a&gt; may greatly improve performance (&lt;code&gt;scrcpy -m1024&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md#mouse-bindings&quot;&gt;&lt;em&gt;Right-click&lt;/em&gt;&lt;/a&gt; triggers &lt;code&gt;BACK&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md#mouse-bindings&quot;&gt;&lt;em&gt;Middle-click&lt;/em&gt;&lt;/a&gt; triggers &lt;code&gt;HOME&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;f&lt;/kbd&gt; toggles &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/window.md#fullscreen&quot;&gt;fullscreen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;There are many other &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/shortcuts.md&quot;&gt;shortcuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage examples&lt;/h2&gt; 
&lt;p&gt;There are a lot of options, &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/#user-documentation&quot;&gt;documented&lt;/a&gt; in separate pages. Here are just some common examples.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Capture the screen in H.265 (better quality), limit the size to 1920, limit the frame rate to 60fps, disable audio, and control the device by simulating a physical keyboard:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --video-codec=h265 --max-size=1920 --max-fps=60 --no-audio --keyboard=uhid
scrcpy --video-codec=h265 -m1920 --max-fps=60 --no-audio -K  # short version
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start VLC in a new virtual display (separate from the device display):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --new-display=1920x1080 --start-app=org.videolan.vlc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Record the device camera in H.265 at 1920x1080 (and microphone) to an MP4 file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --video-source=camera --video-codec=h265 --camera-size=1920x1080 --record=file.mp4
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Capture the device front camera and expose it as a webcam on the computer (on Linux):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --video-source=camera --camera-size=1920x1080 --camera-facing=front --v4l2-sink=/dev/video2 --no-playback
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Control the device without mirroring by simulating a physical keyboard and mouse (USB debugging not required):&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --otg
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Control the device using gamepad controllers plugged into the computer:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;scrcpy --gamepad=uhid
scrcpy -G  # short version
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;User documentation&lt;/h2&gt; 
&lt;p&gt;The application provides a lot of features and configuration options. They are documented in the following pages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/connection.md&quot;&gt;Connection&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/video.md&quot;&gt;Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/audio.md&quot;&gt;Audio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/control.md&quot;&gt;Control&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/keyboard.md&quot;&gt;Keyboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/mouse.md&quot;&gt;Mouse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/gamepad.md&quot;&gt;Gamepad&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/device.md&quot;&gt;Device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/window.md&quot;&gt;Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/recording.md&quot;&gt;Recording&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/virtual_display.md&quot;&gt;Virtual display&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/tunnels.md&quot;&gt;Tunnels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/otg.md&quot;&gt;OTG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/camera.md&quot;&gt;Camera&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/v4l2.md&quot;&gt;Video4Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/shortcuts.md&quot;&gt;Shortcuts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/FAQ.md&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Genymobile/scrcpy/wiki&quot;&gt;Translations&lt;/a&gt; (not necessarily up to date)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/build.md&quot;&gt;Build instructions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/doc/develop.md&quot;&gt;Developers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Articles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.rom1v.com/2018/03/introducing-scrcpy/&quot;&gt;Introducing scrcpy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/&quot;&gt;Scrcpy now works wirelessly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.rom1v.com/2023/03/scrcpy-2-0-with-audio/&quot;&gt;Scrcpy 2.0, with audio&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;You can open an &lt;a href=&quot;https://github.com/Genymobile/scrcpy/issues&quot;&gt;issue&lt;/a&gt; for bug reports, feature requests or general questions.&lt;/p&gt; 
&lt;p&gt;For bug reports, please read the &lt;a href=&quot;https://raw.githubusercontent.com/Genymobile/scrcpy/master/FAQ.md&quot;&gt;FAQ&lt;/a&gt; first, you might find a solution to your problem immediately.&lt;/p&gt; 
&lt;p&gt;You can also use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Reddit: &lt;a href=&quot;https://www.reddit.com/r/scrcpy&quot;&gt;&lt;code&gt;r/scrcpy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;BlueSky: &lt;a href=&quot;https://bsky.app/profile/scrcpy.bsky.social&quot;&gt;&lt;code&gt;@scrcpy.bsky.social&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/scrcpy_app&quot;&gt;&lt;code&gt;@scrcpy_app&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;I&#39;m &lt;a href=&quot;https://github.com/rom1v&quot;&gt;@rom1v&lt;/a&gt;, the author and maintainer of &lt;em&gt;scrcpy&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;If you appreciate this application, you can &lt;a href=&quot;https://blog.rom1v.com/about/#support-my-open-source-work&quot;&gt;support my open source work&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/sponsors/rom1v&quot;&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://liberapay.com/rom1v/&quot;&gt;Liberapay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://paypal.me/rom2v&quot;&gt;PayPal&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (C) 2018 Genymobile
Copyright (C) 2018-2025 Romain Vimont

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>documentdb/documentdb</title>
      <link>https://github.com/documentdb/documentdb</link>
      <description>&lt;p&gt;MongoDB-compatible database engine for cloud-native and open-source workloads. Built for scalability, performance, and developer productivity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Introduction&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;DocumentDB&lt;/code&gt; is a MongoDB compatible open source document database built on PostgreSQL. It offers a native implementation of a document-oriented NoSQL database, enabling seamless CRUD (Create, Read, Update, Delete) operations on BSON(Binary JSON) data types within a PostgreSQL framework. Beyond basic operations, DocumentDB empowers users to execute complex workloads, including full-text searches, geospatial queries, and vector search, delivering robust functionality and flexibility for diverse data management needs.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.postgresql.org/about/&quot;&gt;PostgreSQL&lt;/a&gt; is a powerful, open source object-relational database system that uses and extends the SQL language combined with many features that safely store and scale the most complicated data workloads.&lt;/p&gt; 
&lt;h2&gt;Components&lt;/h2&gt; 
&lt;p&gt;The project comprises of three components, which work together to support document operations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;pg_documentdb_core :&lt;/strong&gt; PostgreSQL extension introducing BSON datatype support and operations for native Postgres.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;pg_documentdb :&lt;/strong&gt; The public API surface for DocumentDB providing CRUD functionality on documents in the store.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;pg_documentdb_gw :&lt;/strong&gt; The gateway protocol translation layer that converts the user&#39;s MongoDB APIs into PostgreSQL queries.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why DocumentDB ?&lt;/h2&gt; 
&lt;p&gt;At DocumentDB, we believe in the power of open-source to drive innovation and collaboration. Our commitment to being a fully open-source MongoDB compatible document database means that we are dedicated to transparency, community involvement, and continuous improvement. We are open-sourced under the most permissive &lt;a href=&quot;https://opensource.org/license/mit&quot;&gt;MIT&lt;/a&gt; license, where developers and organizations alike have no restrictions incorporating the project into new and existing solutions of their own. DocumentDB introduces the BSON data type to PostgreSQL and provides APIs for seamless operation within native PostgreSQL, enhancing efficiency and aligning with operational advantages.&lt;/p&gt; 
&lt;p&gt;DocumentDB also provides a powerful on-premise solution, allowing organizations to maintain full control over their data and infrastructure. This flexibility ensures that you can deploy it in your own environment, meeting your specific security, compliance, and performance requirements. With DocumentDB, you get the best of both worlds: the innovation of open-source and the control of on-premise deployment.&lt;/p&gt; 
&lt;h3&gt;Based on Postgres&lt;/h3&gt; 
&lt;p&gt;We chose PostgreSQL as our platform for several reasons:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Proven Stability and Performance&lt;/strong&gt;: PostgreSQL has a long history of stability and performance, making it a trusted choice for mission-critical applications.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensibility&lt;/strong&gt;: The extensible architecture of PostgreSQL allows us to integrate a DocumentDB API on BSON data type seamlessly, providing the flexibility to handle both relational and document data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Active Community&lt;/strong&gt;: PostgreSQL has a vibrant and active community that continuously contributes to its development, ensuring that it remains at the forefront of database technology.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Features&lt;/strong&gt;: PostgreSQL offers a rich feature set, including advanced indexing, full-text search, and powerful querying capabilities, which enhance the functionality of DocumentDB.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compliance and Security&lt;/strong&gt;: PostgreSQL&#39;s robust security features and compliance with various standards makes it an ideal choice for organizations with stringent security and regulatory requirements.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/documentdb/documentdb/main/docs/v1/building.md&quot;&gt;Building From Source&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Python 3.7+&lt;/li&gt; 
 &lt;li&gt;pip package manager&lt;/li&gt; 
 &lt;li&gt;Docker&lt;/li&gt; 
 &lt;li&gt;Git (for cloning the repository)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Step 1: Install Python&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;
pip install pymongo

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Step 2. Install optional dependencies&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;
pip install dnspython

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Step 3. Setup DocumentDB using Docker&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;
   # Pull the latest DocumentDB Docker image
   docker pull ghcr.io/microsoft/documentdb/documentdb-local:latest

   # Tag the image for convenience
   docker tag ghcr.io/microsoft/documentdb/documentdb-local:latest documentdb

   # Run the container with your chosen username and password
   docker run -dt -p 10260:10260 --name documentdb-container documentdb --username &amp;lt;YOUR_USERNAME&amp;gt; --password &amp;lt;YOUR_PASSWORD&amp;gt;
   docker image rm -f ghcr.io/microsoft/documentdb/documentdb-local:latest || echo &quot;No existing documentdb image to remove&quot;

&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; During the transition to the Linux Foundation, Docker images may still be hosted on Microsoft&#39;s container registry. These will be migrated to the new DocumentDB organization as the transition completes. &lt;strong&gt;Note:&lt;/strong&gt; Replace &lt;code&gt;&amp;lt;YOUR_USERNAME&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;YOUR_PASSWORD&amp;gt;&lt;/code&gt; with your desired credentials. You must set these when creating the container for authentication to work.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Port Note:&lt;/strong&gt; Port &lt;code&gt;10260&lt;/code&gt; is used by default in these instructions to avoid conflicts with other local database services. You can use port &lt;code&gt;27017&lt;/code&gt; (the standard MongoDB port) or any other available port if you prefer. If you do, be sure to update the port number in both your &lt;code&gt;docker run&lt;/code&gt; command and your connection string accordingly.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Step 4: Initialize the pymongo client with the credentials from the previous step&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;
import pymongo

from pymongo import MongoClient

# Create a MongoDB client and open a connection to DocumentDB
client = pymongo.MongoClient(
    &#39;mongodb://&amp;lt;YOUR_USERNAME&amp;gt;:&amp;lt;YOUR_PASSWORD&amp;gt;@localhost:10260/?tls=true&amp;amp;tlsAllowInvalidCertificates=true&#39;
)

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Step 5: Create a database and collection&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;
quickStartDatabase = client[&quot;quickStartDatabase&quot;]
quickStartCollection = quickStartDatabase.create_collection(&quot;quickStartCollection&quot;)

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Step 6: Insert documents&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;
# Insert a single document
quickStartCollection.insert_one({
       &#39;name&#39;: &#39;John Doe&#39;,
       &#39;email&#39;: &#39;john@email.com&#39;,
       &#39;address&#39;: &#39;123 Main St, Anytown, USA&#39;,
       &#39;phone&#39;: &#39;555-1234&#39;
   })

# Insert multiple documents
quickStartCollection.insert_many([
    {
        &#39;name&#39;: &#39;Jane Smith&#39;,
        &#39;email&#39;: &#39;jane@email.com&#39;,
        &#39;address&#39;: &#39;456 Elm St, Othertown, USA&#39;,
        &#39;phone&#39;: &#39;555-5678&#39;
    },
    {
        &#39;name&#39;: &#39;Alice Johnson&#39;,
        &#39;email&#39;: &#39;alice@email.com&#39;,
        &#39;address&#39;: &#39;789 Oak St, Sometown, USA&#39;,
        &#39;phone&#39;: &#39;555-8765&#39;
    }
])

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Step 7: Read documents&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;
# Read all documents
for document in quickStartCollection.find():
    print(document)

# Read a specific document
singleDocumentReadResult = quickStartCollection.find_one({&#39;name&#39;: &#39;John Doe&#39;})
print(singleDocumentReadResult)

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Step 8: Run aggregation pipeline operation&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;
pipeline = [
    {&#39;$match&#39;: {&#39;name&#39;: &#39;Alice Johnson&#39;}},
    {&#39;$project&#39;: {
        &#39;_id&#39;: 0,
        &#39;name&#39;: 1,
        &#39;email&#39;: 1
    }}
]

results = quickStartCollection.aggregate(pipeline)
print(&quot;Aggregation results:&quot;)
for eachDocument in results:
    print(eachDocument)

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Helpful Links&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out our &lt;a href=&quot;https://documentdb.io&quot;&gt;website&lt;/a&gt; to stay up to date with the latest on the project.&lt;/li&gt; 
 &lt;li&gt;Check out our &lt;a href=&quot;https://documentdb.io/docs&quot;&gt;docs&lt;/a&gt; for MongoDB API compatibility, quickstarts and more.&lt;/li&gt; 
 &lt;li&gt;Contributors and users can join the &lt;a href=&quot;https://discord.gg/vH7bYu524D&quot;&gt;DocumentDB Discord channel&lt;/a&gt; for quick collaboration.&lt;/li&gt; 
 &lt;li&gt;Check out &lt;a href=&quot;https://github.com/FerretDB/FerretDB&quot;&gt;FerretDB&lt;/a&gt; and their integration of DocumentDB as a backend engine.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>BitMaker-hub/NerdMiner_v2</title>
      <link>https://github.com/BitMaker-hub/NerdMiner_v2</link>
      <description>&lt;p&gt;Improved version of first ESP32 NerdMiner&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NerdSoloMiner&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;The NerdSoloMiner v2&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This is a &lt;strong&gt;free and open source project&lt;/strong&gt; that let you try to reach a bitcoin block with a small piece of hardware.&lt;/p&gt; 
&lt;p&gt;The main aim of this project is to let you &lt;strong&gt;learn more about minery&lt;/strong&gt; and to have a beautiful piece of hardware in your desktop.&lt;/p&gt; 
&lt;p&gt;Original project &lt;a href=&quot;https://github.com/valerio-vaccaro/HAN&quot;&gt;https://github.com/valerio-vaccaro/HAN&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/BitMaker-hub/NerdMiner_v2/main/images/bgNerdMinerV2.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;TTGO T-Display S3 or any supported boards (check Build tutorial 👇)&lt;/li&gt; 
 &lt;li&gt;3D BOX &lt;a href=&quot;https://raw.githubusercontent.com/BitMaker-hub/NerdMiner_v2/main/3d_files/&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Project description&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;ESP32 implementing Stratum protocol&lt;/strong&gt; to mine on solo pool. Pool can be changed but originally works with &lt;a href=&quot;https://web.public-pool.io&quot;&gt;public-pool.io&lt;/a&gt; (where Nerdminers are supported).&lt;/p&gt; 
&lt;p&gt;This project was initialy developed using ESP32-S3, but currently support other boards. It uses WifiManager to modify miner settings and save them to SPIFF. The microMiner comes with several screens to monitor it&#39;s working procedure and also to show you network mining stats. Currently includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;NerdMiner Screen &amp;gt; Mining data of Nerdminer&lt;/li&gt; 
 &lt;li&gt;ClockMiner Screen &amp;gt; Fashion style clock miner&lt;/li&gt; 
 &lt;li&gt;GlobalStats Screen &amp;gt; Global minery stats and relevant data&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This miner is multicore and multithreads, both cores are used to mine and several threads are used to implementing stratum work and wifi stuff. Every time an stratum job notification is received miner update its current work to not create stale shares.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt; Miner is not seen by all standard pools due to its low share difficulty. You can check miner work remotely using specific pools specified down or seeing logs via UART.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Current project is still in developement and more features will be added&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Build Tutorial&lt;/h2&gt; 
&lt;h3&gt;Hardware requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;LILYGO T-Display S3 (original one) or any other supported boards&lt;/li&gt; 
 &lt;li&gt;3D BOX &lt;a href=&quot;https://raw.githubusercontent.com/BitMaker-hub/NerdMiner_v2/main/3d_files/&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Current Supported Boards&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;LILYGO T-Display S3 (&lt;a href=&quot;https://s.click.aliexpress.com/e/_Ddy7739&quot;&gt;Aliexpress link*&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-WROOM-32, ESP32-Devkit1.. (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DCzlUiX&quot;&gt;Aliexpress link*&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LILYGO T-QT pro (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DBQIr43&quot;&gt;Aliexpress link*&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LILYGO T-Display 1.14 (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DEqGvSJ&quot;&gt;Aliexpress link*&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LILYGO T-Display S3 AMOLED (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DmOIK6j&quot;&gt;Aliexpress link*&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LILYGO T-Display S3 AMOLED Touch (&lt;a href=&quot;https://www.lilygo.cc/products/t-display-s3-amoled?variant=43532279939253&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LILYGO T-Dongle S3 (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DmQCPyj&quot;&gt;Aliexpress link*&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-2432S028R 2,8&quot; (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DdXkvLv&quot;&gt;Aliexpress link*&lt;/a&gt; / Dev support: @nitroxgas / ⚡&lt;a href=&quot;mailto:jadeddonald78@walletofsatoshi.com&quot;&gt;jadeddonald78@walletofsatoshi.com&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-cam (&lt;a href=&quot;https://lastminuteengineers.com/getting-started-with-esp32-cam/&quot;&gt;Board Info&lt;/a&gt; / Dev support: @elmo128)&lt;/li&gt; 
 &lt;li&gt;M5-StampS3 (&lt;a href=&quot;https://s.click.aliexpress.com/e/_DevABY3&quot;&gt;Aliexpress link*&lt;/a&gt; / Dev support: @gyengus)&lt;/li&gt; 
 &lt;li&gt;Wemos Lolin S3 Mini (&lt;a href=&quot;https://docs.platformio.org/en/latest/boards/espressif32/lolin_s3_mini.html&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Wemos Lolin S2 Mini (&lt;a href=&quot;https://docs.platformio.org/en/latest/boards/espressif32/lolin_s2_mini.html&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Weact S3 Mini (&lt;a href=&quot;https://github.com/WeActStudio/WeActStudio.ESP32S3-MINI&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Weact ESP32-D0WD-V3 (&lt;a href=&quot;https://github.com/WeActStudio/WeActStudio.ESP32CoreBoard&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-S3 Devkit (&lt;a href=&quot;https://docs.platformio.org/en/latest/boards/espressif32/esp32-s3-devkitm-1.html&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-C3 Devkit (&lt;a href=&quot;https://docs.platformio.org/en/latest/boards/espressif32/esp32-c3-devkitm-1.html&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-C3 Super Mini (&lt;a href=&quot;https://docs.platformio.org/en/latest/boards/espressif32/seeed_xiao_esp32c3.html&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Waveshare ESP32-S3-GEEK (&lt;a href=&quot;https://www.waveshare.com/wiki/ESP32-S3-GEEK&quot;&gt;Board Info&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;LILYGO T-HMI (&lt;a href=&quot;https://s.click.aliexpress.com/e/_oFII4s2&quot;&gt;Aliexpress link*&lt;/a&gt;) / Dev support: @cosmicpsyop&lt;/li&gt; 
 &lt;li&gt;ESP32-C3 0.42 Inch OLED (&lt;a href=&quot;https://s.click.aliexpress.com/e/_oDmT4Id&quot;&gt;Aliexpress link*&lt;/a&gt; / Dev support: @mrthiti / ⚡ &lt;a href=&quot;mailto:wallet@thiti.dev&quot;&gt;wallet@thiti.dev&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ESP32-S3 0.42 Inch OLED (&lt;a href=&quot;https://s.click.aliexpress.com/e/_oFIMUoh&quot;&gt;Aliexpress link*&lt;/a&gt; / Dev support: @mrthiti / ⚡ &lt;a href=&quot;mailto:wallet@thiti.dev&quot;&gt;wallet@thiti.dev&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;*Affiliate links&lt;/p&gt; 
&lt;h3&gt;Flash firmware&lt;/h3&gt; 
&lt;h4&gt;microMiners Flashtool [Recommended]&lt;/h4&gt; 
&lt;p&gt;Easyiest way to flash firmware. Build your own miner using the folowing firwmare flash tool:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Get a TTGO T-display S3 or any other supported board&lt;/li&gt; 
 &lt;li&gt;Go to NM2 flasher online: &lt;a href=&quot;https://flasher.bitronics.store/&quot;&gt;https://flasher.bitronics.store/&lt;/a&gt; (recommend via Google Chrome incognito mode)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Standard tool&lt;/h4&gt; 
&lt;p&gt;Create your own miner using the online firwmare flash tool &lt;strong&gt;ESPtool&lt;/strong&gt; and one of the &lt;strong&gt;binary files&lt;/strong&gt; that you will find in the &lt;code&gt;bin&lt;/code&gt; folder. If you want you can compile the entire project using Arduino, PlatformIO or Expressif IDF.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Get a TTGO T-display S3 or any supported board&lt;/li&gt; 
 &lt;li&gt;Download this repository&lt;/li&gt; 
 &lt;li&gt;Go to ESPtool online: &lt;a href=&quot;https://espressif.github.io/esptool-js/&quot;&gt;https://espressif.github.io/esptool-js/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Load the firmware with the binary from one of the sub-folders of &lt;code&gt;bin&lt;/code&gt; corresponding to your board.&lt;/li&gt; 
 &lt;li&gt;Plug your board and select each file from the sub-folder (&lt;code&gt;.bin&lt;/code&gt; files).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Update firmware&lt;/h3&gt; 
&lt;p&gt;Update NerdMiner firmware following same flashing steps but only using the file 0x10000_firmware.bin.&lt;/p&gt; 
&lt;h4&gt;Build troubleshooting&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Online &lt;a href=&quot;https://espressif.github.io/esptool-js/&quot;&gt;ESP Tool&lt;/a&gt; works with chrome, chromium, brave&lt;/li&gt; 
 &lt;li&gt;ESPtool recommendations: use 115200bps&lt;/li&gt; 
 &lt;li&gt;Build errors &amp;gt; If during firmware download upload stops, it&#39;s recommended to enter the board in boot mode. Unplug cable, hold right bottom button and then plug cable. Try programming&lt;/li&gt; 
 &lt;li&gt;In extreme case you can &quot;Erase all flash&quot; on ESPtool to clean all current configuration before uploading firmware. There has been cases that experimented Wifi failures until this was made.&lt;/li&gt; 
 &lt;li&gt;In case of ESP32-WROOM Boards, could be necessary to put your board on boot mode. Hold boot button, press reset button and then program.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;NerdMiner configuration&lt;/h2&gt; 
&lt;p&gt;After programming, you will only need to setup your Wifi and BTC address.&lt;/p&gt; 
&lt;p&gt;Note: when BTC address of your selected wallet is not provided, mining will not be started.&lt;/p&gt; 
&lt;h4&gt;Wifi Accesspoint&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Connect to NerdMinerAP&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;AP: NerdMinerAP&lt;/li&gt; 
   &lt;li&gt;PASS: MineYourCoins&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set up your Wifi Network&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add your BTC address&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Change the password if needed&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If you are using public-pool.io and you want to set a custom name to your worker you can append a string with format &lt;em&gt;.yourworkername&lt;/em&gt; to the address&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;SD card (if available)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Format a SD card using Fat32.&lt;/li&gt; 
 &lt;li&gt;Create a file named &quot;config.json&quot; in your card&#39;s root, containing the the following structure. Adjust the settings to your needs:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;{  
  &quot;SSID&quot;: &quot;myWifiSSID&quot;,  
  &quot;WifiPW&quot;: &quot;myWifiPassword&quot;,  
  &quot;PoolUrl&quot;: &quot;public-pool.io&quot;,  
  &quot;PoolPort&quot;: 21496,
  &quot;PoolPassword&quot;: &quot;x&quot;,
  &quot;BtcWallet&quot;: &quot;walletID&quot;,  
  &quot;Timezone&quot;: 2,  
  &quot;SaveStats&quot;: false  
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt;Insert the SD card.&lt;/li&gt; 
 &lt;li&gt;Hold down the &quot;reset configurations&quot; button as described below to reset the configurations and/or boot without settings in your nvmemory.&lt;/li&gt; 
 &lt;li&gt;Power down to remove the SD card. It is not needed for mining.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Pool selection&lt;/h4&gt; 
&lt;p&gt;Recommended low difficulty share pools:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Pool URL&lt;/th&gt; 
   &lt;th&gt;Port&lt;/th&gt; 
   &lt;th&gt;Web URL&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;public-pool.io&lt;/td&gt; 
   &lt;td&gt;21496&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://web.public-pool.io&quot;&gt;https://web.public-pool.io&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Open Source Solo Bitcoin Mining Pool supporting open source miners&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pool.nerdminers.org&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://nerdminers.org&quot;&gt;https://nerdminers.org&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The official Nerdminer pool site - Mantained by @golden-guy&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pool.nerdminer.io&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://nerdminer.io&quot;&gt;https://nerdminer.io&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mantained by CHMEX&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pool.pyblock.xyz&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pool.pyblock.xyz/&quot;&gt;https://pool.pyblock.xyz/&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mantained by curly60e&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pool.sethforprivacy.com&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pool.sethforprivacy.com/&quot;&gt;https://pool.sethforprivacy.com/&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mantained by @sethforprivacy - public-pool fork&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pool.stompi.de&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;http://web.stompi.de&quot;&gt;http://web.stompi.de&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mantained by @odinstar - public-pool fork&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pool.solomining.de&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://pool.solomining.de/&quot;&gt;https://pool.solomining.de/&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mantained by &lt;a href=&quot;https://x.com/solo_mining&quot;&gt;https://x.com/solo_mining&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Other standard pools not compatible with low difficulty share:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Pool URL&lt;/th&gt; 
   &lt;th&gt;Port&lt;/th&gt; 
   &lt;th&gt;Web URL&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;solo.ckpool.org&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://solo.ckpool.org/&quot;&gt;https://solo.ckpool.org/&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;btc.zsolo.bid&lt;/td&gt; 
   &lt;td&gt;6057&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://zsolo.bid/en/btc-solo-mining-pool&quot;&gt;https://zsolo.bid/en/btc-solo-mining-pool&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;eu.stratum.slushpool.com&lt;/td&gt; 
   &lt;td&gt;3333&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://braiins.com/pool&quot;&gt;https://braiins.com/pool&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Buttons&lt;/h3&gt; 
&lt;h4&gt;One button devices:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;One click &amp;gt; change screen.&lt;/li&gt; 
 &lt;li&gt;Double click &amp;gt; change screen orientation.&lt;/li&gt; 
 &lt;li&gt;Tripple click &amp;gt; turn the screen off and on again.&lt;/li&gt; 
 &lt;li&gt;Hold 5 seconds &amp;gt; &lt;strong&gt;reset the configurations and reboot&lt;/strong&gt; your NerdMiner.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Two button devices:&lt;/h4&gt; 
&lt;p&gt;With the USB-C port to the right:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;TOP BUTTON&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;One click &amp;gt; change screen.&lt;/li&gt; 
 &lt;li&gt;Hold 5 seconds &amp;gt; top right button to &lt;strong&gt;reset the configurations and reboot&lt;/strong&gt; your NerdMiner.&lt;/li&gt; 
 &lt;li&gt;Hold and power up &amp;gt; enter &lt;strong&gt;configuration mode&lt;/strong&gt; and edit current config via Wifi. You could change your settings or verify them.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;BOTTOM BUTTON&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;One Click &amp;gt; turn the screen off and on again&lt;/li&gt; 
 &lt;li&gt;Double click &amp;gt; change orientation (default is USB-C to the right)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Build video&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://youtu.be/POUT2R_opDs&quot;&gt;&lt;img src=&quot;https://img.youtube.com/vi/POUT2R_opDs/0.jpg&quot; alt=&quot;Ver video aquí&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Developers&lt;/h2&gt; 
&lt;h3&gt;Project guidelines&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Current project was adapted to work with PlatformIO&lt;/li&gt; 
 &lt;li&gt;Current project works with ESP32-S3 and ESP32-wroom.&lt;/li&gt; 
 &lt;li&gt;Partition squeme should be build as huge app&lt;/li&gt; 
 &lt;li&gt;All libraries needed shown on platform.ini&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Job done&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Move project to platformIO&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Bug rectangle on screen when 1milion shares&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Bug memory leaks&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Bug Reboots when received JSON contains some null values&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Implement midstate sha256&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Bug Wificlient DNS unresolved on Wifi.h&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Code refactoring&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add blockHeight to screen&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add clock to show current time&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add new screen with global mining stats&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add pool support for low difficulty miners&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add best difficulty on miner screen&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add suport to standard ESP32 dev-kit / ESP32-WROOM&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Code changes to support adding multiple boards&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add support to TTGO T-display 1.14&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Add support to Amoled&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;In process&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; Create a daisy chain protocol via UART or I2C to support ESP32 hashboards&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; Create new screen like clockMiner but with BTC price&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; Add support to control BM1397&lt;/li&gt; 
 &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; Add password field in web configuration form&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Donations/Project contributions&lt;/h3&gt; 
&lt;p&gt;If you would like to contribute and help dev team with this project you can send a donation to the following LN address ⚡&lt;a href=&quot;mailto:teamnerdminer@getalby.com&quot;&gt;teamnerdminer@getalby.com&lt;/a&gt;⚡ or using one of the affiliate links above.&lt;/p&gt; 
&lt;p&gt;If you want to order a fully assembled Nerdminer you can contribute to my job at 🛒&lt;a href=&quot;https://bitronics.store&quot;&gt;bitronics.store&lt;/a&gt;🛒&lt;/p&gt; 
&lt;p&gt;Enjoy&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pr3y/Bruce</title>
      <link>https://github.com/pr3y/Bruce</link>
      <description>&lt;p&gt;Predatory ESP32 Firmware&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/bruce_banner.jpg&quot; alt=&quot;Bruce Main Menu&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;🦈&lt;/span&gt; Bruce&lt;/h1&gt; 
&lt;p&gt;Bruce is meant to be a versatile ESP32 firmware that supports a ton of offensive features focusing on facilitating Red Team operations. It also supports m5stack products and works great with Cardputer, Sticks, M5Cores, T-Decks and T-Embeds.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;🏗&lt;/span&gt; How to install&lt;/h2&gt; 
&lt;h3&gt;The easiest way to install Bruce is using our official Web Flasher!&lt;/h3&gt; 
&lt;h3&gt;Check out: &lt;a href=&quot;https://bruce.computer/flasher&quot;&gt;https://bruce.computer/flasher&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Alternatively, you can download the latest binary from releases or actions and flash locally using esptool.py&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;esptool.py --port /dev/ttyACM0 write_flash 0x00000 Bruce-&amp;lt;device&amp;gt;.bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;For m5stack devices&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you already use M5Launcher to manage your m5stack device, you can install it with OTA&lt;/p&gt; 
&lt;p&gt;Or you can burn it directly from the &lt;a href=&quot;https://docs.m5stack.com/en/download&quot;&gt;m5burner tool&lt;/a&gt;, just search for &#39;Bruce&#39; (My official builds will be uploaded by &quot;owner&quot; and have photos.) on the device category you want to and click on burn&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;⌨&lt;/span&gt; Discord Server&lt;/h2&gt; 
&lt;p&gt;Contact us in our &lt;a href=&quot;https://discord.gg/WJ9XF9czVT&quot;&gt;Discord Server&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;📑&lt;/span&gt; Wiki&lt;/h2&gt; 
&lt;p&gt;For more information on each function supported by Bruce, &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki&quot;&gt;read our wiki here&lt;/a&gt;. Also, &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FAQ&quot;&gt;read our FAQ&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;💻&lt;/span&gt; List of Features&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;WiFi&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Connect to WiFi&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; WiFi AP&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Disconnect WiFi&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#wifi-atks&quot;&gt;WiFi Atks&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#beacon-spam&quot;&gt;Beacon Spam&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#target-atk&quot;&gt;Target Atk&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Information&lt;/li&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Target Deauth&lt;/li&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; EvilPortal + Deauth&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Deauth Flood (More than one target)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Wardriving&quot;&gt;Wardriving&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#telnet&quot;&gt;TelNet&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#ssh&quot;&gt;SSH&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#raw-sniffer&quot;&gt;RAW Sniffer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#tcp-client&quot;&gt;TCP Client&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#tcp-listener&quot;&gt;TCP Listener&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#dpwo-esp32&quot;&gt;DPWO-ESP32&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#evil-portal&quot;&gt;Evil Portal&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#evil-portal&quot;&gt;Scan Hosts&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/WiFi#wireguard-tunneling&quot;&gt;Wireguard Tunneling&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Brucegotchi 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Pwnagotchi friend&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Pwngrid spam faces &amp;amp; names 
     &lt;ul&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; [Optional] DoScreen a very long name and face&lt;/li&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; [Optional] Flood uniq peer identifiers&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;BLE&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/BLE#ble-scan&quot;&gt;BLE Scan&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Bad BLE - Run Ducky scripts, similar to &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#badusb&quot;&gt;BadUsb&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; BLE Keyboard - Cardputer and T-Deck Only&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; iOS Spam&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Windows Spam&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Samsung Spam&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Android Spam&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Spam All&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;RF&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Scan/Copy&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/RF#replay-payloads-like-flipper&quot;&gt;Custom SubGhz&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Spectrum&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Jammer Full (sends a full squared wave into output)&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Jammer Intermittent (sends PWM signal into output)&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Config 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; RF TX Pin&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; RF RX Pin&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; RF Module 
     &lt;ul&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; RF433 T/R M5Stack&lt;/li&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/CC1101&quot;&gt;CC1101 (Sub-Ghz)&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; RF Frequency&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Replay&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;RFID&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Read tag&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Read 125kHz&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Clone tag&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Write NDEF records&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Amiibolink&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Chameleon&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Write data&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Erase data&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Save file&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Load file&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Config 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/RFID#supported-modules&quot;&gt;RFID Module&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; PN532&lt;/li&gt; 
      &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; PN532Killer&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; Emulate tag&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;IR&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; TV-B-Gone&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; IR Receiver&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/IR#replay-payloads-like-flipper&quot;&gt;Custom IR (NEC, NECext, SIRC, SIRC15, SIRC20, Samsung32, RC5, RC5X, RC6)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Config 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Ir TX Pin&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Ir RX Pin&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;FM&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FM#play_or_pause_button-broadcast-standard&quot;&gt;Broadcast standard&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FM#no_entry_sign-broadcast-rerserved&quot;&gt;Broadcast reserved&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FM#stop_button-broadcast-stop&quot;&gt;Broadcast stop&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FM#ocean-fm-spectrum&quot;&gt;FM Spectrum&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FM#car-hijack-ta&quot;&gt;Hijack Traffic Announcements&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/FM#bookmark_tabs-config&quot;&gt;Config&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;NRF24&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/BLE#nrf24-jammer&quot;&gt;NRF24 Jammer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; 2.4G Spectrum&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled /&gt; Mousejack&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;Scripts&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Interpreter&quot;&gt;JavaScript Interpreter&lt;/a&gt; &lt;a href=&quot;https://github.com/justinknight93/Doolittle&quot;&gt;Credits to justinknight93&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;Others&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Mic Spectrum&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; QRCodes 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Custom&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; PIX (Brazil bank transfer system)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#sd-card-mngr&quot;&gt;SD Card Mngr&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; View image (jpg)&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; File Info&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Wardriving#how-to-upload&quot;&gt;Wigle Upload&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Play Audio&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; View File&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#littlefs-mngr&quot;&gt;LittleFS Mngr&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#webui&quot;&gt;WebUI&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Server Structure&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Html&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; SDCard Mngr&lt;/li&gt; 
    &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Spiffs Mngr&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Megalodon&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#badusb&quot;&gt;BADUsb (New features, LittleFS and SDCard)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; USB Keyboard - Cardputer and T-Deck Only&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#openhaystack&quot;&gt;Openhaystack&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#ibutton&quot;&gt;iButton&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#led-control&quot;&gt;LED Control&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;Clock&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; RTC Support&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; NTP time adjust&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Manual adjust&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;Connect (ESPNOW)&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Send File&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Receive File&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Send Commands&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Receive Commands&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h2&gt;Config&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Brightness&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Dim Time&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Orientation&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; UI Color&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Boot Sound on/off&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Clock&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Sleep&lt;/li&gt; 
  &lt;li&gt;&lt;input type=&quot;checkbox&quot; checked disabled /&gt; Restart&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Specific functions per Device, the ones not mentioned here are available to all.&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Device&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;CC1101&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;NRF24&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;FM Radio&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;PN532&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Mic&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;BadUSB&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;RGB Led&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Speaker&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Fuel Guage&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;LITE_VERSION&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://shop.m5stack.com/products/m5stack-cardputer-kit-w-m5stamps&quot;&gt;M5Stack Cardputer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;NS4168&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://shop.m5stack.com/products/m5stickc-plus2-esp32-mini-iot-development-kit&quot;&gt;M5Stack M5StickC PLUS2&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;¹&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Tone&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://shop.m5stack.com/products/m5stickc-plus-esp32-pico-mini-iot-development-kit&quot;&gt;M5Stack M5StickC PLUS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;¹&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Tone&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;²&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://shop.m5stack.com/products/basic-core-iot-development-kit&quot;&gt;M5Stack M5Core BASIC&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;¹&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Tone&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://shop.m5stack.com/products/m5stack-core2-esp32-iot-development-kit-v1-1&quot;&gt;M5Stack M5Core2&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;¹&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://shop.m5stack.com/products/m5stack-cores3-esp32s3-lotdevelopment-kit&quot;&gt;M5Stack M5CoreS3&lt;/a&gt;/&lt;a href=&quot;https://shop.m5stack.com/products/m5stack-cores3-se-iot-controller-w-o-battery-bottom&quot;&gt;SE&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://www.aliexpress.us/item/3256804774970998.html&quot;&gt;JCZN CYD‑2432S028&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;¹&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;²&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://lilygo.cc/products/t-embed-cc1101&quot;&gt;Lilygo T‑Embed CC1101&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://lilygo.cc/products/t-embed&quot;&gt;Lilygo T‑Embed&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://lilygo.cc/products/t-display-s3&quot;&gt;Lilygo T-Display-S3&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://lilygo.cc/products/t-deck&quot;&gt;Lilygo T‑Deck&lt;/a&gt; (&lt;a href=&quot;https://lilygo.cc/products/t-deck-plus-1&quot;&gt;and pro&lt;/a&gt;)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://lilygo.cc/products/t-watch-s3&quot;&gt;Lilygo T-Watch-S3&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;🆗&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;² CYD have a LITE_VERSION version for Launcher Compatibility ¹ Core, CYD and StickCs Bad-USB: &lt;a href=&quot;https://github.com/pr3y/Bruce/wiki/Others#badusb&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;LITE_VERSION&lt;/em&gt;: TelNet, SSH, DPWO, WireGuard, ScanHosts, RawSniffer, Brucegotchi, BLEBacon, BLEScan, Interpreter and OpenHaystack are NOT available for M5Launcher Compatibility&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;✨&lt;/span&gt; Why and how does it look?&lt;/h2&gt; 
&lt;p&gt;Bruce stems from a keen observation within the community focused on devices like Flipper Zero. While these devices offered a glimpse into the world of offensive security, there was a palpable sense that something more could be achieved without being that overpriced, particularly with the robust and modular hardware ecosystem provided by ESP32 Devices, Lilygo and M5Stack products.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/pic1.png&quot; alt=&quot;Bruce Main Menu&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/core.png&quot; alt=&quot;Bruce on M5Core&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/stick.png&quot; alt=&quot;Bruce on Stick&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/pr3y/Bruce/main/media/pictures/cyd.png&quot; alt=&quot;Bruce on CYD&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Other media can be &lt;a href=&quot;https://raw.githubusercontent.com/pr3y/Bruce/main/media/&quot;&gt;found here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;👏&lt;/span&gt; Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bmorcelli&quot;&gt;@bmorcelli&lt;/a&gt; for new core and a bunch of new features, also porting to many devices!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/IncursioHack&quot;&gt;@IncursioHack&lt;/a&gt; for adding RF and RFID modules features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Luidiblu&quot;&gt;@Luidiblu&lt;/a&gt; for logo and UI design assistance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/eadmaster&quot;&gt;@eadmaster&lt;/a&gt; for adding a lot of features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rennancockles&quot;&gt;@rennancockles&lt;/a&gt; for a lot of RFID code, refactoring and others features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/7h30th3r0n3&quot;&gt;@7h30th3r0n3&lt;/a&gt; refactoring and a lot of help with WiFi attacks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Tawank&quot;&gt;@Tawank&lt;/a&gt; refactoring interpreter among many other things&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;&quot;&gt;@pablonymous&lt;/a&gt; new RF functions to read RAW Data&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;&quot;&gt;Smoochiee&lt;/a&gt; for Bruce PCB design.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;&quot;&gt;TH3_KR4K3N&lt;/a&gt; for Stick cplus extender PCB design.&lt;/li&gt; 
 &lt;li&gt;Everyone who contributed in some way to the project, thanks &lt;span&gt;❤️&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;🚧&lt;/span&gt; Disclaimer&lt;/h2&gt; 
&lt;p&gt;Bruce is a tool for cyber offensive and red team operations, distributed under the terms of the Affero General Public License (AGPL). It is intended for legal and authorized security testing purposes only. Use of this software for any malicious or unauthorized activities is strictly prohibited. By downloading, installing, or using Bruce, you agree to comply with all applicable laws and regulations. This software is provided free of charge, and we do not accept payments for copies or modifications. The developers of Bruce assume no liability for any misuse of the software. Use at your own risk.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>systemd/systemd</title>
      <link>https://github.com/systemd/systemd</link>
      <description>&lt;p&gt;The systemd System and Service Manager&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;http://brand.systemd.io/assets/page-logo.png&quot; alt=&quot;Systemd&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;System and Service Manager&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://build.opensuse.org/project/show/system:systemd&quot;&gt;&lt;img src=&quot;https://build.opensuse.org/projects/system:systemd/packages/systemd/badge.svg?type=default&quot; alt=&quot;OBS Packages Status&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://the-real-systemd.semaphoreci.com/projects/systemd&quot;&gt;&lt;img src=&quot;https://the-real-systemd.semaphoreci.com/badges/systemd/branches/main.svg?style=shields&quot; alt=&quot;Semaphore CI 2.0 Build Status&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://scan.coverity.com/projects/systemd&quot;&gt;&lt;img src=&quot;https://scan.coverity.com/projects/350/badge.svg?sanitize=true&quot; alt=&quot;Coverity Scan Status&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://oss-fuzz-build-logs.storage.googleapis.com/index.html#systemd&quot;&gt;&lt;img src=&quot;https://oss-fuzz-build-logs.storage.googleapis.com/badges/systemd.svg?sanitize=true&quot; alt=&quot;OSS-Fuzz Status&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://github.com/systemd/systemd/actions/workflows/cifuzz.yml&quot;&gt;&lt;img src=&quot;https://github.com/systemd/systemd/actions/workflows/cifuzz.yml/badge.svg?sanitize=true&quot; alt=&quot;CIFuzz&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/1369&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/1369/badge&quot; alt=&quot;CII Best Practices&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://fossies.org/linux/test/systemd-main.tar.gz/codespell.html&quot;&gt;&lt;img src=&quot;https://fossies.org/linux/test/systemd-main.tar.gz/codespell.svg?sanitize=true&quot; alt=&quot;Fossies codespell report&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://translate.fedoraproject.org/engage/systemd/&quot;&gt;&lt;img src=&quot;https://translate.fedoraproject.org/widget/systemd/svg-badge.svg?sanitize=true&quot; alt=&quot;Translation status&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://coveralls.io/github/systemd/systemd?branch=main&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/github/systemd/systemd/badge.svg?branch=main&quot; alt=&quot;Coverage Status&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://repology.org/project/systemd/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/tiny-repos/systemd.svg?sanitize=true&quot; alt=&quot;Packaging status&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://securityscorecards.dev/viewer/?platform=github.com&amp;amp;org=systemd&amp;amp;repo=systemd&quot;&gt;&lt;img src=&quot;https://api.securityscorecards.dev/projects/github.com/systemd/systemd/badge&quot; alt=&quot;OpenSSF Scorecard&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Details&lt;/h2&gt; 
&lt;p&gt;Most documentation is available on &lt;a href=&quot;https://systemd.io/&quot;&gt;systemd&#39;s web site&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Assorted, older, general information about systemd can be found in the &lt;a href=&quot;https://www.freedesktop.org/wiki/Software/systemd&quot;&gt;systemd Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Information about build requirements is provided in the &lt;a href=&quot;https://raw.githubusercontent.com/systemd/systemd/main/README&quot;&gt;README file&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Consult our &lt;a href=&quot;https://raw.githubusercontent.com/systemd/systemd/main/NEWS&quot;&gt;NEWS file&lt;/a&gt; for information about what&#39;s new in the most recent systemd versions.&lt;/p&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://raw.githubusercontent.com/systemd/systemd/main/docs/ARCHITECTURE.md&quot;&gt;Code Map&lt;/a&gt; for information about this repository&#39;s layout and content.&lt;/p&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://raw.githubusercontent.com/systemd/systemd/main/docs/HACKING.md&quot;&gt;Hacking guide&lt;/a&gt; for information on how to hack on systemd and test your modifications.&lt;/p&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/systemd/systemd/main/docs/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt; for more information about filing GitHub Issues and posting GitHub Pull Requests.&lt;/p&gt; 
&lt;p&gt;When preparing patches for systemd, please follow our &lt;a href=&quot;https://raw.githubusercontent.com/systemd/systemd/main/docs/CODING_STYLE.md&quot;&gt;Coding Style Guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are looking for support, please contact our &lt;a href=&quot;https://lists.freedesktop.org/mailman/listinfo/systemd-devel&quot;&gt;mailing list&lt;/a&gt;, join our &lt;a href=&quot;https://web.libera.chat/#systemd&quot;&gt;IRC channel #systemd on libera.chat&lt;/a&gt; or &lt;a href=&quot;https://matrix.to/#/#systemd-project:matrix.org&quot;&gt;Matrix channel&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Stable branches with backported patches are available in the &lt;a href=&quot;https://github.com/systemd/systemd-stable&quot;&gt;stable repo&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We have a security bug bounty program sponsored by the &lt;a href=&quot;https://www.sovereigntechfund.de/&quot;&gt;Sovereign Tech Fund&lt;/a&gt; hosted on &lt;a href=&quot;https://yeswehack.com/programs/systemd-bug-bounty-program&quot;&gt;YesWeHack&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Repositories with distribution packages built from git main are &lt;a href=&quot;https://software.opensuse.org//download.html?project=system%3Asystemd&amp;amp;package=systemd&quot;&gt;available on OBS&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mit-pdos/xv6-public</title>
      <link>https://github.com/mit-pdos/xv6-public</link>
      <description>&lt;p&gt;xv6 OS&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NOTE: we have stopped maintaining the x86 version of xv6, and switched our efforts to the RISC-V version (&lt;a href=&quot;https://github.com/mit-pdos/xv6-riscv.git&quot;&gt;https://github.com/mit-pdos/xv6-riscv.git&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;xv6 is a re-implementation of Dennis Ritchie&#39;s and Ken Thompson&#39;s Unix Version 6 (v6). xv6 loosely follows the structure and style of v6, but is implemented for a modern x86-based multiprocessor using ANSI C.&lt;/p&gt; 
&lt;p&gt;ACKNOWLEDGMENTS&lt;/p&gt; 
&lt;p&gt;xv6 is inspired by John Lions&#39;s Commentary on UNIX 6th Edition (Peer to Peer Communications; ISBN: 1-57398-013-7; 1st edition (June 14, 2000)). See also &lt;a href=&quot;https://pdos.csail.mit.edu/6.828/&quot;&gt;https://pdos.csail.mit.edu/6.828/&lt;/a&gt;, which provides pointers to on-line resources for v6.&lt;/p&gt; 
&lt;p&gt;xv6 borrows code from the following sources: JOS (asm.h, elf.h, mmu.h, bootasm.S, ide.c, console.c, and others) Plan 9 (entryother.S, mp.h, mp.c, lapic.c) FreeBSD (ioapic.c) NetBSD (console.c)&lt;/p&gt; 
&lt;p&gt;The following people have made contributions: Russ Cox (context switching, locking), Cliff Frey (MP), Xiao Yu (MP), Nickolai Zeldovich, and Austin Clements.&lt;/p&gt; 
&lt;p&gt;We are also grateful for the bug reports and patches contributed by Silas Boyd-Wickizer, Anton Burtsev, Cody Cutler, Mike CAT, Tej Chajed, eyalz800, Nelson Elhage, Saar Ettinger, Alice Ferrazzi, Nathaniel Filardo, Peter Froehlich, Yakir Goaron,Shivam Handa, Bryan Henry, Jim Huang, Alexander Kapshuk, Anders Kaseorg, kehao95, Wolfgang Keller, Eddie Kohler, Austin Liew, Imbar Marinescu, Yandong Mao, Matan Shabtay, Hitoshi Mitake, Carmi Merimovich, Mark Morrissey, mtasm, Joel Nider, Greg Price, Ayan Shafqat, Eldar Sehayek, Yongming Shen, Cam Tenny, tyfkda, Rafael Ubal, Warren Toomey, Stephen Tu, Pablo Ventura, Xi Wang, Keiichi Watanabe, Nicolas Wolovick, wxdao, Grant Wu, Jindong Zhang, Icenowy Zheng, and Zou Chang Wei.&lt;/p&gt; 
&lt;p&gt;The code in the files that constitute xv6 is Copyright 2006-2018 Frans Kaashoek, Robert Morris, and Russ Cox.&lt;/p&gt; 
&lt;p&gt;ERROR REPORTS&lt;/p&gt; 
&lt;p&gt;We don&#39;t process error reports (see note on top of this file).&lt;/p&gt; 
&lt;p&gt;BUILDING AND RUNNING XV6&lt;/p&gt; 
&lt;p&gt;To build xv6 on an x86 ELF machine (like Linux or FreeBSD), run &quot;make&quot;. On non-x86 or non-ELF machines (like OS X, even on x86), you will need to install a cross-compiler gcc suite capable of producing x86 ELF binaries (see &lt;a href=&quot;https://pdos.csail.mit.edu/6.828/&quot;&gt;https://pdos.csail.mit.edu/6.828/&lt;/a&gt;). Then run &quot;make TOOLPREFIX=i386-jos-elf-&quot;. Now install the QEMU PC simulator and run &quot;make qemu&quot;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mit-pdos/xv6-riscv</title>
      <link>https://github.com/mit-pdos/xv6-riscv</link>
      <description>&lt;p&gt;Xv6 for RISC-V&lt;/p&gt;&lt;hr&gt;&lt;p&gt;xv6 is a re-implementation of Dennis Ritchie&#39;s and Ken Thompson&#39;s Unix Version 6 (v6). xv6 loosely follows the structure and style of v6, but is implemented for a modern RISC-V multiprocessor using ANSI C.&lt;/p&gt; 
&lt;p&gt;ACKNOWLEDGMENTS&lt;/p&gt; 
&lt;p&gt;xv6 is inspired by John Lions&#39;s Commentary on UNIX 6th Edition (Peer to Peer Communications; ISBN: 1-57398-013-7; 1st edition (June 14, 2000)). See also &lt;a href=&quot;https://pdos.csail.mit.edu/6.1810/&quot;&gt;https://pdos.csail.mit.edu/6.1810/&lt;/a&gt;, which provides pointers to on-line resources for v6.&lt;/p&gt; 
&lt;p&gt;The following people have made contributions: Russ Cox (context switching, locking), Cliff Frey (MP), Xiao Yu (MP), Nickolai Zeldovich, and Austin Clements.&lt;/p&gt; 
&lt;p&gt;We are also grateful for the bug reports and patches contributed by Abhinavpatel00, Takahiro Aoyagi, Marcelo Arroyo, Hirbod Behnam, Silas Boyd-Wickizer, Anton Burtsev, carlclone, Ian Chen, clivezeng, Dan Cross, Cody Cutler, Mike CAT, Tej Chajed, Asami Doi,Wenyang Duan, echtwerner, eyalz800, Nelson Elhage, Saar Ettinger, Alice Ferrazzi, Nathaniel Filardo, flespark, Peter Froehlich, Yakir Goaron, Shivam Handa, Matt Harvey, Bryan Henry, jaichenhengjie, Jim Huang, Matúš Jókay, John Jolly, Alexander Kapshuk, Anders Kaseorg, kehao95, Wolfgang Keller, Jungwoo Kim, Jonathan Kimmitt, Eddie Kohler, Vadim Kolontsov, Austin Liew, l0stman, Pavan Maddamsetti, Imbar Marinescu, Yandong Mao, Matan Shabtay, Hitoshi Mitake, Carmi Merimovich, mes900903, Mark Morrissey, mtasm, Joel Nider, Hayato Ohhashi, OptimisticSide, papparapa, phosphagos, Harry Porter, Greg Price, Zheng qhuo, Quancheng, RayAndrew, Jude Rich, segfault, Ayan Shafqat, Eldar Sehayek, Yongming Shen, Fumiya Shigemitsu, snoire, Taojie, Cam Tenny, tyfkda, Warren Toomey, Stephen Tu, Alissa Tung, Rafael Ubal, unicornx, Amane Uehara, Pablo Ventura, Luc Videau, Xi Wang, WaheedHafez, Keiichi Watanabe, Lucas Wolf, Nicolas Wolovick, wxdao, Grant Wu, x653, Andy Zhang, Jindong Zhang, Icenowy Zheng, ZhUyU1997, and Zou Chang Wei.&lt;/p&gt; 
&lt;p&gt;ERROR REPORTS&lt;/p&gt; 
&lt;p&gt;Please send errors and suggestions to Frans Kaashoek and Robert Morris (kaashoek,&lt;a href=&quot;mailto:rtm@mit.edu&quot;&gt;rtm@mit.edu&lt;/a&gt;). The main purpose of xv6 is as a teaching operating system for MIT&#39;s 6.1810, so we are more interested in simplifications and clarifications than new features.&lt;/p&gt; 
&lt;p&gt;BUILDING AND RUNNING XV6&lt;/p&gt; 
&lt;p&gt;You will need a RISC-V &quot;newlib&quot; tool chain from &lt;a href=&quot;https://github.com/riscv/riscv-gnu-toolchain&quot;&gt;https://github.com/riscv/riscv-gnu-toolchain&lt;/a&gt;, and qemu compiled for riscv64-softmmu. Once they are installed, and in your shell search path, you can run &quot;make qemu&quot;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cellos51/balatro-gba</title>
      <link>https://github.com/cellos51/balatro-gba</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Balatro-GBA&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/cellos51/balatro-gba/actions&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/cellos51/balatro-gba/build_ci_workflow.yml?style=flat&amp;amp;logo=github&amp;amp;branch=main&amp;amp;label=Builds&amp;amp;labelColor=gray&amp;amp;color=default&amp;amp;v=1&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cellos51/balatro-gba/issues&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/github/issues/cellos51/balatro-gba?logo=bug&amp;amp;style=flat&amp;amp;label=Issues&amp;amp;labelColor=gray&amp;amp;color=red&amp;amp;v=2&quot; alt=&quot;Open Issues&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/cellos51/balatro-gba/pulls&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/github/issues-pr/cellos51/balatro-gba?logo=git-pull-request&amp;amp;style=flat&amp;amp;label=Pull%20Requests&amp;amp;labelColor=gray&amp;amp;color=indigo&amp;amp;v=3&quot; alt=&quot;Pull Requests&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is an attempt to recreate the game &lt;strong&gt;&#39;Balatro&#39;&lt;/strong&gt; as accurately as possible, including all of the visual effects that make Balatro feel satisfying to play. This &lt;strong&gt;tech-demo/proof of concept&lt;/strong&gt; is strictly limited in content to a minimal version of Balatro and will &lt;strong&gt;NOT&lt;/strong&gt; recreate the full game. &lt;strong&gt;This version is intended for people who already own and know how the official full game works.&lt;/strong&gt; Please refer to the Balatro Wiki if you need help understanding certain mechanics or abilities.&lt;/p&gt; 
&lt;a href=&quot;https://balatrowiki.org/&quot;&gt; &lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20Wiki-194c84?logo=bigjoker&amp;amp;logoColor=fff&quot; alt=&quot;Balatro Wiki&quot; width=&quot;155&quot; /&gt; &lt;/a&gt; 
&lt;h3&gt;Disclaimer: This project is NOT endorsed by or affiliated with Playstack or LocalThunk&lt;/h3&gt; 
&lt;h4&gt;This is a non-profit community fan project solely aimed to recreate a minimal version of Balatro on the Game Boy Advance as a tribute to the full Balatro and is not intended to infringe or draw sales away from the full game&#39;s release or any of the established works by Playstack and LocalThunk.&lt;/h4&gt; 
&lt;h4&gt;All rights are reserved to their respective holders.&lt;/h4&gt; 
&lt;h3&gt;Please buy the official full version from these sources below:&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://store.steampowered.com/app/2379780/Balatro/&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20on%20Steam-194c84?logo=steam&amp;amp;logoColor=fff&quot; alt=&quot;Balatro on Steam&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.playstack.balatro.android&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20on%20Google%20Play-414141?logo=Google-play&amp;amp;logoColor=fff&quot; alt=&quot;Balatro on Google Play&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://apps.apple.com/us/app/balatro/id6502453075&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20on%20Apple%20App%20Store-0D96F6?logo=app-store&amp;amp;logoColor=fff&quot; alt=&quot;Balatro on Apple App Store&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nintendo.com/us/store/products/balatro-switch/&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20on%20Nintendo%20eShop-e60012?logo=nintendo&amp;amp;logoColor=fff&quot; alt=&quot;Balatro on Nintendo eShop&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://store.playstation.com/en-us/concept/10010334&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20on%20PlayStation%20Store-006FCD?logo=PlayStation&amp;amp;logoColor=fff&quot; alt=&quot;Balatro on PlayStation Store&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.xbox.com/en-US/games/store/balatro/9PK087LNGJC5&quot;&gt;&lt;img src=&quot;https://custom-icon-badges.demolab.com/badge/Balatro%20on%20Xbox-107C10.svg?logo=xbox&amp;amp;logoColor=white&quot; alt=&quot;Balatro on Xbox&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.humblebundle.com/store/balatro?srsltid=AfmBOoqS2De8T4kizzWxJS1pbvQosJ_bYCl4qvC6LA1YLPAh4sZ8vJqO&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Balatro%20on%20Humble%20Bundle-%23494F5C.svg?logo=HumbleBundle&amp;amp;logoColor=white&quot; alt=&quot;Balatro on Humble Bundle&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- The Gif is a little blurry but I think it looks fine --&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/cellos51/balatro-gba/main/example.gif&quot; alt=&quot;Example GIF&quot; width=&quot;800&quot; /&gt; 
&lt;h3&gt;Controls:&lt;/h3&gt; 
&lt;p&gt;(A: Pick Card/Make Selections)&lt;/p&gt; 
&lt;p&gt;(B: Deselect All Cards)&lt;/p&gt; 
&lt;p&gt;(L: Sell Joker)&lt;/p&gt; 
&lt;p&gt;(R: Sort Suit/Rank)&lt;/p&gt; 
&lt;p&gt;(D-Pad: Navigation)&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;Build Instructions:&lt;/strong&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;strong&gt;-Docker-&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;A docker compose file is provided to build this project.&lt;/p&gt; 
&lt;p&gt;1.) Install &lt;a href=&quot;https://docs.docker.com/compose/install/&quot;&gt;docker desktop&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;2.) Open a terminal to this projects directory:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;On &lt;strong&gt;linux&lt;/strong&gt; run &lt;code&gt;UID=$(id -u) GID=$(id -g) docker compose up&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;On &lt;strong&gt;windows&lt;/strong&gt; run &lt;code&gt;docker compose up&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Docker will build the project and the ROM will be in the same location as step 7 describes below.&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;-Windows-&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Video Tutorial: &lt;a href=&quot;https://youtu.be/72Zzo1VDYzQ?si=UDmEdbST1Cx1zZV2&quot;&gt;https://youtu.be/72Zzo1VDYzQ?si=UDmEdbST1Cx1zZV2&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;With &lt;code&gt;Git&lt;/code&gt; (not required)&lt;/h3&gt; 
&lt;p&gt;1.) Install &lt;code&gt;devkitPro&lt;/code&gt; from &lt;a href=&quot;https://github.com/devkitPro/installer&quot;&gt;https://github.com/devkitPro/installer&lt;/a&gt; by downloading the latest release, unzipping the archive, and then running the installer. You only need to install the tools for the GBA development so ensure you have it selected and install it to the default directory. You may need to create a temp folder for the project.&lt;/p&gt; 
&lt;p&gt;2.) Search for &lt;code&gt;MSys2&lt;/code&gt; in the Start Menu and open it.&lt;/p&gt; 
&lt;p&gt;3.) Install &lt;code&gt;Git&lt;/code&gt; by typing this command: &lt;code&gt;pacman -S git&lt;/code&gt; if you don&#39;t have it already installed&lt;/p&gt; 
&lt;p&gt;4.) Clone the project by putting &lt;code&gt;git clone https://github.com/cellos51/balatro-gba.git&lt;/code&gt; in the MSys2 window.&lt;/p&gt; 
&lt;p&gt;5.) Use &lt;code&gt;cd&lt;/code&gt; and drag the new folder into the window to add the file path and press Enter.&lt;/p&gt; 
&lt;p&gt;6.) Type &lt;code&gt;make&lt;/code&gt; into the window and press Enter to start building the rom.&lt;/p&gt; 
&lt;p&gt;7.) After it completes, navigate through the &lt;code&gt;build&lt;/code&gt; directory in the project folder and look for &lt;code&gt;balatro-gba.gba&lt;/code&gt; and load it on an emulator or flashcart.&lt;/p&gt; 
&lt;h3&gt;Without &lt;code&gt;Git&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Disregard Steps 3-4 and instead click the green code button on the main repository page and press &lt;code&gt;Download Zip&lt;/code&gt;. Unzip the folder and place it wherever you like. Then continue from Step 5.&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;-Linux-&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;1.) Add the devkitPro repo using these instructions &lt;a href=&quot;https://devkitpro.org/wiki/devkitPro_pacman&quot;&gt;https://devkitpro.org/wiki/devkitPro_pacman&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;2.) Install devkitPro by running &lt;code&gt;sudo pacman -S gba-dev&lt;/code&gt; and accepting all packages&lt;/p&gt; 
&lt;p&gt;3.) Activate the devkitPro environment by running &lt;code&gt;source /etc/profile.d/devkit-env.sh&lt;/code&gt; or opening a new shell&lt;/p&gt; 
&lt;p&gt;4.) Follow instructions from windows tutorial step 3&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Common Issues:&lt;/strong&gt;&lt;/h2&gt; 
&lt;h4&gt;1. &lt;strong&gt;When I run &lt;code&gt;make&lt;/code&gt; it errors out and won&#39;t compile!&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Move the project folder to your desktop and then &lt;code&gt;cd&lt;/code&gt; to it by dragging the folder into the terminal window. This error could be caused by a bad file path, placing the folder on the desktop is a failsafe.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2. &lt;strong&gt;I can&#39;t find the compiled rom!&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Look for a folder called &lt;code&gt;build&lt;/code&gt; inside the project folder and then find &lt;code&gt;balatro-gba.gba&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;3. &lt;strong&gt;The Game won&#39;t start!&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Try a different emulator or if you are using original hardware, make sure the rom is not corrupted and try a different flashcart or SD Card. If this does not work, open an issue on the Github page because a recent commit may have broke the game.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;4. &lt;strong&gt;It says I don&#39;t have &lt;code&gt;Git&lt;/code&gt; or &lt;code&gt;Make&lt;/code&gt; installed!&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;code&gt;pacman -S git&lt;/code&gt; (not required) or &lt;code&gt;pacman -S make&lt;/code&gt; although make should already be installed if you followed the instructions correctly.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>wazuh/wazuh</title>
      <link>https://github.com/wazuh/wazuh</link>
      <description>&lt;p&gt;Wazuh - The Open Source Security Platform. Unified XDR and SIEM protection for endpoints and cloud workloads.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wazuh&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://wazuh.com/community/join-us-on-slack/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/slack-join-blue.svg?sanitize=true&quot; alt=&quot;Slack&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://groups.google.com/forum/#!forum/wazuh&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/email-join-blue.svg?sanitize=true&quot; alt=&quot;Email&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://documentation.wazuh.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/docs-view-green.svg?sanitize=true&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://wazuh.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/web-view-green.svg?sanitize=true&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://scan.coverity.com/projects/wazuh-wazuh&quot;&gt;&lt;img src=&quot;https://scan.coverity.com/projects/10992/badge.svg?sanitize=true&quot; alt=&quot;Coverity&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/wazuh&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/follow/wazuh?style=social&quot; alt=&quot;Twitter&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=peTSzcAueEc&quot;&gt;&lt;img src=&quot;https://img.shields.io/youtube/views/peTSzcAueEc?style=social&quot; alt=&quot;YouTube&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Wazuh is a free and open source platform used for threat prevention, detection, and response. It is capable of protecting workloads across on-premises, virtualized, containerized, and cloud-based environments.&lt;/p&gt; 
&lt;p&gt;Wazuh solution consists of an endpoint security agent, deployed to the monitored systems, and a management server, which collects and analyzes data gathered by the agents. Besides, Wazuh has been fully integrated with the Elastic Stack, providing a search engine and data visualization tool that allows users to navigate through their security alerts.&lt;/p&gt; 
&lt;h2&gt;Wazuh capabilities&lt;/h2&gt; 
&lt;p&gt;A brief presentation of some of the more common use cases of the Wazuh solution.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Intrusion detection&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Wazuh agents scan the monitored systems looking for malware, rootkits and suspicious anomalies. They can detect hidden files, cloaked processes or unregistered network listeners, as well as inconsistencies in system call responses.&lt;/p&gt; 
&lt;p&gt;In addition to agent capabilities, the server component uses a signature-based approach to intrusion detection, using its regular expression engine to analyze collected log data and look for indicators of compromise.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Log data analysis&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Wazuh agents read operating system and application logs, and securely forward them to a central manager for rule-based analysis and storage. When no agent is deployed, the server can also receive data via syslog from network devices or applications.&lt;/p&gt; 
&lt;p&gt;The Wazuh rules help make you aware of application or system errors, misconfigurations, attempted and/or successful malicious activities, policy violations and a variety of other security and operational issues.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;File integrity monitoring&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Wazuh monitors the file system, identifying changes in content, permissions, ownership, and attributes of files that you need to keep an eye on. In addition, it natively identifies users and applications used to create or modify files.&lt;/p&gt; 
&lt;p&gt;File integrity monitoring capabilities can be used in combination with threat intelligence to identify threats or compromised hosts. In addition, several regulatory compliance standards, such as PCI DSS, require it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Vulnerability detection&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Wazuh agents pull software inventory data and send this information to the server, where it is correlated with continuously updated CVE (Common Vulnerabilities and Exposure) databases, in order to identify well-known vulnerable software.&lt;/p&gt; 
&lt;p&gt;Automated vulnerability assessment helps you find the weak spots in your critical assets and take corrective action before attackers exploit them to sabotage your business or steal confidential data.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Configuration assessment&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Wazuh monitors system and application configuration settings to ensure they are compliant with your security policies, standards and/or hardening guides. Agents perform periodic scans to detect applications that are known to be vulnerable, unpatched, or insecurely configured.&lt;/p&gt; 
&lt;p&gt;Additionally, configuration checks can be customized, tailoring them to properly align with your organization. Alerts include recommendations for better configuration, references and mapping with regulatory compliance.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Incident response&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Wazuh provides out-of-the-box active responses to perform various countermeasures to address active threats, such as blocking access to a system from the threat source when certain criteria are met.&lt;/p&gt; 
&lt;p&gt;In addition, Wazuh can be used to remotely run commands or system queries, identifying indicators of compromise (IOCs) and helping perform other live forensics or incident response tasks.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Regulatory compliance&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Wazuh provides some of the necessary security controls to become compliant with industry standards and regulations. These features, combined with its scalability and multi-platform support help organizations meet technical compliance requirements.&lt;/p&gt; 
&lt;p&gt;Wazuh is widely used by payment processing companies and financial institutions to meet PCI DSS (Payment Card Industry Data Security Standard) requirements. Its web user interface provides reports and dashboards that can help with this and other regulations (e.g. GPG13 or GDPR).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Cloud security&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Wazuh helps monitoring cloud infrastructure at an API level, using integration modules that are able to pull security data from well known cloud providers, such as Amazon AWS, Azure or Google Cloud. In addition, Wazuh provides rules to assess the configuration of your cloud environment, easily spotting weaknesses.&lt;/p&gt; 
&lt;p&gt;In addition, Wazuh light-weight and multi-platform agents are commonly used to monitor cloud environments at the instance level.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Containers security&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Wazuh provides security visibility into your Docker hosts and containers, monitoring their behavior and detecting threats, vulnerabilities and anomalies. The Wazuh agent has native integration with the Docker engine allowing users to monitor images, volumes, network settings, and running containers.&lt;/p&gt; 
&lt;p&gt;Wazuh continuously collects and analyzes detailed runtime information. For example, alerting for containers running in privileged mode, vulnerable applications, a shell running in a container, changes to persistent volumes or images, and other possible threats.&lt;/p&gt; 
&lt;h2&gt;WUI&lt;/h2&gt; 
&lt;p&gt;The Wazuh WUI provides a powerful user interface for data visualization and analysis. This interface can also be used to manage Wazuh configuration and to monitor its status.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Modules overview&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/wazuh/wazuh-dashboard-plugins/raw/master/screenshots/app.png&quot; alt=&quot;Modules overview&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Security events&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/wazuh/wazuh-dashboard-plugins/raw/master/screenshots/app2.png&quot; alt=&quot;Overview&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Integrity monitoring&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/wazuh/wazuh-dashboard-plugins/raw/master/screenshots/app3.png&quot; alt=&quot;Overview&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Vulnerability detection&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/wazuh/wazuh-dashboard-plugins/raw/master/screenshots/app4.png&quot; alt=&quot;Overview&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Regulatory compliance&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/wazuh/wazuh-dashboard-plugins/raw/master/screenshots/app5.png&quot; alt=&quot;Overview&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Agents overview&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/wazuh/wazuh-dashboard-plugins/raw/master/screenshots/app6.png&quot; alt=&quot;Overview&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Agent summary&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/wazuh/wazuh-dashboard-plugins/raw/master/screenshots/app7.png&quot; alt=&quot;Overview&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Orchestration&lt;/h2&gt; 
&lt;p&gt;Here you can find all the automation tools maintained by the Wazuh team.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/wazuh/wazuh-cloudformation&quot;&gt;Wazuh AWS CloudFormation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/wazuh/wazuh-docker&quot;&gt;Docker containers&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/wazuh/wazuh-ansible&quot;&gt;Wazuh Ansible&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/wazuh/wazuh-chef&quot;&gt;Wazuh Chef&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/wazuh/wazuh-puppet&quot;&gt;Wazuh Puppet&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/wazuh/wazuh-kubernetes&quot;&gt;Wazuh Kubernetes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/wazuh/wazuh-bosh&quot;&gt;Wazuh Bosh&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/wazuh/wazuh-salt&quot;&gt;Wazuh Salt&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Branches&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;main&lt;/code&gt; branch contains the latest code, be aware of possible bugs on this branch.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Software and libraries used&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Software&lt;/th&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;Author&lt;/th&gt; 
   &lt;th&gt;License&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/libarchive/bzip2&quot;&gt;bzip2&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.0.8&lt;/td&gt; 
   &lt;td&gt;Julian Seward&lt;/td&gt; 
   &lt;td&gt;BSD License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/DaveGamble/cJSON&quot;&gt;cJSON&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.7.18&lt;/td&gt; 
   &lt;td&gt;Dave Gamble&lt;/td&gt; 
   &lt;td&gt;MIT License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/python/cpython&quot;&gt;cPython&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3.10.18&lt;/td&gt; 
   &lt;td&gt;Guido van Rossum&lt;/td&gt; 
   &lt;td&gt;Python Software Foundation License version 2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/curl/curl&quot;&gt;cURL&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;8.10.0&lt;/td&gt; 
   &lt;td&gt;Daniel Stenberg&lt;/td&gt; 
   &lt;td&gt;MIT License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/google/flatbuffers/&quot;&gt;Flatbuffers&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;23.5.26&lt;/td&gt; 
   &lt;td&gt;Google Inc.&lt;/td&gt; 
   &lt;td&gt;Apache 2.0 License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/google/googletest&quot;&gt;GoogleTest&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.11.0&lt;/td&gt; 
   &lt;td&gt;Google Inc.&lt;/td&gt; 
   &lt;td&gt;3-Clause &quot;New&quot; BSD License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/jemalloc/jemalloc&quot;&gt;jemalloc&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5.2.1&lt;/td&gt; 
   &lt;td&gt;Jason Evans&lt;/td&gt; 
   &lt;td&gt;2-Clause &quot;Simplified&quot; BSD License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/lua/lua&quot;&gt;Lua&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5.3.6&lt;/td&gt; 
   &lt;td&gt;PUC-Rio&lt;/td&gt; 
   &lt;td&gt;MIT License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/libarchive/libarchive&quot;&gt;libarchive&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3.7.2&lt;/td&gt; 
   &lt;td&gt;Tim Kientzle&lt;/td&gt; 
   &lt;td&gt;3-Clause &quot;New&quot; BSD License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/yasuhirokimura/db18&quot;&gt;libdb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;18.1.40&lt;/td&gt; 
   &lt;td&gt;Oracle Corporation&lt;/td&gt; 
   &lt;td&gt;Affero GPL v3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/libffi/libffi&quot;&gt;libffi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3.2.1&lt;/td&gt; 
   &lt;td&gt;Anthony Green&lt;/td&gt; 
   &lt;td&gt;MIT License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/PCRE2Project/pcre2&quot;&gt;libpcre2&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;10.42.0&lt;/td&gt; 
   &lt;td&gt;Philip Hazel&lt;/td&gt; 
   &lt;td&gt;BSD License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/libimobiledevice/libplist&quot;&gt;libplist&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2.2.0&lt;/td&gt; 
   &lt;td&gt;Aaron Burghardt et al.&lt;/td&gt; 
   &lt;td&gt;GNU Lesser General Public License version 2.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/yaml/libyaml&quot;&gt;libYAML&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;0.1.7&lt;/td&gt; 
   &lt;td&gt;Kirill Simonov&lt;/td&gt; 
   &lt;td&gt;MIT License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/tukaani-project/xz&quot;&gt;liblzma&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5.4.2&lt;/td&gt; 
   &lt;td&gt;Lasse Collin, Jia Tan et al.&lt;/td&gt; 
   &lt;td&gt;GNU Public License version 3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/linux-audit/audit-userspace&quot;&gt;Linux Audit userspace&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2.8.4&lt;/td&gt; 
   &lt;td&gt;Rik Faith&lt;/td&gt; 
   &lt;td&gt;LGPL (copyleft)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/msgpack/msgpack-c&quot;&gt;msgpack&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3.1.1&lt;/td&gt; 
   &lt;td&gt;Sadayuki Furuhashi&lt;/td&gt; 
   &lt;td&gt;Boost Software License version 1.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/nlohmann/json&quot;&gt;nlohmann&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3.11.2&lt;/td&gt; 
   &lt;td&gt;Niels Lohmann&lt;/td&gt; 
   &lt;td&gt;MIT License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/openssl/openssl&quot;&gt;OpenSSL&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3.0.12&lt;/td&gt; 
   &lt;td&gt;OpenSSL Software Foundation&lt;/td&gt; 
   &lt;td&gt;Apache 2.0 License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://gitlab.archlinux.org/pacman/pacman&quot;&gt;pacman&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5.2.2&lt;/td&gt; 
   &lt;td&gt;Judd Vinet&lt;/td&gt; 
   &lt;td&gt;GNU Public License version 2 (copyleft)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/rpm-software-management/popt&quot;&gt;popt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.16&lt;/td&gt; 
   &lt;td&gt;Jeff Johnson &amp;amp; Erik Troan&lt;/td&gt; 
   &lt;td&gt;MIT License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://gitlab.com/procps-ng/procps&quot;&gt;procps&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2.8.3&lt;/td&gt; 
   &lt;td&gt;Brian Edmonds et al.&lt;/td&gt; 
   &lt;td&gt;LGPL (copyleft)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/facebook/rocksdb/&quot;&gt;RocksDB&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;8.3.2&lt;/td&gt; 
   &lt;td&gt;Facebook Inc.&lt;/td&gt; 
   &lt;td&gt;Apache 2.0 License&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/rpm-software-management/rpm&quot;&gt;rpm&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;4.18.2&lt;/td&gt; 
   &lt;td&gt;Marc Ewing &amp;amp; Erik Troan&lt;/td&gt; 
   &lt;td&gt;GNU Public License version 2 (copyleft)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/sqlite/sqlite&quot;&gt;sqlite&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3.45.0&lt;/td&gt; 
   &lt;td&gt;D. Richard Hipp&lt;/td&gt; 
   &lt;td&gt;Public Domain (no restrictions)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/madler/zlib&quot;&gt;zlib&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.3.1&lt;/td&gt; 
   &lt;td&gt;Jean-loup Gailly &amp;amp; Mark Adler&lt;/td&gt; 
   &lt;td&gt;zlib/libpng License&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/wazuh/wazuh/main/framework/requirements.txt&quot;&gt;PyPi packages&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://documentation.wazuh.com&quot;&gt;Full documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://documentation.wazuh.com/current/installation-guide/index.html&quot;&gt;Wazuh installation guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get involved&lt;/h2&gt; 
&lt;p&gt;Become part of the &lt;a href=&quot;https://wazuh.com/community/&quot;&gt;Wazuh&#39;s community&lt;/a&gt; to learn from other users, participate in discussions, talk to our developers and contribute to the project.&lt;/p&gt; 
&lt;p&gt;If you want to contribute to our project please don’t hesitate to make pull-requests, submit issues or send commits, we will review all your questions.&lt;/p&gt; 
&lt;p&gt;You can also join our &lt;a href=&quot;https://wazuh.com/community/join-us-on-slack/&quot;&gt;Slack community channel&lt;/a&gt; and &lt;a href=&quot;https://groups.google.com/d/forum/wazuh&quot;&gt;mailing list&lt;/a&gt; by sending an email to &lt;a href=&quot;mailto:wazuh+subscribe@googlegroups.com&quot;&gt;wazuh+subscribe@googlegroups.com&lt;/a&gt;, to ask questions and participate in discussions.&lt;/p&gt; 
&lt;p&gt;Stay up to date on news, releases, engineering articles and more.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://wazuh.com&quot;&gt;Wazuh website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/company/wazuh&quot;&gt;Linkedin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/c/wazuhsecurity&quot;&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/wazuh&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wazuh.com/blog/&quot;&gt;Wazuh blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://wazuh.com/community/join-us-on-slack/&quot;&gt;Slack announcements channel&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;Wazuh Copyright (C) 2015-2023 Wazuh Inc. (License GPLv2)&lt;/p&gt; 
&lt;p&gt;Based on the OSSEC project started by Daniel Cid.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>curl/curl</title>
      <link>https://github.com/curl/curl</link>
      <description>&lt;p&gt;A command line tool and library for transferring data with URL syntax, supporting DICT, FILE, FTP, FTPS, GOPHER, GOPHERS, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, MQTT, POP3, POP3S, RTMP, RTMPS, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET, TFTP, WS and WSS. libcurl offers a myriad of powerful features&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://curl.se/&quot;&gt;&lt;img src=&quot;https://curl.se/logo/curl-logo.svg?sanitize=true&quot; alt=&quot;curl logo&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;curl is a command-line tool for transferring data specified with URL syntax. Learn how to use curl by reading &lt;a href=&quot;https://curl.se/docs/manpage.html&quot;&gt;the manpage&lt;/a&gt; or &lt;a href=&quot;https://everything.curl.dev/&quot;&gt;everything curl&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Find out how to install curl by reading &lt;a href=&quot;https://curl.se/docs/install.html&quot;&gt;the INSTALL document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;libcurl is the library curl is using to do its job. It is readily available to be used by your software. Read &lt;a href=&quot;https://curl.se/libcurl/c/libcurl.html&quot;&gt;the libcurl manpage&lt;/a&gt; to learn how.&lt;/p&gt; 
&lt;h2&gt;Open Source&lt;/h2&gt; 
&lt;p&gt;curl is Open Source and is distributed under an MIT-like &lt;a href=&quot;https://curl.se/docs/copyright.html&quot;&gt;license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;Contact us on a suitable &lt;a href=&quot;https://curl.se/mail/&quot;&gt;mailing list&lt;/a&gt; or use GitHub &lt;a href=&quot;https://github.com/curl/curl/issues&quot;&gt;issues&lt;/a&gt;/ &lt;a href=&quot;https://github.com/curl/curl/pulls&quot;&gt;pull requests&lt;/a&gt;/ &lt;a href=&quot;https://github.com/curl/curl/discussions&quot;&gt;discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All contributors to the project are listed in &lt;a href=&quot;https://curl.se/docs/thanks.html&quot;&gt;the THANKS document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Commercial support&lt;/h2&gt; 
&lt;p&gt;For commercial support, maybe private and dedicated help with your problems or applications using (lib)curl visit &lt;a href=&quot;https://curl.se/support.html&quot;&gt;the support page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Website&lt;/h2&gt; 
&lt;p&gt;Visit the &lt;a href=&quot;https://curl.se/&quot;&gt;curl website&lt;/a&gt; for the latest news and downloads.&lt;/p&gt; 
&lt;h2&gt;Source code&lt;/h2&gt; 
&lt;p&gt;Download the latest source from the Git server:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/curl/curl.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Security problems&lt;/h2&gt; 
&lt;p&gt;Report suspected security problems via &lt;a href=&quot;https://hackerone.com/curl&quot;&gt;our HackerOne page&lt;/a&gt; and not in public.&lt;/p&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Thank you to all our backers &lt;span&gt;🙏&lt;/span&gt; &lt;a href=&quot;https://opencollective.com/curl#section-contribute&quot;&gt;Become a backer&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a &lt;a href=&quot;https://curl.se/sponsors.html&quot;&gt;sponsor&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openwrt/openwrt</title>
      <link>https://github.com/openwrt/openwrt</link>
      <description>&lt;p&gt;This repository is a mirror of https://git.openwrt.org/openwrt/openwrt.git It is for reference only and is not active for check-ins. We will continue to accept Pull Requests here. They will be merged via staging trees then into openwrt.git.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/openwrt/openwrt/main/include/logo.png&quot; alt=&quot;OpenWrt logo&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;OpenWrt Project is a Linux operating system targeting embedded devices. Instead of trying to create a single, static firmware, OpenWrt provides a fully writable filesystem with package management. This frees you from the application selection and configuration provided by the vendor and allows you to customize the device through the use of packages to suit any application. For developers, OpenWrt is the framework to build an application without having to build a complete firmware around it; for users this means the ability for full customization, to use the device in ways never envisioned.&lt;/p&gt; 
&lt;p&gt;Sunshine!&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;Built firmware images are available for many architectures and come with a package selection to be used as WiFi home router. To quickly find a factory image usable to migrate from a vendor stock firmware to OpenWrt, try the &lt;em&gt;Firmware Selector&lt;/em&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://firmware-selector.openwrt.org/&quot;&gt;OpenWrt Firmware Selector&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If your device is supported, please follow the &lt;strong&gt;Info&lt;/strong&gt; link to see install instructions or consult the support resources listed below.&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;p&gt;An advanced user may require additional or specific package. (Toolchain, SDK, ...) For everything else than simple firmware download, try the wiki download page:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/downloads&quot;&gt;OpenWrt Wiki Download&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;To build your own firmware you need a GNU/Linux, BSD or macOS system (case sensitive filesystem required). Cygwin is unsupported because of the lack of a case sensitive file system.&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;p&gt;You need the following tools to compile OpenWrt, the package names vary between distributions. A complete list with distribution specific packages is found in the &lt;a href=&quot;https://openwrt.org/docs/guide-developer/build-system/install-buildsystem&quot;&gt;Build System Setup&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;binutils bzip2 diff find flex gawk gcc-6+ getopt grep install libc-dev libz-dev
make4.1+ perl python3.7+ rsync subversion unzip which
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Quickstart&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./scripts/feeds update -a&lt;/code&gt; to obtain all the latest package definitions defined in feeds.conf / feeds.conf.default&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;./scripts/feeds install -a&lt;/code&gt; to install symlinks for all obtained packages into package/feeds/&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make menuconfig&lt;/code&gt; to select your preferred configuration for the toolchain, target system &amp;amp; firmware packages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;make&lt;/code&gt; to build your firmware. This will download all sources, build the cross-compile toolchain and then cross-compile the GNU/Linux kernel &amp;amp; all chosen applications for your target system.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Related Repositories&lt;/h3&gt; 
&lt;p&gt;The main repository uses multiple sub-repositories to manage packages of different categories. All packages are installed via the OpenWrt package manager called &lt;code&gt;opkg&lt;/code&gt;. If you&#39;re looking to develop the web interface or port packages to OpenWrt, please find the fitting repository below.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/openwrt/luci&quot;&gt;LuCI Web Interface&lt;/a&gt;: Modern and modular interface to control the device via a web browser.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/openwrt/packages&quot;&gt;OpenWrt Packages&lt;/a&gt;: Community repository of ported packages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/openwrt/routing&quot;&gt;OpenWrt Routing&lt;/a&gt;: Packages specifically focused on (mesh) routing.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/openwrt/video&quot;&gt;OpenWrt Video&lt;/a&gt;: Packages specifically focused on display servers and clients (Xorg and Wayland).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support Information&lt;/h2&gt; 
&lt;p&gt;For a list of supported devices see the &lt;a href=&quot;https://openwrt.org/supported_devices&quot;&gt;OpenWrt Hardware Database&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/guide-quick-start/start&quot;&gt;Quick Start Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/guide-user/start&quot;&gt;User Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/guide-developer/start&quot;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://openwrt.org/docs/techref/start&quot;&gt;Technical Reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Support Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://forum.openwrt.org&quot;&gt;Forum&lt;/a&gt;: For usage, projects, discussions and hardware advise.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webchat.oftc.net/#openwrt&quot;&gt;Support Chat&lt;/a&gt;: Channel &lt;code&gt;#openwrt&lt;/code&gt; on &lt;strong&gt;oftc.net&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developer Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bugs.openwrt.org&quot;&gt;Bug Reports&lt;/a&gt;: Report bugs in OpenWrt&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://lists.openwrt.org/mailman/listinfo/openwrt-devel&quot;&gt;Dev Mailing List&lt;/a&gt;: Send patches&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://webchat.oftc.net/#openwrt-devel&quot;&gt;Dev Chat&lt;/a&gt;: Channel &lt;code&gt;#openwrt-devel&lt;/code&gt; on &lt;strong&gt;oftc.net&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenWrt is licensed under GPL-2.0&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TheAlgorithms/C</title>
      <link>https://github.com/TheAlgorithms/C</link>
      <description>&lt;p&gt;Collection of various algorithms in mathematics, machine learning, computer science, physics, etc implemented in C for educational purposes.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Algorithms - C # {#mainpage}&lt;/h1&gt; 
&lt;!-- the suffix in the above line is required for doxygen to consider this as the index page of the generated documentation site --&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitpod.io/#https://github.com/TheAlgorithms/C&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&quot; alt=&quot;Gitpod Ready-to-Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TheAlgorithms/C/actions/workflows/codeql_analysis.yml&quot;&gt;&lt;img src=&quot;https://github.com/TheAlgorithms/C/actions/workflows/codeql.yml/badge.svg?sanitize=true&quot; alt=&quot;CodeQL CI&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/TheAlgorithms&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Chat-Gitter-ff69b4.svg?label=Chat&amp;amp;logo=gitter&amp;amp;style=flat-square&quot; alt=&quot;Gitter chat&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TheAlgorithms/C/raw/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/static/v1.svg?label=Contributions&amp;amp;message=Welcome&amp;amp;color=0059b3&amp;amp;style=flat-square&quot; alt=&quot;contributions welcome&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/repo-size/TheAlgorithms/C?color=red&amp;amp;style=flat-square&quot; alt=&quot;GitHub repo size&quot; /&gt; &lt;a href=&quot;https://TheAlgorithms.github.io/C&quot;&gt;&lt;img src=&quot;https://github.com/TheAlgorithms/C/workflows/Doxygen%20CI/badge.svg?sanitize=true&quot; alt=&quot;Doxygen CI&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/TheAlgorithms/C/actions?query=workflow%3A%22Awesome+CI+Workflow%22&quot;&gt;&lt;img src=&quot;https://github.com/TheAlgorithms/C/workflows/Awesome%20CI%20Workflow/badge.svg?sanitize=true&quot; alt=&quot;Awesome CI&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://liberapay.com/TheAlgorithms&quot;&gt;&lt;img src=&quot;https://img.shields.io/liberapay/receives/TheAlgorithms.svg?logo=liberapay&quot; alt=&quot;Income&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://the-algorithms.com/discord/&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/808045925556682782.svg?logo=discord&amp;amp;colorB=5865F2&quot; alt=&quot;Discord chat&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://liberapay.com/TheAlgorithms/donate&quot;&gt;&lt;img src=&quot;https://liberapay.com/assets/widgets/donate.svg?sanitize=true&quot; alt=&quot;Donate&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;The repository is a collection of open-source implementations of a variety of algorithms implemented in C and licensed under &lt;a href=&quot;https://github.com/TheAlgorithms/C/raw/master/LICENSE&quot;&gt;GPLv3 License&lt;/a&gt;. The algorithms span a variety of topics from computer science, mathematics and statistics, data science, machine learning, engineering, etc.. The implementations and their associated documentations are meant to provide a learning resource for educators and students. Hence, one may find more than one implementation for the same objective but using different algorithm strategies and optimizations.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The repository provides implementations of various algorithms in one of the most fundamental general purpose languages - &lt;a href=&quot;https://en.wikipedia.org/wiki/C_(programming_language)&quot;&gt;C&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Well documented source code with detailed explanations provide a valuable resource for educators and students alike.&lt;/li&gt; 
 &lt;li&gt;Each source code is atomic using standard C library &lt;a href=&quot;https://en.wikipedia.org/wiki/C_standard_library&quot;&gt;&lt;code&gt;libc&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;no external libraries&lt;/em&gt; are required for their compilation and execution. Thus the fundamentals of the algorithms can be studied in much depth.&lt;/li&gt; 
 &lt;li&gt;Source codes are &lt;a href=&quot;https://github.com/TheAlgorithms/C/actions?query=workflow%3A%22Awesome+CI+Workflow%22&quot;&gt;compiled and tested&lt;/a&gt; for every commit on the latest versions of two major operating systems viz., MacOS and Ubuntu (Linux) using AppleClang 14.0.0 and GNU 11.3.0 respectively.&lt;/li&gt; 
 &lt;li&gt;Strict adherence to &lt;a href=&quot;https://en.wikipedia.org/wiki/C11_(C_standard_revision)&quot;&gt;C11&lt;/a&gt; standard ensures portability of code to embedded systems as well like ESP32, ARM Cortex, etc. with little to no changes.&lt;/li&gt; 
 &lt;li&gt;Self-checks within programs ensure correct implementations with confidence.&lt;/li&gt; 
 &lt;li&gt;Modular implementations and OpenSource licensing enable the functions to be utilized conveniently in other applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://TheAlgorithms.github.io/C&quot;&gt;Online Documentation&lt;/a&gt; is generated from the repository source codes directly. The documentation contains all resources including source code snippets, details on execution of the programs, diagrammatic representation of program flow, and links to external resources where necessary. Click on &lt;a href=&quot;https://TheAlgorithms.github.io/C/files.html&quot;&gt;Files menu&lt;/a&gt; to see the list of all the files documented with the code.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://thealgorithms.github.io/C&quot;&gt;Documentation of Algorithms in C&lt;/a&gt; by &lt;a href=&quot;https://github.com/TheAlgorithms/C/graphs/contributors&quot;&gt;The Algorithms Contributors&lt;/a&gt; is licensed under &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1&quot;&gt;CC BY-SA 4.0&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; style=&quot;height:22px!important;margin-left: 3px;vertical-align:text-bottom;&quot; src=&quot;https://mirrors.creativecommons.org/presskit/icons/cc.svg?sanitize=true&quot; /&gt;&lt;img alt=&quot;Credit must be given to the creator&quot; style=&quot;height:22px!important;margin-left: 3px;vertical-align:text-bottom;&quot; src=&quot;https://mirrors.creativecommons.org/presskit/icons/by.svg?sanitize=true&quot; /&gt;&lt;img alt=&quot;Adaptations must be shared under the same terms&quot; style=&quot;height:22px!important;margin-left: 3px;vertical-align:text-bottom;&quot; src=&quot;https://mirrors.creativecommons.org/presskit/icons/sa.svg?sanitize=true&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;p&gt;As a community developed and maintained repository, we welcome new un-plagiarized quality contributions. Please read our &lt;a href=&quot;https://github.com/TheAlgorithms/C/raw/master/CONTRIBUTING.md&quot;&gt;Contribution Guidelines&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>radareorg/radare2</title>
      <link>https://github.com/radareorg/radare2</link>
      <description>&lt;p&gt;UNIX-like reverse engineering framework and command-line toolset&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://radare.org/&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/doc/images/r2emoji.png&quot; alt=&quot;screenshot&quot; align=&quot;left&quot; width=&quot;128px&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Radare2: Libre Reversing Framework for Unix Geeks&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/latest-versions/radare2.svg?sanitize=true&quot; alt=&quot;Latest packaged version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/radareorg/radare2/actions/workflows/ci.yml?query=branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/radareorg/radare2/actions/workflows/ci.yml/badge.svg?branch=master&quot; alt=&quot;Tests Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/radareorg/radare2/actions/workflows/build.yml?query=branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/radareorg/radare2/actions/workflows/build.yml/badge.svg?branch=master&quot; alt=&quot;build&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/radareorg/radare2/actions/workflows/tcc.yml&quot;&gt;&lt;img src=&quot;https://github.com/radareorg/radare2/actions/workflows/tcc.yml/badge.svg?branch=master&quot; alt=&quot;tcc&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/741&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/741/badge&quot; alt=&quot;CII Best Practices&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://scan.coverity.com/projects/416&quot;&gt;&lt;img src=&quot;https://scan.coverity.com/projects/416/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/YBey7CR9jf&quot;&gt;&lt;img src=&quot;https://badgen.net/discord/members/YBey7CR9jf&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Current git &lt;code&gt;master&lt;/code&gt; branch is &lt;code&gt;6.0.3&lt;/code&gt;, next release will be &lt;code&gt;6.0.4&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/doc/abi.md&quot;&gt;abi stability&lt;/a&gt; documentation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Description&lt;/h3&gt; 
&lt;p&gt;r2 is a complete rewrite of radare. It provides a set of libraries, tools and plugins to ease reverse engineering tasks. Distributed under LGPLv3, despite each plugin can have different licenses (see &lt;code&gt;r2 -Lj&lt;/code&gt; for details)&lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;radare&lt;/strong&gt; project started as a simple command-line hexadecimal editor focused on forensics. Today, r2 is a full-featured low-level command-line tool with support for scripting with the embedded Javascript interpreter or via r2pipe.&lt;/p&gt; 
&lt;p&gt;r2 can edit files on local hard drives, view kernel memory, and debug programs locally or via a remote gdb/windbg servers. r2&#39;s wide architecture support allows you to analyze, emulate, debug, modify, and disassemble any binary.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.radare.org/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/doc/images/shot.png&quot; alt=&quot;screenshot&quot; align=&quot;center&quot; border=&quot;0&quot; width=&quot;600px&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Download the last &lt;a href=&quot;https://github.com/radareorg/radare2/releases&quot;&gt;released&lt;/a&gt; binaries.&lt;/p&gt; 
&lt;p&gt;The recommended way to install radare2 is from Git repository source:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/radareorg/radare2
radare2/sys/install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run &lt;code&gt;sys/install.sh&lt;/code&gt; for the default acr+make+symlink installation&lt;/li&gt; 
 &lt;li&gt;meson/ninja (muon/samu also works) and make builds are supported.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Source Build&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;r2 can be installed from &lt;code&gt;git&lt;/code&gt; or via &lt;code&gt;pip&lt;/code&gt; using &lt;code&gt;r2env&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Windows builds require meson and msvc or mingw as compilers&lt;/li&gt; 
 &lt;li&gt;To uninstall the current build of r2 run &lt;code&gt;make uninstall&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;To uninstall ALL the system installations of r2 do: &lt;code&gt;sudo make purge&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;On Windows use the .bat scripts and msvc:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bat&quot;&gt;preconfigure.bat       REM setup python, meson, ninja
configure.bat          REM run meson b + vs project
make.bat               REM run ninja -C b
prefix\bin\radare2.exe
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Popular Plugins:&lt;/h2&gt; 
&lt;p&gt;Using the &lt;code&gt;r2pm&lt;/code&gt; tool you can browse and install many plugins and tools that use radare2.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/esilsolve&quot;&gt;esilsolve&lt;/a&gt;: The symbolic execution plugin, based on esil and z3&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/iaito&quot;&gt;iaito&lt;/a&gt;: The official Qt graphical interface&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/radare2-extras/tree/master/keystone&quot;&gt;keystone&lt;/a&gt; Assembler instructions using the Keystone library&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/r2ai&quot;&gt;decai&lt;/a&gt; Decompiler based on AI&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/r2ai&quot;&gt;r2ai&lt;/a&gt; Run a Language Model in localhost with Llama inside r2!&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/wargio/r2dec-js&quot;&gt;r2dec&lt;/a&gt;: A decompiler based on r2 written in JS, accessed with the &lt;code&gt;pdd&lt;/code&gt; command&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/FernandoDoming/r2diaphora&quot;&gt;r2diaphora&lt;/a&gt;: &lt;a href=&quot;https://github.com/joxeankoret/diaphora&quot;&gt;Diaphora&lt;/a&gt;&#39;s binary diffing engine on top of radare2&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nowsecure/r2frida&quot;&gt;r2frida&lt;/a&gt;: The frida io plugin. Start r2 with &lt;code&gt;r2 frida://0&lt;/code&gt; to use it&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/r2ghidra&quot;&gt;r2ghidra&lt;/a&gt;: The standalone native ghidra decompiler accessible with &lt;code&gt;pdg&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/r4ghidra&quot;&gt;r4ghidra&lt;/a&gt;: Feel the radare joy inside your Ghidra&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/radare2-r2papi&quot;&gt;r2papi&lt;/a&gt; High level api on top of r2pipe&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/radare2-r2pipe&quot;&gt;r2pipe&lt;/a&gt; Script radare2 from any programming language&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/radare2-extras/tree/master/r2poke&quot;&gt;r2poke&lt;/a&gt; Integration with GNU/Poke for extended binary parsing capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/hanemile/radare2-GoReSym&quot;&gt;goresym&lt;/a&gt;: Import GoReSym symbol as flags&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/r2yara&quot;&gt;r2yara&lt;/a&gt; Run Yara from r2 or use r2 primitives from Yara&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/nowsecure/radius2&quot;&gt;radius2&lt;/a&gt;: A fast symbolic execution engine based on boolector and esil&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/radareorg/r2sarif&quot;&gt;r2sarif&lt;/a&gt; import/extend/export SARIF documents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;These are the first steps to use r2, read the book or find tutorials for more details&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ r2 /bin/ls   # open file in read-only
&amp;gt; aaa          # analyse the program (r2 -A)
&amp;gt; afl          # list all functions (try aflt, aflm)
&amp;gt; px 32        # print 32 byte hexdump current block
&amp;gt; s sym.main   # seek to main (using flag name)
&amp;gt; f~foo        # filter flags matching &#39;foo&#39; (internal |grep)
&amp;gt; iS;is        # list sections and symbols (rabin2 -Ss)
&amp;gt; pdf; agf     # disassembly and ascii-art function graph
&amp;gt; oo+;w hello  # reopen in read-write and write a string
&amp;gt; ?*~...       # interactive filter in all command help
&amp;gt; q            # quit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Many plugins are included in r2 by default. But you can extend its capabilities by using the &lt;a href=&quot;https://github.com/radareorg/radare2-pm&quot;&gt;r2pm&lt;/a&gt; package manager.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;r2pm -s &amp;lt;word&amp;gt;  # search packages matching a word
r2pm -Uci &amp;lt;pkg&amp;gt; # update database and clean install a package
r2pm -u &amp;lt;pkg&amp;gt;   # uninstall the given package
r2pm -l &amp;lt;pkg&amp;gt;   # list installed packages
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://book.rada.re&quot;&gt;Official Book&lt;/a&gt;: Read about r2 usage&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/COMMUNITY.md&quot;&gt;COMMUNITY.md&lt;/a&gt;: Community engagement and loose guidelines&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;: Information about reporting issues and contributing. See also &lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/DEVELOPERS.md&quot;&gt;DEVELOPERS.md&lt;/a&gt;: Development guidelines for r2&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;: Instructions for reporting vulnerabilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/USAGE.md&quot;&gt;USAGE.md&lt;/a&gt;: Some example commands&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/radareorg/radare2/master/INSTALL.md&quot;&gt;INSTALL.md&lt;/a&gt;: Installation instructions using make or meson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Learn more about r2 watching &lt;a href=&quot;https://www.youtube.com/c/r2con&quot;&gt;youtube talks&lt;/a&gt; from &lt;a href=&quot;https://rada.re/con&quot;&gt;r2con&lt;/a&gt;. There are also many blogposts, slidedecks and the &lt;a href=&quot;https://book.rada.re&quot;&gt;official radare2 book&lt;/a&gt;, but it&#39;s always a good idea to join any of the official chats and drop your questions or feedback there.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href=&quot;https://www.radare.org/&quot;&gt;https://www.radare.org/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discord: &lt;a href=&quot;https://discord.gg/YBey7CR9jf&quot;&gt;Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mastodon: &lt;a href=&quot;https://infosec.exchange/@radareorg&quot;&gt;@radareorg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Telegram: &lt;a href=&quot;https://t.me/radare&quot;&gt;Main&lt;/a&gt; and &lt;a href=&quot;https://t.me/radare_side&quot;&gt;Side&lt;/a&gt; channels&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://libera.chat&quot;&gt;irc.libera.chat&lt;/a&gt;: &lt;code&gt;#radare&lt;/code&gt;, &lt;code&gt;#radare_side&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://matrix.to/#/#radare:matrix.org&quot;&gt;Matrix&lt;/a&gt;: &lt;code&gt;#radare:matrix.org&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Supported Platforms&lt;/h1&gt; 
&lt;h2&gt;Operating Systems&lt;/h2&gt; 
&lt;p&gt;Windows (since XP for x86/x64/arm64), Linux, Darwin, GNU/Hurd, Apple&#39;s {Mac,i,iPad,watch}OS, Android, Wasmer, [Dragonfly, Net, Free, Open] BSD, Z/OS, QNX, SerenityOS, Solaris, AIX, Haiku, Vinix, FirefoxOS.&lt;/p&gt; 
&lt;h2&gt;Architectures&lt;/h2&gt; 
&lt;p&gt;i386, x86-64, Alpha, ARM, AVR, BPF, MIPS, PowerPC, SPARC, RISC-V, SH, m68k, S390, XCore, CR16, HPPA, ARC, Blackfin, Z80, H8/300, V810, PDP11, m680x, V850, CRIS, XAP (CSR), PIC, LM32, 8051, 6502, i4004, i8080, Propeller, EVM, OR1K Tricore, CHIP-8, LH5801, T8200, GameBoy, SNES, SPC700, MSP430, Xtensa, xcore, NIOS II, Java, Dalvik, Pickle, WebAssembly, MSIL, EBC, TMS320 (c54x, c55x, c55+, c64x), Hexagon, Brainfuck, Malbolge, whitespace, DCPU16, LANAI, lm32, MCORE, mcs96, RSP, SuperH-4, VAX, KVX, Am29000, LOONGARCH, JDH8, s390x, STM8.&lt;/p&gt; 
&lt;h2&gt;File Formats&lt;/h2&gt; 
&lt;p&gt;ELF, Mach-O, Fatmach-O, PE, PE+, MZ, COFF, XCOFF, OMF, TE, XBE, SEP64, BIOS/UEFI, Dyldcache, DEX, ART, Java class, Android boot image, Plan9 executables, Amiga HUNK, ZIMG, MBN/SBL bootloader, ELF coredump, MDMP (Windows minidump), PDP11, XTAC, CGC, WASM (WebAssembly binary), Commodore VICE emulator, QNX, WAD, OFF, TIC-80, GB/GBA, NDS and N3DS, and mount several filesystems like NTFS, FAT, HFS+, EXT,...&lt;/p&gt; 
&lt;h2&gt;Packaging Status&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://snapcraft.io/radare2&quot;&gt;&lt;img src=&quot;https://snapcraft.io/radare2/badge.svg?sanitize=true&quot; alt=&quot;Snap package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/termux/radare2.svg?sanitize=true&quot; alt=&quot;Termux package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/alpine_3_22/radare2.svg?sanitize=true&quot; alt=&quot;Alpine Linux 3.22 package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/alpine_3_21/radare2.svg?sanitize=true&quot; alt=&quot;Alpine Linux 3.21 package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/alpine_3_20/radare2.svg?sanitize=true&quot; alt=&quot;Alpine Linux 3.20 package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/arch/radare2.svg?sanitize=true&quot; alt=&quot;Arch package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/aur/radare2.svg?sanitize=true&quot; alt=&quot;AUR package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/epel_10/radare2.svg?sanitize=true&quot; alt=&quot;EPEL 10 package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/epel_9/radare2.svg?sanitize=true&quot; alt=&quot;EPEL 9 package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/epel_8/radare2.svg?sanitize=true&quot; alt=&quot;EPEL 8 package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/fedora_42/radare2.svg?sanitize=true&quot; alt=&quot;Fedora 42&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/fedora_41/radare2.svg?sanitize=true&quot; alt=&quot;Fedora 41&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/freebsd/radare2.svg?sanitize=true&quot; alt=&quot;FreeBSD port&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/openbsd/radare2.svg?sanitize=true&quot; alt=&quot;OpenBSD port&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/pkgsrc_current/radare2.svg?sanitize=true&quot; alt=&quot;pkgsrc current package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/homebrew/radare2.svg?sanitize=true&quot; alt=&quot;Homebrew package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/macports/radare2.svg?sanitize=true&quot; alt=&quot;MacPorts package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/haikuports_master/radare2.svg?sanitize=true&quot; alt=&quot;Haiku Ports&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/void_x86_64/radare2.svg?sanitize=true&quot; alt=&quot;Void Linux&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/ubuntu_24_10/radare2.svg?sanitize=true&quot; alt=&quot;Ubuntu 24.10 package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/ubuntu_24_04/radare2.svg?sanitize=true&quot; alt=&quot;Ubuntu 24.04 package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/ubuntu_20_04/radare2.svg?sanitize=true&quot; alt=&quot;Ubuntu 20.04 package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/debian_unstable/radare2.svg?sanitize=true&quot; alt=&quot;Debian Unstable package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://repology.org/project/radare2/versions&quot;&gt;&lt;img src=&quot;https://repology.org/badge/version-for-repo/debian_12/radare2.svg?sanitize=true&quot; alt=&quot;Debian 12 package&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>darktable-org/darktable</title>
      <link>https://github.com/darktable-org/darktable</link>
      <description>&lt;p&gt;darktable is an open source photography workflow application and raw developer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://www.darktable.org/&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/data/pixmaps/idbutton.png?raw=true&quot; alt=&quot;icon&quot; /&gt;&lt;/a&gt; darktable &lt;a href=&quot;https://github.com/darktable-org/darktable/actions/workflows/ci.yml?query=branch%3Amaster+is%3Acompleted+event%3Apush&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/darktable-org/darktable/ci.yml?branch=master&quot; alt=&quot;GitHub Workflow Status (branch)&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://bestpractices.coreinfrastructure.org/projects/470&quot;&gt;&lt;img src=&quot;https://bestpractices.coreinfrastructure.org/projects/470/badge&quot; alt=&quot;CII Best Practices&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;darktable is an open source photography workflow application and non-destructive raw developer - a virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images, enhance them and export them to local or remote storage.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/45535283/148689197-e53dd75f-32f1-4297-9a0f-a9547fd4e7c7.jpg&quot; alt=&quot;screenshot_lighttable&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;darktable is &lt;strong&gt;not&lt;/strong&gt; a free Adobe® Lightroom® replacement.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.darktable.org/&quot; title=&quot;darktable homepage&quot;&gt;https://www.darktable.org/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#website&quot;&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#requirements&quot;&gt;Requirements&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#supported-platforms&quot;&gt;Supported platforms&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#hardware&quot;&gt;Hardware&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#installing&quot;&gt;Installing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#latest-release&quot;&gt;Latest release&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#development-snapshot&quot;&gt;Development snapshot&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#updating-from-older-versions&quot;&gt;Updating from older versions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#obtaining-extensions&quot;&gt;Obtaining extensions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#building&quot;&gt;Building&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#dependencies&quot;&gt;Dependencies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#get-the-source&quot;&gt;Get the source&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#get-submodules&quot;&gt;Get submodules&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#compile&quot;&gt;Compile&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#further-reading&quot;&gt;Further reading&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#using&quot;&gt;Using&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#testunstable-version&quot;&gt;Test/unstable version&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#regularstable-version&quot;&gt;Regular/stable version&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#contributing&quot;&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#faq&quot;&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#why-is-my-camera-not-detected-when-plugged-in-&quot;&gt;Why is my camera not detected when plugged-in ?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#why-is-my-lens-not-detectedcorrected-in-darkroom-&quot;&gt;Why is my lens not detected/corrected in darkroom ?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#why-do-the-thumbnails-in-the-lighttable-view-look-different-to-the-preview-in-the-darkroom-view-&quot;&gt;Why do the thumbnails in the lighttable view look different to the preview in the darkroom view ?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;11&quot;&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#community&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The darktable user manual is maintained in the &lt;a href=&quot;https://github.com/darktable-org/dtdocs&quot;&gt;dtdocs&lt;/a&gt; repository.&lt;/p&gt; 
&lt;p&gt;Lua API documentation is maintained in the &lt;a href=&quot;https://github.com/darktable-org/luadocs&quot;&gt;luadocs&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Website&lt;/h2&gt; 
&lt;p&gt;The website (&lt;a href=&quot;https://www.darktable.org/&quot;&gt;https://www.darktable.org/&lt;/a&gt;) is maintained in the &lt;a href=&quot;https://github.com/darktable-org/dtorg&quot;&gt;dtorg&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;h3&gt;Supported platforms&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux&lt;/li&gt; 
 &lt;li&gt;FreeBSD&lt;/li&gt; 
 &lt;li&gt;NetBSD&lt;/li&gt; 
 &lt;li&gt;OpenBSD&lt;/li&gt; 
 &lt;li&gt;Windows 8.1 with &lt;a href=&quot;https://support.microsoft.com/en-us/topic/update-for-universal-c-runtime-in-windows-c0514201-7fe6-95a3-b0a5-287930f3560c&quot;&gt;UCRT&lt;/a&gt; and later&lt;/li&gt; 
 &lt;li&gt;Apple Silicon Macs running macOS 14 and later&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Big-endian platforms are not supported.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;32-bit platforms are not officially supported - they might or might not work.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Both darktable and the libraries it uses are developed on the Linux platform. Therefore, other platforms MAY have additional bugs that are not present in the Linux version. In addition, for example, on the Windows platform, printing support is not currently implemented. So we recommend, if you have a choice of platform, to use darktable on Linux.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Hardware&lt;/h3&gt; 
&lt;p&gt;(workable minimum / &lt;strong&gt;recommended minimum&lt;/strong&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;RAM: 4 GB / &lt;strong&gt;8 GB&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;CPU: Intel Pentium 4 (Core 2 for Windows) / &lt;strong&gt;Intel Core i5 4×2.4 GHz&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;GPU: none / &lt;strong&gt;Nvidia with 1024 CUDA cores, 4 GB, OpenCL 1.2 compatible&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;free disk space: 250 MB / &lt;strong&gt;1 GB&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;darktable can run on lightweight configurations (even on a Raspberry Pi), but expect modules like denoise, local contrast, contrast equalizer, retouch or liquify to be slow beyond usable.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;A GPU is not mandatory but is strongly recommended for a smoother experience. Nvidia GPUs are recommended for safety because some AMD drivers behave unreliably with some modules (e.g. local contrast).&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;If the latest release is still not available as a pre-built package for your distribution, you can build the software yourself following the instructions &lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#building&quot;&gt;below&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Latest release&lt;/h3&gt; 
&lt;p&gt;5.2.1 (stable)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/darktable-org/darktable/releases/download/release-5.2.1/darktable-5.2.1-win64.exe&quot;&gt;Download package for Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/darktable-org/darktable/releases/download/release-5.2.1/darktable-5.2.1-x86_64.dmg&quot;&gt;Download disk image for macOS on Intel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/darktable-org/darktable/releases/download/release-5.2.1/darktable-5.2.1-arm64.dmg&quot;&gt;Download disk image for macOS on Apple Silicon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/darktable-org/darktable/releases/download/release-5.2.1/darktable-5.2.1-arm64-13.5.dmg&quot;&gt;Download disk image for macOS 13.5 on Apple Silicon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/darktable-org/darktable/releases/download/release-5.2.1/Darktable-5.2.1-x86_64.AppImage&quot;&gt;Download AppImage for Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://software.opensuse.org/download.html?project=graphics:darktable:stable&amp;amp;package=darktable&quot;&gt;Install native packages or add a third-party repository for Linux distros&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flathub.org/apps/details/org.darktable.Darktable&quot;&gt;Install Flatpak package for Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.darktable.org/install/&quot;&gt;More information about installing darktable on any system&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;When using a pre-built package, ensure that it has been built with Lua, OpenCL, OpenMP and Colord support. These are optional and will not prevent darktable from running if missing, but their absence will degrade the user experience. You can check for them by running darktable with the &lt;code&gt;--version&lt;/code&gt; command line option.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Development snapshot&lt;/h3&gt; 
&lt;p&gt;The development snapshot reflects the current state of the master branch. It is intended for testing and is generally not safe. See the notes &lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#get-the-source&quot;&gt;below&lt;/a&gt; for warnings and precautions about using the master branch.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://software.opensuse.org/download.html?project=graphics:darktable:master&amp;amp;package=darktable&quot;&gt;Install native packages directly or add third party repository for some Linux distros&lt;/a&gt; (one snapshot per day)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/darktable-org/darktable/releases/tag/nightly&quot;&gt;Binary packages are provided for Linux (AppImage), macOS and Windows on a nightly basis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Updating from older versions&lt;/h2&gt; 
&lt;p&gt;When updating darktable from an older release, you only need to install the newest version. Existing files will be preserved.&lt;/p&gt; 
&lt;p&gt;However, newer releases occasionally need to change the structure of the library database (containing the whole list of images known to darktable, with their editing history). If this happens you will be prompted with a request to either upgrade the database or close the software.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Migration to a newer database structure/newer release means that your edits (both new and old) will no longer be compatible with older versions of darktable.&lt;/strong&gt; Upgrades are definitive. Newer versions are always compatible with older edits, but newer edits are generally not compatible with older versions.&lt;/p&gt; 
&lt;p&gt;darktable automatically backs up the library database when a new version causes it to be upgraded (in &lt;code&gt;~/.config/darktable/library.db-pre-3.0.0&lt;/code&gt; for example), so you can revert to the previous release by restoring this backup if needed (simply rename it to &lt;code&gt;library.db&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;You will not be able to open the newer version of the database with a version of darktable that only supports the older version of the database. This is impossible because the older application does not know how the database schema has changed, so its code will not be able to work with it.&lt;/p&gt; 
&lt;p&gt;You will be able to import images with an XMP sidecar file that contains newer versions of processing modules or new modules, but those image editing parts will be discarded and you will lose them.&lt;/p&gt; 
&lt;p&gt;If you plan to move regularly between two versions (new/unstable and old/stable) see &lt;a href=&quot;https://raw.githubusercontent.com/darktable-org/darktable/master/#testunstable-version&quot;&gt;below&lt;/a&gt; for details of how to do it safely.&lt;/p&gt; 
&lt;h2&gt;Obtaining extensions&lt;/h2&gt; 
&lt;p&gt;Extensions and plugins use the Lua scripting language and can be downloaded &lt;a href=&quot;https://github.com/darktable-org/lua-scripts&quot;&gt;here&lt;/a&gt;. Lua support is optional in darktable, so make sure you have the &lt;code&gt;lua&lt;/code&gt; interpreter and its development files (package &lt;code&gt;lua-dev&lt;/code&gt; or &lt;code&gt;lua-devel&lt;/code&gt;, depending on distributions) installed on your system while building or ensure the package you are using has been built with this library.&lt;/p&gt; 
&lt;p&gt;Extensions allow exporting for various media and websites, merge/stack/blend HDR, panoramas or focus bracketing, apply AI-based facial recognition, manage tags and GPS data, etc.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;h3&gt;Dependencies&lt;/h3&gt; 
&lt;p&gt;Compatible compilers/toolchains:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clang: 15 and later&lt;/li&gt; 
 &lt;li&gt;GCC: 12 and later&lt;/li&gt; 
 &lt;li&gt;MinGW-w64: 10 and later&lt;/li&gt; 
 &lt;li&gt;XCode: 15.2 and later&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Required dependencies (minimum version):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CMake 3.18&lt;/li&gt; 
 &lt;li&gt;GTK 3.24.15&lt;/li&gt; 
 &lt;li&gt;GLib 2.56&lt;/li&gt; 
 &lt;li&gt;SQLite 3.26&lt;/li&gt; 
 &lt;li&gt;libcurl 7.56&lt;/li&gt; 
 &lt;li&gt;libpng 1.5.0 &lt;em&gt;(for PNG import &amp;amp; export, also for reading LUT files in PNG format)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Exiv2 0.27.2 &lt;em&gt;(but at least 0.27.4 built with ISO BMFF support needed for Canon CR3 raw import)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;pugixml 1.8&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Required dependencies (no version requirement):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lensfun &lt;em&gt;(for automatic lens correction)&lt;/em&gt; (Note: alpha 0.3.95 and git master branch are not supported)&lt;/li&gt; 
 &lt;li&gt;libjpeg &lt;em&gt;(both the original IJG library and API-compatible ones, such as libjpeg-turbo, will work)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;LibTIFF &lt;em&gt;(for TIFF import &amp;amp; export)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Little CMS 2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Optional dependencies (minimum version):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenMP 4.5 &lt;em&gt;(for CPU multi-threading and SIMD vectorization)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;LLVM 7 &lt;em&gt;(for OpenCL checks at compilation time)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;OpenCL 1.2 &lt;em&gt;(for GPU-accelerated computing)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Lua 5.4 &lt;em&gt;(for plugins and extension scripting)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;G&#39;MIC 2.7.0 &lt;em&gt;(for .gmz compressed LUT files support)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;libgphoto2 2.5 &lt;em&gt;(for camera tethering)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Imath 3.1.0 &lt;em&gt;(for 16-bit &quot;half&quot; float TIFF export and faster import)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;libavif 0.9.3 &lt;em&gt;(for AVIF import &amp;amp; export)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;libheif 1.13.0 &lt;em&gt;(for HEIF/HEIC/HIF import; also for AVIF import if no libavif)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;libjxl 0.7.0 &lt;em&gt;(for JPEG XL import &amp;amp; export)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;WebP 0.3.0 &lt;em&gt;(for WebP import &amp;amp; export)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Optional dependencies (no version requirement):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;colord, Xatom &lt;em&gt;(for fetching the system display color profile)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;PortMidi &lt;em&gt;(for MIDI input support)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;SDL2 &lt;em&gt;(for gamepad input support)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;CUPS &lt;em&gt;(for print mode support)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;OpenEXR &lt;em&gt;(for EXR import &amp;amp; export)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;OpenJPEG &lt;em&gt;(for JPEG 2000 import &amp;amp; export)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;GraphicsMagick or ImageMagick &lt;em&gt;(for misc image format import)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To install all the dependencies on Linux systems, you may use the source repositories of your distribution (provided they are up-to-date):&lt;/p&gt; 
&lt;h4&gt;Fedora and RHEL/CentOS&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo dnf builddep darktable
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;OpenSuse&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo zypper si -d darktable
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Ubuntu&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sed -e &#39;/^#\sdeb-src /s/^# *//;t;d&#39; &quot;/etc/apt/sources.list&quot; \
  | sudo tee /etc/apt/sources.list.d/darktable-sources-tmp.list &amp;gt; /dev/null \
  &amp;amp;&amp;amp; (
    sudo apt-get update
    sudo apt-get build-dep darktable
  )
sudo rm /etc/apt/sources.list.d/darktable-sources-tmp.list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Debian&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt-get build-dep darktable
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Get the source&lt;/h3&gt; 
&lt;h4&gt;Master branch (unstable)&lt;/h4&gt; 
&lt;p&gt;The master branch contains the latest version of the source code and is intended:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;as a working base for developers,&lt;/li&gt; 
 &lt;li&gt;for beta-testers to chase bugs,&lt;/li&gt; 
 &lt;li&gt;for users willing to sacrifice stability for new features without waiting for the next release.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The master branch comes with no guarantee of stability and might corrupt your database and XMP files, result in loss of data and edit history or temporarily break compatibility with previous versions and commits.&lt;/p&gt; 
&lt;p&gt;How dangerous is it? Most of the time, it is fairly stable. As with any rolling-release kind of deployment, bugs appear more often but are fixed faster too. Sometimes, though, these bugs can result in losses or inconsistencies in the editing history of your pictures. This is fine if you don&#39;t need to open your edits again in the future, but maybe not if you manage an estate.&lt;/p&gt; 
&lt;p&gt;After backing up your &lt;code&gt;~/.config/darktable&lt;/code&gt; directory and the sidecar .XMP files of any pictures you intend to open with the master branch, you may obtain the source as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone --recurse-submodules --depth 1 https://github.com/darktable-org/darktable.git
cd darktable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See below (in &quot;Using&quot;) how to start a test install of the unstable version without damaging your regular stable install and files.&lt;/p&gt; 
&lt;h4&gt;Latest stable release&lt;/h4&gt; 
&lt;p&gt;5.2.1&lt;/p&gt; 
&lt;p&gt;The darktable project releases two major versions every year, on Summer and Winter Solstices, tagged with even numbers (e.g. 4.2, 4.4, 4.6, 4.8). Minor revisions are tagged with a third digit (e.g. 4.4.1, 4.4.2) and mostly provide bug fixes and camera support. You may want to compile these stable releases yourself to get better performance for your particular computer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone --recurse-submodules --depth 1 https://github.com/darktable-org/darktable.git
cd darktable
git fetch --tags
git checkout tags/release-5.2.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Get submodules&lt;/h3&gt; 
&lt;p&gt;Note that &lt;a href=&quot;https://github.com/houz/libxcf.git&quot;&gt;libxcf&lt;/a&gt;, &lt;a href=&quot;https://github.com/KhronosGroup/OpenCL-Headers.git&quot;&gt;OpenCL&lt;/a&gt;, &lt;a href=&quot;https://github.com/darktable-org/rawspeed&quot;&gt;RawSpeed&lt;/a&gt;, &lt;a href=&quot;https://github.com/gpakosz/whereami&quot;&gt;whereami&lt;/a&gt; and &lt;a href=&quot;https://github.com/LibRaw/LibRaw&quot;&gt;LibRaw&lt;/a&gt; are tracked via git submodules, so after checking-out darktable, you need to update/checkout the submodules too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git submodule update --init
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compile&lt;/h3&gt; 
&lt;h4&gt;Easy way&lt;/h4&gt; 
&lt;p&gt;WARNING: If you have previously built darktable, don&#39;t forget to first completely remove (&lt;code&gt;rm -R&lt;/code&gt;) the &lt;code&gt;build&lt;/code&gt; and &lt;code&gt;/opt/darktable&lt;/code&gt; directories to avoid conflicting files from different versions. Many weird behaviors and transient bugs have been reported that can be traced to the build cache not properly invalidating the changed dependencies, so the safest way is to completely remove previously built binaries and start again from scratch.&lt;/p&gt; 
&lt;p&gt;darktable provides a shell script that automatically takes care of building on Linux and macOS for classic cases in a single command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./build.sh --prefix /opt/darktable --build-type Release --install --sudo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to install a test version alongside your regular/stable version, change the install prefix:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;./build.sh --prefix /opt/darktable-test --build-type Release --install --sudo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This builds the software for your architecture only, with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-O3&lt;/code&gt; optimization level,&lt;/li&gt; 
 &lt;li&gt;SSE/AVX support if detected,&lt;/li&gt; 
 &lt;li&gt;OpenMP support (multi-threading and vectorization) if detected,&lt;/li&gt; 
 &lt;li&gt;OpenCL support (GPU offloading) if detected,&lt;/li&gt; 
 &lt;li&gt;Lua scripting support if detected.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you want to have dartkable displayed along your other applications, you only need to add a symbolic link:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;ln -s /opt/darktable/share/applications/org.darktable.darktable.desktop /usr/share/applications/org.darktable.darktable.desktop
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, your custom-built darktable is ready to be used just like any pre-packaged software.&lt;/p&gt; 
&lt;h4&gt;Manual way&lt;/h4&gt; 
&lt;p&gt;Alternatively, you can use a manual build to pass custom arguments.&lt;/p&gt; 
&lt;h5&gt;Linux&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX=/opt/darktable/ ..
cmake --build .
sudo cmake --install .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;macOS&lt;/h5&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/darktable-org/darktable/raw/master/packaging/macosx/BUILD_hb.txt&quot;&gt;Homebrew&lt;/a&gt; or &lt;a href=&quot;https://github.com/darktable-org/darktable/raw/master/packaging/macosx/BUILD.txt&quot;&gt;MacPorts&lt;/a&gt; instructions.&lt;/p&gt; 
&lt;h5&gt;Windows&lt;/h5&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/darktable-org/darktable/tree/master/packaging/windows&quot;&gt;these instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Using&lt;/h3&gt; 
&lt;h4&gt;Test/unstable version&lt;/h4&gt; 
&lt;p&gt;To use a test version of darktable without damaging your regular/stable version&#39;s files and database, start darktable in a terminal with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;/opt/darktable-test/bin/darktable --configdir &quot;~/.config/darktable-test&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and ensure that you set the option &quot;create XMP files&quot; to &quot;never&quot; in preferences -&amp;gt; storage -&amp;gt; XMP sidecar files. This way, your regular/stable version will save its configuration files in &lt;code&gt;~/.config/darktable&lt;/code&gt;, as usual, the test/unstable one will save in &lt;code&gt;~/.config/darktable-test&lt;/code&gt;, and the two versions will not produce database conflicts.&lt;/p&gt; 
&lt;h4&gt;Regular/stable version&lt;/h4&gt; 
&lt;p&gt;Simply launch it from your desktop application menu or, from a terminal, run &lt;code&gt;darktable&lt;/code&gt; or &lt;code&gt;/opt/darktable/bin/darktable&lt;/code&gt;. If the installation did not create a launcher in your applications menu, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo ln -s /opt/darktable/share/applications/org.darktable.darktable.desktop /usr/share/applications/org.darktable.darktable.desktop
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may find darktable configuration files in &lt;code&gt;~/.config/darktable&lt;/code&gt;. If you experience crashes at startup, try launching darktable from a terminal with OpenCL disabled using &lt;code&gt;darktable --disable-opencl&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Further reading&lt;/h3&gt; 
&lt;p&gt;There is a comprehensive list of build instructions for &lt;a href=&quot;https://github.com/darktable-org/darktable/wiki/Build-instructions-for-Ubuntu&quot;&gt;Ubuntu/Debian related distributions&lt;/a&gt; or for &lt;a href=&quot;https://github.com/darktable-org/darktable/wiki/Build-Instructions-for-Fedora&quot;&gt;Fedora and related distributions&lt;/a&gt;. These build instructions can be easily adapted to many other Linux distributions.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are many ways you can contribute to the darktable project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Write a blog about darktable&lt;/li&gt; 
 &lt;li&gt;Create a tutorial for darktable&lt;/li&gt; 
 &lt;li&gt;Help expand the &lt;a href=&quot;https://github.com/darktable-org/darktable/wiki&quot;&gt;user wiki&lt;/a&gt; or &lt;a href=&quot;https://github.com/darktable-org/dtdocs&quot;&gt;user manual&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Answer questions on the &lt;a href=&quot;https://matrix.to/#/#darktable-user:matrix.org&quot;&gt;user Matrix room&lt;/a&gt; or the &lt;a href=&quot;https://discuss.pixls.us/c/software/darktable/19&quot;&gt;pixls.us forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Share your ideas on the &lt;a href=&quot;https://matrix.to/#/#darktable-dev:matrix.org&quot;&gt;developer Matrix room&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Test &lt;a href=&quot;https://www.darktable.org/install/&quot;&gt;releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Review &lt;a href=&quot;https://github.com/darktable-org/darktable/pulls&quot;&gt;pull requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Start &lt;a href=&quot;https://www.darktable.org/development/&quot;&gt;hacking on darktable&lt;/a&gt; and see &lt;a href=&quot;https://github.com/darktable-org/darktable/wiki/Developer&#39;s-guide&quot;&gt;developer&#39;s guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Why is my camera not detected when plugged-in ?&lt;/h3&gt; 
&lt;p&gt;Check that you have the latest &lt;a href=&quot;http://www.gphoto.org/&quot; title=&quot;gphoto2 homepage&quot;&gt;gphoto2 library&lt;/a&gt; installed in order to support the newest cameras.&lt;/p&gt; 
&lt;h3&gt;Why is my lens not detected/corrected in darkroom ?&lt;/h3&gt; 
&lt;p&gt;Lens correction profiles are provided by Lensfun, which has 2 parts: a program and a database. Most Linux distributions provide a recent enough version of the program, but provide an outdated version of the database. If &lt;a href=&quot;https://lensfun.github.io/&quot;&gt;Lensfun&lt;/a&gt; is correctly installed, then update its database in a terminal by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;lensfun-update-data
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or alternatively&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;/usr/bin/g-lensfun-update-data
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Why do the thumbnails in the lighttable view look different to the preview in the darkroom view ?&lt;/h3&gt; 
&lt;p&gt;For RAW files that have never been edited in darktable (when you have just imported them), the lighttable view, by default, shows the JPEG preview placed into the RAW file by your camera. Loading this JPEG file is faster and makes the lighttable view more responsive when importing large collections of images.&lt;/p&gt; 
&lt;p&gt;However, this JPEG thumbnail is processed by the firmware of the camera, with proprietary algorithms, and colors, sharpness and contrast that might not look the same as darktable processing (which is what you see when opening the image in the darkroom view). Camera manufacturers don&#39;t publish details of the pixel processing they perform in their firmware so their look is not exactly or easily reproducible by other software.&lt;/p&gt; 
&lt;p&gt;However, once RAW images have been edited in darktable, the lighttable thumbnail should exactly match the darkroom preview, as they are processed in the same way.&lt;/p&gt; 
&lt;p&gt;If you never want to see the embedded JPEG thumbnail in the lighttable view, for RAW files, you should set the option &quot;use raw file instead of embedded JPEG from size&quot; to &quot;never&quot; in preferences -&amp;gt; lighttable.&lt;/p&gt; 
&lt;h2&gt;Wiki&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/darktable-org/darktable/wiki&quot; title=&quot;github wiki&quot;&gt;GitHub wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/darktable-org/darktable/wiki/Developer&#39;s-guide&quot; title=&quot;darktable developer wiki&quot;&gt;Developer wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discuss.pixls.us/c/software/darktable/19&quot;&gt;Darktable forum on pixls.us&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://photog.social/@darktable&quot;&gt;Darktable on Mastodon&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>openwall/john</title>
      <link>https://github.com/openwall/john</link>
      <description>&lt;p&gt;John the Ripper jumbo - advanced offline password cracker, which supports hundreds of hash and cipher types, and runs on many operating systems, CPUs, GPUs, and even some FPGAs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://circleci.com/gh/openwall/john/tree/bleeding-jumbo&quot;&gt;&lt;img src=&quot;https://circleci.com/gh/openwall/john/tree/bleeding-jumbo.svg?style=shield&quot; alt=&quot;Circle CI&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/openwall/john-packages/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Download-Windows%20Build-blue.svg?sanitize=true&quot; alt=&quot;Downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/openwall/john/raw/bleeding-jumbo/doc/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-GPL%20v2%2B-blue.svg?sanitize=true&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/openwall/john?color=yellow&quot; alt=&quot;GitHub commit activity&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/commits-since/openwall/john/1.9.0-Jumbo-1?color=brown&quot; alt=&quot;GitHub commits since tagged version&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;John the Ripper&lt;/h1&gt; 
&lt;p&gt;This is the community-enhanced, &quot;jumbo&quot; version of John the Ripper. It has a lot of code, documentation, and data contributed by jumbo developers and the user community. It is easy for new code to be added to jumbo, and the quality requirements are low, although lately we&#39;ve started subjecting all contributions to quite some automated testing. This means that you get a lot of functionality that is not necessarily &quot;mature&quot;, which in turn means that bugs in this code are to be expected.&lt;/p&gt; 
&lt;p&gt;John the Ripper homepage is:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.openwall.com/john/&quot;&gt;https://www.openwall.com/john/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you have any comments on this release or on JtR in general, please join the john-users mailing list and post in there:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.openwall.com/lists/john-users/&quot;&gt;https://www.openwall.com/lists/john-users/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For contributions to John the Ripper jumbo, please use pull requests on GitHub:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/openwall/john/raw/bleeding-jumbo/CONTRIBUTING.md&quot;&gt;https://github.com/openwall/john/blob/bleeding-jumbo/CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Included below is basic John the Ripper core documentation.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;John the Ripper password cracker.&lt;/h2&gt; 
&lt;p&gt;John the Ripper is a fast password cracker, currently available for many flavors of Unix, macOS, Windows, DOS, BeOS, and OpenVMS (the latter requires a contributed patch). Its primary purpose is to detect weak Unix passwords. Besides several crypt(3) password hash types most commonly found on various Unix flavors, supported out of the box are Kerberos/AFS and Windows LM hashes, as well as DES-based tripcodes, plus hundreds of additional hashes and ciphers in &quot;-jumbo&quot; versions.&lt;/p&gt; 
&lt;h2&gt;How to install.&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/INSTALL&quot;&gt;INSTALL&lt;/a&gt; for information on installing John on your system.&lt;/p&gt; 
&lt;h2&gt;How to use.&lt;/h2&gt; 
&lt;p&gt;To run John, you need to supply it with some password files and optionally specify a cracking mode, like this, using the default order of modes and assuming that &quot;passwd&quot; is a copy of your password file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;john passwd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, to restrict it to the wordlist mode only, but permitting the use of word mangling rules:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;john --wordlist=password.lst --rules passwd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Cracked passwords will be printed to the terminal and saved in the file called $JOHN/john.pot (in the documentation and in the configuration file for John, &quot;$JOHN&quot; refers to John&#39;s &quot;home directory&quot;; which directory it really is depends on how you installed John). The $JOHN/john.pot file is also used to not load password hashes that you already cracked when you run John the next time.&lt;/p&gt; 
&lt;p&gt;To retrieve the cracked passwords, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;john --show passwd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;While cracking, you can press any key for status, or &#39;q&#39; or Ctrl-C to abort the session saving its state to a file ($JOHN/john.rec by default). If you press Ctrl-C for a second time before John had a chance to complete handling of your first Ctrl-C, John will abort immediately without saving. By default, the state is also saved every 10 minutes to permit for recovery in case of a crash.&lt;/p&gt; 
&lt;p&gt;To continue an interrupted session, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;john --restore
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These are just the most essential things you can do with John. For a complete list of command line options and for more complicated usage examples you should refer to OPTIONS and EXAMPLES, respectively.&lt;/p&gt; 
&lt;p&gt;Please note that &quot;binary&quot; (pre-compiled) distributions of John may include alternate executables instead of just &quot;john&quot;. You may need to choose the executable that fits your system best, e.g. &quot;john-omp&quot; to take advantage of multiple CPUs and/or CPU cores.&lt;/p&gt; 
&lt;h2&gt;Features.&lt;/h2&gt; 
&lt;p&gt;John the Ripper is designed to be both feature-rich and fast. It combines several cracking modes in one program and is fully configurable for your particular needs (you can even define a custom cracking mode using the built-in compiler supporting a subset of C). Also, John is available for several different platforms which enables you to use the same cracker everywhere (you can even continue a cracking session which you started on another platform).&lt;/p&gt; 
&lt;p&gt;Out of the box, John supports (and autodetects) the following Unix crypt(3) hash types: traditional DES-based, &quot;bigcrypt&quot;, BSDI extended DES-based, FreeBSD MD5-based (also used on Linux and in Cisco IOS), and OpenBSD Blowfish-based (now also used on some Linux distributions and supported by recent versions of Solaris). Also supported out of the box are Kerberos/AFS and Windows LM (DES-based) hashes, as well as DES-based tripcodes.&lt;/p&gt; 
&lt;p&gt;When running on Linux distributions with glibc 2.7+, John 1.7.6+ additionally supports (and autodetects) SHA-crypt hashes (which are actually used by recent versions of Fedora and Ubuntu), with optional OpenMP parallelization (requires GCC 4.2+, needs to be explicitly enabled at compile-time by uncommenting the proper OMPFLAGS line near the beginning of the Makefile).&lt;/p&gt; 
&lt;p&gt;Similarly, when running on recent versions of Solaris, John 1.7.6+ supports and autodetects SHA-crypt and SunMD5 hashes, also with optional OpenMP parallelization (requires GCC 4.2+ or recent Sun Studio, needs to be explicitly enabled at compile-time by uncommenting the proper OMPFLAGS line near the beginning of the Makefile and at runtime by setting the OMP_NUM_THREADS environment variable to the desired number of threads).&lt;/p&gt; 
&lt;p&gt;&quot;-jumbo&quot; versions add support for hundreds of additional hash and cipher types, including fast built-in implementations of SHA-crypt and SunMD5, Windows NTLM (MD4-based) password hashes, various macOS and Mac OS X user password hashes, fast hashes such as raw MD5, SHA-1, SHA-256, and SHA-512 (which many &quot;web applications&quot; historically misuse for passwords), various other &quot;web application&quot; password hashes, various SQL and LDAP server password hashes, and lots of other hash types, as well as many non-hashes such as SSH private keys, S/Key skeykeys files, Kerberos TGTs, encrypted filesystems such as macOS .dmg files and &quot;sparse bundles&quot;, encrypted archives such as ZIP (classic PKZIP and WinZip/AES), RAR, and 7z, encrypted document files such as PDF and Microsoft Office&#39;s - and these are just some examples. To load some of these larger files for cracking, a corresponding bundled *2john program should be used first, and then its output fed into JtR -jumbo.&lt;/p&gt; 
&lt;h2&gt;Graphical User Interface (GUI).&lt;/h2&gt; 
&lt;p&gt;There is an official GUI for John the Ripper: Johnny.&lt;/p&gt; 
&lt;p&gt;Despite the fact that Johnny is oriented onto JtR core, all basic functionality is supposed to work in all versions, including jumbo.&lt;/p&gt; 
&lt;p&gt;Johnny is a separate program, therefore you need to have John the Ripper installed in order to use it.&lt;/p&gt; 
&lt;p&gt;More information about Johnny and its releases is on the wiki:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://openwall.info/wiki/john/johnny&quot;&gt;https://openwall.info/wiki/john/johnny&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation.&lt;/h2&gt; 
&lt;p&gt;The rest of documentation is located in separate files, listed here in the recommended order of reading:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/INSTALL&quot;&gt;INSTALL&lt;/a&gt; - installation instructions&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/OPTIONS&quot;&gt;OPTIONS&lt;/a&gt; - command line options and additional utilities&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/MODES&quot;&gt;MODES&lt;/a&gt; - cracking modes: what they are&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/CONFIG&quot;&gt;CONFIG&lt;/a&gt; (*) - how to customize&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/RULES&quot;&gt;RULES&lt;/a&gt; (*) - wordlist rules syntax&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/EXTERNAL&quot;&gt;EXTERNAL&lt;/a&gt; (*) - defining an external mode&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt; - usage examples - strongly recommended&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/FAQ&quot;&gt;FAQ&lt;/a&gt; - guess&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/CHANGES&quot;&gt;CHANGES&lt;/a&gt; (*) - history of changes&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/CONTACT&quot;&gt;CONTACT&lt;/a&gt; (*) - how to contact the author or otherwise obtain support&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/CREDITS&quot;&gt;CREDITS&lt;/a&gt; (*) - credits&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/LICENSE&quot;&gt;LICENSE&lt;/a&gt; - copyrights and licensing terms&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openwall/john/bleeding-jumbo/doc/COPYING&quot;&gt;COPYING&lt;/a&gt; - GNU GPL version 2, as referenced by LICENSE above&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(*) most users can safely skip these.&lt;/p&gt; 
&lt;p&gt;There are a lot of additional documentation files in jumbo&#39;s &quot;doc&quot; directory, which you&#39;ll also want to explore.&lt;/p&gt; 
&lt;p&gt;Happy reading!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
