<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub Ruby Monthly Trending</title>
    <description>Monthly Trending of Ruby in GitHub</description>
    <pubDate>Sat, 27 Sep 2025 01:56:54 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>crmne/ruby_llm</title>
      <link>https://github.com/crmne/ruby_llm</link>
      <description>&lt;p&gt;One beautiful Ruby API for OpenAI, Anthropic, Gemini, Bedrock, OpenRouter, DeepSeek, Ollama, VertexAI, Perplexity, Mistral, GPUStack &amp; OpenAI compatible APIs. Chat, Vision, Audio, PDF, Images, Embeddings, Tools, Streaming &amp; Rails integration.&lt;/p&gt;&lt;hr&gt;&lt;div align=&quot;center&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;/docs/assets/images/logotype_dark.svg&quot; /&gt; 
  &lt;img src=&quot;https://raw.githubusercontent.com/crmne/ruby_llm/main/docs/assets/images/logotype.svg?sanitize=true&quot; alt=&quot;RubyLLM&quot; height=&quot;120&quot; width=&quot;250&quot; /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;&lt;strong&gt;One &lt;em&gt;beautiful&lt;/em&gt; Ruby API for GPT, Claude, Gemini, and more.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Battle tested at &lt;a href=&quot;https://chatwithwork.com&quot;&gt;
   &lt;picture&gt;
    &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://chatwithwork.com/logotype-dark.svg&quot; /&gt;
    &lt;img src=&quot;https://chatwithwork.com/logotype.svg?sanitize=true&quot; alt=&quot;Chat with Work&quot; height=&quot;30&quot; align=&quot;absmiddle&quot; /&gt;
   &lt;/picture&gt;&lt;/a&gt; ‚Äî &lt;em&gt;Claude Code for your documents&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://badge.fury.io/rb/ruby_llm&quot;&gt;&lt;img src=&quot;https://badge.fury.io/rb/ruby_llm.svg?a=10&quot; alt=&quot;Gem Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rubocop/rubocop&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/code_style-rubocop-brightgreen.svg?sanitize=true&quot; alt=&quot;Ruby Style Guide&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://rubygems.org/gems/ruby_llm&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/dt/ruby_llm&quot; alt=&quot;Gem Downloads&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://codecov.io/gh/crmne/ruby_llm&quot;&gt;&lt;img src=&quot;https://codecov.io/gh/crmne/ruby_llm/branch/main/graph/badge.svg?a=2&quot; alt=&quot;codecov&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://trendshift.io/repositories/13640&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://trendshift.io/api/badge/repositories/13640&quot; alt=&quot;crmne%2Fruby_llm | Trendshift&quot; style=&quot;width: 250px; height: 55px;&quot; width=&quot;250&quot; height=&quot;55&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Using RubyLLM in production? &lt;a href=&quot;https://tally.so/r/3Na02p&quot;&gt;Share your story&lt;/a&gt;! Takes 5 minutes.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;p&gt;Build chatbots, AI agents, RAG applications. Works with OpenAI, Anthropic, Google, AWS, local models, and any OpenAI-compatible API.&lt;/p&gt; 
&lt;h2&gt;Why RubyLLM?&lt;/h2&gt; 
&lt;p&gt;Every AI provider ships their own bloated client. Different APIs. Different response formats. Different conventions. It&#39;s exhausting.&lt;/p&gt; 
&lt;p&gt;RubyLLM gives you one beautiful API for all of them. Same interface whether you&#39;re using GPT, Claude, or your local Ollama. Just three dependencies: Faraday, Zeitwerk, and Marcel. That&#39;s it.&lt;/p&gt; 
&lt;h2&gt;Show me the code&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Just ask questions
chat = RubyLLM.chat
chat.ask &quot;What&#39;s the best way to learn Ruby?&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Analyze any file type
chat.ask &quot;What&#39;s in this image?&quot;, with: &quot;ruby_conf.jpg&quot;
chat.ask &quot;What&#39;s happening in this video?&quot;, with: &quot;video.mp4&quot;
chat.ask &quot;Describe this meeting&quot;, with: &quot;meeting.wav&quot;
chat.ask &quot;Summarize this document&quot;, with: &quot;contract.pdf&quot;
chat.ask &quot;Explain this code&quot;, with: &quot;app.rb&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Multiple files at once
chat.ask &quot;Analyze these files&quot;, with: [&quot;diagram.png&quot;, &quot;report.pdf&quot;, &quot;notes.txt&quot;]
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Stream responses
chat.ask &quot;Tell me a story about Ruby&quot; do |chunk|
  print chunk.content
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Generate images
RubyLLM.paint &quot;a sunset over mountains in watercolor style&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Create embeddings
RubyLLM.embed &quot;Ruby is elegant and expressive&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Moderate content for safety
RubyLLM.moderate &quot;Check if this text is safe&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Let AI use your code
class Weather &amp;lt; RubyLLM::Tool
  description &quot;Get current weather&quot;
  param :latitude
  param :longitude

  def execute(latitude:, longitude:)
    url = &quot;https://api.open-meteo.com/v1/forecast?latitude=#{latitude}&amp;amp;longitude=#{longitude}&amp;amp;current=temperature_2m,wind_speed_10m&quot;
    JSON.parse(Faraday.get(url).body)
  end
end

chat.with_tool(Weather).ask &quot;What&#39;s the weather in Berlin?&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Get structured output
class ProductSchema &amp;lt; RubyLLM::Schema
  string :name
  number :price
  array :features do
    string
  end
end

response = chat.with_schema(ProductSchema).ask &quot;Analyze this product&quot;, with: &quot;product.txt&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Chat:&lt;/strong&gt; Conversational AI with &lt;code&gt;RubyLLM.chat&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vision:&lt;/strong&gt; Analyze images and videos&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Audio:&lt;/strong&gt; Transcribe and understand speech&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documents:&lt;/strong&gt; Extract from PDFs, CSVs, JSON, any file type&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image generation:&lt;/strong&gt; Create images with &lt;code&gt;RubyLLM.paint&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Embeddings:&lt;/strong&gt; Generate embeddings with &lt;code&gt;RubyLLM.embed&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Moderation:&lt;/strong&gt; Content safety with &lt;code&gt;RubyLLM.moderate&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tools:&lt;/strong&gt; Let AI call your Ruby methods&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Structured output:&lt;/strong&gt; JSON schemas that just work&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Streaming:&lt;/strong&gt; Real-time responses with blocks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rails:&lt;/strong&gt; ActiveRecord integration with &lt;code&gt;acts_as_chat&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Async:&lt;/strong&gt; Fiber-based concurrency&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model registry:&lt;/strong&gt; 500+ models with capability detection and pricing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Providers:&lt;/strong&gt; OpenAI, Anthropic, Gemini, VertexAI, Bedrock, DeepSeek, Mistral, Ollama, OpenRouter, Perplexity, GPUStack, and any OpenAI-compatible API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Add to your Gemfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem &#39;ruby_llm&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then &lt;code&gt;bundle install&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Configure your API keys:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# config/initializers/ruby_llm.rb
RubyLLM.configure do |config|
  config.openai_api_key = ENV[&#39;OPENAI_API_KEY&#39;]
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Rails&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;# Install Rails Integration
rails generate ruby_llm:install

# Add Chat UI (optional)
rails generate ruby_llm:chat_ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class Chat &amp;lt; ApplicationRecord
  acts_as_chat
end

chat = Chat.create! model: &quot;claude-sonnet-4&quot;
chat.ask &quot;What&#39;s in this file?&quot;, with: &quot;report.pdf&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Visit &lt;code&gt;http://localhost:3000/chats&lt;/code&gt; for a ready-to-use chat interface!&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://rubyllm.com&quot;&gt;rubyllm.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://raw.githubusercontent.com/crmne/ruby_llm/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Released under the MIT License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Homebrew/brew</title>
      <link>https://github.com/Homebrew/brew</link>
      <description>&lt;p&gt;üç∫ The missing package manager for macOS (or Linux)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Homebrew&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Homebrew/brew/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/Homebrew/brew.svg?sanitize=true&quot; alt=&quot;GitHub release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Homebrew/brew/raw/HEAD/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/Homebrew/brew&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Features, usage and installation instructions are &lt;a href=&quot;https://brew.sh&quot;&gt;summarised on the homepage&lt;/a&gt;. Terminology (e.g. the difference between a Cellar, Tap, Cask and so forth) is &lt;a href=&quot;https://docs.brew.sh/Formula-Cookbook#homebrew-terminology&quot;&gt;explained here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;What Packages Are Available?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Type &lt;code&gt;brew formulae&lt;/code&gt; for a list.&lt;/li&gt; 
 &lt;li&gt;Or visit &lt;a href=&quot;https://formulae.brew.sh&quot;&gt;formulae.brew.sh&lt;/a&gt; to browse packages online.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;More Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;brew help&lt;/code&gt;, &lt;code&gt;man brew&lt;/code&gt; or check &lt;a href=&quot;https://docs.brew.sh/&quot;&gt;our documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;First, please run &lt;code&gt;brew update&lt;/code&gt; and &lt;code&gt;brew doctor&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Second, read the &lt;a href=&quot;https://docs.brew.sh/Troubleshooting&quot;&gt;Troubleshooting Checklist&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If you don&#39;t read these it will take us far longer to help you with your problem.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;Homebrew is a non-profit project run entirely by unpaid volunteers. We need your funds to pay for software, hardware and hosting around continuous integration and future improvements to the project. Every donation will be spent on making Homebrew better for our users.&lt;/p&gt; 
&lt;p&gt;Please consider a regular donation through &lt;a href=&quot;https://github.com/sponsors/Homebrew&quot;&gt;GitHub Sponsors&lt;/a&gt;, &lt;a href=&quot;https://opencollective.com/homebrew&quot;&gt;Open Collective&lt;/a&gt; or &lt;a href=&quot;https://www.patreon.com/homebrew&quot;&gt;Patreon&lt;/a&gt;. Homebrew is fiscally hosted by the &lt;a href=&quot;https://opencollective.com/opensource&quot;&gt;Open Source Collective&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For questions about donations, including corporate giving, please email the Homebrew PLC at &lt;a href=&quot;mailto:plc@brew.sh&quot;&gt;plc@brew.sh&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/orgs/Homebrew/discussions&quot;&gt;Homebrew/discussions (forum)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fosstodon.org/@homebrew&quot;&gt;@homebrew@fosstodon.org (Mastodon)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://bsky.app/profile/brew.sh&quot;&gt;@brew.sh (Bluesky)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://x.com/MacHomebrew&quot;&gt;@MacHomebrew (ùïè (formerly known as Twitter))&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We&#39;d love you to contribute to Homebrew. First, please read our &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/brew/main/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/.github/raw/HEAD/CODE_OF_CONDUCT.md#code-of-conduct&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We explicitly welcome contributions from people who have never contributed to open-source before: we were all beginners once! We can help build on a partially working pull request with the aim of getting it merged. We are also actively seeking to diversify our contributors and especially welcome contributions from women from all backgrounds and people of colour.&lt;/p&gt; 
&lt;p&gt;A good starting point for contributing is to first &lt;a href=&quot;https://docs.brew.sh/FAQ#can-i-edit-formulae-myself&quot;&gt;tap &lt;code&gt;homebrew/core&lt;/code&gt;&lt;/a&gt;, then run &lt;code&gt;brew audit --strict&lt;/code&gt; with some of the packages you use (e.g. &lt;code&gt;brew audit --strict wget&lt;/code&gt; if you use &lt;code&gt;wget&lt;/code&gt;) and read through the warnings. Try to fix them until &lt;code&gt;brew audit --strict&lt;/code&gt; shows no results and &lt;a href=&quot;https://docs.brew.sh/How-To-Open-a-Homebrew-Pull-Request&quot;&gt;submit a pull request&lt;/a&gt;. If no formulae you use have warnings you can run &lt;code&gt;brew audit --strict&lt;/code&gt; without arguments to have it run on all packages and pick one.&lt;/p&gt; 
&lt;p&gt;Alternatively, for something more substantial, check out one of the issues labelled &lt;code&gt;help wanted&lt;/code&gt; in &lt;a href=&quot;https://github.com/homebrew/brew/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22&quot;&gt;Homebrew/brew&lt;/a&gt; or &lt;a href=&quot;https://github.com/homebrew/homebrew-core/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22&quot;&gt;Homebrew/homebrew-core&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Good luck!&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Please report security issues by filling in &lt;a href=&quot;https://github.com/homebrew/brew/security/advisories/new&quot;&gt;the security advisory form&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Who We Are&lt;/h2&gt; 
&lt;p&gt;Homebrew&#39;s &lt;a href=&quot;https://docs.brew.sh/Homebrew-Governance#6-project-leader&quot;&gt;Project Leader&lt;/a&gt; is &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;Mike McQuaid&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Homebrew&#39;s &lt;a href=&quot;https://docs.brew.sh/Homebrew-Governance#4-project-leadership-committee&quot;&gt;Project Leadership Committee&lt;/a&gt; is &lt;a href=&quot;https://github.com/colindean&quot;&gt;Colin Dean&lt;/a&gt;, &lt;a href=&quot;https://github.com/iMichka&quot;&gt;Michka Popoff&lt;/a&gt;, &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;Mike McQuaid&lt;/a&gt;, &lt;a href=&quot;https://github.com/p-linnane&quot;&gt;Patrick Linnane&lt;/a&gt; and &lt;a href=&quot;https://github.com/mozzadrella&quot;&gt;Vanessa Gennarelli&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Homebrew&#39;s &lt;a href=&quot;https://docs.brew.sh/Homebrew-Governance#7-technical-steering-committee&quot;&gt;Technical Steering Committee&lt;/a&gt; is &lt;a href=&quot;https://github.com/Bo98&quot;&gt;Bo Anderson&lt;/a&gt;, &lt;a href=&quot;https://github.com/issyl0&quot;&gt;Issy Long&lt;/a&gt;, &lt;a href=&quot;https://github.com/cho-m&quot;&gt;Michael Cho&lt;/a&gt;, &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;Mike McQuaid&lt;/a&gt; and &lt;a href=&quot;https://github.com/ZhongRuoyu&quot;&gt;Ruoyu Zhong&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Homebrew&#39;s maintainers are &lt;a href=&quot;https://github.com/bevanjkay&quot;&gt;Bevan Kay&lt;/a&gt;, &lt;a href=&quot;https://github.com/Bo98&quot;&gt;Bo Anderson&lt;/a&gt;, &lt;a href=&quot;https://github.com/branchvincent&quot;&gt;Branch Vincent&lt;/a&gt;, &lt;a href=&quot;https://github.com/alebcay&quot;&gt;Caleb Xu&lt;/a&gt;, &lt;a href=&quot;https://github.com/carlocab&quot;&gt;Carlo Cabrera&lt;/a&gt;, &lt;a href=&quot;https://github.com/daeho-ro&quot;&gt;Daeho Ro&lt;/a&gt;, &lt;a href=&quot;https://github.com/dduugg&quot;&gt;Douglas Eichelberger&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtrodrigues&quot;&gt;Dustin Rodrigues&lt;/a&gt;, &lt;a href=&quot;https://github.com/EricFromCanada&quot;&gt;Eric Knibbe&lt;/a&gt;, &lt;a href=&quot;https://github.com/fxcoudert&quot;&gt;FX Coudert&lt;/a&gt;, &lt;a href=&quot;https://github.com/issyl0&quot;&gt;Issy Long&lt;/a&gt;, &lt;a href=&quot;https://github.com/krehel&quot;&gt;Justin Krehel&lt;/a&gt;, &lt;a href=&quot;https://github.com/khipp&quot;&gt;Klaus Hipp&lt;/a&gt;, &lt;a href=&quot;https://github.com/reitermarkus&quot;&gt;Markus Reiter&lt;/a&gt;, &lt;a href=&quot;https://github.com/cho-m&quot;&gt;Michael Cho&lt;/a&gt;, &lt;a href=&quot;https://github.com/iMichka&quot;&gt;Michka Popoff&lt;/a&gt;, &lt;a href=&quot;https://github.com/MikeMcQuaid&quot;&gt;Mike McQuaid&lt;/a&gt;, &lt;a href=&quot;https://github.com/nandahkrishna&quot;&gt;Nanda H Krishna&lt;/a&gt;, &lt;a href=&quot;https://github.com/p-linnane&quot;&gt;Patrick Linnane&lt;/a&gt;, &lt;a href=&quot;https://github.com/chenrui333&quot;&gt;Rui Chen&lt;/a&gt;, &lt;a href=&quot;https://github.com/ZhongRuoyu&quot;&gt;Ruoyu Zhong&lt;/a&gt;, &lt;a href=&quot;https://github.com/Rylan12&quot;&gt;Rylan Polster&lt;/a&gt;, &lt;a href=&quot;https://github.com/samford&quot;&gt;Sam Ford&lt;/a&gt;, &lt;a href=&quot;https://github.com/SMillerDev&quot;&gt;Sean Molenaar&lt;/a&gt;, &lt;a href=&quot;https://github.com/stefanb&quot;&gt;≈†tefan Baebler&lt;/a&gt;, &lt;a href=&quot;https://github.com/Moisan&quot;&gt;Thierry Moisan&lt;/a&gt; and &lt;a href=&quot;https://github.com/woodruffw&quot;&gt;William Woodruff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Former maintainers with significant contributions include &lt;a href=&quot;https://github.com/bayandin&quot;&gt;Alexander Bayandin&lt;/a&gt;, &lt;a href=&quot;https://github.com/miccal&quot;&gt;Miccal Matthews&lt;/a&gt;, &lt;a href=&quot;https://github.com/mistydemeo&quot;&gt;Misty De M√©o&lt;/a&gt;, &lt;a href=&quot;https://github.com/sjackman&quot;&gt;Shaun Jackman&lt;/a&gt;, &lt;a href=&quot;https://github.com/vitorgalvao&quot;&gt;V√≠tor Galv√£o&lt;/a&gt;, &lt;a href=&quot;https://github.com/claui&quot;&gt;Claudia Pellegrino&lt;/a&gt;, &lt;a href=&quot;https://github.com/SeekingMeaning&quot;&gt;Seeker&lt;/a&gt;, &lt;a href=&quot;https://github.com/javian&quot;&gt;Jan Viljanen&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcount&quot;&gt;JCount&lt;/a&gt;, &lt;a href=&quot;https://github.com/commitay&quot;&gt;commitay&lt;/a&gt;, &lt;a href=&quot;https://github.com/DomT4&quot;&gt;Dominyk Tiller&lt;/a&gt;, &lt;a href=&quot;https://github.com/tdsmith&quot;&gt;Tim Smith&lt;/a&gt;, &lt;a href=&quot;https://github.com/bfontaine&quot;&gt;Baptiste Fontaine&lt;/a&gt;, &lt;a href=&quot;https://github.com/xu-cheng&quot;&gt;Xu Cheng&lt;/a&gt;, &lt;a href=&quot;https://github.com/UniqMartin&quot;&gt;Martin Afanasjew&lt;/a&gt;, &lt;a href=&quot;https://github.com/asparagui&quot;&gt;Brett Koonce&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sharpie&quot;&gt;Charlie Sharpsteen&lt;/a&gt;, &lt;a href=&quot;https://github.com/jacknagel&quot;&gt;Jack Nagel&lt;/a&gt;, &lt;a href=&quot;https://github.com/adamv&quot;&gt;Adam Vandenberg&lt;/a&gt;, &lt;a href=&quot;https://github.com/apjanke&quot;&gt;Andrew Janke&lt;/a&gt;, &lt;a href=&quot;https://github.com/dunn&quot;&gt;Alex Dunn&lt;/a&gt;, &lt;a href=&quot;https://github.com/neutric&quot;&gt;neutric&lt;/a&gt;, &lt;a href=&quot;https://github.com/nijikon&quot;&gt;Tomasz Pajor&lt;/a&gt;, &lt;a href=&quot;https://github.com/vladshablinsky&quot;&gt;Uladzislau Shablinski&lt;/a&gt;, &lt;a href=&quot;https://github.com/alyssais&quot;&gt;Alyssa Ross&lt;/a&gt;, &lt;a href=&quot;https://github.com/ilovezfs&quot;&gt;ilovezfs&lt;/a&gt;, &lt;a href=&quot;https://github.com/lembacon&quot;&gt;Chongyu Zhu&lt;/a&gt; and Homebrew&#39;s creator: &lt;a href=&quot;https://github.com/mxcl&quot;&gt;Max Howell&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Code is under the &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/brew/main/LICENSE.txt&quot;&gt;BSD 2-clause &quot;Simplified&quot; License&lt;/a&gt;. Documentation is under the &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Our macOS continuous integration infrastructure is hosted by &lt;a href=&quot;https://www.macstadium.com/customers/homebrew&quot;&gt;MacStadium&#39;s Orka&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.macstadium.com&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/125011/22776032/097557ac-eea6-11e6-8ba8-eff22dfd58f1.png&quot; alt=&quot;Powered by MacStadium&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Secure password storage and syncing is provided by &lt;a href=&quot;https://1password.com/teams/&quot;&gt;1Password for Teams&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://1password.com&quot;&gt;&lt;img src=&quot;https://i.1password.com/akb/featured/1password-icon.svg?sanitize=true&quot; alt=&quot;1Password&quot; height=&quot;64&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://brew.sh&quot;&gt;https://brew.sh&lt;/a&gt;&#39;s DNS is &lt;a href=&quot;https://dnsimple.com/resolving/homebrew&quot;&gt;resolving with DNSimple&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://dnsimple.com/resolving/homebrew#gh-light-mode-only&quot;&gt;&lt;img src=&quot;https://cdn.dnsimple.com/assets/resolving-with-us/logo-light.png&quot; alt=&quot;DNSimple&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://dnsimple.com/resolving/homebrew#gh-dark-mode-only&quot;&gt;&lt;img src=&quot;https://cdn.dnsimple.com/assets/resolving-with-us/logo-dark.png&quot; alt=&quot;DNSimple&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Homebrew is generously supported by &lt;a href=&quot;https://github.com/github&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;https://github.com/customink&quot;&gt;Custom Ink&lt;/a&gt;, &lt;a href=&quot;https://github.com/ydnar&quot;&gt;Randy Reddig&lt;/a&gt;, &lt;a href=&quot;https://github.com/Codecademy&quot;&gt;Codecademy&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikadelbert&quot;&gt;mikadelbert&lt;/a&gt;, &lt;a href=&quot;https://github.com/Workbrew&quot;&gt;Workbrew&lt;/a&gt; and many other users and organisations via &lt;a href=&quot;https://github.com/sponsors/Homebrew&quot;&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/github&quot;&gt;&lt;img src=&quot;https://github.com/github.png?size=64&quot; alt=&quot;GitHub&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>modelcontextprotocol/ruby-sdk</title>
      <link>https://github.com/modelcontextprotocol/ruby-sdk</link>
      <description>&lt;p&gt;The official Ruby SDK for the Model Context Protocol. Maintained in collaboration with Shopify.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Ruby SDK &lt;a href=&quot;https://rubygems.org/gems/mcp&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/mcp&quot; alt=&quot;Gem Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/modelcontextprotocol/ruby-sdk/raw/main/LICENSE.txt&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-green&quot; alt=&quot;MIT licensed&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/modelcontextprotocol/ruby-sdk/actions/workflows/ci.yml&quot;&gt;&lt;img src=&quot;https://github.com/modelcontextprotocol/ruby-sdk/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;CI&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;The official Ruby SDK for Model Context Protocol servers and clients.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Add this line to your application&#39;s Gemfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem &#39;mcp&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then execute:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ bundle install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or install it yourself as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ gem install mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may need to add additional dependencies depending on which features you wish to access.&lt;/p&gt; 
&lt;h2&gt;Building an MCP Server&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;MCP::Server&lt;/code&gt; class is the core component that handles JSON-RPC requests and responses. It implements the Model Context Protocol specification, handling model context requests and responses.&lt;/p&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Implements JSON-RPC 2.0 message handling&lt;/li&gt; 
 &lt;li&gt;Supports protocol initialization and capability negotiation&lt;/li&gt; 
 &lt;li&gt;Manages tool registration and invocation&lt;/li&gt; 
 &lt;li&gt;Supports prompt registration and execution&lt;/li&gt; 
 &lt;li&gt;Supports resource registration and retrieval&lt;/li&gt; 
 &lt;li&gt;Supports stdio &amp;amp; Streamable HTTP (including SSE) transports&lt;/li&gt; 
 &lt;li&gt;Supports notifications for list changes (tools, prompts, resources)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported Methods&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;initialize&lt;/code&gt; - Initializes the protocol and returns server capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ping&lt;/code&gt; - Simple health check&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tools/list&lt;/code&gt; - Lists all registered tools and their schemas&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tools/call&lt;/code&gt; - Invokes a specific tool with provided arguments&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;prompts/list&lt;/code&gt; - Lists all registered prompts and their schemas&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;prompts/get&lt;/code&gt; - Retrieves a specific prompt by name&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resources/list&lt;/code&gt; - Lists all registered resources and their schemas&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resources/read&lt;/code&gt; - Retrieves a specific resource by name&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resources/templates/list&lt;/code&gt; - Lists all registered resource templates and their schemas&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Custom Methods&lt;/h3&gt; 
&lt;p&gt;The server allows you to define custom JSON-RPC methods beyond the standard MCP protocol methods using the &lt;code&gt;define_custom_method&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server = MCP::Server.new(name: &quot;my_server&quot;)

# Define a custom method that returns a result
server.define_custom_method(method_name: &quot;add&quot;) do |params|
  params[:a] + params[:b]
end

# Define a custom notification method (returns nil)
server.define_custom_method(method_name: &quot;notify&quot;) do |params|
  # Process notification
  nil
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Accepts any method name as a string&lt;/li&gt; 
 &lt;li&gt;Block receives the request parameters as a hash&lt;/li&gt; 
 &lt;li&gt;Can handle both regular methods (with responses) and notifications&lt;/li&gt; 
 &lt;li&gt;Prevents overriding existing MCP protocol methods&lt;/li&gt; 
 &lt;li&gt;Supports instrumentation callbacks for monitoring&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Usage Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Client request
{
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;id&quot;: 1,
  &quot;method&quot;: &quot;add&quot;,
  &quot;params&quot;: { &quot;a&quot;: 5, &quot;b&quot;: 3 }
}

# Server response
{
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;id&quot;: 1,
  &quot;result&quot;: 8
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Error Handling:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Raises &lt;code&gt;MCP::Server::MethodAlreadyDefinedError&lt;/code&gt; if trying to override an existing method&lt;/li&gt; 
 &lt;li&gt;Supports the same exception reporting and instrumentation as standard methods&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Notifications&lt;/h3&gt; 
&lt;p&gt;The server supports sending notifications to clients when lists of tools, prompts, or resources change. This enables real-time updates without polling.&lt;/p&gt; 
&lt;h4&gt;Notification Methods&lt;/h4&gt; 
&lt;p&gt;The server provides three notification methods:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;notify_tools_list_changed&lt;/code&gt; - Send a notification when the tools list changes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;notify_prompts_list_changed&lt;/code&gt; - Send a notification when the prompts list changes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;notify_resources_list_changed&lt;/code&gt; - Send a notification when the resources list changes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Notification Format&lt;/h4&gt; 
&lt;p&gt;Notifications follow the JSON-RPC 2.0 specification and use these method names:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;notifications/tools/list_changed&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;notifications/prompts/list_changed&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;notifications/resources/list_changed&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Transport Support&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;stdio&lt;/strong&gt;: Notifications are sent as JSON-RPC 2.0 messages to stdout&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Streamable HTTP&lt;/strong&gt;: Notifications are sent as JSON-RPC 2.0 messages over HTTP with streaming (chunked transfer or SSE)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Usage Example&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server = MCP::Server.new(name: &quot;my_server&quot;)
transport = MCP::Transports::HTTP.new(server)
server.transport = transport

# When tools change, notify clients
server.define_tool(name: &quot;new_tool&quot;) { |**args| { result: &quot;ok&quot; } }
server.notify_tools_list_changed
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unsupported Features ( to be implemented in future versions )&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Log Level&lt;/li&gt; 
 &lt;li&gt;Resource subscriptions&lt;/li&gt; 
 &lt;li&gt;Completions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;h4&gt;Rails Controller&lt;/h4&gt; 
&lt;p&gt;When added to a Rails controller on a route that handles POST requests, your server will be compliant with non-streaming &lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/basic/transports#streamable-http&quot;&gt;Streamable HTTP&lt;/a&gt; transport requests.&lt;/p&gt; 
&lt;p&gt;You can use the &lt;code&gt;Server#handle_json&lt;/code&gt; method to handle requests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class ApplicationController &amp;lt; ActionController::Base
  def index
    server = MCP::Server.new(
      name: &quot;my_server&quot;,
      title: &quot;Example Server Display Name&quot;, # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
      version: &quot;1.0.0&quot;,
      instructions: &quot;Use the tools of this server as a last resort&quot;,
      tools: [SomeTool, AnotherTool],
      prompts: [MyPrompt],
      server_context: { user_id: current_user.id },
    )
    render(json: server.handle_json(request.body.read))
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Stdio Transport&lt;/h4&gt; 
&lt;p&gt;If you want to build a local command-line application, you can use the stdio transport:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;require &quot;mcp&quot;
require &quot;mcp/server/transports/stdio_transport&quot;

# Create a simple tool
class ExampleTool &amp;lt; MCP::Tool
  description &quot;A simple example tool that echoes back its arguments&quot;
  input_schema(
    properties: {
      message: { type: &quot;string&quot; },
    },
    required: [&quot;message&quot;]
  )

  class &amp;lt;&amp;lt; self
    def call(message:, server_context:)
      MCP::Tool::Response.new([{
        type: &quot;text&quot;,
        text: &quot;Hello from example tool! Message: #{message}&quot;,
      }])
    end
  end
end

# Set up the server
server = MCP::Server.new(
  name: &quot;example_server&quot;,
  tools: [ExampleTool],
)

# Create and start the transport
transport = MCP::Server::Transports::StdioTransport.new(server)
transport.open
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can run this script and then type in requests to the server at the command line.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ ruby examples/stdio_server.rb
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:&quot;1&quot;,&quot;method&quot;:&quot;ping&quot;}
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:&quot;2&quot;,&quot;method&quot;:&quot;tools/list&quot;}
{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:&quot;3&quot;,&quot;method&quot;:&quot;tools/call&quot;,&quot;params&quot;:{&quot;name&quot;:&quot;example_tool&quot;,&quot;arguments&quot;:{&quot;message&quot;:&quot;Hello&quot;}}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;The gem can be configured using the &lt;code&gt;MCP.configure&lt;/code&gt; block:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;MCP.configure do |config|
  config.exception_reporter = -&amp;gt;(exception, server_context) {
    # Your exception reporting logic here
    # For example with Bugsnag:
    Bugsnag.notify(exception) do |report|
      report.add_metadata(:model_context_protocol, server_context)
    end
  }

  config.instrumentation_callback = -&amp;gt;(data) {
    puts &quot;Got instrumentation data #{data.inspect}&quot;
  }
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or by creating an explicit configuration and passing it into the server. This is useful for systems where an application hosts more than one MCP server but they might require different instrumentation callbacks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;configuration = MCP::Configuration.new
configuration.exception_reporter = -&amp;gt;(exception, server_context) {
  # Your exception reporting logic here
  # For example with Bugsnag:
  Bugsnag.notify(exception) do |report|
    report.add_metadata(:model_context_protocol, server_context)
  end
}

configuration.instrumentation_callback = -&amp;gt;(data) {
  puts &quot;Got instrumentation data #{data.inspect}&quot;
}

server = MCP::Server.new(
  # ... all other options
  configuration:,
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Server Context and Configuration Block Data&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;server_context&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;server_context&lt;/code&gt; is a user-defined hash that is passed into the server instance and made available to tools, prompts, and exception/instrumentation callbacks. It can be used to provide contextual information such as authentication state, user IDs, or request-specific data.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Type:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server_context: { [String, Symbol] =&amp;gt; Any }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server = MCP::Server.new(
  name: &quot;my_server&quot;,
  server_context: { user_id: current_user.id, request_id: request.uuid }
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This hash is then passed as the &lt;code&gt;server_context&lt;/code&gt; argument to tool and prompt calls, and is included in exception and instrumentation callbacks.&lt;/p&gt; 
&lt;h4&gt;Configuration Block Data&lt;/h4&gt; 
&lt;h5&gt;Exception Reporter&lt;/h5&gt; 
&lt;p&gt;The exception reporter receives:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;exception&lt;/code&gt;: The Ruby exception object that was raised&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;server_context&lt;/code&gt;: The context hash provided to the server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Signature:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;exception_reporter = -&amp;gt;(exception, server_context) { ... }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Instrumentation Callback&lt;/h5&gt; 
&lt;p&gt;The instrumentation callback receives a hash with the following possible keys:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;method&lt;/code&gt;: (String) The protocol method called (e.g., &quot;ping&quot;, &quot;tools/list&quot;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tool_name&lt;/code&gt;: (String, optional) The name of the tool called&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;prompt_name&lt;/code&gt;: (String, optional) The name of the prompt called&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resource_uri&lt;/code&gt;: (String, optional) The URI of the resource called&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;error&lt;/code&gt;: (String, optional) Error code if a lookup failed&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;duration&lt;/code&gt;: (Float) Duration of the call in seconds&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Type:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;instrumentation_callback = -&amp;gt;(data) { ... }
# where data is a Hash with keys as described above
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;config.instrumentation_callback = -&amp;gt;(data) {
  puts &quot;Instrumentation: #{data.inspect}&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Server Protocol Version&lt;/h3&gt; 
&lt;p&gt;The server&#39;s protocol version can be overridden using the &lt;code&gt;protocol_version&lt;/code&gt; keyword argument:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;configuration = MCP::Configuration.new(protocol_version: &quot;2024-11-05&quot;)
MCP::Server.new(name: &quot;test_server&quot;, configuration: configuration)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will make all new server instances use the specified protocol version instead of the default version. The protocol version can be reset to the default by setting it to &lt;code&gt;nil&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;MCP::Configuration.new(protocol_version: nil)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If an invalid &lt;code&gt;protocol_version&lt;/code&gt; value is set, an &lt;code&gt;ArgumentError&lt;/code&gt; is raised.&lt;/p&gt; 
&lt;p&gt;Be sure to check the &lt;a href=&quot;https://modelcontextprotocol.io/specification/versioning&quot;&gt;MCP spec&lt;/a&gt; for the protocol version to understand the supported features for the version being set.&lt;/p&gt; 
&lt;h3&gt;Exception Reporting&lt;/h3&gt; 
&lt;p&gt;The exception reporter receives two arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;exception&lt;/code&gt;: The Ruby exception object that was raised&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;server_context&lt;/code&gt;: A hash containing contextual information about where the error occurred&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The server_context hash includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For tool calls: &lt;code&gt;{ tool_name: &quot;name&quot;, arguments: { ... } }&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For general request handling: &lt;code&gt;{ request: { ... } }&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When an exception occurs:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The exception is reported via the configured reporter&lt;/li&gt; 
 &lt;li&gt;For tool calls, a generic error response is returned to the client: &lt;code&gt;{ error: &quot;Internal error occurred&quot;, isError: true }&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For other requests, the exception is re-raised after reporting&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If no exception reporter is configured, a default no-op reporter is used that silently ignores exceptions.&lt;/p&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;p&gt;MCP spec includes &lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/server/tools&quot;&gt;Tools&lt;/a&gt; which provide functionality to LLM apps.&lt;/p&gt; 
&lt;p&gt;This gem provides a &lt;code&gt;MCP::Tool&lt;/code&gt; class that can be used to create tools in three ways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;As a class definition:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class MyTool &amp;lt; MCP::Tool
  title &quot;My Tool&quot; # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
  description &quot;This tool performs specific functionality...&quot;
  input_schema(
    properties: {
      message: { type: &quot;string&quot; },
    },
    required: [&quot;message&quot;]
  )
  output_schema(
    properties: {
      result: { type: &quot;string&quot; },
      success: { type: &quot;boolean&quot; },
      timestamp: { type: &quot;string&quot;, format: &quot;date-time&quot; }
    },
    required: [&quot;result&quot;, &quot;success&quot;, &quot;timestamp&quot;]
  )
  annotations(
    read_only_hint: true,
    destructive_hint: false,
    idempotent_hint: true,
    open_world_hint: false,
    title: &quot;My Tool&quot;
  )

  def self.call(message:, server_context:)
    MCP::Tool::Response.new([{ type: &quot;text&quot;, text: &quot;OK&quot; }])
  end
end

tool = MyTool
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;By using the &lt;code&gt;MCP::Tool.define&lt;/code&gt; method with a block:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;tool = MCP::Tool.define(
  name: &quot;my_tool&quot;,
  title: &quot;My Tool&quot;, # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
  description: &quot;This tool performs specific functionality...&quot;,
  annotations: {
    read_only_hint: true,
    title: &quot;My Tool&quot;
  }
) do |args, server_context|
  MCP::Tool::Response.new([{ type: &quot;text&quot;, text: &quot;OK&quot; }])
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;By using the &lt;code&gt;MCP::Server#define_tool&lt;/code&gt; method with a block:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server = MCP::Server.new
server.define_tool(
  name: &quot;my_tool&quot;,
  description: &quot;This tool performs specific functionality...&quot;,
  annotations: {
    title: &quot;My Tool&quot;,
    read_only_hint: true
  }
) do |args, server_context|
  Tool::Response.new([{ type: &quot;text&quot;, text: &quot;OK&quot; }])
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The server_context parameter is the server_context passed into the server and can be used to pass per request information, e.g. around authentication state.&lt;/p&gt; 
&lt;h3&gt;Tool Annotations&lt;/h3&gt; 
&lt;p&gt;Tools can include annotations that provide additional metadata about their behavior. The following annotations are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;destructive_hint&lt;/code&gt;: Indicates if the tool performs destructive operations. Defaults to true&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;idempotent_hint&lt;/code&gt;: Indicates if the tool&#39;s operations are idempotent. Defaults to false&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;open_world_hint&lt;/code&gt;: Indicates if the tool operates in an open world context. Defaults to true&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;read_only_hint&lt;/code&gt;: Indicates if the tool only reads data (doesn&#39;t modify state). Defaults to false&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;title&lt;/code&gt;: A human-readable title for the tool&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Annotations can be set either through the class definition using the &lt;code&gt;annotations&lt;/code&gt; class method or when defining a tool using the &lt;code&gt;define&lt;/code&gt; method.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This &lt;strong&gt;Tool Annotations&lt;/strong&gt; feature is supported starting from &lt;code&gt;protocol_version: &#39;2025-03-26&#39;&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Tool Output Schemas&lt;/h3&gt; 
&lt;p&gt;Tools can optionally define an &lt;code&gt;output_schema&lt;/code&gt; to specify the expected structure of their results. This works similarly to how &lt;code&gt;input_schema&lt;/code&gt; is defined and can be used in three ways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Class definition with output_schema:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class WeatherTool &amp;lt; MCP::Tool
  tool_name &quot;get_weather&quot;
  description &quot;Get current weather for a location&quot;

  input_schema(
    properties: {
      location: { type: &quot;string&quot; },
      units: { type: &quot;string&quot;, enum: [&quot;celsius&quot;, &quot;fahrenheit&quot;] }
    },
    required: [&quot;location&quot;]
  )

  output_schema(
    properties: {
      temperature: { type: &quot;number&quot; },
      condition: { type: &quot;string&quot; },
      humidity: { type: &quot;integer&quot; }
    },
    required: [&quot;temperature&quot;, &quot;condition&quot;, &quot;humidity&quot;]
  )

  def self.call(location:, units: &quot;celsius&quot;, server_context:)
    # Call weather API and structure the response
    api_response = WeatherAPI.fetch(location, units)
    weather_data = {
      temperature: api_response.temp,
      condition: api_response.description,
      humidity: api_response.humidity_percent
    }

    output_schema.validate_result(weather_data)

    MCP::Tool::Response.new([{
      type: &quot;text&quot;,
      text: weather_data.to_json
    }])
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Using Tool.define with output_schema:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;tool = MCP::Tool.define(
  name: &quot;calculate_stats&quot;,
  description: &quot;Calculate statistics for a dataset&quot;,
  input_schema: {
    properties: {
      numbers: { type: &quot;array&quot;, items: { type: &quot;number&quot; } }
    },
    required: [&quot;numbers&quot;]
  },
  output_schema: {
    properties: {
      mean: { type: &quot;number&quot; },
      median: { type: &quot;number&quot; },
      count: { type: &quot;integer&quot; }
    },
    required: [&quot;mean&quot;, &quot;median&quot;, &quot;count&quot;]
  }
) do |args, server_context|
  # Calculate statistics and validate against schema
  MCP::Tool::Response.new([{ type: &quot;text&quot;, text: &quot;Statistics calculated&quot; }])
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Using OutputSchema objects:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class DataTool &amp;lt; MCP::Tool
  output_schema MCP::Tool::OutputSchema.new(
    properties: {
      success: { type: &quot;boolean&quot; },
      data: { type: &quot;object&quot; }
    },
    required: [&quot;success&quot;]
  )
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;MCP spec for the &lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/server/tools#output-schema&quot;&gt;Output Schema&lt;/a&gt; specifies that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Server Validation&lt;/strong&gt;: Servers MUST provide structured results that conform to the output schema&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Client Validation&lt;/strong&gt;: Clients SHOULD validate structured results against the output schema&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Better Integration&lt;/strong&gt;: Enables strict schema validation, type information, and improved developer experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backward Compatibility&lt;/strong&gt;: Tools returning structured content SHOULD also include serialized JSON in a TextContent block&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The output schema follows standard JSON Schema format and helps ensure consistent data exchange between MCP servers and clients.&lt;/p&gt; 
&lt;h3&gt;Prompts&lt;/h3&gt; 
&lt;p&gt;MCP spec includes &lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/server/prompts&quot;&gt;Prompts&lt;/a&gt;, which enable servers to define reusable prompt templates and workflows that clients can easily surface to users and LLMs.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;MCP::Prompt&lt;/code&gt; class provides three ways to create prompts:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;As a class definition with metadata:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class MyPrompt &amp;lt; MCP::Prompt
  prompt_name &quot;my_prompt&quot;  # Optional - defaults to underscored class name
  title &quot;My Prompt&quot; # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
  description &quot;This prompt performs specific functionality...&quot;
  arguments [
    MCP::Prompt::Argument.new(
      name: &quot;message&quot;,
      description: &quot;Input message&quot;,
      required: true
    )
  ]

  class &amp;lt;&amp;lt; self
    def template(args, server_context:)
      MCP::Prompt::Result.new(
        description: &quot;Response description&quot;,
        messages: [
          MCP::Prompt::Message.new(
            role: &quot;user&quot;,
            content: MCP::Content::Text.new(&quot;User message&quot;)
          ),
          MCP::Prompt::Message.new(
            role: &quot;assistant&quot;,
            content: MCP::Content::Text.new(args[&quot;message&quot;])
          )
        ]
      )
    end
  end
end

prompt = MyPrompt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;Using the &lt;code&gt;MCP::Prompt.define&lt;/code&gt; method:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;prompt = MCP::Prompt.define(
  name: &quot;my_prompt&quot;,
  title: &quot;My Prompt&quot;, # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
  description: &quot;This prompt performs specific functionality...&quot;,
  arguments: [
    MCP::Prompt::Argument.new(
      name: &quot;message&quot;,
      description: &quot;Input message&quot;,
      required: true
    )
  ]
) do |args, server_context:|
  MCP::Prompt::Result.new(
    description: &quot;Response description&quot;,
    messages: [
      MCP::Prompt::Message.new(
        role: &quot;user&quot;,
        content: MCP::Content::Text.new(&quot;User message&quot;)
      ),
      MCP::Prompt::Message.new(
        role: &quot;assistant&quot;,
        content: MCP::Content::Text.new(args[&quot;message&quot;])
      )
    ]
  )
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;Using the &lt;code&gt;MCP::Server#define_prompt&lt;/code&gt; method:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server = MCP::Server.new
server.define_prompt(
  name: &quot;my_prompt&quot;,
  description: &quot;This prompt performs specific functionality...&quot;,
  arguments: [
    Prompt::Argument.new(
      name: &quot;message&quot;,
      description: &quot;Input message&quot;,
      required: true
    )
  ]
) do |args, server_context:|
  Prompt::Result.new(
    description: &quot;Response description&quot;,
    messages: [
      Prompt::Message.new(
        role: &quot;user&quot;,
        content: Content::Text.new(&quot;User message&quot;)
      ),
      Prompt::Message.new(
        role: &quot;assistant&quot;,
        content: Content::Text.new(args[&quot;message&quot;])
      )
    ]
  )
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The server_context parameter is the server_context passed into the server and can be used to pass per request information, e.g. around authentication state or user preferences.&lt;/p&gt; 
&lt;h3&gt;Key Components&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;MCP::Prompt::Argument&lt;/code&gt; - Defines input parameters for the prompt template&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MCP::Prompt::Message&lt;/code&gt; - Represents a message in the conversation with a role and content&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MCP::Prompt::Result&lt;/code&gt; - The output of a prompt template containing description and messages&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MCP::Content::Text&lt;/code&gt; - Text content for messages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Register prompts with the MCP server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server = MCP::Server.new(
  name: &quot;my_server&quot;,
  prompts: [MyPrompt],
  server_context: { user_id: current_user.id },
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The server will handle prompt listing and execution through the MCP protocol methods:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;prompts/list&lt;/code&gt; - Lists all registered prompts and their schemas&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;prompts/get&lt;/code&gt; - Retrieves and executes a specific prompt with arguments&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Instrumentation&lt;/h3&gt; 
&lt;p&gt;The server allows registering a callback to receive information about instrumentation. To register a handler pass a proc/lambda to as &lt;code&gt;instrumentation_callback&lt;/code&gt; into the server constructor.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;MCP.configure do |config|
  config.instrumentation_callback = -&amp;gt;(data) {
    puts &quot;Got instrumentation data #{data.inspect}&quot;
  }
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The data contains the following keys:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;method&lt;/code&gt;: the method called, e.g. &lt;code&gt;ping&lt;/code&gt;, &lt;code&gt;tools/list&lt;/code&gt;, &lt;code&gt;tools/call&lt;/code&gt; etc&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tool_name&lt;/code&gt;: the name of the tool called&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;prompt_name&lt;/code&gt;: the name of the prompt called&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resource_uri&lt;/code&gt;: the uri of the resource called&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;error&lt;/code&gt;: if looking up tools/prompts etc failed, e.g. &lt;code&gt;tool_not_found&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;duration&lt;/code&gt;: the duration of the call in seconds&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;tool_name&lt;/code&gt;, &lt;code&gt;prompt_name&lt;/code&gt; and &lt;code&gt;resource_uri&lt;/code&gt; are only populated if a matching handler is registered. This is to avoid potential issues with metric cardinality&lt;/p&gt; 
&lt;h3&gt;Resources&lt;/h3&gt; 
&lt;p&gt;MCP spec includes &lt;a href=&quot;https://modelcontextprotocol.io/specification/2025-06-18/server/resources&quot;&gt;Resources&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Reading Resources&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;MCP::Resource&lt;/code&gt; class provides a way to register resources with the server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;resource = MCP::Resource.new(
  uri: &quot;https://example.com/my_resource&quot;,
  name: &quot;my-resource&quot;,
  title: &quot;My Resource&quot;, # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
  description: &quot;Lorem ipsum dolor sit amet&quot;,
  mime_type: &quot;text/html&quot;,
)

server = MCP::Server.new(
  name: &quot;my_server&quot;,
  resources: [resource],
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The server must register a handler for the &lt;code&gt;resources/read&lt;/code&gt; method to retrieve a resource dynamically.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;server.resources_read_handler do |params|
  [{
    uri: params[:uri],
    mimeType: &quot;text/plain&quot;,
    text: &quot;Hello from example resource! URI: #{params[:uri]}&quot;
  }]
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;otherwise &lt;code&gt;resources/read&lt;/code&gt; requests will be a no-op.&lt;/p&gt; 
&lt;h3&gt;Resource Templates&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;MCP::ResourceTemplate&lt;/code&gt; class provides a way to register resource templates with the server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;resource_template = MCP::ResourceTemplate.new(
  uri_template: &quot;https://example.com/my_resource_template&quot;,
  name: &quot;my-resource-template&quot;,
  title: &quot;My Resource Template&quot;, # WARNING: This is a `Draft` and is not supported in the `Version 2025-06-18 (latest)` specification.
  description: &quot;Lorem ipsum dolor sit amet&quot;,
  mime_type: &quot;text/html&quot;,
)

server = MCP::Server.new(
  name: &quot;my_server&quot;,
  resource_templates: [resource_template],
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building an MCP Client&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;MCP::Client&lt;/code&gt; class provides an interface for interacting with MCP servers.&lt;/p&gt; 
&lt;p&gt;This class supports:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tool listing via the &lt;code&gt;tools/list&lt;/code&gt; method&lt;/li&gt; 
 &lt;li&gt;Tool invocation via the &lt;code&gt;tools/call&lt;/code&gt; method&lt;/li&gt; 
 &lt;li&gt;Automatic JSON-RPC 2.0 message formatting&lt;/li&gt; 
 &lt;li&gt;UUID request ID generation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Clients are initialized with a transport layer instance that handles the low-level communication mechanics. Authorization is handled by the transport layer.&lt;/p&gt; 
&lt;h2&gt;Transport Layer Interface&lt;/h2&gt; 
&lt;p&gt;If the transport layer you need is not included in the gem, you can build and pass your own instances so long as they conform to the following interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;class CustomTransport
  # Sends a JSON-RPC request to the server and returns the raw response.
  #
  # @param request [Hash] A complete JSON-RPC request object.
  #     https://www.jsonrpc.org/specification#request_object
  # @return [Hash] A hash modeling a JSON-RPC response object.
  #     https://www.jsonrpc.org/specification#response_object
  def send_request(request:)
    # Your transport-specific logic here
    # - HTTP: POST to endpoint with JSON body
    # - WebSocket: Send message over WebSocket
    # - stdio: Write to stdout, read from stdin
    # - etc.
  end
end
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTP Transport Layer&lt;/h3&gt; 
&lt;p&gt;Use the &lt;code&gt;MCP::Client::HTTP&lt;/code&gt; transport to interact with MCP servers using simple HTTP requests.&lt;/p&gt; 
&lt;p&gt;You&#39;ll need to add &lt;code&gt;faraday&lt;/code&gt; as a dependency in order to use the HTTP transport layer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem &#39;mcp&#39;
gem &#39;faraday&#39;, &#39;&amp;gt;= 2.0&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;http_transport = MCP::Client::HTTP.new(url: &quot;https://api.example.com/mcp&quot;)
client = MCP::Client.new(transport: http_transport)

# List available tools
tools = client.tools
tools.each do |tool|
  puts &amp;lt;&amp;lt;~TOOL_INFORMATION
    Tool: #{tool.name}
    Description: #{tool.description}
    Input Schema: #{tool.input_schema}
  TOOL_INFORMATION
end

# Call a specific tool
response = client.call_tool(
  tool: tools.first,
  arguments: { message: &quot;Hello, world!&quot; }
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;HTTP Authorization&lt;/h4&gt; 
&lt;p&gt;By default, the HTTP transport layer provides no authentication to the server, but you can provide custom headers if you need authentication. For example, to use Bearer token authentication:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;http_transport = MCP::Client::HTTP.new(
  url: &quot;https://api.example.com/mcp&quot;,
  headers: {
    &quot;Authorization&quot; =&amp;gt; &quot;Bearer my_token&quot;
  }
)

client = MCP::Client.new(transport: http_transport)
client.tools # will make the call using Bearer auth
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can add any custom headers needed for your authentication scheme, or for any other purpose. The client will include these headers on every request.&lt;/p&gt; 
&lt;h3&gt;Tool Objects&lt;/h3&gt; 
&lt;p&gt;The client provides a wrapper class for tools returned by the server:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;MCP::Client::Tool&lt;/code&gt; - Represents a single tool with its metadata&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This class provides easy access to tool properties like name, description, input schema, and output schema.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;This gem is published to &lt;a href=&quot;https://rubygems.org/gems/mcp&quot;&gt;RubyGems.org&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Releases are triggered by PRs to the &lt;code&gt;main&lt;/code&gt; branch updating the version number in &lt;code&gt;lib/mcp/version.rb&lt;/code&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Update the version number&lt;/strong&gt; in &lt;code&gt;lib/mcp/version.rb&lt;/code&gt;, following &lt;a href=&quot;https://semver.org/&quot;&gt;semver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Update CHANGELOG.md&lt;/strong&gt;, backfilling the changes since the last release if necessary, and adding a new section for the new version, clearing out the Unreleased section&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a PR and get approval from a maintainer&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Merge your PR to the main branch&lt;/strong&gt; - This will automatically trigger the release workflow via GitHub Actions&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;When changes are merged to the &lt;code&gt;main&lt;/code&gt; branch, the GitHub Actions workflow (&lt;code&gt;.github/workflows/release.yml&lt;/code&gt;) is triggered and the gem is published to RubyGems.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mastodon/mastodon</title>
      <link>https://github.com/mastodon/mastodon</link>
      <description>&lt;p&gt;Your self-hosted, globally interconnected microblogging community&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Want to learn more about Mastodon? Click below to find out more in a video.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://www.youtube.com/watch?v=IPSbNdBmWKE&quot;&gt; &lt;img alt=&quot;Mastodon hero image&quot; src=&quot;https://github.com/user-attachments/assets/ef53f5e9-c0d8-484d-9f53-00efdebb92c3&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://github.com/mastodon/mastodon/releases&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/release/mastodon/mastodon.svg?sanitize=true&quot; alt=&quot;Release&quot; /&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://github.com/mastodon/mastodon/actions/workflows/test-ruby.yml&quot;&gt; &lt;img src=&quot;https://github.com/mastodon/mastodon/actions/workflows/test-ruby.yml/badge.svg?sanitize=true&quot; alt=&quot;Ruby Testing&quot; /&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://crowdin.com/project/mastodon&quot;&gt; &lt;img src=&quot;https://d322cqt584bo4o.cloudfront.net/mastodon/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Mastodon is a &lt;strong&gt;free, open-source social network server&lt;/strong&gt; based on &lt;a href=&quot;https://www.w3.org/TR/activitypub/&quot;&gt;ActivityPub&lt;/a&gt; where users can follow friends and discover new ones. On Mastodon, users can publish anything they want: links, pictures, text, and video. All Mastodon servers are interoperable as a federated network (users on one server can seamlessly communicate with users from another one, including non-Mastodon software that implements ActivityPub!)&lt;/p&gt; 
&lt;h2&gt;Navigation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org&quot;&gt;Project homepage üêò&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org/sponsors#donate&quot;&gt;Donate to support development üéÅ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://joinmastodon.org/sponsors&quot;&gt;View sponsors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.joinmastodon.org&quot;&gt;Blog üì∞&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.joinmastodon.org&quot;&gt;Documentation üìö&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mastodon/mastodon/pkgs/container/mastodon&quot;&gt;Official container image üö¢&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/app/javascript/images/elephant_ui_working.svg?raw=true&quot; align=&quot;right&quot; width=&quot;30%&quot; /&gt; 
&lt;p&gt;&lt;strong&gt;Part of the Fediverse. Based on open standards, with no vendor lock-in.&lt;/strong&gt; - the network goes beyond just Mastodon; anything that implements ActivityPub is part of a broader social network known as &lt;a href=&quot;https://jointhefediverse.net/&quot;&gt;the Fediverse&lt;/a&gt;. You can follow and interact with users on other servers (including those running different software), and they can follow you back.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Real-time, chronological timeline updates&lt;/strong&gt; - updates of people you&#39;re following appear in real-time in the UI.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Media attachments&lt;/strong&gt; - upload and view images and videos attached to the updates. Videos with no audio track are treated like animated GIFs; normal videos loop continuously.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Safety and moderation tools&lt;/strong&gt; - Mastodon includes private posts, locked accounts, phrase filtering, muting, blocking, and many other features, along with a reporting and moderation system.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;OAuth2 and a straightforward REST API&lt;/strong&gt; - Mastodon acts as an OAuth2 provider, and third party apps can use the REST and Streaming APIs. This results in a &lt;a href=&quot;https://joinmastodon.org/apps&quot;&gt;rich app ecosystem&lt;/a&gt; with a variety of choices!&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;h3&gt;Tech stack&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rails/rails&quot;&gt;Ruby on Rails&lt;/a&gt; powers the REST API and other web pages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt; is the main database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt; and &lt;a href=&quot;https://sidekiq.org/&quot;&gt;Sidekiq&lt;/a&gt; are used for caching and queueing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; powers the streaming API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React.js&lt;/a&gt; and &lt;a href=&quot;https://redux.js.org/&quot;&gt;Redux&lt;/a&gt; are used for the dynamic parts of the interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.browserstack.com/&quot;&gt;BrowserStack&lt;/a&gt; supports testing on real devices and browsers. (This project is tested with BrowserStack)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.chromatic.com/&quot;&gt;Chromatic&lt;/a&gt; provides visual regression testing. (This project is tested with Chromatic)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Ruby&lt;/strong&gt; 3.2+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt; 13+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Redis&lt;/strong&gt; 7.0+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt; 20+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This repository includes deployment configurations for &lt;strong&gt;Docker and docker-compose&lt;/strong&gt;, as well as for other environments like Heroku and Scalingo. For Helm charts, reference the &lt;a href=&quot;https://github.com/mastodon/chart&quot;&gt;mastodon/chart repository&lt;/a&gt;. A &lt;a href=&quot;https://docs.joinmastodon.org/admin/install/&quot;&gt;&lt;strong&gt;standalone&lt;/strong&gt; installation guide&lt;/a&gt; is available in the main documentation.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Mastodon is &lt;strong&gt;free, open-source software&lt;/strong&gt; licensed under &lt;strong&gt;AGPLv3&lt;/strong&gt;. We welcome contributions and help from anyone who wants to improve the project.&lt;/p&gt; 
&lt;p&gt;You should read the overall &lt;a href=&quot;https://github.com/mastodon/.github/raw/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; guide, which covers our development processes.&lt;/p&gt; 
&lt;p&gt;You should also read and understand the &lt;a href=&quot;https://github.com/mastodon/.github/raw/main/CODE_OF_CONDUCT.md&quot;&gt;CODE OF CONDUCT&lt;/a&gt; that enables us to maintain a welcoming and inclusive community. Collaboration begins with mutual respect and understanding.&lt;/p&gt; 
&lt;p&gt;You can learn about setting up a development environment in the &lt;a href=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/docs/DEVELOPMENT.md&quot;&gt;DEVELOPMENT&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;p&gt;If you would like to help with translations üåê you can do so on &lt;a href=&quot;https://crowdin.com/project/mastodon&quot;&gt;Crowdin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2016-2025 Eugen Rochko (+ &lt;a href=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/AUTHORS.md&quot;&gt;&lt;code&gt;mastodon authors&lt;/code&gt;&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;Licensed under GNU Affero General Public License as stated in the &lt;a href=&quot;https://raw.githubusercontent.com/mastodon/mastodon/main/LICENSE&quot;&gt;LICENSE&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Copyright (c) 2016-2025 Eugen Rochko &amp;amp; other Mastodon contributors

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU Affero General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option) any
later version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
details.

You should have received a copy of the GNU Affero General Public License along
with this program. If not, see https://www.gnu.org/licenses/
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>github/choosealicense.com</title>
      <link>https://github.com/github/choosealicense.com</link>
      <description>&lt;p&gt;A site to provide non-judgmental guidance on choosing a license for your open source project&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://choosealicense.com&quot;&gt;ChooseALicense.com&lt;/a&gt;&lt;/strong&gt; aims to provide &lt;strong&gt;accurate&lt;/strong&gt;, &lt;strong&gt;non-judgmental&lt;/strong&gt;, and &lt;strong&gt;understandable&lt;/strong&gt; information about popular &lt;strong&gt;open source licenses&lt;/strong&gt; in order to &lt;strong&gt;help people make informed decisions&lt;/strong&gt; about the projects they start, maintain, contribute to, and use.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/github/choosealicense.com/actions?query=workflow%3ABuild%20and%20Test&quot;&gt;&lt;img src=&quot;https://github.com/github/choosealicense.com/workflows/Build%20and%20Test/badge.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We catalog &lt;a href=&quot;https://raw.githubusercontent.com/github/choosealicense.com/gh-pages/CONTRIBUTING.md#adding-a-license&quot;&gt;select&lt;/a&gt; open source licenses with a &lt;a href=&quot;https://jekyllrb.com/docs/collections/&quot;&gt;Jekyll collection&lt;/a&gt; (in &lt;code&gt;_licenses&lt;/code&gt;). The catalog is used to render &lt;a href=&quot;https://choosealicense.com&quot;&gt;ChooseALicense.com&lt;/a&gt; and is regularly vendored into &lt;a href=&quot;https://github.com/licensee/licensee&quot;&gt;Licensee&lt;/a&gt;, which GitHub uses to provide a &lt;a href=&quot;https://help.github.com/articles/adding-a-license-to-a-repository/&quot;&gt;license chooser and license detection&lt;/a&gt;, a &lt;a href=&quot;https://developer.github.com/v3/licenses/&quot;&gt;licenses API&lt;/a&gt;, and to &lt;a href=&quot;https://github.com/blog/2335-open-source-license-descriptions-and-metadata&quot;&gt;display license descriptions and metadata&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Be accurate, non-judgmental, and understandable. Our goal is to help you find a license that meets &lt;em&gt;your&lt;/em&gt; goals.&lt;/li&gt; 
 &lt;li&gt;The homepage should have just enough to help most folks make a decision about what license to use for a project they contribute to.&lt;/li&gt; 
 &lt;li&gt;For the rest, the site will contain additional information about licenses common to specific communities and situations.&lt;/li&gt; 
 &lt;li&gt;Collaborate with and reinforce other licensing best practices and standards projects.&lt;/li&gt; 
 &lt;li&gt;Not comprehensive. Seems like an odd goal, but there are a bajillion licenses out there. We&#39;re going to have to filter that down to a small list of those that matter.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Run it on your machine&lt;/h2&gt; 
&lt;h3&gt;Managing Dependencies&lt;/h3&gt; 
&lt;p&gt;It may be the case that your system doesn&#39;t have the required dependencies. You will need &lt;code&gt;cmake&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; installed on your computer.&lt;/p&gt; 
&lt;p&gt;For MacOS, use Homebrew to update your dependencies (install Homebrew from &lt;a href=&quot;https://brew.sh/&quot;&gt;https://brew.sh/&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew install make cmake
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Linux/Ubuntu, use the &lt;code&gt;apt-get&lt;/code&gt; tool to install the dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt-get install make cmake
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Installing and Running the tool&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;git clone https://github.com/github/choosealicense.com.git --recursive
cd choosealicense.com
./script/bootstrap
./script/server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;code&gt;http://localhost:4000&lt;/code&gt; in your favorite browser.&lt;/p&gt; 
&lt;p&gt;If you encounter any issues with the above steps, please refer to the official &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;Jekyll&lt;/a&gt; documentation and this &lt;a href=&quot;https://jekyllrb.com/docs/troubleshooting/#no-sudo&quot;&gt;guide on running Jekyll as a non-superuser&lt;/a&gt; for more detailed installation instructions.&lt;/p&gt; 
&lt;h2&gt;Adding a license&lt;/h2&gt; 
&lt;p&gt;For information on adding a license, see &lt;a href=&quot;https://github.com/github/choosealicense.com/raw/gh-pages/CONTRIBUTING.md#adding-a-license&quot;&gt;the CONTRIBUTING file&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License metadata&lt;/h2&gt; 
&lt;p&gt;Licenses sit in the &lt;code&gt;/_licenses&lt;/code&gt; folder. Each license has YAML front matter describing the license&#39;s properties. The body of the file contains the text of the license in plain text. The available metadata fields are:&lt;/p&gt; 
&lt;h4&gt;Required fields&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;title&lt;/code&gt; - The license full name specified by &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;https://spdx.org/licenses/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;spdx-id&lt;/code&gt; - Short identifier specified by &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;https://spdx.org/licenses/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;description&lt;/code&gt; - A human-readable description of the license&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;how&lt;/code&gt; - Instructions on how to implement the license&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;using&lt;/code&gt; - A map of 3 notable projects using the license with straightforward LICENSE files which serve as examples newcomers can follow and that can be detected by &lt;a href=&quot;https://github.com/licensee/licensee&quot;&gt;licensee&lt;/a&gt; in the form of &lt;code&gt;project_name: license_file_url&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;permissions&lt;/code&gt; - Bulleted list of permission rules&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;conditions&lt;/code&gt; - Bulleted list of condition rules&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;limitations&lt;/code&gt; - Bulleted list of limitation rules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Optional fields&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;featured&lt;/code&gt; - Whether the license should be featured on the main page (defaults to false)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hidden&lt;/code&gt; - Whether the license is neither &lt;a href=&quot;https://opensource.org/licenses&quot;&gt;popular&lt;/a&gt; nor fills out the &lt;a href=&quot;https://choosealicense.com/licenses/&quot;&gt;spectrum of licenses&lt;/a&gt; from strongly conditional to unconditional (defaults to true)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nickname&lt;/code&gt; - Customary short name if applicable (e.g, GPLv3)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;note&lt;/code&gt; - Additional information about the licenses&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;redirect_from&lt;/code&gt; - Relative path(s) to redirect to the license from, to prevent breaking old URLs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Auto-populated fields&lt;/h3&gt; 
&lt;p&gt;The licenses on choosealicense.com are regularly imported to GitHub.com to be used as the list of licenses available when creating a repository. When we create a repository, we will replace certain strings in the license with variables from the repository. These can be used to create accurate copyright notices. The available variables are:&lt;/p&gt; 
&lt;h4&gt;Fields&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;fullname&lt;/code&gt; - The full name or username of the repository owner&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;login&lt;/code&gt; - The repository owner&#39;s username&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;email&lt;/code&gt; - The repository owner&#39;s primary email address&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;project&lt;/code&gt; - The repository name&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;description&lt;/code&gt; - The description of the repository&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;year&lt;/code&gt; - The current year&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;projecturl&lt;/code&gt; - The repository URL or other project website&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License properties&lt;/h2&gt; 
&lt;p&gt;The license properties (rules) are stored as a bulleted list within the licenses YAML front matter. Each rule has a name e.g., &lt;code&gt;include-copyright&lt;/code&gt;, a human-readable label, e.g., &lt;code&gt;Copyright inclusion&lt;/code&gt;, and a description &lt;code&gt;Include the original copyright with the code&lt;/code&gt;. To add a new rule, simply add it to &lt;code&gt;_data/rules.yml&lt;/code&gt; and reference it in the appropriate license.&lt;/p&gt; 
&lt;h3&gt;Rules&lt;/h3&gt; 
&lt;h4&gt;Permissions&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;commercial-use&lt;/code&gt; - This software and derivatives may be used for commercial purposes.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;modifications&lt;/code&gt; - This software may be modified.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;distribution&lt;/code&gt; - This software may be distributed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;private-use&lt;/code&gt; - This software may be used and modified in private.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;patent-use&lt;/code&gt; - This license provides an express grant of patent rights from contributors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Conditions&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;include-copyright&lt;/code&gt; - A copy of the license and copyright notice must be included with the software.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;include-copyright--source&lt;/code&gt; - A copy of the license and copyright notice must be included with the software in source form, but is not required for binaries.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;document-changes&lt;/code&gt; - Changes made to the code must be documented.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;disclose-source&lt;/code&gt; - Source code must be made available when the software is distributed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;network-use-disclose&lt;/code&gt; - Users who interact with the software via network are given the right to receive a copy of the source code.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;same-license&lt;/code&gt; - Modifications must be released under the same license when distributing the software. In some cases a similar or related license may be used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;same-license--file&lt;/code&gt; - Modifications of existing files must be released under the same license when distributing the software. In some cases a similar or related license may be used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;same-license--library&lt;/code&gt; - Modifications must be released under the same license when distributing the software. In some cases a similar or related license may be used, or this condition may not apply to works that use the software as a library.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Limitations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;trademark-use&lt;/code&gt; - This license explicitly states that it does NOT grant trademark rights, even though licenses without such a statement probably do not grant any implicit trademark rights.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;liability&lt;/code&gt; - This license includes a limitation of liability.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;patent-use&lt;/code&gt; - This license explicitly states that it does NOT grant any rights in the patents of contributors.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;warranty&lt;/code&gt; - The license explicitly states that it does NOT provide any warranty.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The content of this project itself is licensed under the &lt;a href=&quot;https://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons Attribution 3.0 Unported license&lt;/a&gt;, and the underlying source code used to format and display that content is licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/github/choosealicense.com/gh-pages/LICENSE.md&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>spree/spree</title>
      <link>https://github.com/spree/spree</link>
      <description>&lt;p&gt;An open source eCommerce platform giving you full control and customizability. Modular and API-first. Multi-vendor, multi-tenant, multi-store, multi-currency, multi-language. Built using Ruby on Rails. Developed by @vendo-dev&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://spreecommerce.org&quot;&gt; &lt;img alt=&quot;Spree Commerce - an open source eCommerce platform&quot; src=&quot;https://github.com/spree/spree/assets/12614496/ff5372a4-e906-458e-83b6-7927ba0629c1&quot; /&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;Spree Commerce&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; An &lt;a href=&quot;https://spreecommerce.org/&quot; alt=&quot;open-source eCommerce platform&quot;&gt;open-source eCommerce platform&lt;/a&gt; giving you full control and customizability. &lt;br /&gt; Build any eCommerce solution that your business requires. &lt;br /&gt; &lt;br /&gt; &lt;a href=&quot;https://spreecommerce.org/announcing-spree-5-the-biggest-open-source-release-ever/&quot;&gt;Spree 5&lt;/a&gt; ¬∑ &lt;a href=&quot;https://spreecommerce.org&quot;&gt;Website&lt;/a&gt; ¬∑ &lt;a href=&quot;https://spreecommerce.org/docs/&quot;&gt;Documentation&lt;/a&gt; ¬∑ &lt;a href=&quot;https://slack.spreecommerce.org&quot;&gt;Slack&lt;/a&gt; ¬∑ &lt;a href=&quot;https://github.com/spree/spree_starter/&quot;&gt;Starter&lt;/a&gt; ¬∑ &lt;a href=&quot;https://demo.spreecommerce.org&quot;&gt;Demo&lt;/a&gt; ¬∑ &lt;a href=&quot;https://spreecommerce.org/pricing/&quot;&gt;Pricing&lt;/a&gt; ¬∑ &lt;a href=&quot;https://github.com/spree/spree/milestones?direction=asc&amp;amp;sort=due_date&amp;amp;state=open&quot;&gt;Roadmap&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://rubygems.org/gems/spree&quot;&gt; &lt;img alt=&quot;Gem Total Downloads&quot; src=&quot;https://img.shields.io/gem/dt/spree&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://slack.spreecommerce.org&quot;&gt; &lt;img alt=&quot;Slack members&quot; src=&quot;https://img.shields.io/badge/slack%20members-6.5K-blue&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit the &lt;a href=&quot;https://spreecommerce.org/docs/developer/getting-started/quickstart&quot;&gt;Quickstart Guide&lt;/a&gt; to set up Spree in 5 minutes.&lt;/p&gt; 
&lt;p&gt;Make sure to check out the latest &lt;a href=&quot;https://github.com/spree/spree#spree-5-announcement--demo&quot;&gt;Spree 5 release announcement&lt;/a&gt; and demo.&lt;/p&gt; 
&lt;p&gt;If you like what you see, consider giving Spree a GitHub star &lt;span&gt;‚≠ê&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;Thank you for supporting Spree open-source &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;Spree 5 Announcement &amp;amp; Demo&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://spreecommerce.org/announcing-spree-5-the-biggest-open-source-release-ever/&quot;&gt;&lt;img src=&quot;https://vendo-production-res.cloudinary.com/image/upload/w_2000/q_auto/v1742985405/docs/github/Spree_Commerce_open-source_eCommerce_myzurl.jpg&quot; alt=&quot;Spree Commerce 5 version&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We‚Äôre thrilled to unveil &lt;a href=&quot;https://spreecommerce.org/announcing-spree-5-the-biggest-open-source-release-ever/&quot;&gt;Spree 5&lt;/a&gt; ‚Äî the most powerful and feature-packed open-source release in Spree Commerce‚Äôs history, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A completely revamped Admin Dashboard experience: boost your team&#39;s productivity&lt;/li&gt; 
 &lt;li&gt;A Mobile-First, No-code Customizable Storefront: raise conversions and loyalty&lt;/li&gt; 
 &lt;li&gt;New integrations: a native &lt;a href=&quot;https://github.com/spree/spree_stripe&quot;&gt;Stripe integration&lt;/a&gt;, and also Stripe Connect, Klaviyo integrations available with the Enterprise Edition&lt;/li&gt; 
 &lt;li&gt;Enterprise Edition Admin Features: Audit Log, &lt;a href=&quot;https://spreecommerce.org/marketplace-ecommerce/&quot;&gt;Multi-Vendor Marketplace&lt;/a&gt;, &lt;a href=&quot;https://spreecommerce.org/multi-tenant-white-label-ecommerce/&quot;&gt;Multi-tenant / White-label SaaS eCommerce&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://spreecommerce.org/announcing-spree-5-the-biggest-open-source-release-ever/&quot;&gt;full Spree 5 announcement here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://demo.spreecommerce.org/&quot;&gt;Spree 5 demo&lt;/a&gt; for yourself.&lt;/p&gt; 
&lt;h2&gt;Enterprise support&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://spreecommerce.org/contact/&quot;&gt;Contact us&lt;/a&gt; for enterprise support and custom development services. We offer:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;expert delivery of your Spree application,&lt;/li&gt; 
 &lt;li&gt;migrations and upgrades,&lt;/li&gt; 
 &lt;li&gt;optimizing your Spree stack.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Enterprise Edition&lt;/h2&gt; 
&lt;p&gt;Besides enterprise support we also offer the Spree Commerce &lt;a href=&quot;https://spreecommerce.org/spree-commerce-version-comparison-community-edition-vs-enterprise-edition/&quot;&gt;Enterprise Edition&lt;/a&gt; that gives you all the tools you need to launch your store or marketplace and provides you with ready-to-use integrations that will reduce your project&#39;s development time and cost.&lt;/p&gt; 
&lt;p&gt;To get access to Spree Enterprise (Vendo), contact our &lt;a href=&quot;https://spreecommerce.org/get-started/&quot;&gt;Sales team&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Customizable and modular&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;pick and choose parts you want to use&lt;/li&gt; 
 &lt;li&gt;customize everything else (storefront, order processing, API, etc)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img alt=&quot;Spree Commerce - Storefront customization&quot; src=&quot;https://github.com/spree/spree/assets/12614496/1a000452-6716-4fab-90ca-a4c28fc138a7&quot; /&gt; 
&lt;h3&gt;Composable and API-first&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;connect with your existing ecosystem, build custom workflows with ease&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://spreecommerce.org/docs/api-reference/introduction&quot;&gt;Storefront and Admin API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Webhooks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img alt=&quot;Spree Commerce - API   Integrations&quot; src=&quot;https://github.com/spree/spree/assets/12614496/18e98e8e-15cd-4b74-8e58-80e5b3f281d8&quot; /&gt; 
&lt;h3&gt;Cart and Checkout for any use case&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;advanced cart functionality&lt;/li&gt; 
 &lt;li&gt;over 30 payment provider integrations out of the box&lt;/li&gt; 
 &lt;li&gt;API to integrate any other payment gateway&lt;/li&gt; 
 &lt;li&gt;robust discounts system&lt;/li&gt; 
 &lt;li&gt;store credits, gift cards&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img alt=&quot;Spree Commerce - Cart   Checkout&quot; src=&quot;https://github.com/spree/spree/assets/12614496/05399a8f-a57a-4907-a8ea-a4e58285a55d&quot; /&gt; 
&lt;img alt=&quot;Spree Commerce - Payments   Refunds&quot; src=&quot;https://github.com/spree/spree/assets/12614496/0911073c-a681-409e-810c-f7e8daa4daac&quot; /&gt; 
&lt;h3&gt;&lt;a href=&quot;https://spreecommerce.org/multi-region-ecommerce/&quot;&gt;Global Commerce&lt;/a&gt; ready&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;multi-currency&lt;/li&gt; 
 &lt;li&gt;multi-language&lt;/li&gt; 
 &lt;li&gt;full translation support for products, categories, and more&lt;/li&gt; 
 &lt;li&gt;different shipping methods / costs for different regions&lt;/li&gt; 
 &lt;li&gt;advanced tax calculation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img alt=&quot;Spree Commerce - Multi-region   Multi-store&quot; src=&quot;https://github.com/spree/spree/assets/12614496/e9c2edce-b80c-47ad-817b-a00a4ba54495&quot; /&gt; 
&lt;img alt=&quot;Spree Commerce - Multi-region&quot; src=&quot;https://github.com/spree/spree/assets/12614496/f8678baf-4efa-4de7-b092-b01ef3a4d8ea&quot; /&gt; 
&lt;h3&gt;&lt;a href=&quot;https://spreecommerce.org/multi-store-ecommerce/&quot;&gt;Multi-Store&lt;/a&gt; ready&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;host multiple brands / stores on a single Spree instance&lt;/li&gt; 
 &lt;li&gt;each with different branding, configuration, payment methods, shipping options, product catalogs etc&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img alt=&quot;Spree Commerce - Multi-store&quot; src=&quot;https://github.com/spree/spree/assets/12614496/cf651354-6180-4927-973f-c650b80ccdb0&quot; /&gt; 
&lt;h3&gt;Responsive Admin Panel&lt;/h3&gt; 
&lt;p&gt;Manage and curate products, users, orders, returns, shipments &amp;amp; more &lt;img alt=&quot;Spree Commerce - Inventory management&quot; src=&quot;https://github.com/spree/spree/assets/12614496/cdc7af4d-41ba-44f2-9595-efc948865107&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Orders &amp;amp; Post-purchase management&lt;/h3&gt; 
&lt;p&gt;Manage orders, shipments, returns and refunds &lt;img alt=&quot;Spree Commerce - Order   Return management&quot; src=&quot;https://github.com/spree/spree/assets/12614496/b1dffa8c-24d4-4629-a026-02951b5a80d7&quot; /&gt; &lt;img alt=&quot;Spree Commerce - Order Fulfillment&quot; src=&quot;https://github.com/spree/spree/assets/12614496/2212ec6d-bfd0-4940-9aae-f0ceea0b4e4d&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;Why developers love it&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Runs anywhere&lt;/strong&gt; - cloud, VPS, Docker, Kubernetes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Battle Tested&lt;/strong&gt; - used by thousands of merchants around the globe in all categories since 2007!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensions available&lt;/strong&gt; adding new features to Spree&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What you can build with Spree&lt;/h2&gt; 
&lt;p&gt;Use Spree for any use case. Innovate beyond what&#39;s out there.&lt;/p&gt; 
&lt;h3&gt;A &lt;a href=&quot;https://spreecommerce.org/headless-ecommerce/&quot;&gt;headless eCommerce&lt;/a&gt; micro-service&lt;/h3&gt; 
&lt;p&gt;Capture orders and payments for whatever you&#39;re selling - physical or digital, products or services&lt;/p&gt; 
&lt;img alt=&quot;Spree Commerce - headless open-source eCommerce&quot; src=&quot;https://github.com/spree/spree/assets/12614496/2bca9fdf-5ae2-4433-83aa-431105906fc8&quot; /&gt; 
&lt;h3&gt;A &lt;a href=&quot;https://spreecommerce.org/use-cases/multi-vendor-marketplace-demo/&quot;&gt;Multi-vendor marketplace&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Run your own marketplace with multiple suppliers, each with a dedicated supplier dashboard &lt;img alt=&quot;Spree Commerce - Marketplace&quot; src=&quot;https://github.com/spree/spree/assets/12614496/c4ddd118-df4c-464e-b1fe-d43862e5cf25&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;A &lt;a href=&quot;https://spreecommerce.org/use-cases/headless-b2b-ecommerce/&quot;&gt;B2B eCommerce&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Start capturing 6+ figure orders from resellers with safe payments and a checkout process that fits your business model &lt;img alt=&quot;Spree Commerce - B2B eCommerce&quot; src=&quot;https://github.com/spree/spree/assets/12614496/e0a184f6-31ad-4f7f-b30b-6f8a501b6f63&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://spreecommerce.org/use-cases/wholesale-ecommerce/&quot;&gt;Wholesale eCommerce&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Run your wholesale operation the way your retail partners expect &lt;img alt=&quot;Spree Commerce - Wholesale&quot; src=&quot;https://github.com/spree/spree/assets/12614496/bac1e551-f629-47d6-a983-b385aa65b1bd&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;A &lt;a href=&quot;https://spreecommerce.org/multi-tenant-white-label-ecommerce/&quot;&gt;white-label SaaS or multi-tenant eCommerce&lt;/a&gt; platform&lt;/h3&gt; 
&lt;p&gt;Launch a &lt;a href=&quot;https://spreecommerce.org/multi-tenant-white-label-ecommerce/&quot;&gt;multi-tenant eCommerce platform&lt;/a&gt; for your customers, resellers, affiliates in any configuration, eg. B2B2B, B2B2C, B2B2E&lt;/p&gt; 
&lt;img alt=&quot;Spree Commerce - Multi-store&quot; src=&quot;https://github.com/spree/spree/assets/12614496/cf651354-6180-4927-973f-c650b80ccdb0&quot; /&gt; 
&lt;h2&gt;Community &amp;amp; Contributing&lt;/h2&gt; 
&lt;p&gt;Spree is an open source project and we love contributions in any form - pull requests, issues, feature ideas!&lt;/p&gt; 
&lt;p&gt;Follow our &lt;a href=&quot;https://spreecommerce.org/docs/developer/contributing/quickstart&quot;&gt;Contributing Guide&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://slack.spreecommerce.org&quot;&gt;Join our Slack&lt;/a&gt; to meet other community members.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://spreecommerce.org/contact/&quot;&gt;Contact us&lt;/a&gt; and let&#39;s go!&lt;/p&gt; 
&lt;h2&gt;Developed by&lt;/h2&gt; 
&lt;p&gt;Spree is developed and maintained by&lt;/p&gt; 
&lt;a href=&quot;https://getvendo.com&quot;&gt; &lt;img alt=&quot;Vendo&quot; src=&quot;https://avatars.githubusercontent.com/u/89416582?s=96&amp;amp;v=4&quot; /&gt; &lt;/a&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Vendo is the commercial entity behind Spree Commerce and in particular the latest, unprecedented investment into Spree 5 and following versions as well as its integrations. We&#39;ve been the Spree core team since 2016 and led numerous Spree projects while supporting the community. Learn more at: &lt;a href=&quot;https://www.getvendo.com/&quot;&gt;https://www.getvendo.com/&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Spree Commerce is a free, open-source eCommerce framework giving you full control and customizability.&lt;/p&gt; 
&lt;p&gt;For Spree Commerce versions 4.10 and later in the &lt;a href=&quot;https://github.com/spree/spree&quot;&gt;spree/spree&lt;/a&gt; repository two licenses apply simultaneously and users are required to comply with the terms of these two licenses at the same time:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://opensource.org/license/agpl-v3&quot;&gt;AGPL-3.0&lt;/a&gt; - for all contributions from version 4.10 onwards&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://opensource.org/license/bsd-3-clause&quot;&gt;BSD-3-Clause&lt;/a&gt; - for all other contributions predating version 4.10&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Effectively, for versions 4.10 and upwards &lt;strong&gt;AGPL-3.0&lt;/strong&gt; license applies.&lt;/p&gt; 
&lt;p&gt;Spree Commerce versions 4.9 and earlier in the &lt;a href=&quot;https://github.com/spree/spree&quot;&gt;spree/spree&lt;/a&gt; repository are available under the BSD-3-Clause license and users are required to comply with its terms.&lt;/p&gt; 
&lt;p&gt;Please note:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://spreecommerce.org/spree-under-agplv3-may-be-used-privately/&quot;&gt;Spree under AGPLv3 may be used privately&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://spreecommerce.org/spree-commerce-developer-covenant/&quot;&gt;Spree Commerce Developer Covenant&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you‚Äôd like to use Spree Commerce without the AGPL-3.0 restrictions e.g. for a SaaS business, please talk to us about obtaining a &lt;a href=&quot;https://github.com/spree/spree/raw/main/license.md#commercial-license&quot;&gt;Commercial License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All third party components incorporated into this software are licensed under the original license provided by the owner of the applicable component.&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href=&quot;https://spreecommerce.org/why-spree-is-changing-its-open-source-license-to-agpl-3-0-and-introducing-a-commercial-license/&quot;&gt;Licensing FAQ&lt;/a&gt; in case of questions&lt;/p&gt; 
&lt;p&gt;If you like what you see, consider giving Spree a GitHub star &lt;span&gt;‚≠ê&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;Thank you for supporting Spree open-source &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jekyll/jekyll</title>
      <link>https://github.com/jekyll/jekyll</link>
      <description>&lt;p&gt;üåê Jekyll is a blog-aware static site generator in Ruby&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/jekyll&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/jekyll.svg?sanitize=true&quot; alt=&quot;Gem Version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/jekyll/jekyll/actions?query=workflow%3A%22Continuous+Integration%22+branch%3Amaster&quot;&gt;&lt;img src=&quot;https://github.com/jekyll/jekyll/workflows/Continuous%20Integration/badge.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/jekyll/jekyll/master/#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/backers/badge.svg?sanitize=true&quot; alt=&quot;Backers on Open Collective&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/jekyll/jekyll/master/#sponsors&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsors/badge.svg?sanitize=true&quot; alt=&quot;Sponsors on Open Collective&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;, which you can use to host sites right from your GitHub repositories.&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;Jekyll does what you tell it to do&amp;nbsp;‚Äî no more, no less. It doesn&#39;t try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content.&lt;/p&gt; 
&lt;p&gt;See: &lt;a href=&quot;https://jekyllrb.com/philosophy&quot;&gt;https://jekyllrb.com/philosophy&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/installation/&quot;&gt;Install&lt;/a&gt; the gem&lt;/li&gt; 
 &lt;li&gt;Read up about its &lt;a href=&quot;https://jekyllrb.com/docs/usage/&quot;&gt;Usage&lt;/a&gt; and &lt;a href=&quot;https://jekyllrb.com/docs/configuration/&quot;&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Take a gander at some existing &lt;a href=&quot;https://github.com/jekyll/jekyll/wiki/sites&quot;&gt;Sites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll/fork&quot;&gt;Fork&lt;/a&gt; and &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;Contribute&lt;/a&gt; your own modifications&lt;/li&gt; 
 &lt;li&gt;Have questions? Check out our official forum community &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt; and &lt;a href=&quot;https://libera.chat&quot;&gt;&lt;code&gt;#jekyll&lt;/code&gt; Channel on Libera IRC&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Diving In&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt;Migrate&lt;/a&gt; from your previous system&lt;/li&gt; 
 &lt;li&gt;Learn how &lt;a href=&quot;https://jekyllrb.com/docs/front-matter/&quot;&gt;Front Matter&lt;/a&gt; works&lt;/li&gt; 
 &lt;li&gt;Put information on your site with &lt;a href=&quot;https://jekyllrb.com/docs/variables/&quot;&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Customize the &lt;a href=&quot;https://jekyllrb.com/docs/permalinks/&quot;&gt;Permalinks&lt;/a&gt; your posts are generated with&lt;/li&gt; 
 &lt;li&gt;Use the built-in &lt;a href=&quot;https://jekyllrb.com/docs/templates/&quot;&gt;Liquid Extensions&lt;/a&gt; to make your life easier&lt;/li&gt; 
 &lt;li&gt;Use custom &lt;a href=&quot;https://jekyllrb.com/docs/plugins/&quot;&gt;Plugins&lt;/a&gt; to generate content specific to your site&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href=&quot;https://jekyllrb.com/tutorials/video-walkthroughs/&quot;&gt;video tutorials from Giraffe Academy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Need help?&lt;/h2&gt; 
&lt;p&gt;If you don&#39;t find the answer to your problem in our &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;docs&lt;/a&gt;, or in the &lt;a href=&quot;https://jekyllrb.com/docs/troubleshooting/&quot;&gt;troubleshooting section&lt;/a&gt;, ask the &lt;a href=&quot;https://jekyllrb.com/docs/community/&quot;&gt;community&lt;/a&gt; for help.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;In order to have a more open and welcoming community, Jekyll adheres to a &lt;a href=&quot;https://jekyllrb.com/docs/conduct/&quot;&gt;code of conduct&lt;/a&gt; adapted from the Ruby on Rails code of conduct.&lt;/p&gt; 
&lt;p&gt;Please adhere to this code of conduct in any interactions you have in the Jekyll community. It is strictly enforced on all official Jekyll repositories, websites, and resources. If you encounter someone violating these terms, please let one of our &lt;a href=&quot;https://jekyllrb.com/team/#core-team&quot;&gt;core team members&lt;/a&gt; know and we will address it as soon as possible.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up in this README with a link to your website. &lt;a href=&quot;https://opencollective.com/jekyll#sponsor&quot;&gt;Become a sponsor!&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/0/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/0/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 0&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/1/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/1/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 1&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/2/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/2/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 2&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/3/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/3/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 3&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/4/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/4/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 4&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/5/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/5/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 5&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/6/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/6/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 6&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/7/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/7/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 7&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/8/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/8/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 8&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opencollective.com/jekyll/sponsor/9/website&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/sponsor/9/avatar.svg?sanitize=true&quot; alt=&quot;Jekyll Sponsor 9&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href=&quot;https://raw.githubusercontent.com/jekyll/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/contributors.svg?width=890&amp;amp;button=false&quot; alt=&quot;Jekyll Contributors&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! üôè &lt;a href=&quot;https://opencollective.com/jekyll#backer&quot;&gt;Become a backer&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://opencollective.com/jekyll#backers&quot;&gt;&lt;img src=&quot;https://opencollective.com/jekyll/backers.svg?width=890&quot; alt=&quot;Jekyll Backers&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/jekyll/jekyll/raw/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chatwoot/chatwoot</title>
      <link>https://github.com/chatwoot/chatwoot</link>
      <description>&lt;p&gt;Open-source live-chat, email support, omni-channel desk. An alternative to Intercom, Zendesk, Salesforce Service Cloud etc. üî•üí¨&lt;/p&gt;&lt;hr&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chatwoot/chatwoot/develop/.github/screenshots/header.png#gh-light-mode-only&quot; width=&quot;100%&quot; alt=&quot;Header light mode&quot; /&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/chatwoot/chatwoot/develop/.github/screenshots/header-dark.png#gh-dark-mode-only&quot; width=&quot;100%&quot; alt=&quot;Header dark mode&quot; /&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Chatwoot&lt;/h1&gt; 
&lt;p&gt;The modern customer support platform, an open-source alternative to Intercom, Zendesk, Salesforce Service Cloud etc.&lt;/p&gt; 
&lt;p&gt; &lt;a href=&quot;https://codeclimate.com/github/chatwoot/chatwoot/maintainability&quot;&gt;&lt;img src=&quot;https://api.codeclimate.com/v1/badges/e6e3f66332c91e5a4c0c/maintainability&quot; alt=&quot;Maintainability&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/circleci/build/github/chatwoot/chatwoot&quot; alt=&quot;CircleCI Badge&quot; /&gt; &lt;a href=&quot;https://hub.docker.com/r/chatwoot/chatwoot/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/pulls/chatwoot/chatwoot&quot; alt=&quot;Docker Pull Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hub.docker.com/r/chatwoot/chatwoot/&quot;&gt;&lt;img src=&quot;https://img.shields.io/docker/cloud/build/chatwoot/chatwoot&quot; alt=&quot;Docker Build Badge&quot; /&gt;&lt;/a&gt; &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/chatwoot/chatwoot&quot; alt=&quot;Commits-per-month&quot; /&gt; &lt;a title=&quot;Crowdin&quot; target=&quot;_self&quot; href=&quot;https://chatwoot.crowdin.com/chatwoot&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/e/37ced7eba411064bd792feb3b7a28b16/localized.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/cJXdrwS&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/647412545203994635&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://status.chatwoot.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fchatwoot%2Fstatus%2Fmaster%2Fapi%2Fchatwoot%2Fuptime.json&quot; alt=&quot;uptime&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://status.chatwoot.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https%3A%2F%2Fraw.githubusercontent.com%2Fchatwoot%2Fstatus%2Fmaster%2Fapi%2Fchatwoot%2Fresponse-time.json&quot; alt=&quot;response time&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://artifacthub.io/packages/helm/chatwoot/chatwoot&quot;&gt;&lt;img src=&quot;https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/artifact-hub&quot; alt=&quot;Artifact HUB&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt; &lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/chatwoot/chatwoot/tree/master&quot; alt=&quot;Deploy to Heroku&quot;&gt; &lt;img width=&quot;150&quot; alt=&quot;Deploy&quot; src=&quot;https://www.herokucdn.com/deploy/button.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://marketplace.digitalocean.com/apps/chatwoot?refcode=f2238426a2a8&quot; alt=&quot;Deploy to DigitalOcean&quot;&gt; &lt;img width=&quot;200&quot; alt=&quot;Deploy to DO&quot; src=&quot;https://www.deploytodo.com/do-btn-blue.svg?sanitize=true&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/chatwoot/chatwoot/develop/.github/screenshots/dashboard.png#gh-light-mode-only&quot; width=&quot;100%&quot; alt=&quot;Chat dashboard dark mode&quot; /&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/chatwoot/chatwoot/develop/.github/screenshots/dashboard-dark.png#gh-dark-mode-only&quot; width=&quot;100%&quot; alt=&quot;Chat dashboard&quot; /&gt; 
&lt;hr /&gt; 
&lt;p&gt;Chatwoot is the modern, open-source, and self-hosted customer support platform designed to help businesses deliver exceptional customer support experience. Built for scale and flexibility, Chatwoot gives you full control over your customer data while providing powerful tools to manage conversations across channels.&lt;/p&gt; 
&lt;h3&gt;‚ú® Captain ‚Äì AI Agent for Support&lt;/h3&gt; 
&lt;p&gt;Supercharge your support with Captain, Chatwoot‚Äôs AI agent. Captain helps automate responses, handle common queries, and reduce agent workload‚Äîensuring customers get instant, accurate answers. With Captain, your team can focus on complex conversations while routine questions are resolved automatically. Read more about Captain &lt;a href=&quot;https://chwt.app/captain-docs&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;üí¨ Omnichannel Support Desk&lt;/h3&gt; 
&lt;p&gt;Chatwoot centralizes all customer conversations into one powerful inbox, no matter where your customers reach out from. It supports live chat on your website, email, Facebook, Instagram, Twitter, WhatsApp, Telegram, Line, SMS etc.&lt;/p&gt; 
&lt;h3&gt;üìö Help center portal&lt;/h3&gt; 
&lt;p&gt;Publish help articles, FAQs, and guides through the built-in Help Center Portal. Enable customers to find answers on their own, reduce repetitive queries, and keep your support team focused on more complex issues.&lt;/p&gt; 
&lt;h3&gt;üóÇÔ∏è Other features&lt;/h3&gt; 
&lt;h4&gt;Collaboration &amp;amp; Productivity&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Private Notes and @mentions for internal team discussions.&lt;/li&gt; 
 &lt;li&gt;Labels to organize and categorize conversations.&lt;/li&gt; 
 &lt;li&gt;Keyboard Shortcuts and a Command Bar for quick navigation.&lt;/li&gt; 
 &lt;li&gt;Canned Responses to reply faster to frequently asked questions.&lt;/li&gt; 
 &lt;li&gt;Auto-Assignment to route conversations based on agent availability.&lt;/li&gt; 
 &lt;li&gt;Multi-lingual Support to serve customers in multiple languages.&lt;/li&gt; 
 &lt;li&gt;Custom Views and Filters for better inbox organization.&lt;/li&gt; 
 &lt;li&gt;Business Hours and Auto-Responders to manage response expectations.&lt;/li&gt; 
 &lt;li&gt;Teams and Automation tools for scaling support workflows.&lt;/li&gt; 
 &lt;li&gt;Agent Capacity Management to balance workload across the team.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Customer Data &amp;amp; Segmentation&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Contact Management with profiles and interaction history.&lt;/li&gt; 
 &lt;li&gt;Contact Segments and Notes for targeted communication.&lt;/li&gt; 
 &lt;li&gt;Campaigns to proactively engage customers.&lt;/li&gt; 
 &lt;li&gt;Custom Attributes for storing additional customer data.&lt;/li&gt; 
 &lt;li&gt;Pre-Chat Forms to collect user information before starting conversations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Integrations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Slack Integration to manage conversations directly from Slack.&lt;/li&gt; 
 &lt;li&gt;Dialogflow Integration for chatbot automation.&lt;/li&gt; 
 &lt;li&gt;Dashboard Apps to embed internal tools within Chatwoot.&lt;/li&gt; 
 &lt;li&gt;Shopify Integration to view and manage customer orders right within Chatwoot.&lt;/li&gt; 
 &lt;li&gt;Use Google Translate to translate messages from your customers in realtime.&lt;/li&gt; 
 &lt;li&gt;Create and manage Linear tickets within Chatwoot.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Reports &amp;amp; Insights&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Live View of ongoing conversations for real-time monitoring.&lt;/li&gt; 
 &lt;li&gt;Conversation, Agent, Inbox, Label, and Team Reports for operational visibility.&lt;/li&gt; 
 &lt;li&gt;CSAT Reports to measure customer satisfaction.&lt;/li&gt; 
 &lt;li&gt;Downloadable Reports for offline analysis and reporting.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Detailed documentation is available at &lt;a href=&quot;https://www.chatwoot.com/help-center&quot;&gt;chatwoot.com/help-center&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Translation process&lt;/h2&gt; 
&lt;p&gt;The translation process for Chatwoot web and mobile app is managed at &lt;a href=&quot;https://translate.chatwoot.com&quot;&gt;https://translate.chatwoot.com&lt;/a&gt; using Crowdin. Please read the &lt;a href=&quot;https://www.chatwoot.com/docs/contributing/translating-chatwoot-to-your-language&quot;&gt;translation guide&lt;/a&gt; for contributing to Chatwoot.&lt;/p&gt; 
&lt;h2&gt;Branching model&lt;/h2&gt; 
&lt;p&gt;We use the &lt;a href=&quot;https://nvie.com/posts/a-successful-git-branching-model/&quot;&gt;git-flow&lt;/a&gt; branching model. The base branch is &lt;code&gt;develop&lt;/code&gt;. If you are looking for a stable version, please use the &lt;code&gt;master&lt;/code&gt; or tags labelled as &lt;code&gt;v1.x.x&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;h3&gt;Heroku one-click deploy&lt;/h3&gt; 
&lt;p&gt;Deploying Chatwoot to Heroku is a breeze. It&#39;s as simple as clicking this button:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/chatwoot/chatwoot/tree/master&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg?sanitize=true&quot; alt=&quot;Deploy&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Follow this &lt;a href=&quot;https://www.chatwoot.com/docs/environment-variables&quot;&gt;link&lt;/a&gt; to understand setting the correct environment variables for the app to work with all the features. There might be breakages if you do not set the relevant environment variables.&lt;/p&gt; 
&lt;h3&gt;DigitalOcean 1-Click Kubernetes deployment&lt;/h3&gt; 
&lt;p&gt;Chatwoot now supports 1-Click deployment to DigitalOcean as a kubernetes app.&lt;/p&gt; 
&lt;a href=&quot;https://marketplace.digitalocean.com/apps/chatwoot?refcode=f2238426a2a8&quot; alt=&quot;Deploy to DigitalOcean&quot;&gt; &lt;img width=&quot;200&quot; alt=&quot;Deploy to DO&quot; src=&quot;https://www.deploytodo.com/do-btn-blue.svg?sanitize=true&quot; /&gt; &lt;/a&gt; 
&lt;h3&gt;Other deployment options&lt;/h3&gt; 
&lt;p&gt;For other supported options, checkout our &lt;a href=&quot;https://chatwoot.com/deploy&quot;&gt;deployment page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Looking to report a vulnerability? Please refer our &lt;a href=&quot;https://raw.githubusercontent.com/chatwoot/chatwoot/develop/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;If you need help or just want to hang out, come, say hi on our &lt;a href=&quot;https://discord.gg/cJXdrwS&quot;&gt;Discord&lt;/a&gt; server.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks goes to all these &lt;a href=&quot;https://www.chatwoot.com/docs/contributors&quot;&gt;wonderful people&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/chatwoot/chatwoot/graphs/contributors&quot;&gt;&lt;img src=&quot;https://opencollective.com/chatwoot/contributors.svg?width=890&amp;amp;button=false&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Chatwoot&lt;/em&gt; ¬© 2017-2025, Chatwoot Inc - Released under the MIT License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Homebrew/homebrew-core</title>
      <link>https://github.com/Homebrew/homebrew-core</link>
      <description>&lt;p&gt;üçª Default formulae for the missing package manager for macOS (or Linux)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Homebrew Core&lt;/h1&gt; 
&lt;p&gt;Core formulae for the Homebrew package manager.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/orgs/Homebrew/discussions&quot;&gt;Homebrew/discussions (forum)&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How do I install these formulae?&lt;/h2&gt; 
&lt;p&gt;Just &lt;code&gt;brew install &amp;lt;formula&amp;gt;&lt;/code&gt;. This is the default tap for Homebrew and is installed by default.&lt;/p&gt; 
&lt;h2&gt;More Documentation, Troubleshooting, Contributing, Security, Community, Donations, License and Sponsors&lt;/h2&gt; 
&lt;p&gt;See these sections in &lt;a href=&quot;https://github.com/Homebrew/brew#homebrew&quot;&gt;Homebrew/brew&#39;s README&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>opf/openproject</title>
      <link>https://github.com/opf/openproject</link>
      <description>&lt;p&gt;OpenProject is the leading open source project management software.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenProject&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/opf/openproject&quot; alt=&quot;GitHub release (latest by date)&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/commit-activity/m/opf/openproject&quot; alt=&quot;GitHub commit activity&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/checks-status/opf/openproject/dev&quot; alt=&quot;GitHub branch checks state&quot; /&gt; &lt;a href=&quot;https://github.com/opf/openproject/actions/workflows/test-core.yml&quot;&gt;&lt;img src=&quot;https://github.com/opf/openproject/actions/workflows/test-core.yml/badge.svg?branch=dev&quot; alt=&quot;Github Tests&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We empower teams to achieve great things together for the good of society.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;OpenProject is a web-based project management software. Use OpenProject to manage your projects, tasks and goals. Collaborate via work packages and link them to your pull requests on Github. &lt;a href=&quot;https://www.openproject.org/docs/system-admin-guide/integrations/github-integration/&quot;&gt;Read more about the OpenProject GitHub integration&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/opf/openproject/dev/GitHub-tab-new.png&quot; alt=&quot;Screenshot of OpenProject, showing the GitHub tab on a work package&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;OpenProject&#39;s key features are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/collaboration-software-features/#project-planning&quot;&gt;Project planning and scheduling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/collaboration-software-features/#product-management&quot;&gt;Product roadmap and release planning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/collaboration-software-features/#task-management&quot;&gt;Task management and team collaboration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/collaboration-software-features/#agile-scrum&quot;&gt;Agile and Scrum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/collaboration-software-features/#time-tracking&quot;&gt;Time tracking, cost reporting, and budgeting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/collaboration-software-features/#bug-tracking&quot;&gt;Bug tracking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/docs/user-guide/wysiwyg/&quot;&gt;Wikis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/docs/user-guide/forums/&quot;&gt;Forums&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/docs/user-guide/meetings/&quot;&gt;Meeting agendas and meeting minutes&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;More information and screenshots can be found on our &lt;a href=&quot;https://www.openproject.org&quot;&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Start now with OpenProject&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free Trial&lt;/strong&gt;: &lt;a href=&quot;https://start.openproject.com/&quot;&gt;Start a 14-days free trial of OpenProject&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Community Edition&lt;/strong&gt;, free of charge: Download OpenProject and get started with the self-hosted Community edition. If you want to run an instance of OpenProject in production (or for evaluation), refer to our in-depth &lt;a href=&quot;https://www.openproject.org/download-and-installation/&quot;&gt;installation guides&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise Edition&lt;/strong&gt;: Sign up for the Enterprise version, choose between cloud or on-premises and benefit from comprehensive support and Enterprise add-ons.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: Explore our &lt;a href=&quot;https://www.openproject.org/docs/&quot;&gt;comprehensive documentation&lt;/a&gt; to help you get up and running quickly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Training&lt;/strong&gt;: &lt;a href=&quot;https://www.openproject.org/training-and-consulting/#training-signup&quot;&gt;Book one of our training or consulting offers&lt;/a&gt; to get your team on board in no time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Report bugs&lt;/h2&gt; 
&lt;p&gt;You found a bug? Please &lt;a href=&quot;https://www.openproject.org/docs/development/report-a-bug/&quot;&gt;report it&lt;/a&gt; to our &lt;a href=&quot;https://community.openproject.org/projects/openproject&quot;&gt;OpenProject Community&lt;/a&gt;. Thank you!&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;OpenProject is supported by its Community members, both companies and individuals.&lt;/p&gt; 
&lt;p&gt;We are always looking for new members to our Community, so if you are interested in improving OpenProject we would be glad to welcome and support you getting into the code. There are guides as well, e.g. a &lt;a href=&quot;https://www.openproject.org/docs/development/development-environment/&quot;&gt;Quick Start for Developers&lt;/a&gt;, but don&#39;t hesitate to simply &lt;a href=&quot;https://www.openproject.org/contact&quot;&gt;contact us&lt;/a&gt; if you have questions.&lt;/p&gt; 
&lt;p&gt;Working on OpenProject comes with the satisfaction of working on a widely used open source application.&lt;/p&gt; 
&lt;p&gt;Also, if you do not want to be limited to working on open source in your free time, OpenProject GmbH, the company contributing to the OpenProject development, &lt;a href=&quot;https://www.openproject.org/career/&quot;&gt;is hiring&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Stay in contact&lt;/h2&gt; 
&lt;p&gt;Here you can find our &lt;a href=&quot;https://www.openproject.org/contact/&quot;&gt;contact information&lt;/a&gt;. As we regularly update OpenProject, we recommend staying in touch ‚Äì here is where you can find us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.openproject.org/blog/community-instance/&quot;&gt;OpenProject Community&lt;/a&gt; with &lt;a href=&quot;https://community.openproject.org/projects/openproject/forums&quot;&gt;forum discussions&lt;/a&gt;: The open instance where we develop our features ‚Äì transparent and open for discussions, bug reports or feature requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/company/18706985&quot;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/openproject/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fosstodon.org/@openproject&quot;&gt;Fosstodon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/openproject&quot;&gt;Twitter/X&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security / responsible disclosure&lt;/h2&gt; 
&lt;p&gt;We take security very seriously at OpenProject. We value any kind of feedback that will keep our Community secure. If you happen to come across a security issue we urge you to disclose it to us privately to allow our users and Community enough time to upgrade. Security issues will always take precedence over anything else in the pipeline.&lt;/p&gt; 
&lt;p&gt;For more information on how to disclose a security vulnerability, &lt;a href=&quot;https://raw.githubusercontent.com/opf/openproject/dev/docs/security-and-privacy/statement-on-security/README.md&quot;&gt;please see this page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OpenProject is licensed under the terms of the GNU General Public License version 3. See &lt;a href=&quot;https://raw.githubusercontent.com/opf/openproject/dev/COPYRIGHT&quot;&gt;COPYRIGHT&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/opf/openproject/dev/LICENSE&quot;&gt;LICENSE&lt;/a&gt; files for details.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;h3&gt;Icons&lt;/h3&gt; 
&lt;p&gt;Thanks to Vincent Le Moign and his fabulous Minicons icons on &lt;a href=&quot;http://www.webalys.com/minicons/icons-free-pack.php&quot;&gt;webalys.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;OpenProject icon font&lt;/h3&gt; 
&lt;p&gt;Published and created by the OpenProject Foundation (OPF) under &lt;a href=&quot;http://creativecommons.org/licenses/by/3.0/&quot;&gt;Creative Commons Attribution 3.0 Unported License&lt;/a&gt; with icons from the following sources &lt;a href=&quot;http://www.webalys.com/minicons&quot;&gt;Minicons Free Vector Icons Pack&lt;/a&gt; and &lt;a href=&quot;http://www.webalys.com/design-interface-application-framework.php&quot;&gt;User Interface Design framework&lt;/a&gt; both by webalys&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Creative Commons License&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;OpenProject Icon Font by the OpenProject Foundation (OPF) is licensed under Creative Commons Attribution 3.0 Unported License and Free for both personal and commercial use. You can copy, adapt, remix, distribute or transmit it.&lt;/p&gt; 
&lt;p&gt;Under this condition: provide a mention of the &quot;OpenProject Foundation&quot; and a link back to OpenProject &lt;a href=&quot;http://www.openproject.org&quot;&gt;www.openproject.org&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>basecamp/kamal</title>
      <link>https://github.com/basecamp/kamal</link>
      <description>&lt;p&gt;Deploy web apps anywhere.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kamal: Deploy web apps anywhere&lt;/h1&gt; 
&lt;p&gt;From bare metal to cloud VMs, deploy web apps anywhere with zero downtime. Kamal uses &lt;a href=&quot;https://github.com/basecamp/kamal-proxy&quot;&gt;kamal-proxy&lt;/a&gt; to seamlessly switch requests between containers. Works seamlessly across multiple servers, using SSHKit to execute commands. Originally built for Rails apps, Kamal will work with any type of web app that can be containerized with Docker.&lt;/p&gt; 
&lt;p&gt;‚û°Ô∏è See &lt;a href=&quot;https://kamal-deploy.org&quot;&gt;kamal-deploy.org&lt;/a&gt; for documentation on &lt;a href=&quot;https://kamal-deploy.org/docs/installation&quot;&gt;installation&lt;/a&gt;, &lt;a href=&quot;https://kamal-deploy.org/docs/configuration&quot;&gt;configuration&lt;/a&gt;, and &lt;a href=&quot;https://kamal-deploy.org/docs/commands&quot;&gt;commands&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to the documentation&lt;/h2&gt; 
&lt;p&gt;Please help us improve Kamal&#39;s documentation on the &lt;a href=&quot;https://github.com/basecamp/kamal-site&quot;&gt;the basecamp/kamal-site repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Kamal is released under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rapid7/metasploit-framework</title>
      <link>https://github.com/rapid7/metasploit-framework</link>
      <description>&lt;p&gt;Metasploit Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Metasploit Framework&lt;/h1&gt; 
&lt;p&gt;The Metasploit Framework is an open-source tool released under a BSD-style license. For detailed licensing information, refer to the &lt;code&gt;COPYING&lt;/code&gt; file.&lt;/p&gt; 
&lt;h2&gt;Latest Version&lt;/h2&gt; 
&lt;p&gt;Access the latest version of Metasploit from the &lt;a href=&quot;https://docs.metasploit.com/docs/using-metasploit/getting-started/nightly-installers.html&quot;&gt;Nightly Installers&lt;/a&gt; page.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Comprehensive documentation, including usage guides, is available at &lt;a href=&quot;https://docs.metasploit.com/&quot;&gt;Metasploit Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development Environment&lt;/h2&gt; 
&lt;p&gt;To set up a development environment, visit the &lt;a href=&quot;https://docs.metasploit.com/docs/development/get-started/setting-up-a-metasploit-development-environment.html&quot;&gt;Development Setup Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Bug and Feature Requests&lt;/h2&gt; 
&lt;p&gt;Submit bugs and feature requests via the &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/issues&quot;&gt;GitHub Issues&lt;/a&gt; tracker. New submissions can be made through the &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/issues/new/choose&quot;&gt;MSF-BUGv1 form&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;API Documentation&lt;/h2&gt; 
&lt;p&gt;For information on writing modules, refer to the &lt;a href=&quot;https://docs.metasploit.com/api/&quot;&gt;API Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support and Communication&lt;/h2&gt; 
&lt;p&gt;For questions and suggestions, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Join our &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/discussions&quot;&gt;GitHub Discussions&lt;/a&gt; for community support and general questions&lt;/li&gt; 
 &lt;li&gt;Join the &lt;a href=&quot;https://join.slack.com/t/metasploit/shared_invite/zt-30i688it0-mJsFGT44IMtdeZi1DraamQ&quot;&gt;Metasploit Slack&lt;/a&gt; for real-time chat&lt;/li&gt; 
 &lt;li&gt;Submit &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/issues&quot;&gt;GitHub Issues&lt;/a&gt; for bug reports and feature requests&lt;/li&gt; 
 &lt;li&gt;Follow &lt;a href=&quot;https://x.com/metasploit&quot;&gt;@metasploit&lt;/a&gt; on X or &lt;a href=&quot;https://infosec.exchange/@metasploit&quot;&gt;@metasploit@infosec.exchange&lt;/a&gt; on Mastodon for updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some community members may still use IRC channels and the metasploit-hackers mailing list, though the primary support channels are now GitHub Discussions and Slack.&lt;/p&gt; 
&lt;h2&gt;Installing Metasploit&lt;/h2&gt; 
&lt;h3&gt;Recommended Installation&lt;/h3&gt; 
&lt;p&gt;We recommend installation with the &lt;a href=&quot;https://docs.metasploit.com/docs/using-metasploit/getting-started/nightly-installers.html#installing-metasploit-on-linux--macos&quot;&gt;official Metasploit installers&lt;/a&gt; on Linux or macOS. Metasploit is also pre-installed with Kali.&lt;/p&gt; 
&lt;p&gt;For a manual setup, consult the &lt;a href=&quot;https://docs.metasploit.com/docs/development/get-started/setting-up-a-metasploit-development-environment.html&quot;&gt;Dev Environment Setup&lt;/a&gt; guide.&lt;/p&gt; 
&lt;h2&gt;Using Metasploit&lt;/h2&gt; 
&lt;p&gt;To get started with Metasploit:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Start &lt;code&gt;msfconsole&lt;/code&gt;:&lt;/strong&gt; This is the primary interface for interacting with Metasploit.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Explore Resources:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Visit the &lt;a href=&quot;https://docs.metasploit.com/docs/using-metasploit/getting-started/index.html&quot;&gt;Using Metasploit&lt;/a&gt; section of the documentation.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;To contribute to Metasploit:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Setup Development Environment:&lt;/strong&gt; Follow the instructions in the &lt;a href=&quot;https://docs.metasploit.com/docs/development/get-started/setting-up-a-metasploit-development-environment.html&quot;&gt;Development Setup Guide&lt;/a&gt; on GitHub.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Clone the Repository:&lt;/strong&gt; Obtain the source code from the official repository.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Submit a Pull Request:&lt;/strong&gt; After making changes, submit a pull request for review. Additional details can be found in the &lt;a href=&quot;https://github.com/rapid7/metasploit-framework/raw/master/CONTRIBUTING.md&quot;&gt;Contributing Guide&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>huginn/huginn</title>
      <link>https://github.com/huginn/huginn</link>
      <description>&lt;p&gt;Create agents that monitor and act on your behalf. Your agents are standing by!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&quot;https://raw.github.com/huginn/huginn/master/media/huginn-logo.png&quot; alt=&quot;Huginn&quot; title=&quot;Your agents are standing by.&quot; /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;What is Huginn?&lt;/h2&gt; 
&lt;p&gt;Huginn is a system for building agents that perform automated tasks for you online. They can read the web, watch for events, and take actions on your behalf. Huginn&#39;s Agents create and consume events, propagating them along a directed graph. Think of it as a hackable version of IFTTT or Zapier on your own server. You always know who has your data. You do.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/huginn/huginn/master/doc/imgs/the-name.png&quot; alt=&quot;the origin of the name&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;Here are some of the things that you can do with Huginn:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Track the weather and get an email when it&#39;s going to rain (or snow) tomorrow (&quot;Don&#39;t forget your umbrella!&quot;)&lt;/li&gt; 
 &lt;li&gt;List terms that you care about and receive email when their occurrence on Twitter changes. (For example, want to know when something interesting has happened in the world of Machine Learning? Huginn will watch the term &quot;machine learning&quot; on Twitter and tell you when there is a spike in discussion.)&lt;/li&gt; 
 &lt;li&gt;Watch for air travel or shopping deals&lt;/li&gt; 
 &lt;li&gt;Follow your project names on Twitter and get updates when people mention them&lt;/li&gt; 
 &lt;li&gt;Scrape websites and receive email when they change&lt;/li&gt; 
 &lt;li&gt;Connect to Adioso, HipChat, FTP, IMAP, Jabber, JIRA, MQTT, nextbus, Pushbullet, Pushover, RSS, Bash, Slack, StubHub, translation APIs, Twilio, Twitter, and Weibo, to name a few.&lt;/li&gt; 
 &lt;li&gt;Send digest email with things that you care about at specific times during the day&lt;/li&gt; 
 &lt;li&gt;Track counts of high frequency events and send an SMS within moments when they spike, such as the term &quot;san francisco emergency&quot;&lt;/li&gt; 
 &lt;li&gt;Send and receive WebHooks&lt;/li&gt; 
 &lt;li&gt;Run custom JavaScript or CoffeeScript functions&lt;/li&gt; 
 &lt;li&gt;Track your location over time&lt;/li&gt; 
 &lt;li&gt;Create Amazon Mechanical Turk workflows as the inputs, or outputs, of agents (the Amazon Turk Agent is called the &quot;HumanTaskAgent&quot;). For example: &quot;Once a day, ask 5 people for a funny cat photo; send the results to 5 more people to be rated; send the top-rated photo to 5 people for a funny caption; send to 5 final people to rate for funniest caption; finally, post the best captioned photo on my blog.&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitter.im/huginn/huginn?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&quot; alt=&quot;Gitter&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://changelog.com/podcast/199&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/changelog-%23199-lightgrey.svg?sanitize=true&quot; alt=&quot;Changelog #199&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join us in our &lt;a href=&quot;https://gitter.im/huginn/huginn&quot;&gt;Gitter room&lt;/a&gt; to discuss the project.&lt;/p&gt; 
&lt;h3&gt;Join us!&lt;/h3&gt; 
&lt;p&gt;Want to help with Huginn? All contributions are encouraged! You could make UI improvements, &lt;a href=&quot;https://github.com/huginn/huginn/wiki/Creating-a-new-agent&quot;&gt;add new Agents&lt;/a&gt;, write &lt;a href=&quot;https://github.com/huginn/huginn/wiki&quot;&gt;documentation and tutorials&lt;/a&gt;, or try tackling &lt;a href=&quot;https://github.com/huginn/huginn/issues?direction=desc&amp;amp;labels=help+wanted&amp;amp;page=1&amp;amp;sort=created&amp;amp;state=open&quot;&gt;issues tagged with #&quot;help wanted&quot;&lt;/a&gt;. Please fork, add specs, and send pull requests!&lt;/p&gt; 
&lt;p&gt;Really want a fix or feature? Want to solve some community issues and earn some extra coffee money? Take a look at the &lt;a href=&quot;https://www.bountysource.com/trackers/282580-huginn&quot;&gt;current bounties on Bountysource&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Have an awesome idea but not feeling quite up to contributing yet? Head over to our &lt;a href=&quot;https://github.com/huginn/huginn/issues/353&quot;&gt;Official &#39;suggest an agent&#39; thread &lt;/a&gt; and tell us!&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Please checkout the &lt;a href=&quot;http://vimeo.com/61976251&quot;&gt;Huginn Introductory Screencast&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;And now, some example screenshots. Below them are instructions to get you started.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/huginn/huginn/master/doc/imgs/your-agents.png&quot; alt=&quot;Example list of agents&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/huginn/huginn/master/doc/imgs/diagram.png&quot; alt=&quot;Event flow diagram&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/huginn/huginn/master/doc/imgs/peaks.png&quot; alt=&quot;Detecting peaks in Twitter&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/huginn/huginn/master/doc/imgs/my-locations.png&quot; alt=&quot;Logging your location over time&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/huginn/huginn/master/doc/imgs/new-agent.png&quot; alt=&quot;Making a new agent&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;The quickest and easiest way to check out Huginn is to use the official Docker image. Have a look at the &lt;a href=&quot;https://github.com/huginn/huginn/raw/master/doc/docker/install.md&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Local Installation&lt;/h3&gt; 
&lt;p&gt;If you just want to play around, you can simply fork this repository, then perform the following steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run &lt;code&gt;git remote add upstream https://github.com/huginn/huginn.git&lt;/code&gt; to add the main repository as a remote for your fork.&lt;/li&gt; 
 &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; (&lt;code&gt;cp .env.example .env&lt;/code&gt;) and edit &lt;code&gt;.env&lt;/code&gt;, at least updating the &lt;code&gt;APP_SECRET_TOKEN&lt;/code&gt; variable.&lt;/li&gt; 
 &lt;li&gt;Make sure that you have MySQL or PostgreSQL installed. (On a Mac, the easiest way is with &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;. If you&#39;re going to use PostgreSQL, you&#39;ll need to prepend all commands below with &lt;code&gt;DATABASE_ADAPTER=postgresql&lt;/code&gt;.)&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;bundle&lt;/code&gt; to install dependencies&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;bundle exec rake db:create&lt;/code&gt;, &lt;code&gt;bundle exec rake db:migrate&lt;/code&gt;, and then &lt;code&gt;bundle exec rake db:seed&lt;/code&gt; to create a development database with some example Agents.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;bundle exec foreman start&lt;/code&gt;, visit &lt;a href=&quot;http://localhost:3000/&quot;&gt;http://localhost:3000/&lt;/a&gt;, and login with the username of &lt;code&gt;admin&lt;/code&gt; and the password of &lt;code&gt;password&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Setup some Agents!&lt;/li&gt; 
 &lt;li&gt;Read the &lt;a href=&quot;https://github.com/huginn/huginn/wiki&quot;&gt;wiki&lt;/a&gt; for usage examples and to get started making new Agents.&lt;/li&gt; 
 &lt;li&gt;Periodically run &lt;code&gt;git fetch upstream&lt;/code&gt; and then &lt;code&gt;git checkout master &amp;amp;&amp;amp; git merge upstream/master&lt;/code&gt; to merge in the newest version of Huginn.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note: By default, email messages are intercepted in the &lt;code&gt;development&lt;/code&gt; Rails environment, which is what you just setup. You can view them at &lt;a href=&quot;http://localhost:3000/letter_opener&quot;&gt;http://localhost:3000/letter_opener&lt;/a&gt;. If you&#39;d like to send real email via SMTP when playing with Huginn locally, set &lt;code&gt;SEND_EMAIL_IN_DEVELOPMENT&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;If you need more detailed instructions, see the &lt;a href=&quot;https://github.com/huginn/huginn/wiki/Novice-setup-guide&quot;&gt;Novice setup guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Develop&lt;/h3&gt; 
&lt;p&gt;All agents have specs! And there&#39;s also acceptance tests that simulate running Huginn in a headless browser.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install PhantomJS 2.1.1 or greater: 
  &lt;ul&gt; 
   &lt;li&gt;Using &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;Node Package Manager&lt;/a&gt;: &lt;code&gt;npm install phantomjs&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Using &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; on OSX &lt;code&gt;brew install phantomjs&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Run all specs with &lt;code&gt;bundle exec rspec&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run a specific spec with &lt;code&gt;bundle exec rspec path/to/specific/test_spec.rb&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Read more about rspec for rails &lt;a href=&quot;https://github.com/rspec/rspec-rails&quot;&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using Huginn Agent gems&lt;/h2&gt; 
&lt;p&gt;Huginn Agents can now be written as external gems and be added to your Huginn installation with the &lt;code&gt;ADDITIONAL_GEMS&lt;/code&gt; environment variable. See the &lt;code&gt;Additional Agent gems&lt;/code&gt; section of &lt;code&gt;.env.example&lt;/code&gt; for more information.&lt;/p&gt; 
&lt;p&gt;If you&#39;d like to write your own Huginn Agent Gem, please see &lt;a href=&quot;https://github.com/huginn/huginn_agent&quot;&gt;huginn_agent&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our general intention is to encourage complex and specific Agents to be written as Gems, while continuing to add new general-purpose Agents to the core Huginn repository.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://github.com/huginn/huginn/wiki#deploying-huginn&quot;&gt;the Huginn Wiki&lt;/a&gt; for detailed deployment strategies for different providers.&lt;/p&gt; 
&lt;h3&gt;Heroku&lt;/h3&gt; 
&lt;p&gt;Try Huginn on Heroku: &lt;a href=&quot;https://heroku.com/deploy&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.png&quot; alt=&quot;Deploy&quot; /&gt;&lt;/a&gt; (Takes a few minutes to setup. Read the &lt;a href=&quot;https://github.com/huginn/huginn/raw/master/doc/heroku/install.md&quot;&gt;documentation&lt;/a&gt; while you are waiting and be sure to click &#39;View it&#39; after launch!) Huginn launches only on a paid subscription plan for Heroku. For non-experimental use, we strongly recommend Heroku&#39;s 1GB paid plan or our Docker container.&lt;/p&gt; 
&lt;h3&gt;OpenShift&lt;/h3&gt; 
&lt;h4&gt;OpenShift Online&lt;/h4&gt; 
&lt;p&gt;Try Huginn on OpenShift Online&lt;/p&gt; 
&lt;p&gt;Create a new app with either &lt;code&gt;mysql&lt;/code&gt; or &lt;code&gt;postgres&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;oc new-app -f https://raw.githubusercontent.com/huginn/huginn/master/openshift/templates/huginn-mysql.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;oc new-app -f https://raw.githubusercontent.com/huginn/huginn/master/openshift/templates/huginn-postgresql.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can also use the web console to import either json file by going to &quot;Add to Project&quot; -&amp;gt; &quot;Import YAML/JSON&quot;.&lt;/p&gt; 
&lt;p&gt;If you are on the Starter plan, make sure to follow the &lt;a href=&quot;https://docs.openshift.com/online/getting_started/beyond_the_basics.html#btb-creating-a-new-application-from-source-code&quot;&gt;guide&lt;/a&gt; to remove any existing application.&lt;/p&gt; 
&lt;p&gt;The templates should work on a v3 installation or the current v4 online.&lt;/p&gt; 
&lt;h3&gt;Manual installation on any server&lt;/h3&gt; 
&lt;p&gt;Have a look at the &lt;a href=&quot;https://github.com/huginn/huginn/raw/master/doc/manual/README.md&quot;&gt;installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Optional Setup&lt;/h3&gt; 
&lt;h4&gt;Setup for private development&lt;/h4&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/huginn/huginn/wiki/Private-development-instructions&quot;&gt;private development instructions&lt;/a&gt; on the wiki.&lt;/p&gt; 
&lt;h4&gt;Enable the WeatherAgent&lt;/h4&gt; 
&lt;p&gt;In order to use the WeatherAgent you need an &lt;a href=&quot;https://pirate-weather.apiable.io/products/weather-data&quot;&gt;Weather Data API key from Pirate Weather&lt;/a&gt;. Sign up for one and then change the value of &lt;code&gt;api_key: your-key&lt;/code&gt; in your seeded WeatherAgent.&lt;/p&gt; 
&lt;h4&gt;Disable SSL&lt;/h4&gt; 
&lt;p&gt;We assume your deployment will run over SSL. This is a very good idea! However, if you wish to turn this off, you&#39;ll probably need to edit &lt;code&gt;config/initializers/devise.rb&lt;/code&gt; and modify the line containing &lt;code&gt;config.rememberable_options = { :secure =&amp;gt; true }&lt;/code&gt;. You will also need to edit &lt;code&gt;config/environments/production.rb&lt;/code&gt; and modify the value of &lt;code&gt;config.force_ssl&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Huginn is provided under the MIT License.&lt;/p&gt; 
&lt;p&gt;Huginn was originally created by &lt;a href=&quot;https://github.com/cantino&quot;&gt;@cantino&lt;/a&gt; in 2013. Since then, many people&#39;s dedicated contributions have made it what it is today.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/huginn/huginn&quot;&gt;&lt;img src=&quot;https://travis-ci.org/huginn/huginn.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://coveralls.io/r/huginn/huginn&quot;&gt;&lt;img src=&quot;https://coveralls.io/repos/huginn/huginn/badge.svg?sanitize=true&quot; alt=&quot;Coverage Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gemnasium.com/huginn/huginn&quot;&gt;&lt;img src=&quot;https://gemnasium.com/huginn/huginn.svg?sanitize=true&quot; alt=&quot;Dependency Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.bountysource.com/trackers/282580-huginn?utm_source=282580&amp;amp;utm_medium=shield&amp;amp;utm_campaign=TRACKER_BADGE&quot;&gt;&lt;img src=&quot;https://www.bountysource.com/badge/tracker?tracker_id=282580&quot; alt=&quot;Bountysource&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rails/rails</title>
      <link>https://github.com/rails/rails</link>
      <description>&lt;p&gt;Ruby on Rails&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Rails&lt;/h1&gt; 
&lt;h2&gt;What&#39;s Rails?&lt;/h2&gt; 
&lt;p&gt;Rails is a web-application framework that includes everything needed to create database-backed web applications according to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Model-view-controller&quot;&gt;Model-View-Controller (MVC)&lt;/a&gt; pattern.&lt;/p&gt; 
&lt;p&gt;Understanding the MVC pattern is key to understanding Rails. MVC divides your application into three layers: Model, View, and Controller, each with a specific responsibility.&lt;/p&gt; 
&lt;h2&gt;Model layer&lt;/h2&gt; 
&lt;p&gt;The &lt;em&gt;&lt;strong&gt;Model layer&lt;/strong&gt;&lt;/em&gt; represents the domain model (such as Account, Product, Person, Post, etc.) and encapsulates the business logic specific to your application. In Rails, database-backed model classes are derived from &lt;code&gt;ActiveRecord::Base&lt;/code&gt;. &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activerecord/README.rdoc&quot;&gt;Active Record&lt;/a&gt; allows you to present the data from database rows as objects and embellish these data objects with business logic methods. Although most Rails models are backed by a database, models can also be ordinary Ruby classes, or Ruby classes that implement a set of interfaces as provided by the &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activemodel/README.rdoc&quot;&gt;Active Model&lt;/a&gt; module.&lt;/p&gt; 
&lt;h2&gt;View layer&lt;/h2&gt; 
&lt;p&gt;The &lt;em&gt;&lt;strong&gt;View layer&lt;/strong&gt;&lt;/em&gt; is composed of &quot;templates&quot; that are responsible for providing appropriate representations of your application&#39;s resources. Templates can come in a variety of formats, but most view templates are HTML with embedded Ruby code (ERB files). Views are typically rendered to generate a controller response or to generate the body of an email. In Rails, View generation is handled by &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionview/README.rdoc&quot;&gt;Action View&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Controller layer&lt;/h2&gt; 
&lt;p&gt;The &lt;em&gt;&lt;strong&gt;Controller layer&lt;/strong&gt;&lt;/em&gt; is responsible for handling incoming HTTP requests and providing a suitable response. Usually, this means returning HTML, but Rails controllers can also generate XML, JSON, PDFs, mobile-specific views, and more. Controllers load and manipulate models, and render view templates in order to generate the appropriate HTTP response. In Rails, incoming requests are routed by Action Dispatch to an appropriate controller, and controller classes are derived from &lt;code&gt;ActionController::Base&lt;/code&gt;. Action Dispatch and Action Controller are bundled together in &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionpack/README.rdoc&quot;&gt;Action Pack&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Frameworks and libraries&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activerecord/README.rdoc&quot;&gt;Active Record&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activemodel/README.rdoc&quot;&gt;Active Model&lt;/a&gt;, &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionpack/README.rdoc&quot;&gt;Action Pack&lt;/a&gt;, and &lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionview/README.rdoc&quot;&gt;Action View&lt;/a&gt; can each be used independently outside Rails.&lt;/p&gt; 
&lt;p&gt;In addition to that, Rails also comes with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionmailer/README.rdoc&quot;&gt;Action Mailer&lt;/a&gt;, a library to generate and send emails&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actionmailbox/README.md&quot;&gt;Action Mailbox&lt;/a&gt;, a library to receive emails within a Rails application&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activejob/README.md&quot;&gt;Active Job&lt;/a&gt;, a framework for declaring jobs and making them run on a variety of queuing backends&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actioncable/README.md&quot;&gt;Action Cable&lt;/a&gt;, a framework to integrate WebSockets with a Rails application&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activestorage/README.md&quot;&gt;Active Storage&lt;/a&gt;, a library to attach cloud and local files to Rails applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/actiontext/README.md&quot;&gt;Action Text&lt;/a&gt;, a library to handle rich text content&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rails/rails/main/activesupport/README.rdoc&quot;&gt;Active Support&lt;/a&gt;, a collection of utility classes and standard library extensions that are useful for Rails, and may also be used independently outside Rails&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install Rails at the command prompt if you haven&#39;t yet:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gem install rails
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;At the command prompt, create a new Rails application:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ rails new myapp
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;where &quot;myapp&quot; is the application name.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Change directory to &lt;code&gt;myapp&lt;/code&gt; and start the web server:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cd myapp
$ bin/rails server
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Run with &lt;code&gt;--help&lt;/code&gt; or &lt;code&gt;-h&lt;/code&gt; for options.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Go to &lt;code&gt;http://localhost:3000&lt;/code&gt; and you&#39;ll see the Rails bootscreen with your Rails and Ruby versions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the guidelines to start developing your application. You may find the following resources handy:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://guides.rubyonrails.org/getting_started.html&quot;&gt;Getting Started with Rails&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://guides.rubyonrails.org&quot;&gt;Ruby on Rails Guides&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://api.rubyonrails.org&quot;&gt;The API Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We encourage you to contribute to Ruby on Rails! Please check out the &lt;a href=&quot;https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html&quot;&gt;Contributing to Ruby on Rails guide&lt;/a&gt; for guidelines about how to proceed. &lt;a href=&quot;https://contributors.rubyonrails.org&quot;&gt;Join us!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Trying to report a possible security vulnerability in Rails? Please check out our &lt;a href=&quot;https://rubyonrails.org/security&quot;&gt;security policy&lt;/a&gt; for guidelines about how to proceed.&lt;/p&gt; 
&lt;p&gt;Everyone interacting in Rails and its sub-projects&#39; codebases, issue trackers, chat rooms, and mailing lists is expected to follow the Rails &lt;a href=&quot;https://rubyonrails.org/conduct&quot;&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Ruby on Rails is released under the &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ruby/ruby</title>
      <link>https://github.com/ruby/ruby</link>
      <description>&lt;p&gt;The Ruby Programming Language&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ruby/ruby/actions?query=workflow%3A%22MinGW%22&quot;&gt;&lt;img src=&quot;https://github.com/ruby/ruby/workflows/MinGW/badge.svg?sanitize=true&quot; alt=&quot;Actions Status: MinGW&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ruby/ruby/actions?query=workflow%3A%22Ubuntu%22&quot;&gt;&lt;img src=&quot;https://github.com/ruby/ruby/workflows/Ubuntu/badge.svg?sanitize=true&quot; alt=&quot;Actions Status: Ubuntu&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/ruby/ruby/actions?query=workflow%3A%22Windows%22&quot;&gt;&lt;img src=&quot;https://github.com/ruby/ruby/workflows/Windows/badge.svg?sanitize=true&quot; alt=&quot;Actions Status: Windows&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://app.travis-ci.com/ruby/ruby&quot;&gt;&lt;img src=&quot;https://app.travis-ci.com/ruby/ruby.svg?branch=master&quot; alt=&quot;Travis Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;What is Ruby?&lt;/h1&gt; 
&lt;p&gt;Ruby is an interpreted object-oriented programming language often used for web development. It also offers many scripting features to process plain text and serialized files, or manage system tasks. It is simple, straightforward, and extensible.&lt;/p&gt; 
&lt;h2&gt;Features of Ruby&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple Syntax&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Normal&lt;/strong&gt; Object-oriented Features (e.g. class, method calls)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced&lt;/strong&gt; Object-oriented Features (e.g. mix-in, singleton-method)&lt;/li&gt; 
 &lt;li&gt;Operator Overloading&lt;/li&gt; 
 &lt;li&gt;Exception Handling&lt;/li&gt; 
 &lt;li&gt;Iterators and Closures&lt;/li&gt; 
 &lt;li&gt;Garbage Collection&lt;/li&gt; 
 &lt;li&gt;Dynamic Loading of Object Files (on some architectures)&lt;/li&gt; 
 &lt;li&gt;Highly Portable (works on many Unix-like/POSIX compatible platforms as well as Windows, macOS, etc.) cf. &lt;a href=&quot;https://docs.ruby-lang.org/en/master/maintainers_md.html#label-Platform+Maintainers&quot;&gt;https://docs.ruby-lang.org/en/master/maintainers_md.html#label-Platform+Maintainers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to get Ruby&lt;/h2&gt; 
&lt;p&gt;For a complete list of ways to install Ruby, including using third-party tools like rvm, see:&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;https://www.ruby-lang.org/en/downloads/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can download release packages and the snapshot of the repository. If you want to download whole versions of Ruby, please visit &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/releases/&quot;&gt;https://www.ruby-lang.org/en/downloads/releases/&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Download with Git&lt;/h3&gt; 
&lt;p&gt;The mirror of the Ruby source tree can be checked out with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ruby/ruby.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are some other branches under development. Try the following command to see the list of branches:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git ls-remote https://github.com/ruby/ruby.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may also want to use &lt;a href=&quot;https://git.ruby-lang.org/ruby.git&quot;&gt;https://git.ruby-lang.org/ruby.git&lt;/a&gt; (actual master of Ruby source) if you are a committer.&lt;/p&gt; 
&lt;h2&gt;How to build&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://docs.ruby-lang.org/en/master/contributing/building_ruby_md.html&quot;&gt;Building Ruby&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Ruby home page&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.ruby-lang.org/&quot;&gt;https://www.ruby-lang.org/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ruby-lang.org/en/master/index.html&quot;&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.ruby-lang.org/ja/master/index.html&quot;&gt;Japanese&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Mailing list&lt;/h2&gt; 
&lt;p&gt;There is a mailing list to discuss Ruby. To subscribe to this list, please send the following phrase:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;join
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;in the mail subject (not body) to the address &lt;a href=&quot;mailto:ruby-talk-request@ml.ruby-lang.org?subject=join&quot;&gt;ruby-talk-request@ml.ruby-lang.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Copying&lt;/h2&gt; 
&lt;p&gt;See the file &lt;a href=&quot;rdoc-ref:COPYING&quot;&gt;COPYING&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feedback&lt;/h2&gt; 
&lt;p&gt;Questions about the Ruby language can be asked on the &lt;a href=&quot;https://www.ruby-lang.org/en/community/mailing-lists&quot;&gt;Ruby-Talk&lt;/a&gt; mailing list or on websites like &lt;a href=&quot;https://stackoverflow.com&quot;&gt;https://stackoverflow.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Bugs should be reported at &lt;a href=&quot;https://bugs.ruby-lang.org&quot;&gt;https://bugs.ruby-lang.org&lt;/a&gt;. Read &lt;a href=&quot;https://docs.ruby-lang.org/en/master/contributing/reporting_issues_md.html&quot;&gt;&quot;Reporting Issues&quot;&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://docs.ruby-lang.org/en/master/contributing/contributing_md.html&quot;&gt;&quot;Contributing to Ruby&quot;&lt;/a&gt;, which includes setup and build instructions.&lt;/p&gt; 
&lt;h2&gt;The Author&lt;/h2&gt; 
&lt;p&gt;Ruby was originally designed and developed by Yukihiro Matsumoto (Matz) in 1995.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;mailto:matz@ruby-lang.org&quot;&gt;matz@ruby-lang.org&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/vagrant</title>
      <link>https://github.com/hashicorp/vagrant</link>
      <description>&lt;p&gt;Vagrant is a tool for building and distributing development environments.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vagrant&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;https://www.vagrantup.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Source: &lt;a href=&quot;https://github.com/hashicorp/vagrant&quot;&gt;https://github.com/hashicorp/vagrant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HashiCorp Discuss: &lt;a href=&quot;https://discuss.hashicorp.com/c/vagrant/24&quot;&gt;https://discuss.hashicorp.com/c/vagrant/24&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Vagrant is a tool for building and distributing development environments.&lt;/p&gt; 
&lt;p&gt;Development environments managed by Vagrant can run on local virtualized platforms such as VirtualBox or VMware, in the cloud via AWS or OpenStack, or in containers such as with Docker or raw LXC.&lt;/p&gt; 
&lt;p&gt;Vagrant provides the framework and configuration format to create and manage complete portable development environments. These development environments can live on your computer or in the cloud, and are portable between Windows, Mac OS X, and Linux.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Package dependencies: Vagrant requires &lt;code&gt;bsdtar&lt;/code&gt; and &lt;code&gt;curl&lt;/code&gt; to be available on your system PATH to run successfully.&lt;/p&gt; 
&lt;p&gt;For the quick-start, we&#39;ll bring up a development machine on &lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt; because it is free and works on all major platforms. Vagrant can, however, work with almost any system such as &lt;a href=&quot;https://www.openstack.org/&quot;&gt;OpenStack&lt;/a&gt;, &lt;a href=&quot;https://www.vmware.com/&quot;&gt;VMware&lt;/a&gt;, &lt;a href=&quot;https://docs.docker.com/&quot;&gt;Docker&lt;/a&gt;, etc.&lt;/p&gt; 
&lt;p&gt;First, make sure your development machine has &lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt; installed. After this, &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;download and install the appropriate Vagrant package for your OS&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To build your first virtual environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;vagrant init hashicorp/bionic64
vagrant up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: The above &lt;code&gt;vagrant up&lt;/code&gt; command will also trigger Vagrant to download the &lt;code&gt;bionic64&lt;/code&gt; box via the specified URL. Vagrant only does this if it detects that the box doesn&#39;t already exist on your system.&lt;/p&gt; 
&lt;h2&gt;Getting Started Guide&lt;/h2&gt; 
&lt;p&gt;To learn how to build a fully functional development environment, follow the &lt;a href=&quot;https://www.vagrantup.com/docs/getting-started&quot;&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installing from Source&lt;/h2&gt; 
&lt;p&gt;If you want the bleeding edge version of Vagrant, we try to keep main pretty stable and you&#39;re welcome to give it a shot. Please review the installation page &lt;a href=&quot;https://www.vagrantup.com/docs/installation/source&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Vagrant&lt;/h2&gt; 
&lt;p&gt;Please take time to read the &lt;a href=&quot;https://www.hashicorp.com/community-guidelines&quot;&gt;HashiCorp Community Guidelines&lt;/a&gt; and the &lt;a href=&quot;https://github.com/hashicorp/vagrant/raw/main/.github/CONTRIBUTING.md&quot;&gt;Vagrant Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Then you&#39;re good to go!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>instructure/canvas-lms</title>
      <link>https://github.com/instructure/canvas-lms</link>
      <description>&lt;p&gt;The open LMS by Instructure, Inc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Canvas LMS&lt;/h1&gt; 
&lt;p&gt;Canvas is a modern, open-source &lt;a href=&quot;https://en.wikipedia.org/wiki/Learning_management_system&quot;&gt;LMS&lt;/a&gt; developed and maintained by &lt;a href=&quot;https://www.instructure.com/&quot;&gt;Instructure Inc.&lt;/a&gt; It is released under the AGPLv3 license for use by anyone interested in learning more about or using learning management systems.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://github.com/instructure/canvas-lms/wiki&quot;&gt;Please see our main wiki page for more information&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Detailed instructions for installation and configuration of Canvas are provided on our wiki.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://github.com/instructure/canvas-lms/wiki/Quick-Start&quot;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://github.com/instructure/canvas-lms/wiki/Production-Start&quot;&gt;Production Start&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>fastlane/fastlane</title>
      <link>https://github.com/fastlane/fastlane</link>
      <description>&lt;p&gt;üöÄ The easiest way to automate building and releasing your iOS and Android apps&lt;/p&gt;&lt;hr&gt;&lt;h3 align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/fastlane/fastlane/raw/master/fastlane/assets/fastlane_text.png&quot;&gt; &lt;img src=&quot;https://github.com/fastlane/fastlane/raw/master/fastlane/assets/fastlane_text.png?raw=true&quot; alt=&quot;fastlane Logo&quot; width=&quot;500&quot; /&gt; &lt;/a&gt; &lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://twitter.com/FastlaneTools&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/contact-@FastlaneTools-blue.svg?style=flat&quot; alt=&quot;Twitter: @FastlaneTools&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/fastlane/fastlane/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-MIT-green.svg?style=flat&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://rubygems.org/gems/fastlane&quot;&gt;&lt;img src=&quot;https://img.shields.io/gem/v/fastlane.svg?style=flat&quot; alt=&quot;Gem&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://formulae.brew.sh/formula/fastlane&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json.svg?url=https://formulae.brew.sh/api/formula/fastlane.json&amp;amp;query=$.versions.stable&amp;amp;label=homebrew&quot; alt=&quot;Homebrew&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://circleci.com/gh/fastlane/fastlane&quot;&gt;&lt;img src=&quot;https://img.shields.io/circleci/project/github/fastlane/fastlane/master.svg?sanitize=true&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/fastlane/fastlane/raw/master/CONTRIBUTING.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs welcome!&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;fastlane&lt;/em&gt; is a tool for iOS and Android developers to automate tedious tasks like generating screenshots, dealing with provisioning profiles, and releasing your application.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2 align=&quot;center&quot;&gt; ‚ú® All fastlane docs were moved to &lt;a href=&quot;https://docs.fastlane.tools/&quot;&gt;docs.fastlane.tools&lt;/a&gt; ‚ú® &lt;/h2&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Need Help?&lt;/h2&gt; 
&lt;p&gt;Before submitting a new GitHub issue, please make sure to&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out &lt;a href=&quot;https://docs.fastlane.tools&quot;&gt;docs.fastlane.tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Search for &lt;a href=&quot;https://github.com/fastlane/fastlane/issues&quot;&gt;existing GitHub issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the above doesn&#39;t help, please &lt;a href=&quot;https://github.com/fastlane/fastlane/issues&quot;&gt;submit an issue&lt;/a&gt; on GitHub and provide information about your setup, in particular the output of the &lt;code&gt;fastlane env&lt;/code&gt; command.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you want to report a regression in &lt;em&gt;fastlane&lt;/em&gt; (something that has worked before, but broke with a new release), please mark your issue title as such using &lt;code&gt;[Regression] Your title here&lt;/code&gt;. This enables us to quickly detect and fix regressions.&lt;/p&gt; 
&lt;h2&gt;&lt;em&gt;fastlane&lt;/em&gt; team&lt;/h2&gt; 
&lt;!-- This table is regenerated and resorted on each release --&gt; 
&lt;table id=&quot;team&quot;&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td id=&quot;iulian-onofrei&quot;&gt; &lt;a href=&quot;https://github.com/revolter&quot;&gt; &lt;img src=&quot;https://github.com/revolter.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/Revolt666&quot;&gt;Iulian Onofrei&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;daniel-jankowski&quot;&gt; &lt;a href=&quot;https://github.com/mollyIV&quot;&gt; &lt;img src=&quot;https://github.com/mollyIV.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/mollyIV&quot;&gt;Daniel Jankowski&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;danielle-tomlinson&quot;&gt; &lt;a href=&quot;https://github.com/endocrimes&quot;&gt; &lt;img src=&quot;https://github.com/endocrimes.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/endocrimes&quot;&gt;Danielle Tomlinson&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;jorge-revuelta-h&quot;&gt; &lt;a href=&quot;https://github.com/minuscorp&quot;&gt; &lt;img src=&quot;https://github.com/minuscorp.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/minuscorp&quot;&gt;Jorge Revuelta H&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;olivier-halligon&quot;&gt; &lt;a href=&quot;https://github.com/AliSoftware&quot;&gt; &lt;img src=&quot;https://github.com/AliSoftware.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/aligatr&quot;&gt;Olivier Halligon&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;satoshi-namai&quot;&gt; &lt;a href=&quot;https://github.com/ainame&quot;&gt; &lt;img src=&quot;https://github.com/ainame.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/ainame&quot;&gt;Satoshi Namai&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;luka-mirosevic&quot;&gt; &lt;a href=&quot;https://github.com/lmirosevic&quot;&gt; &lt;img src=&quot;https://github.com/lmirosevic.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/lmirosevic&quot;&gt;Luka Mirosevic&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;manu-wallner&quot;&gt; &lt;a href=&quot;https://github.com/milch&quot;&gt; &lt;img src=&quot;https://github.com/milch.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/acrooow&quot;&gt;Manu Wallner&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;kohki-miki&quot;&gt; &lt;a href=&quot;https://github.com/giginet&quot;&gt; &lt;img src=&quot;https://github.com/giginet.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/giginet&quot;&gt;Kohki Miki&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;fumiya-nakamura&quot;&gt; &lt;a href=&quot;https://github.com/nafu&quot;&gt; &lt;img src=&quot;https://github.com/nafu.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/nafu003&quot;&gt;Fumiya Nakamura&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;j√©r√¥me-lacoste&quot;&gt; &lt;a href=&quot;https://github.com/lacostej&quot;&gt; &lt;img src=&quot;https://github.com/lacostej.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/lacostej&quot;&gt;J√©r√¥me Lacoste&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;max-ott&quot;&gt; &lt;a href=&quot;https://github.com/max-ott&quot;&gt; &lt;img src=&quot;https://github.com/max-ott.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/ott_max&quot;&gt;Max Ott&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;jimmy-dee&quot;&gt; &lt;a href=&quot;https://github.com/jdee&quot;&gt; &lt;img src=&quot;https://github.com/jdee.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;Jimmy Dee&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;matthew-ellis&quot;&gt; &lt;a href=&quot;https://github.com/matthewellis&quot;&gt; &lt;img src=&quot;https://github.com/matthewellis.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/mellis1995&quot;&gt;Matthew Ellis&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;helmut-januschka&quot;&gt; &lt;a href=&quot;https://github.com/hjanuschka&quot;&gt; &lt;img src=&quot;https://github.com/hjanuschka.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/hjanuschka&quot;&gt;Helmut Januschka&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;stefan-natchev&quot;&gt; &lt;a href=&quot;https://github.com/snatchev&quot;&gt; &lt;img src=&quot;https://github.com/snatchev.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/snatchev&quot;&gt;Stefan Natchev&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;≈Çukasz-grabowski&quot;&gt; &lt;a href=&quot;https://github.com/lucgrabowski&quot;&gt; &lt;img src=&quot;https://github.com/lucgrabowski.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;≈Åukasz Grabowski&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;joshua-liebowitz&quot;&gt; &lt;a href=&quot;https://github.com/taquitos&quot;&gt; &lt;img src=&quot;https://github.com/taquitos.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/taquitos&quot;&gt;Joshua Liebowitz&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;manish-rathi&quot;&gt; &lt;a href=&quot;https://github.com/crazymanish&quot;&gt; &lt;img src=&quot;https://github.com/crazymanish.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/iammanishrathi&quot;&gt;Manish Rathi&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;aaron-brager&quot;&gt; &lt;a href=&quot;https://github.com/getaaron&quot;&gt; &lt;img src=&quot;https://github.com/getaaron.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/getaaron&quot;&gt;Aaron Brager&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;felix-krause&quot;&gt; &lt;a href=&quot;https://github.com/KrauseFx&quot;&gt; &lt;img src=&quot;https://github.com/KrauseFx.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/KrauseFx&quot;&gt;Felix Krause&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;maksym-grebenets&quot;&gt; &lt;a href=&quot;https://github.com/mgrebenets&quot;&gt; &lt;img src=&quot;https://github.com/mgrebenets.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/mgrebenets&quot;&gt;Maksym Grebenets&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;jan-piotrowski&quot;&gt; &lt;a href=&quot;https://github.com/janpio&quot;&gt; &lt;img src=&quot;https://github.com/janpio.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/Sujan&quot;&gt;Jan Piotrowski&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;josh-holtz&quot;&gt; &lt;a href=&quot;https://github.com/joshdholtz&quot;&gt; &lt;img src=&quot;https://github.com/joshdholtz.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/joshdholtz&quot;&gt;Josh Holtz&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
   &lt;td id=&quot;roger-oba&quot;&gt; &lt;a href=&quot;https://github.com/rogerluan&quot;&gt; &lt;img src=&quot;https://github.com/rogerluan.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/rogerluan_&quot;&gt;Roger Oba&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td id=&quot;andrew-mcburney&quot;&gt; &lt;a href=&quot;https://github.com/armcburney&quot;&gt; &lt;img src=&quot;https://github.com/armcburney.png&quot; width=&quot;140px;&quot; /&gt; &lt;/a&gt; &lt;h4 align=&quot;center&quot;&gt;&lt;a href=&quot;https://twitter.com/armcburney&quot;&gt;Andrew McBurney&lt;/a&gt;&lt;/h4&gt; &lt;/td&gt; 
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Special thanks to all &lt;a href=&quot;https://github.com/fastlane/fastlane/graphs/contributors&quot;&gt;contributors&lt;/a&gt; for extending and improving &lt;em&gt;fastlane&lt;/em&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribute to &lt;em&gt;fastlane&lt;/em&gt;&lt;/h2&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://raw.githubusercontent.com/fastlane/fastlane/master/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt; for more information on how to help with &lt;em&gt;fastlane&lt;/em&gt;.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Help us keep &lt;em&gt;fastlane&lt;/em&gt; open and inclusive. Please read and follow our &lt;a href=&quot;https://github.com/fastlane/fastlane/raw/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Metrics&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;fastlane&lt;/em&gt; tracks a few key metrics to understand how developers are using the tool and to help us know what areas need improvement. No personal/sensitive information is ever collected. Metrics that are collected include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The number of &lt;em&gt;fastlane&lt;/em&gt; runs&lt;/li&gt; 
 &lt;li&gt;A salted hash of the app identifier or package name, which helps us anonymously identify unique usage of &lt;em&gt;fastlane&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can easily opt-out of metrics collection by adding &lt;code&gt;opt_out_usage&lt;/code&gt; at the top of your &lt;code&gt;Fastfile&lt;/code&gt; or by setting the environment variable &lt;code&gt;FASTLANE_OPT_OUT_USAGE&lt;/code&gt;. &lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/fastlane_core/lib/fastlane_core/analytics&quot;&gt;Check out the metrics code on GitHub&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the MIT license. See the &lt;a href=&quot;https://raw.githubusercontent.com/fastlane/fastlane/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This project and all fastlane tools are in no way affiliated with Apple Inc. This project is open source under the MIT license, which means you have full access to the source code and can modify it to fit your own needs. All fastlane tools run on your own computer or server, so your credentials or other sensitive information will never leave your own computer. You are responsible for how you use fastlane tools.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2 align=&quot;center&quot;&gt; ‚ú® All fastlane docs were moved to &lt;a href=&quot;https://docs.fastlane.tools/&quot;&gt;docs.fastlane.tools&lt;/a&gt; ‚ú® &lt;/h2&gt; 
&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>endoflife-date/endoflife.date</title>
      <link>https://github.com/endoflife-date/endoflife.date</link>
      <description>&lt;p&gt;Informative site with EoL dates of everything&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;endoflife.date&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://app.netlify.com/sites/endoflife-date/deploys&quot;&gt;&lt;img src=&quot;https://api.netlify.com/api/v1/badges/92f7a2a9-3cca-4916-a75e-f9db4ec39d48/deploy-status&quot; alt=&quot;Netlify Status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://opensource.guide/how-to-contribute/#opening-a-pull-request&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&quot; alt=&quot;PRs Welcome&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/powered_by-Jekyll-blue.svg?sanitize=true&quot; alt=&quot;powered by Jekyll&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://endoflife.date/&quot;&gt;&lt;img src=&quot;https://img.shields.io/website-up-down-green-red/https/endoflife.date.svg?sanitize=true&quot; alt=&quot;Website shields.io&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://commonmark.org/&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Made%20with-Markdown-1f425f.svg?sanitize=true&quot; alt=&quot;made-with-Markdown&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/endoflife-date/endoflife.date/master/CODE-OF-CONDUCT.md&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Contributor%20Covenant-2.0-4baaaa.svg?sanitize=true&quot; alt=&quot;Contributor Covenant&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gitter.im/endoflife-date/community&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/endoflife-date/community.svg?sanitize=true&quot; alt=&quot;Gitter&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://twitter.com/endoflife_date&quot;&gt;&lt;img src=&quot;https://img.shields.io/twitter/url.svg?label=@endoflife_date&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fendoflife_date&quot; alt=&quot;Twitter Follow Badge&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Keep track of various End of Life dates and support lifecycles for various products. Visit &lt;a href=&quot;https://endoflife.date&quot;&gt;https://endoflife.date&lt;/a&gt; for a list of supported products. This information is very often &lt;a href=&quot;https://twitter.com/captn3m0/status/1110504412064239617&quot;&gt;hard to track or badly presented&lt;/a&gt;. This project collates this data and presents it in an easily accessible format, with URLs that are easy to guess and remember.&lt;/p&gt; 
&lt;p&gt;If you maintain release information (end-of-life dates, or support information) for a product, we have a &lt;a href=&quot;https://endoflife.date/recommendations&quot;&gt;set of recommendations&lt;/a&gt; along with a checklist on some best practices for publishing this information.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://endoflife.date/contribute&quot;&gt;the contributing guide&lt;/a&gt; for details. While participating in the project, you must abide by its &lt;a href=&quot;https://raw.githubusercontent.com/endoflife-date/endoflife.date/master/CODE-OF-CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;p&gt;An API is available for integration with CI platforms. API documentation is available at &lt;a href=&quot;https://endoflife.date/docs/api/v1/&quot;&gt;https://endoflife.date/docs/api/v1/&lt;/a&gt;. The API is currently in Beta, and breaking changes can happen.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/endoflife-date/endoflife.date/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;endoflife.date is relying on various amazing software and components :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;, an Internet hosting service for software development and version control.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, a static site generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt;, a dynamic and open source programming language with a focus on simplicity and productivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/just-the-docs/just-the-docs&quot;&gt;Just the Docs&lt;/a&gt;, a documentation theme for Jekyll.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://swagger.io/tools/swagger-ui/&quot;&gt;Swagger UI&lt;/a&gt;, a documentation generator for OpenAPI Specification.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://simpleicons.org/&quot;&gt;Simple Icons&lt;/a&gt;, free SVG icons for popular brands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/tabler/tabler-icons&quot;&gt;Tabler Icons&lt;/a&gt;, a complete icon set with perfect line weights and spacing - ready for Figma, apps, and design systems.&lt;/li&gt; 
 &lt;li&gt;Our icon is derived from &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Hourglass_icon_%28orange%29.svg&quot;&gt;Hourglass icon (orange)&lt;/a&gt; by David Abi√°n and Serhio Magpie on the English Wikipedia, remixed under the CC-BY-SA-4.0 license.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://realfavicongenerator.net/&quot;&gt;RealFaviconGenerator&lt;/a&gt;, a favicon Generator, for real.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;, an all-in-one platform for automating modern web projects.&lt;/li&gt; 
 &lt;li&gt;Product descriptions are adapted from the &lt;a href=&quot;https://en.wikipedia.org/&quot;&gt;English Wikipedia&lt;/a&gt;, under &lt;a href=&quot;https://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License&quot;&gt;CC BY-SA 3.0&lt;/a&gt; license.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>github-linguist/linguist</title>
      <link>https://github.com/github-linguist/linguist</link>
      <description>&lt;p&gt;Language Savant. If your repository&#39;s language is being reported incorrectly, send us a pull request!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Linguist&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/github/linguist/actions&quot;&gt;&lt;img src=&quot;https://github.com/github/linguist/workflows/Run%20Tests/badge.svg?sanitize=true&quot; alt=&quot;Actions Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://codespaces.new/github-linguist/linguist&quot;&gt;&lt;img src=&quot;https://github.com/codespaces/badge.svg?sanitize=true&quot; alt=&quot;Open in GitHub Codespaces&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This library is used on GitHub.com to detect blob languages, ignore binary or vendored files, suppress generated files in diffs, and generate language breakdown graphs.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github-linguist/linguist/main/docs/how-linguist-works.md&quot;&gt;How Linguist works&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github-linguist/linguist/main/docs/overrides.md&quot;&gt;Change Linguist&#39;s behaviour with overrides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github-linguist/linguist/main/docs/troubleshooting.md&quot;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/github-linguist/linguist/main/CONTRIBUTING.md&quot;&gt;Contributing guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install the gem:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;gem install github-linguist
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Dependencies&lt;/h3&gt; 
&lt;p&gt;Linguist is a Ruby library so you will need a recent version of Ruby installed. There are known problems with the macOS/Xcode supplied version of Ruby that causes problems installing some of the dependencies. Accordingly, we highly recommend you install a version of Ruby using Homebrew, &lt;code&gt;rbenv&lt;/code&gt;, &lt;code&gt;rvm&lt;/code&gt;, &lt;code&gt;ruby-build&lt;/code&gt;, &lt;code&gt;asdf&lt;/code&gt; or other packaging system, before attempting to install Linguist and the dependencies.&lt;/p&gt; 
&lt;p&gt;Linguist uses &lt;a href=&quot;https://github.com/brianmario/charlock_holmes&quot;&gt;&lt;code&gt;charlock_holmes&lt;/code&gt;&lt;/a&gt; for character encoding and &lt;a href=&quot;https://github.com/libgit2/rugged&quot;&gt;&lt;code&gt;rugged&lt;/code&gt;&lt;/a&gt; for libgit2 bindings for Ruby. These components have their own dependencies.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;charlock_holmes 
  &lt;ul&gt; 
   &lt;li&gt;cmake&lt;/li&gt; 
   &lt;li&gt;pkg-config&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;http://site.icu-project.org/&quot;&gt;ICU&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://zlib.net/&quot;&gt;zlib&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;rugged 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://curl.haxx.se/libcurl/&quot;&gt;libcurl&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.openssl.org&quot;&gt;OpenSSL&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You may need to install missing dependencies before you can install Linguist. For example, on macOS with &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;brew install cmake pkg-config icu4c
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On Ubuntu:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo apt-get install build-essential cmake pkg-config libicu-dev zlib1g-dev libcurl4-openssl-dev libssl-dev ruby-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Application usage&lt;/h3&gt; 
&lt;p&gt;Linguist can be used in your application as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;require &#39;rugged&#39;
require &#39;linguist&#39;

repo = Rugged::Repository.new(&#39;.&#39;)
project = Linguist::Repository.new(repo, repo.head.target_id)
project.language       #=&amp;gt; &quot;Ruby&quot;
project.languages      #=&amp;gt; { &quot;Ruby&quot; =&amp;gt; 119387 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Command line usage&lt;/h3&gt; 
&lt;h4&gt;Git Repository&lt;/h4&gt; 
&lt;p&gt;A repository&#39;s languages stats can also be assessed from the command line using the &lt;code&gt;github-linguist&lt;/code&gt; executable. Without any options, &lt;code&gt;github-linguist&lt;/code&gt; will output the language breakdown by percentage and file size.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /path-to-repository
github-linguist
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can try running &lt;code&gt;github-linguist&lt;/code&gt; on the root directory in this repository itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ github-linguist
66.84%  264519     Ruby
24.68%  97685      C
6.57%   25999      Go
1.29%   5098       Lex
0.32%   1257       Shell
0.31%   1212       Dockerfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Additional options&lt;/h4&gt; 
&lt;h5&gt;&lt;code&gt;--rev REV&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;The &lt;code&gt;--rev REV&lt;/code&gt; flag will change the git revision being analyzed to any &lt;a href=&quot;https://git-scm.com/docs/gitrevisions#_specifying_revisions&quot;&gt;gitrevisions(1)&lt;/a&gt; compatible revision you specify.&lt;/p&gt; 
&lt;p&gt;This is useful to analyze the makeup of a repo as of a certain tag, or in a certain branch.&lt;/p&gt; 
&lt;p&gt;For example, here is the popular &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll open source project&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ github-linguist jekyll

70.64%  709959     Ruby
23.04%  231555     Gherkin
3.80%   38178      JavaScript
1.19%   11943      HTML
0.79%   7900       Shell
0.23%   2279       Dockerfile
0.13%   1344       Earthly
0.10%   1019       CSS
0.06%   606        SCSS
0.02%   234        CoffeeScript
0.01%   90         Hack
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And here is Jekyll&#39;s published website, from the gh-pages branch inside their repository.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ github-linguist jekyll --rev origin/gh-pages
100.00% 2568354    HTML
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;code&gt;--breakdown&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;The &lt;code&gt;--breakdown&lt;/code&gt; or &lt;code&gt;-b&lt;/code&gt; flag will additionally show the breakdown of files by language.&lt;/p&gt; 
&lt;p&gt;You can try running &lt;code&gt;github-linguist&lt;/code&gt; on the root directory in this repository itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ github-linguist --breakdown
66.84%  264519     Ruby
24.68%  97685      C
6.57%   25999      Go
1.29%   5098       Lex
0.32%   1257       Shell
0.31%   1212       Dockerfile

Ruby:
Gemfile
Rakefile
bin/git-linguist
bin/github-linguist
ext/linguist/extconf.rb
github-linguist.gemspec
lib/linguist.rb
‚Ä¶
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;&lt;code&gt;--json&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;The &lt;code&gt;--json&lt;/code&gt; or &lt;code&gt;-j&lt;/code&gt; flag output the data into JSON format.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ github-linguist --json
{&quot;Dockerfile&quot;:{&quot;size&quot;:1212,&quot;percentage&quot;:&quot;0.31&quot;},&quot;Ruby&quot;:{&quot;size&quot;:264519,&quot;percentage&quot;:&quot;66.84&quot;},&quot;C&quot;:{&quot;size&quot;:97685,&quot;percentage&quot;:&quot;24.68&quot;},&quot;Lex&quot;:{&quot;size&quot;:5098,&quot;percentage&quot;:&quot;1.29&quot;},&quot;Shell&quot;:{&quot;size&quot;:1257,&quot;percentage&quot;:&quot;0.32&quot;},&quot;Go&quot;:{&quot;size&quot;:25999,&quot;percentage&quot;:&quot;6.57&quot;}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This option can be used in conjunction with &lt;code&gt;--breakdown&lt;/code&gt; to get a full list of files along with the size and percentage data.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ github-linguist --breakdown --json
{&quot;Dockerfile&quot;:{&quot;size&quot;:1212,&quot;percentage&quot;:&quot;0.31&quot;,&quot;files&quot;:[&quot;Dockerfile&quot;,&quot;tools/grammars/Dockerfile&quot;]},&quot;Ruby&quot;:{&quot;size&quot;:264519,&quot;percentage&quot;:&quot;66.84&quot;,&quot;files&quot;:[&quot;Gemfile&quot;,&quot;Rakefile&quot;,&quot;bin/git-linguist&quot;,&quot;bin/github-linguist&quot;,&quot;ext/linguist/extconf.rb&quot;,&quot;github-linguist.gemspec&quot;,&quot;lib/linguist.rb&quot;,...]}}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Single file&lt;/h4&gt; 
&lt;p&gt;Alternatively you can find stats for a single file using the &lt;code&gt;github-linguist&lt;/code&gt; executable.&lt;/p&gt; 
&lt;p&gt;You can try running &lt;code&gt;github-linguist&lt;/code&gt; on files in this repository itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ github-linguist grammars.yml
grammars.yml: 884 lines (884 sloc)
  type:      Text
  mime type: text/x-yaml
  language:  YAML
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Docker&lt;/h4&gt; 
&lt;p&gt;If you have Docker installed you can either build or use our pre-built images and run Linguist within a container:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ docker run --rm -v $(pwd):$(pwd):Z -w $(pwd) -t ghcr.io/github-linguist/linguist:latest
66.84%  264519     Ruby
24.68%  97685      C
6.57%   25999      Go
1.29%   5098       Lex
0.32%   1257       Shell
0.31%   1212       Dockerfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Building the image&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ docker build -t linguist .
$ docker run --rm -v $(pwd):$(pwd):Z -w $(pwd) -t linguist
66.84%  264519     Ruby
24.68%  97685      C
6.57%   25999      Go
1.29%   5098       Lex
0.32%   1257       Shell
0.31%   1212       Dockerfile
$ docker run --rm -v $(pwd):$(pwd) -w $(pwd) -t linguist github-linguist --breakdown
66.84%  264519     Ruby
24.68%  97685      C
6.57%   25999      Go
1.29%   5098       Lex
0.32%   1257       Shell
0.31%   1212       Dockerfile

Ruby:
Gemfile
Rakefile
bin/git-linguist
bin/github-linguist
ext/linguist/extconf.rb
github-linguist.gemspec
lib/linguist.rb
‚Ä¶
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please check out our &lt;a href=&quot;https://raw.githubusercontent.com/github-linguist/linguist/main/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The language grammars included in this gem are covered by their repositories&#39; respective licenses. &lt;a href=&quot;https://raw.githubusercontent.com/github-linguist/linguist/main/vendor/README.md&quot;&gt;&lt;code&gt;vendor/README.md&lt;/code&gt;&lt;/a&gt; lists the repository for each grammar.&lt;/p&gt; 
&lt;p&gt;All other files are covered by the MIT license, see &lt;a href=&quot;https://raw.githubusercontent.com/github-linguist/linguist/main/LICENSE&quot;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Homebrew/homebrew-cask</title>
      <link>https://github.com/Homebrew/homebrew-cask</link>
      <description>&lt;p&gt;üçª A CLI workflow for the administration of macOS applications distributed as binaries&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Homebrew Cask&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;‚ÄúTo install, drag this icon‚Ä¶‚Äù no more!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Homebrew Cask extends &lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt; and brings its elegance, simplicity, and speed to the installation and management of GUI macOS applications such as Visual Studio Code and Google Chrome.&lt;/p&gt; 
&lt;p&gt;We do this by providing a friendly CLI workflow for the administration of macOS applications distributed as binaries.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/orgs/Homebrew/discussions/categories/casks&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/github-discussions-informational&quot; alt=&quot;Join us on GitHub discussions&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Let‚Äôs try it!&lt;/h2&gt; 
&lt;p&gt;To start using Homebrew Cask, you just need &lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt; installed.&lt;/p&gt; 
&lt;img src=&quot;https://i.imgur.com/FNNM6WL.gif&quot; width=&quot;547&quot; alt=&quot;Installing and uninstalling Alfred (animated gif)&quot; /&gt; 
&lt;p&gt;Slower, now:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-console&quot;&gt;$ brew install alfred
==&amp;gt; Downloading https://cachefly.alfredapp.com/Alfred_4.2.1_1187.dmg
######################################################################## 100.0%
==&amp;gt; Verifying SHA-256 checksum for Cask &#39;alfred&#39;.
==&amp;gt; Installing Cask alfred
==&amp;gt; Moving App &#39;Alfred 4.app&#39; to &#39;/Applications/Alfred 4.app&#39;.
üç∫  alfred was successfully installed!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And there we have it. An application installed with one quick command: no clicking, no dragging, no dropping.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find basic documentation on using Homebrew Cask in &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/USAGE.md&quot;&gt;USAGE.md&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Want to contribute a cask? Awesome! See &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;More project-related details and discussion are available in the &lt;a href=&quot;https://docs.brew.sh/Adding-Software-to-Homebrew#casks&quot;&gt;documentation&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting Bugs&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/faq/closing_issues_without_review.md&quot;&gt;&lt;strong&gt;If you ignore this guide, your issue may be closed without review&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Before reporting a bug, run &lt;code&gt;brew update-reset &amp;amp;&amp;amp; brew update&lt;/code&gt; and try your command again. This is a fix-all that will reset the state of all your taps, ensuring the problem isn‚Äôt an outdated setup on your side.&lt;/p&gt; 
&lt;p&gt;If your issue persists, &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/search?type=Issues&quot;&gt;search for it&lt;/a&gt; before opening a new one. If you find an open issue and have any new information, add it in a comment. If you find a closed issue, try the solutions there.&lt;/p&gt; 
&lt;p&gt;If the issue is still not solved, see the guides for common problems:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/reporting_bugs/error_examples.md&quot;&gt;Examples of common errors and their solutions&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/reporting_bugs/error_examples.md#curl-error&quot;&gt;&lt;code&gt;curl&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/reporting_bugs/error_examples.md#permission-denied-error&quot;&gt;&lt;code&gt;Permission denied&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/reporting_bugs/error_examples.md#checksum-does-not-match-error&quot;&gt;&lt;code&gt;Checksum does not match&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/reporting_bugs/error_examples.md#source-is-not-there-error&quot;&gt;&lt;code&gt;source is not there&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/doc/reporting_bugs/error_examples.md#wrong-number-of-arguments-error&quot;&gt;&lt;code&gt;wrong number of arguments&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.brew.sh/FAQ#why-arent-some-apps-included-during-brew-upgrade&quot;&gt;App isn‚Äôt included in &lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.brew.sh/FAQ#why-cant-i-open-a-mac-app-from-an-unidentified-developer&quot;&gt;The app can‚Äôt be opened because it is from an unidentified developer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/issues/new?template=01_bug_report.yml&quot;&gt;My problem isn‚Äôt listed&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requests&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Issues requesting new casks will be closed. If you want a cask added to the main repositories, &lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/raw/HEAD/CONTRIBUTING.md#adding-a-cask&quot;&gt;submit a pull request&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For a feature request, &lt;a href=&quot;https://github.com/Homebrew/brew/issues/new?assignees=&amp;amp;labels=features&amp;amp;projects=&amp;amp;template=feature.yml&quot;&gt;use this template&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Questions? Wanna chat?&lt;/h2&gt; 
&lt;p&gt;We‚Äôre really rather friendly! Here are the best places to talk about the project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Homebrew/homebrew-cask/issues/new/choose&quot;&gt;Open an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join us on &lt;a href=&quot;https://github.com/orgs/Homebrew/discussions/categories/casks&quot;&gt;GitHub discussions (forum)&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Code is under the &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-cask/main/LICENSE&quot;&gt;BSD 2 Clause (NetBSD) license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gitlabhq/gitlabhq</title>
      <link>https://github.com/gitlabhq/gitlabhq</link>
      <description>&lt;p&gt;GitLab CE Mirror | Please open new issues in our issue tracker on GitLab.com&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitLab&lt;/h1&gt; 
&lt;h2&gt;Canonical source&lt;/h2&gt; 
&lt;p&gt;The canonical source of GitLab where all development takes place is &lt;a href=&quot;https://gitlab.com/gitlab-org/gitlab&quot;&gt;hosted on GitLab.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you wish to clone a copy of GitLab without proprietary code, you can use the read-only mirror of GitLab located at &lt;a href=&quot;https://gitlab.com/gitlab-org/gitlab-foss/&quot;&gt;https://gitlab.com/gitlab-org/gitlab-foss/&lt;/a&gt;. However, please do not submit any issues and/or merge requests to that project.&lt;/p&gt; 
&lt;h2&gt;Free trial&lt;/h2&gt; 
&lt;p&gt;You can request a free trial of GitLab Ultimate &lt;a href=&quot;https://about.gitlab.com/free-trial/&quot;&gt;on our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Open source software to collaborate on code&lt;/h2&gt; 
&lt;p&gt;To see how GitLab looks please see the &lt;a href=&quot;https://about.gitlab.com/features/&quot;&gt;features page on our website&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Manage Git repositories with fine grained access controls that keep your code secure&lt;/li&gt; 
 &lt;li&gt;Perform code reviews and enhance collaboration with merge requests&lt;/li&gt; 
 &lt;li&gt;Complete continuous integration (CI) and continuous deployment/delivery (CD) pipelines to build, test, and deploy your applications&lt;/li&gt; 
 &lt;li&gt;Each project can also have an issue tracker, issue board, and a wiki&lt;/li&gt; 
 &lt;li&gt;Used by more than 100,000 organizations, GitLab is the most popular solution to manage Git repositories on-premises&lt;/li&gt; 
 &lt;li&gt;Open-core, most of the code is MIT with the files in &lt;code&gt;/ee&lt;/code&gt; being proprietary but source available and open for contributions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Editions&lt;/h2&gt; 
&lt;p&gt;There are three editions of GitLab:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitLab Community Edition (CE) is available freely under the MIT Expat license.&lt;/li&gt; 
 &lt;li&gt;GitLab Enterprise Edition (EE) includes &lt;a href=&quot;https://about.gitlab.com/pricing/#compare-options&quot;&gt;extra features&lt;/a&gt; that are more useful for organizations with more than 100 users. To use EE and get official support please &lt;a href=&quot;https://about.gitlab.com/pricing/&quot;&gt;become a subscriber&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;JiHu Edition (JH) tailored specifically for the &lt;a href=&quot;https://about.gitlab.cn/&quot;&gt;Chinese market&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://raw.githubusercontent.com/gitlabhq/gitlabhq/master/LICENSE&quot;&gt;LICENSE&lt;/a&gt; file for licensing information as it pertains to files in this repository.&lt;/p&gt; 
&lt;h2&gt;Hiring&lt;/h2&gt; 
&lt;p&gt;We are hiring developers, support engineers, and production engineers all the time, please see our &lt;a href=&quot;https://about.gitlab.com/jobs/&quot;&gt;jobs page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Website&lt;/h2&gt; 
&lt;p&gt;On &lt;a href=&quot;https://about.gitlab.com/&quot;&gt;about.gitlab.com&lt;/a&gt; you can find more information about:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/pricing/&quot;&gt;Subscriptions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/services/&quot;&gt;Professional Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/community/&quot;&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/gitlab-com/&quot;&gt;Hosted GitLab.com&lt;/a&gt; use GitLab as a free service&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/features/#enterprise&quot;&gt;GitLab Enterprise Edition&lt;/a&gt; with additional features aimed at larger organizations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/solutions/continuous-integration/&quot;&gt;GitLab CI&lt;/a&gt; a continuous integration (CI) server that is easy to integrate with GitLab.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href=&quot;https://raw.githubusercontent.com/gitlabhq/gitlabhq/master/doc/install/requirements.md&quot;&gt;requirements documentation&lt;/a&gt; for system requirements and more information about the supported operating systems.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The recommended way to install GitLab is with the &lt;a href=&quot;https://about.gitlab.com/downloads/&quot;&gt;Omnibus packages&lt;/a&gt; on our package server. Compared to &lt;a href=&quot;https://docs.gitlab.com/install/installation/&quot;&gt;a self-compiled installation&lt;/a&gt;, this is faster and less error prone. Just select your operating system, download the respective package (Debian or RPM) and install it using the system&#39;s package manager.&lt;/p&gt; 
&lt;p&gt;For more information about other installation methods, see &lt;a href=&quot;https://about.gitlab.com/install/&quot;&gt;install GitLab&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;GitLab is an open source project and we are very happy to accept community contributions. Please refer to &lt;a href=&quot;https://about.gitlab.com/contributing/&quot;&gt;Contributing to GitLab page&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Install a development environment&lt;/h2&gt; 
&lt;p&gt;To work on GitLab itself, we recommend setting up your development environment with &lt;a href=&quot;https://gitlab.com/gitlab-org/gitlab-development-kit&quot;&gt;the GitLab Development Kit (GDK)&lt;/a&gt;. If you do not use GDK, you need to &lt;a href=&quot;https://docs.gitlab.com/install/installation/&quot;&gt;install and configure all the dependencies yourself&lt;/a&gt;, this is a lot of work and error prone. One small thing you also have to do when installing it yourself is to copy the example development Puma configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;cp config/puma.example.development.rb config/puma.rb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Instructions on how to start GitLab and how to run the tests can be found in the &lt;a href=&quot;https://gitlab.com/gitlab-org/gitlab-development-kit#getting-started&quot;&gt;getting started section of the GitLab Development Kit&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Software stack&lt;/h2&gt; 
&lt;p&gt;GitLab is a Ruby on Rails application that runs on the following software:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ubuntu/Debian/CentOS/RHEL/OpenSUSE&lt;/li&gt; 
 &lt;li&gt;Ruby (MRI) 3.2.5&lt;/li&gt; 
 &lt;li&gt;Git 2.33+&lt;/li&gt; 
 &lt;li&gt;Redis 6.0+&lt;/li&gt; 
 &lt;li&gt;PostgreSQL 16.5+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information please see the &lt;a href=&quot;https://docs.gitlab.com/ee/development/architecture.html&quot;&gt;architecture&lt;/a&gt; and &lt;a href=&quot;https://docs.gitlab.com/ee/install/requirements.html&quot;&gt;requirements&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;UX design&lt;/h2&gt; 
&lt;p&gt;Please adhere to the &lt;a href=&quot;https://design.gitlab.com/&quot;&gt;UX Guide&lt;/a&gt; when creating designs and implementing code.&lt;/p&gt; 
&lt;h2&gt;Third-party applications&lt;/h2&gt; 
&lt;p&gt;There are a lot of &lt;a href=&quot;https://about.gitlab.com/applications/&quot;&gt;third-party applications integrating with GitLab&lt;/a&gt;. These include GUI Git clients, mobile applications and API wrappers for various languages.&lt;/p&gt; 
&lt;h2&gt;GitLab release cycle&lt;/h2&gt; 
&lt;p&gt;For more information about the release process see the &lt;a href=&quot;https://gitlab.com/gitlab-org/release-tools/blob/master/README.md&quot;&gt;release documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;p&gt;For upgrading information please see our &lt;a href=&quot;https://about.gitlab.com/update/&quot;&gt;update page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All documentation can be found on &lt;a href=&quot;https://docs.gitlab.com&quot;&gt;https://docs.gitlab.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Education&lt;/h2&gt; 
&lt;p&gt;Get up to speed quickly with comprehensive learning resources at &lt;a href=&quot;https://university.gitlab.com&quot;&gt;GitLab University&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://about.gitlab.com/getting-help/&quot;&gt;Getting help for GitLab&lt;/a&gt; on our website for the many options to get help.&lt;/p&gt; 
&lt;h2&gt;Why should I use GitLab?&lt;/h2&gt; 
&lt;p&gt;Read &lt;a href=&quot;https://about.gitlab.com/why-gitlab/&quot;&gt;why our customers choose GitLab&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dependabot/dependabot-core</title>
      <link>https://github.com/dependabot/dependabot-core</link>
      <description>&lt;p&gt;ü§ñ Dependabot&#39;s core logic for creating update PRs.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&quot;center&quot;&gt; 
 &lt;picture&gt; 
  &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;https://user-images.githubusercontent.com/7659/174594540-5e29e523-396a-465b-9a6e-6cab5b15a568.svg&quot; /&gt; 
  &lt;source media=&quot;(prefers-color-scheme: dark)&quot; srcset=&quot;https://user-images.githubusercontent.com/7659/174594559-0b3ddaa7-e75b-4f10-9dee-b51431a9fd4c.svg&quot; /&gt; 
  &lt;img src=&quot;https://user-images.githubusercontent.com/7659/174594540-5e29e523-396a-465b-9a6e-6cab5b15a568.svg?sanitize=true&quot; alt=&quot;Dependabot&quot; width=&quot;336&quot; /&gt; 
 &lt;/picture&gt; &lt;/h1&gt; 
&lt;p&gt;Welcome to the public home of Dependabot &lt;img alt=&quot;dependabot&quot; src=&quot;https://github.githubassets.com/images/icons/emoji/dependabot.png?v8&quot; /&gt;).&lt;/p&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#what-is-dependabot-core&quot;&gt;What is Dependabot-Core?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#how-to-run-dependabot&quot;&gt;How to run Dependabot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#contributing-to-dependabot&quot;&gt;Contributing to Dependabot&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#reporting-issues-and-feature-requests&quot;&gt;Reporting Issues and Feature Requests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#submitting-pull-requests&quot;&gt;Submitting Pull Requests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#new-ecosystems&quot;&gt;New Ecosystems&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#development-guide&quot;&gt;Development Guide&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#getting-a-development-environment-running&quot;&gt;Getting a Development Environment Running&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#debugging-problems&quot;&gt;Debugging Problems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#running-tests&quot;&gt;Running Tests&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#profiling&quot;&gt;Profiling&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#architecture-and-code-layout&quot;&gt;Architecture and Code Layout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#trademarks&quot;&gt;Trademarks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#notes-for-project-maintainers&quot;&gt;Notes for Project Maintainers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h1&gt;What is Dependabot-Core?&lt;/h1&gt; 
&lt;p&gt;Dependabot-Core is the library at the heart of &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot&quot;&gt;Dependabot&lt;/a&gt; security / version updates.&lt;/p&gt; 
&lt;p&gt;Use it to generate automated pull requests updating dependencies for projects written in Ruby, JavaScript, Python, PHP, Dart, Elixir, Elm, Go, Rust, Java and .NET. It can also update git submodules, Docker files, and Terraform files. Features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check for the latest version of a dependency &lt;em&gt;that&#39;s resolvable given a project&#39;s other dependencies&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Generate updated manifest and lockfiles for a new dependency version&lt;/li&gt; 
 &lt;li&gt;Generate PR descriptions that include the updated dependency&#39;s changelogs, release notes, and commits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;How to run Dependabot&lt;/h1&gt; 
&lt;p&gt;Most people are familiar with the Dependabot service that runs on GitHub.com and GitHub Enterprise. Enabling that is as simple as &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuring-dependabot-version-updates&quot;&gt;checking a &lt;code&gt;dependabot.yml&lt;/code&gt; configuration file in to your repository&#39;s &lt;code&gt;.github&lt;/code&gt; directory&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;However, if you want to run a custom version of Dependabot or run it on another platform, you&#39;re not left out in the cold. This repo provides the logic necessary for hosting your own standalone Dependabot. It currently supports opening Pull Requests against repositories hosted on GitHub, Github Enterprise, Azure DevOps, GitLab, BitBucket, and AWS CodeCommit.&lt;/p&gt; 
&lt;p&gt;Dependabot-Core is a library, so you&#39;ll need an entrypoint script of some kind. Here are a few examples to help you get started.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you&#39;re looking to run Dependabot locally for development/debugging purposes, see the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#development-guide&quot;&gt;Development Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Dependabot-Script&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/dependabot/dependabot-script&quot;&gt;dependabot-script&lt;/a&gt; repo provides a collection of example scripts for configuring the Dependabot-Core library. It is intended as a starting point for advanced users to run a self-hosted version of Dependabot within their own projects.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We recently refactored the monolithic docker image used within the Dependabot Core library into one-image-per-ecosystem. Unfortunately, that broke dependabot-scripts, and we haven&#39;t had time to update them yet. We are aware of the problem and hope to provide a solution soon.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Dependabot CLI&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/dependabot/cli&quot;&gt;Dependabot CLI&lt;/a&gt; is a newer tool that may eventually replace &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dependabot-script&quot;&gt;&lt;code&gt;dependabot-script&lt;/code&gt;&lt;/a&gt; for standalone use cases. While it creates dependency diffs, it&#39;s currently missing the logic to turn those diffs into actual PRs. Nevertheless, it may be useful for advanced users looking for examples of how to hack on Dependabot.&lt;/p&gt; 
&lt;h2&gt;Dependabot on CI&lt;/h2&gt; 
&lt;p&gt;In an environment such as GitHub where Dependabot runs in a container, if you want to change your build or installation process depending on whether it&#39;s running within the context of the Dependabot container, you can check the existence of the &lt;code&gt;DEPENDABOT&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h1&gt;Contributing to Dependabot&lt;/h1&gt; 
&lt;h2&gt;Reporting issues and Feature Requests&lt;/h2&gt; 
&lt;p&gt;üëã Want to give us feedback on Dependabot, or contribute to it? That&#39;s great - thank you so much!&lt;/p&gt; 
&lt;h3&gt;Reproducible Example&lt;/h3&gt; 
&lt;p&gt;Most bug reports should be accompanied by a link to a public repository that reproduces the problem. Bug reports that cannot be reproduced on a public repo using the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#cli-tool&quot;&gt;CLI tool&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dry-run-script&quot;&gt;dry-run script&lt;/a&gt; may be closed as &quot;cannot reproduce&quot;.&lt;/p&gt; 
&lt;h3&gt;No &quot;+1&quot; Comments&lt;/h3&gt; 
&lt;p&gt;Our issue tracker is quite active, and as a result there&#39;s a good chance someone already filed the same issue. If so, please upvote that issue, because we use üëç reactions on issues as one signal to gauge the impact of a feature request or bug.&lt;/p&gt; 
&lt;p&gt;However, please do not leave comments that contribute nothing new to the discussion. For details, see &lt;a href=&quot;https://github.com/golang/go/wiki/NoPlusOne&quot;&gt;https://github.com/golang/go/wiki/NoPlusOne&lt;/a&gt;. This is open source, if you see something you want fixed, we are happy to coach you through contributing a pull request to fix it.&lt;/p&gt; 
&lt;h3&gt;Don&#39;t file issues about Security Alerts or Dependency Graph&lt;/h3&gt; 
&lt;p&gt;The issue-tracker is meant solely for issues related to Dependabot&#39;s updating logic. Issues about &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-alerts/about-dependabot-alerts&quot;&gt;security alerts&lt;/a&gt; or &lt;a href=&quot;https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-the-dependency-graph&quot;&gt;Dependency Graph&lt;/a&gt; should instead be filed as a &lt;a href=&quot;https://github.com/orgs/community/discussions/categories/code-security&quot;&gt;Code Security discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A good rule of thumb is that if you have questions about the &lt;em&gt;diff&lt;/em&gt; in a PR, it belongs here.&lt;/p&gt; 
&lt;h3&gt;Disclosing Security Issues&lt;/h3&gt; 
&lt;p&gt;If you believe you have found a security vulnerability in Dependabot, please review &lt;a href=&quot;https://github.com/dependabot/dependabot-core/security/policy&quot;&gt;our security policy&lt;/a&gt; for details about disclosing them to the GitHub Bug Bounty program, so we can work to resolve the issue before it is disclosed publicly.&lt;/p&gt; 
&lt;h2&gt;Submitting Pull Requests&lt;/h2&gt; 
&lt;p&gt;Want to contribute to Dependabot? That&#39;s great - thank you so much!&lt;/p&gt; 
&lt;p&gt;Contribution workflow:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the project.&lt;/li&gt; 
 &lt;li&gt;Get the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#getting-a-development-environment-running&quot;&gt;development environment running&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Make your feature addition or bug fix.&lt;/li&gt; 
 &lt;li&gt;Add &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#running-tests&quot;&gt;tests for it&lt;/a&gt;. This is important so we don&#39;t break it in a future version unintentionally.&lt;/li&gt; 
 &lt;li&gt;Send a pull request. The tests will run on it automatically, so don&#39;t worry if you couldn&#39;t get them running locally.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt; guidelines for more information.&lt;/p&gt; 
&lt;h2&gt;New Ecosystems&lt;/h2&gt; 
&lt;p&gt;If you&#39;re interested in contributing support for a new ecosystem, please refer to the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/CONTRIBUTING.md#contributing-new-ecosystems&quot;&gt;contributing guidelines&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h1&gt;Development Guide&lt;/h1&gt; 
&lt;h2&gt;Getting a Development Environment Running&lt;/h2&gt; 
&lt;p&gt;The first step to debugging a problem or writing a new feature is getting a development environment going. We provide a custom &lt;a href=&quot;https://www.docker.com/products/docker-desktop/&quot;&gt;Docker-based&lt;/a&gt; developer shell that bakes in all required dependencies. In most cases this is the best way to work with the project.&lt;/p&gt; 
&lt;p&gt;The developer shell uses volume mounts to incorporate your local changes to Dependabot&#39;s source code. This way you can edit locally using your favorite editor and the changes are immediately reflected within the docker container for performing &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#debugging-problems&quot;&gt;dry-runs&lt;/a&gt; or executing &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#running-tests&quot;&gt;tests&lt;/a&gt;. Note: See caveat about &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#making-changes-to-native-package-manager-helpers&quot;&gt;editing the native package manager helper scripts&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Quickstart&lt;/h3&gt; 
&lt;p&gt;The script to launch the developer shell builds the docker images from scratch if it can&#39;t find them locally. This can take a while.&lt;/p&gt; 
&lt;p&gt;Skip the wait by pulling the pre-built image for the ecosystem you want to work on. The image name uses the &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file#package-ecosystem&quot;&gt;YAML ecosystem name&lt;/a&gt; to specify the ecosystem. For example, for Go Modules, the YAML name is &lt;code&gt;gomod&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ docker pull ghcr.io/dependabot/dependabot-updater-gomod
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Pre-built images are currently only available for AMD64 / Intel architecture. They &lt;em&gt;will&lt;/em&gt; run on ARM, but 2x-3x slower than if you &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#building-images-from-scratch&quot;&gt;manually build ARM-specific images&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Next, run the developer shell, specifying the desired ecosystem &lt;em&gt;using the top-level directory name of the ecosystem in this project&lt;/em&gt;. For example, for Go Modules, the top-level directory is named &lt;code&gt;go_modules&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ bin/docker-dev-shell go_modules
=&amp;gt; running docker development shell
[dependabot-core-dev] ~ $ cd go_modules &amp;amp;&amp;amp; rspec spec # to run tests for a particular package
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building Images from Scratch&lt;/h3&gt; 
&lt;p&gt;Normally the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#quickstart&quot;&gt;Quickstart&lt;/a&gt; is all you need, but occasionally you&#39;ll need to rebuild the underlying images.&lt;/p&gt; 
&lt;p&gt;For example, while we don&#39;t yet publish ARM-specific images, if you &lt;em&gt;are&lt;/em&gt; working on an ARM-based platform, we recommend manually building the images because the resulting containers run much faster.&lt;/p&gt; 
&lt;p&gt;The developer shell runs within a Dependabot Development docker image, which is built on top of an ecosystem image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;flowchart LR
    A[&quot;docker-dev-shell script&quot;] --&amp;gt; B(&quot;Dependabot Development docker image&quot;)
    B --&amp;gt; C(&quot;Dependabot Updater Ecosystem docker image (ecosystem specific)&quot;)
    C --&amp;gt; D(&quot;Dependabot Updater Core docker image&quot;)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Changes to the docker files for any of these images requires building one or more of the images locally in order to be reflected in the development shell.&lt;/p&gt; 
&lt;p&gt;The simple but slow way is to delete any existing images and then run &lt;code&gt;bin/docker-dev-shell&lt;/code&gt; which automatically builds missing images.&lt;/p&gt; 
&lt;p&gt;The faster way is to pull all the pre-built images that are dependencies of the image you actually need to build. To (re)build a specific one:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The Updater core image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ docker pull ghcr.io/dependabot/dependabot-updater-core # OR
$ docker build -f Dockerfile.updater-core . --tag=dependabot-manual-build/updater-core # recommended on ARM
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each language/ecosystem sits on top of the core image. You need to rebuild whichever one you‚Äôre working on so it picks up your new core bits. For instance, if you‚Äôre working on &lt;strong&gt;Go Modules&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The Updater ecosystem image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ docker pull ghcr.io/dependabot/dependabot-updater-gomod # OR
$ script/build go_modules # recommended on ARM
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or explicitly:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ docker build \
--platform linux/amd64 \
--file go_modules/Dockerfile \
--build-arg UPDATER_CORE_IMAGE=dependabot-manual-build/updater-core \
--tag dependabot-manual-build/updater-gomod \
.
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Spin-up the development container using the &lt;code&gt;--rebuild&lt;/code&gt; flag:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;$ bin/docker-dev-shell go_modules --rebuild
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If successful, you should be inside the shell:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;=&amp;gt; running docker development shell
[dependabot-core-dev] ~ $
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Once inside the shell, you can run tests, e.g.:&lt;/p&gt; &lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;rspec common/spec/dependabot/file_fetchers/base_exclude_spec.rb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Making Changes to native Package Manager helpers&lt;/h3&gt; 
&lt;p&gt;Several Dependabot packages make use of &#39;native helpers&#39;, small executables in their host language.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Changes to these files are not automatically reflected inside the development container.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Once you have made any edits to the helper files, run the appropriate build script to update the installed version with your changes like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bin/docker-dev-shell bundler
=&amp;gt; running docker development shell
$ bundler/helpers/v2/build
$ bin/dry-run.rb bundler dependabot/demo --dir=&quot;/ruby&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To view logs and stdout from the native package manager helpers, see &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#debugging-native-package-manager-helpers&quot;&gt;debugging native helpers&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Debugging Problems&lt;/h1&gt; 
&lt;p&gt;The first step to debugging is getting the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#getting-a-development-environment-running&quot;&gt;development environment running&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Within the development environment, you have two options for simulating a dependency update job: You can use the newly-developed &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#cli-tool&quot;&gt;CLI tool&lt;/a&gt; or the original &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dry-run-script&quot;&gt;Dry-run script&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;CLI tool&lt;/h2&gt; 
&lt;p&gt;The &lt;a href=&quot;https://github.com/dependabot/cli&quot;&gt;Dependabot CLI&lt;/a&gt; is a newly-developed tool that incorporates the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#private-registry-credential-management&quot;&gt;GitHub Credentials Proxy&lt;/a&gt; to more realistically simulate what&#39;s happening within the Dependabot-at-GitHub service when talking to private registries.&lt;/p&gt; 
&lt;p&gt;It has a &lt;a href=&quot;https://github.com/dependabot/cli#debugging-with-the-cli&quot;&gt;dedicated debugging guide&lt;/a&gt;, including support for dropping into the Ruby debugger.&lt;/p&gt; 
&lt;h2&gt;Dry-Run Script&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Before running the dry-run script, you&#39;ll need to &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#getting-a-development-environment-running&quot;&gt;get the development environment running&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can use the &lt;code&gt;bin/dry-run.rb&lt;/code&gt; script to simulate a dependency update job, printing the diff that would be generated to the terminal. It takes two positional arguments: the &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file#package-ecosystem&quot;&gt;package manager&lt;/a&gt; and the GitHub repo name (including the account):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ bin/docker-dev-shell go_modules
=&amp;gt; running docker development shell
$ bin/dry-run.rb go_modules rsc/quote
=&amp;gt; fetching dependency files
=&amp;gt; parsing dependency files
=&amp;gt; updating 2 dependencies
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Helpful options to speed up dry-run testing&lt;/h3&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dry-run-script&quot;&gt;Dry-Run script&lt;/a&gt; supports many other options, all of which are documented at the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/bin/dry-run.rb&quot;&gt;top of the script&#39;s source code&lt;/a&gt;. For example:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;LOCAL_GITHUB_ACCESS_TOKEN=&quot;fake-GitHub-PAT&quot;&lt;/code&gt; allows specifying a &lt;a href=&quot;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token&quot;&gt;GitHub Personal Access Token (PAT)&lt;/a&gt; to avoid rate-limiting.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--dir=&quot;path/to/subdir/containing/manifest&lt;/code&gt; is required if the manifest file is located in a subdirectory.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--dep=&quot;dep-name-that-I-want-to-test&quot;&lt;/code&gt; allows specifying a single dep to try to update and all others are ignored.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--cache=files&lt;/code&gt; allows caching remote dep files locally for faster re-runs when testing local logic changes.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--updater-options=feature_flag_name&lt;/code&gt; allows passing in feature flags.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Here&#39;s an example of how to string all these together&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;  LOCAL_GITHUB_ACCESS_TOKEN=github_pat_123_fake_string \
  bin/dry-run.rb docker jeffwidman/secrets-store-driver \
  --dir &quot;/manifest_staging/charts/secrets-store-provider&quot; \
  --cache=files \
  --dep=&quot;secrets-store&quot; \
  --updater-options=kubernetes_updates
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Adding debug breakpoints&lt;/h3&gt; 
&lt;p&gt;You can add a &lt;code&gt;debugger&lt;/code&gt; statement anywhere in the ruby code, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;      def latest_resolvable_version
        debugger
        latest_version_finder.latest_version
      end
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you execute the job, the Ruby debugger will open. It should look something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;[11, 20] in ~/go_modules/lib/dependabot/go_modules/update_checker.rb
    11|   module GoModules
    12|     class UpdateChecker &amp;lt; Dependabot::UpdateCheckers::Base
    13|       require_relative &quot;update_checker/latest_version_finder&quot;
    14|
    15|       def latest_resolvable_version
=&amp;gt;  16|         debugger
    17|         latest_version_finder.latest_version
    18|       end
    19|
    20|       # This is currently used to short-circuit latest_resolvable_version,
=&amp;gt;#0    Dependabot::GoModules::UpdateChecker#latest_resolvable_version at ~/go_modules/lib/dependabot/go_modules/update_checker.rb:16
  #1    Dependabot::GoModules::UpdateChecker#latest_version at ~/go_modules/lib/dependabot/go_modules/update_checker.rb:24
  # and 9 frames (use `bt&#39; command for all frames)
(rdbg)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At this prompt, you can run &lt;a href=&quot;https://github.com/ruby/debug&quot;&gt;debugger commands&lt;/a&gt; to navigate around, or enter methods and variables to see what they contain. Try entering &lt;code&gt;dependency&lt;/code&gt; to see what dependency Dependabot is currently working on.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; While in the debugger, changes made to the source code will not be picked up. You will have to end your debugging session and restart it.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Debugging Native Package Manager Helpers&lt;/h3&gt; 
&lt;p&gt;When you&#39;re debugging an issue you often need to peek inside these scripts that run in a separate process.&lt;/p&gt; 
&lt;p&gt;Print all log statements from native helpers using &lt;code&gt;DEBUG_HELPERS=true&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;DEBUG_HELPERS=true bin/dry-run.rb bundler dependabot/demo --dir=&quot;/ruby&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pause execution to debug a single native helper function using &lt;code&gt;DEBUG_FUNCTION=&amp;lt;function name&amp;gt;&lt;/code&gt;. The function maps to a native helper function name, for example, one of the functions in &lt;code&gt;bundler/helpers/v2/lib/functions.rb&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;When this function is being executed a &lt;code&gt;debugger&lt;/code&gt; is inserted, pausing execution of the &lt;code&gt;bin/dry-run.rb&lt;/code&gt; script, this leaves the current updates &lt;code&gt;tmp&lt;/code&gt; directory in place allowing you to &lt;code&gt;cd&lt;/code&gt; into the directory and run the native helper function directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt; DEBUG_FUNCTION=parsed_gemfile bin/dry-run.rb bundler dependabot/demo --dir=&quot;/ruby&quot;
=&amp;gt; fetching dependency files
=&amp;gt; dumping fetched dependency files: ./dry-run/dependabot/demo/ruby
=&amp;gt; parsing dependency files
$ cd /home/dependabot/dependabot-core/tmp/dependabot_TEMP/ruby &amp;amp;&amp;amp; echo &quot;{\&quot;function\&quot;:\&quot;parsed_gemfile\&quot;,\&quot;args\&quot;:{\&quot;gemfile_name\&quot;:\&quot;Gemfile\&quot;,\&quot;lockfile_name\&quot;:\&quot;Gemfile.lock\&quot;,\&quot;dir\&quot;:\&quot;/home/dependabot/dependabot-core/tmp/dependabot_TEMP/ruby\&quot;}}&quot; | BUNDLER_VERSION=1.17.3 BUNDLE_GEMFILE=/opt/bundler/v1/Gemfile GEM_HOME=/opt/bundler/v1/.bundle bundle exec ruby /opt/bundler/v1/run.rb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Copy and run the &lt;code&gt;cd...&lt;/code&gt; command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /home/dependabot/dependabot-core/tmp/dependabot_TEMP/ruby &amp;amp;&amp;amp; echo &quot;{\&quot;function\&quot;:\&quot;parsed_gemfile\&quot;,\&quot;args\&quot;:{\&quot;gemfile_name\&quot;:\&quot;Gemfile\&quot;,\&quot;lockfile_name\&quot;:\&quot;Gemfile.lock\&quot;,\&quot;dir\&quot;:\&quot;/home/dependabot/dependabot-core/tmp/dependabot_TEMP/ruby\&quot;}}&quot; | BUNDLER_VERSION=1.17.3 BUNDLE_GEMFILE=/opt/bundler/v1/Gemfile GEM_HOME=/opt/bundler/v1/.bundle bundle exec ruby /opt/bundler/v1/run.rb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This should log out the output of the &lt;code&gt;parsed_gemfile&lt;/code&gt; function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;{&quot;result&quot;:[{&quot;name&quot;:&quot;business&quot;,&quot;requirement&quot;:&quot;~&amp;gt; 1.0.0&quot;,&quot;groups&quot;:[&quot;default&quot;],&quot;source&quot;:null,&quot;type&quot;:&quot;runtime&quot;},{&quot;name&quot;:&quot;uk_phone_numbers&quot;,&quot;requirement&quot;:&quot;~&amp;gt; 0.1.0&quot;,&quot;groups&quot;:[&quot;default&quot;],&quot;source&quot;:null,&quot;type&quot;:&quot;runtime&quot;}]}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Keep in mind that unlike changes to the ruby source, changes on your host machine to the native helpers source code are not synced to the development container. So you have two choices for editing the native helper:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can directly edit the temporary copy of the native helper within the development container, for example: &lt;code&gt;vi /opt/bundler/v1/lib/functions/file_parser.rb&lt;/code&gt;. And then re-run the &lt;code&gt;cd...&lt;/code&gt; command. This is the fastest way to debug, but any changes won&#39;t be saved outside the container.&lt;/li&gt; 
 &lt;li&gt;You can edit your local copy, and then &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#making-changes-to-native-package-manager-helpers&quot;&gt;rebuild the native helper&lt;/a&gt;. This will require re-running the dry-run script to pickup the change.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Debugging Ignore Conditions&lt;/h3&gt; 
&lt;p&gt;Most of the ecosystems in Dependabot-Core support &lt;code&gt;ignore&lt;/code&gt; conditions which allow a user to specify dependency names or versions to exclude from upgrades. The docs for the Dependabot service at GitHub &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file#ignore&quot;&gt;describe the feature in more detail&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#cli-tool&quot;&gt;Dependabot CLI&lt;/a&gt; supports passing in ignore conditions as part of the job definition. See &lt;a href=&quot;https://github.com/dependabot/cli#scenario-file&quot;&gt;the example&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dry-run-script&quot;&gt;dry-run script&lt;/a&gt; supports passing in one or more ignore conditions via the env var &lt;code&gt;IGNORE_CONDITIONS&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;IGNORE_CONDITIONS=&#39;[{&quot;dependency-name&quot;:&quot;*&quot;,&quot;update-types&quot;: [&quot;version-update:semver-major&quot;]}]&#39; \
bin/dry-run.rb docker test_org/test-dependabot`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Debugging Security Updates&lt;/h3&gt; 
&lt;p&gt;Many of the ecosystems in Dependabot-Core support &lt;a href=&quot;https://docs.github.com/en/code-security/dependabot/dependabot-security-updates/about-dependabot-security-updates&quot;&gt;security updates&lt;/a&gt;. These are a special form of version update where a dependency name and range of vulnerable versions are passed in. Dependabot-Core will try to upgrade any instance of that dependency to the &lt;em&gt;minimum&lt;/em&gt; non-vulnerable version. This is in contrast to a normal version update which tries to update to the &lt;em&gt;latest&lt;/em&gt; version.&lt;/p&gt; 
&lt;p&gt;The env var &lt;code&gt;SECURITY_ADVISORIES&lt;/code&gt; allows passing one or more security alert notifications to the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dry-run-script&quot;&gt;dry-run script&lt;/a&gt; in order to simulate a security update:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;SECURITY_ADVISORIES=&#39;[{&quot;dependency-name&quot;:&quot;buffer&quot;,&quot;patched-versions&quot;:[],&quot;unaffected-versions&quot;:[],&quot;affected-versions&quot;:[&quot;&amp;lt;= 2.0.0&quot;]}]&#39; \
bin/dry-run.rb pub dart-lang/pub-dev --dir &quot;/app&quot; --cache=files --dep=&quot;buffer&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Visual Studio Code and Docker&lt;/h3&gt; 
&lt;p&gt;There&#39;s built-in support for leveraging Visual Studio Code&#39;s &lt;a href=&quot;https://code.visualstudio.com/docs/devcontainers/containers&quot;&gt;ability for debugging&lt;/a&gt; inside a Docker container. After installing the recommended &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&quot;&gt;&lt;code&gt;Dev Containers&lt;/code&gt; extension&lt;/a&gt;, simply press &lt;code&gt;Ctrl+Shift+P&lt;/code&gt; (&lt;code&gt;‚áß‚åòP&lt;/code&gt; on macOS) and select &lt;code&gt;Dev Containers: Reopen in Container&lt;/code&gt;. You can also access the dropdown by clicking on the green button in the bottom-left corner of the editor. If the development Docker image isn&#39;t present on your machine, it will be built automatically. Once that&#39;s finished, start the &lt;code&gt;Debug Dry Run&lt;/code&gt; configuration &lt;code&gt;(F5)&lt;/code&gt; and you&#39;ll be prompted to select a package manager and a repository to perform a dry run on. Feel free to place breakpoints on the code.&lt;/p&gt; 
&lt;p&gt;There is also support to debug individual test runs by running the &lt;code&gt;Debug Tests&lt;/code&gt; configuration &lt;code&gt;(F5)&lt;/code&gt; and you&#39;ll be prompted to select an ecosystem and provide an rspec path.&lt;/p&gt; 
&lt;p&gt;‚ö†Ô∏è The &lt;code&gt;Clone Repository ...&lt;/code&gt; commands of the Remote Containers extension are currently missing some functionality and are therefore not supported. You have to clone the repository manually and use the &lt;code&gt;Reopen in Container&lt;/code&gt; or &lt;code&gt;Open Folder in Container...&lt;/code&gt; command.&lt;/p&gt; 
&lt;h2&gt;Running Tests&lt;/h2&gt; 
&lt;p&gt;Once you get the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#getting-a-development-environment-running&quot;&gt;development environment for a particular ecosystem&lt;/a&gt; going, execute the tests for that ecosystem by running &lt;code&gt;rspec spec&lt;/code&gt; inside that ecosystem&#39;s folder, e.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cd go_modules
$ rspec spec
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also limit the tests to only the file you&#39;re working on, or only tests that previously failed, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ rspec spec/dependabot/file_updaters/elixir --only-failures
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Style is enforced by &lt;a href=&quot;https://rubocop.org/&quot;&gt;RuboCop&lt;/a&gt;. To check for style violations, simply run &lt;code&gt;rubocop&lt;/code&gt; in each of the packages, e.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ cd go_modules
$ rubocop
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Profiling&lt;/h2&gt; 
&lt;p&gt;You can profile a &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/#dry-run-script&quot;&gt;dry-run&lt;/a&gt; by passing the &lt;code&gt;--profile&lt;/code&gt; flag when running it, or tag an &lt;code&gt;rspec&lt;/code&gt; test with &lt;code&gt;:profile&lt;/code&gt;. This will generate a &lt;code&gt;stackprof-&amp;lt;datetime&amp;gt;.dump&lt;/code&gt; file in the &lt;code&gt;tmp/&lt;/code&gt; folder, and you can generate a flamegraph from this by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;stackprof --d3-flamegraph tmp/stackprof-&amp;lt;data or spec name&amp;gt;.dump &amp;gt; tmp/flamegraph.html
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Architecture and Code Layout&lt;/h1&gt; 
&lt;p&gt;Dependabot-Core is a collection of Ruby packages (gems), which contain the logic for updating dependencies in several languages.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;dependabot-common&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;common&lt;/code&gt; package contains all general-purpose/shared functionality. For instance, the code for creating pull requests for the different supported platforms lives here, as does most of the logic for handling Git dependencies (as most languages support Git dependencies in one way or another). There are also base classes defined for each of the major concerns required to implement support for a language or package manager.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;dependabot-{package-manager}&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;There is a gem for each package manager or language that Dependabot supports. At a minimum, each of these gems will implement the following classes:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FileFetcher&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Fetches the relevant dependency files for a project (e.g., the &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt;). See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/common/lib/dependabot/file_fetchers/README.md&quot;&gt;README&lt;/a&gt; for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FileParser&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Parses a dependency file and extracts a list of dependencies for a project. See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/common/lib/dependabot/file_parsers/README.md&quot;&gt;README&lt;/a&gt; for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;UpdateChecker&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Checks whether a given dependency is up-to-date. See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/common/lib/dependabot/update_checkers/README.md&quot;&gt;README&lt;/a&gt; for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FileUpdater&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Updates a dependency file to use the latest version of a given dependency. See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/common/lib/dependabot/file_updaters/README.md&quot;&gt;README&lt;/a&gt; for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MetadataFinder&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Looks up metadata about a dependency, such as its GitHub URL. See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/common/lib/dependabot/metadata_finders/README.md&quot;&gt;README&lt;/a&gt; for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Describes the logic for comparing dependency versions. See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/hex/lib/dependabot/hex/version.rb&quot;&gt;hex Version class&lt;/a&gt; for an example.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;Requirement&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Describes the format of a dependency requirement (e.g. &lt;code&gt;&amp;gt;= 1.2.3&lt;/code&gt;). See the &lt;a href=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/hex/lib/dependabot/hex/requirement.rb&quot;&gt;hex Requirement class&lt;/a&gt; for an example.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The high-level flow looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dependabot/dependabot-core/main/architecture.svg?sanitize=true&quot; alt=&quot;Dependabot high-level architecture diagram&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;dependabot-omnibus&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This is a &quot;meta&quot; gem, that simply depends on all the others. If you want to automatically include support for all languages, you can just include this gem and you&#39;ll get all you need.&lt;/p&gt; 
&lt;h2&gt;Private Registry Credential Management&lt;/h2&gt; 
&lt;p&gt;For many ecosystems, Dependabot-Core supports private registries. Sometimes this happens by passing the private registry credentials directly to the native package managers (&lt;code&gt;npm&lt;/code&gt;, &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;bundler&lt;/code&gt;, etc), other times it happens within the Dependabot-Core Ruby code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;sequenceDiagram
    Private Registry Credentials-&amp;gt;&amp;gt;Dependabot-Core:&amp;lt;br /&amp;gt;
    Dependabot-Core-&amp;gt;&amp;gt;Native Package Managers:&amp;lt;br /&amp;gt;
    Native Package Managers-&amp;gt;&amp;gt;Package Registries:&amp;lt;br /&amp;gt;
    Dependabot-Core-&amp;gt;&amp;gt;Package Registries:&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;While simple and straightforward, this is a security risk for ecosystems that allow running untrusted code within their manifest files. For example &lt;code&gt;setup.py&lt;/code&gt; and &lt;code&gt;.gemspec&lt;/code&gt; allow running native Python and Ruby code. If a package in the dependency tree gets hacked, an attacker could push a malicious manifest that forces the native package manager to expose the creds.&lt;/p&gt; 
&lt;p&gt;To guard against this, for the Dependabot service that Github runs, we wrap Dependabot-Core with a credential proxy so those private registry secrets are never exposed to Dependabot-Core.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;sequenceDiagram
    Dependabot-Core-&amp;gt;&amp;gt;Credentials Proxy: All requests are unauthenticated
    Credentials Proxy-&amp;gt;&amp;gt;Package Registries: Creds are injected by the Proxy
    Note left of Dependabot-Core: The Dependabot Service&amp;lt;br /&amp;gt; that GitHub Runs
    Package Registries-&amp;gt;&amp;gt;Credentials Proxy: Creds are stripped by the Proxy
    Credentials Proxy-&amp;gt;&amp;gt;Dependabot-Core: Dependabot-Core never sees private registry credentials
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This also means if Dependabot-Core ever has a security vulnerability, those creds are still not at risk of being exposed.&lt;/p&gt; 
&lt;h1&gt;Trademarks&lt;/h1&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of GitHub trademarks or logos is subject to and must follow &lt;a href=&quot;https://github.com/logos&quot;&gt;GitHub Logos and Usage&lt;/a&gt;. Use of GitHub trademarks or logos in modified versions of this project must not cause confusion or imply GitHub sponsorship. Any use of third-party trademarks or logos are subject to those third-party‚Äôs policies.&lt;/p&gt; 
&lt;h1&gt;History&lt;/h1&gt; 
&lt;p&gt;Dependabot and dependabot-core started life as &lt;a href=&quot;https://github.com/gocardless/bump&quot;&gt;Bump&lt;/a&gt; and &lt;a href=&quot;https://github.com/gocardless/bump-core&quot;&gt;Bump Core&lt;/a&gt;, back when @hmarr and @greysteil were working at &lt;a href=&quot;https://gocardless.com&quot;&gt;GoCardless&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Dependabot became a part of GitHub in 2019!&lt;/p&gt; 
&lt;h1&gt;Notes for project maintainers&lt;/h1&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;span&gt;üìñ&lt;/span&gt; Release guide&lt;/summary&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;p&gt;Publish a new release to RubyGems by running the &lt;a href=&quot;https://github.com/dependabot/dependabot-core/actions/workflows/gems-bump-version.yml&quot;&gt;&lt;code&gt;Gems - Bump Version&lt;/code&gt;&lt;/a&gt; workflow and following the instructions on the job summary.&lt;/p&gt; 
 &lt;p&gt;In a nutshell the process will be:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Run the action to generate a version bump PR.&lt;/li&gt; 
  &lt;li&gt;Merge the PR.&lt;/li&gt; 
  &lt;li&gt;Tag that merge commit as a new release using the format &lt;code&gt;v1.2.3&lt;/code&gt;. The job summary contains a URL pre-populated with the correct version for the title and tag.&lt;/li&gt; 
  &lt;li&gt;Once the release is tagged, another GitHub Action workflow automatically pushes it to RubyGems.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/details&gt;</description>
    </item>
    
  </channel>
</rss>
