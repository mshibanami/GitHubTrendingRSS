<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>GitHub C# Monthly Trending</title>
    <description>Monthly Trending of C# in GitHub</description>
    <pubDate>Sat, 27 Sep 2025 01:51:23 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>Tichau/FileConverter</title>
      <link>https://github.com/Tichau/FileConverter</link>
      <description>&lt;p&gt;File Converter is a very simple tool which allows you to convert and compress files using the context menu in windows explorer.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;File Converter&lt;/h1&gt; 
&lt;h2&gt;Description&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;File Converter&lt;/strong&gt; is a very simple tool which allows you to convert and compress one or several file(s) using the context menu of windows explorer.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Tichau/FileConverter/integration/Resources/FileConverterUsage.gif&quot; alt=&quot;File Converter Usage&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;You can download it here: &lt;a href=&quot;https://file-converter.io/?from=readme.md&quot;&gt;file-converter.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can find more information about what&#39;s in File converter and how to use it on the &lt;a href=&quot;https://github.com/Tichau/FileConverter/wiki&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;File Converter is a personal open source project started in 2014. I have put hundreds of hours adding, refining and tuning File Converter with the goal of making the conversion and compression of files an easy task for everyone.&lt;/p&gt; 
&lt;p&gt;You can help me by &lt;a href=&quot;https://github.com/Tichau/FileConverter/wiki#contribute&quot;&gt;contributing to the project&lt;/a&gt;, by &lt;a href=&quot;https://www.paypal.com/donate/?cmd=_donations&amp;amp;business=3BDWQTYTTA3D8&amp;amp;item_name=File+Converter+Donations&amp;amp;currency_code=EUR&amp;amp;Z3JncnB0=&quot;&gt;making a donation&lt;/a&gt; or just by &lt;a href=&quot;https://saythanks.io/to/Tichau&quot;&gt;saying thanks​&lt;/a&gt; :).&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter any problem with File Converter, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;See the already known problems in the &lt;a href=&quot;https://github.com/Tichau/FileConverter/wiki/Troubleshooting&quot;&gt;troubleshooting section of the documentation&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Or report an issue on the &lt;a href=&quot;https://github.com/Tichau/FileConverter/issues&quot;&gt;bug tracker&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Setup development environment&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;p&gt;For File Converter and its explorer extension:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visual Studio 2022&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the installer:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;http://wixtoolset.org/&quot;&gt;Wix 5&lt;/a&gt; (will be installed by nuget) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=FireGiant.FireGiantHeatWaveDev17&quot;&gt;Community Visual Studio Extension&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://developer.microsoft.com/fr-fr/windows/downloads/windows-10-sdk&quot;&gt;Windows SDK Signing Tools for Desktop Apps&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;Thanks to all the contributors of File Converter project.&lt;/p&gt; 
&lt;h3&gt;Localization&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;Khidreal&lt;/strong&gt; and &lt;strong&gt;hugok79&lt;/strong&gt; for the Portuguese localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;Marhc&lt;/strong&gt; for the Brazilian localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;Chachak&lt;/strong&gt; for the Spanish localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;Davide&lt;/strong&gt; for the Italian localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;nikotschierske&lt;/strong&gt; for the German localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;Snoopy1866&lt;/strong&gt; for the Simplified Chinese localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;MayaC0re&lt;/strong&gt; for the Turkish localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;vishveshjain&lt;/strong&gt; for the Hindi localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;Mahmoud0Sultan&lt;/strong&gt; for the Arabic localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;Sedimentary-Rock&lt;/strong&gt;, &lt;strong&gt;NeKoOuO&lt;/strong&gt; and &lt;strong&gt;PeterDaveHello&lt;/strong&gt; for the Traditional Chinese localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;CrisBalGreece&lt;/strong&gt; for the Greek localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;AshiVered&lt;/strong&gt; for the Hebrew localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;MrHero118&lt;/strong&gt; and &lt;strong&gt;Mehrdad32&lt;/strong&gt; for the Persian localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;crnobog69&lt;/strong&gt; for the Serbian localizations.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;oogamiyuta&lt;/strong&gt; for the Japanese localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;AidyTheWeird&lt;/strong&gt; for the Czech localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;Alanimdeo&lt;/strong&gt; for the Korean localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;vrykolakas166&lt;/strong&gt; for the Vietnamese localization.&lt;/li&gt; 
 &lt;li&gt;Thanks to &lt;strong&gt;iliamak&lt;/strong&gt; for the Russian localization.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Middlewares&lt;/h2&gt; 
&lt;p&gt;File converter uses the following middlewares:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ffmpeg&lt;/strong&gt; (v7.1) as file conversion software. Thanks to ffmpeg devs for this awesome open source file conversion tool. &lt;a href=&quot;https://ffmpeg.org&quot;&gt;Web site link&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ImageMagick&lt;/strong&gt; (v14.4) as image edition and conversion software. Thanks to image magick devs for this awesome open source image edition software suite. &lt;a href=&quot;http://imagemagick.net&quot;&gt;Web site link&lt;/a&gt; And thanks to dlemstra for the C# wrapper of this software. &lt;a href=&quot;https://github.com/ImageMagick/ImageMagick&quot;&gt;Github link&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Ghostscript&lt;/strong&gt; (10.02.1) as pdf edition software. Thanks to ghostscript devs. &lt;a href=&quot;https://www.ghostscript.com/download/gsdnld.html&quot;&gt;Download link&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;SharpShell&lt;/strong&gt; to easily create windows context menu extensions. Thanks to Dave Kerr for his work on SharpShell. &lt;a href=&quot;https://github.com/dwmkerr/sharpshell&quot;&gt;GitHub link&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Ripper&lt;/strong&gt; and &lt;strong&gt;yeti.mmedia&lt;/strong&gt; for CD Audio extraction. Thanks to Idael Cardoso for his work on CD Audio ripper. &lt;a href=&quot;https://www.codeproject.com/Articles/5458/C-Sharp-Ripper&quot;&gt;Code project link&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Markdown.XAML&lt;/strong&gt; for markdown rendering in the wpf application. Thanks to Bevan Arps for his work on Markdown.XAML. &lt;a href=&quot;https://github.com/theunrepentantgeek/Markdown.XAML&quot;&gt;GitHub link&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WpfAnimatedGif&lt;/strong&gt; for animated gif rendering in the wpf application. Thanks to Thomas Levesque for his work on WpfAnimatedGif. &lt;a href=&quot;https://github.com/XamlAnimatedGif/WpfAnimatedGif&quot;&gt;GitHub link&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;File Converter is licensed under the GPL version 3 License. For more information check the LICENSE.md file in your installation folder or the &lt;a href=&quot;https://www.gnu.org/licenses/gpl.html&quot;&gt;gnu website&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GermanCoding/SyncTrayzor</title>
      <link>https://github.com/GermanCoding/SyncTrayzor</link>
      <description>&lt;p&gt;Windows tray utility / launcher for Syncthing (v2 continued)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SyncTrayzor &lt;a href=&quot;https://github.com/GermanCoding/SyncTrayzor/actions/workflows/dotnet-build.yml&quot;&gt;&lt;img src=&quot;https://github.com/GermanCoding/SyncTrayzor/actions/workflows/dotnet-build.yml/badge.svg?sanitize=true&quot; alt=&quot;Build&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://hosted.weblate.org/engage/syncthing/&quot;&gt;&lt;img src=&quot;https://hosted.weblate.org/widget/syncthing/synctrayzor/synctrayzor/svg-badge.svg?sanitize=true&quot; alt=&quot;Translation status&quot; /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This is SyncTrayzor v2, a continuation of the (discontinued) original SyncTrayzor by @canton7 (Antony Male)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Quick Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GermanCoding/SyncTrayzor/main/#installation&quot;&gt;Download and install SyncTrayzor now&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GermanCoding/SyncTrayzor/main/#something-went-wrong&quot;&gt;Something went wrong&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/GermanCoding/SyncTrayzor/main/DONATING.md#donating&quot;&gt;Find Syncthing/SyncTrayzor useful? Please donate!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;SyncTrayzor is a little tray utility for &lt;a href=&quot;https://syncthing.net/&quot;&gt;Syncthing&lt;/a&gt; on Windows. It hosts and wraps Syncthing, making it behave more like a native Windows application and less like a command-line utility with a web browser interface.&lt;/p&gt; 
&lt;p&gt;Features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Has a built-in web browser, so you don&#39;t need to fire up an external browser.&lt;/li&gt; 
 &lt;li&gt;Optionally starts on login, so you don&#39;t need to set up Syncthing as a service.&lt;/li&gt; 
 &lt;li&gt;Has drop-box style file download / progress window&lt;/li&gt; 
 &lt;li&gt;Tray icon indicates when synchronization is occurring.&lt;/li&gt; 
 &lt;li&gt;Alerts you when: 
  &lt;ul&gt; 
   &lt;li&gt;You have file conflicts&lt;/li&gt; 
   &lt;li&gt;One of your folders is out of sync&lt;/li&gt; 
   &lt;li&gt;Folders finish syncing&lt;/li&gt; 
   &lt;li&gt;Devices connect / disconnect&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Has a tool to help you resolve file conflicts&lt;/li&gt; 
 &lt;li&gt;Can pause devices on metered networks, to stop Syncthing transferring data on e.g. a mobile connection or wifi hotspot.&lt;/li&gt; 
 &lt;li&gt;Contains translations for many languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/GermanCoding/SyncTrayzor/main/readme/screenshot.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;SyncTrayzor is packaged as both an installer and standalone zip. It will run on Windows 10 or newer.&lt;/p&gt; 
&lt;h3&gt;Installer&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/GermanCoding/SyncTrayzor/releases/latest&quot;&gt;Download &lt;code&gt;SyncTrayzorSetup-x64.exe&lt;/code&gt; or &lt;code&gt;SyncTrayzorSetup-arm64.exe&lt;/code&gt;&lt;/a&gt; and run it. If you already have SyncTrayzor installed, this will update it.&lt;/p&gt; 
&lt;p&gt;Please note that 32-bit builds are no longer offered. If you still have a 32-bit SyncTrayzor install, you should uninstall it first.&lt;/p&gt; 
&lt;h3&gt;Standalone&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/GermanCoding/SyncTrayzor/releases/latest&quot;&gt;Download &lt;code&gt;SyncTrayzorPortable-x64.zip&lt;/code&gt; or &lt;code&gt;SyncTrayzorPortable-arm64.zip&lt;/code&gt;&lt;/a&gt;. Unzip, and run &lt;code&gt;SyncTrayzor.exe&lt;/code&gt;. If you&#39;re updating, you&#39;ll need to copy the &lt;code&gt;data&lt;/code&gt; folder across from your previous standalone installation.&lt;/p&gt; 
&lt;h2&gt;Something went wrong!&lt;/h2&gt; 
&lt;p&gt;First, what went wrong? Remember that SyncTrayzor is a wrapper around &lt;a href=&quot;https://github.com/syncthing/syncthing&quot;&gt;Syncthing&lt;/a&gt;. Syncthing is the file synchronization program, which has a web interface. SyncTrayzor is the tray utility, looks like a normal Windows program, and has menus and suchlike, and a big area where Syncthing&#39;s web interface is displayed.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you&#39;re having problems connecting to other devices, your files aren&#39;t synchronizing, or you&#39;re getting error messages in the console area, &lt;a href=&quot;https://github.com/syncthing/syncthing/issues/new&quot;&gt;raise an issue with Syncthing&lt;/a&gt; or &lt;a href=&quot;https://forum.syncthing.net&quot;&gt;post on the Syncthing forums&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If SyncTrayzor isn&#39;t talking to Syncthing, you&#39;re getting error dialogs, it&#39;s not auto-starting, etc, &lt;a href=&quot;https://github.com/GermanCoding/SyncTrayzor/issues/new&quot;&gt;raise an issue with SyncTrayzor&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you&#39;re not sure, open a new discussion topic and someone will guide you to an appropiate place.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Multi-lingual? SyncTrayzor needs you! Please read &lt;a href=&quot;https://github.com/GermanCoding/SyncTrayzor/wiki/Localization&quot;&gt;Localization&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Want to make a contribution? Fantastic, and thank you! Please read &lt;a href=&quot;https://github.com/GermanCoding/SyncTrayzor/wiki/Contributing&quot;&gt;Contributing&lt;/a&gt; first.&lt;/p&gt; 
&lt;h2&gt;Find Syncthing/SyncTrayzor useful? Please donate!&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href=&quot;https://raw.githubusercontent.com/GermanCoding/SyncTrayzor/main/DONATING.md#donating&quot;&gt;DONATING&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Will SyncTrayzor phone home / give away my secrets / etc?&lt;/h2&gt; 
&lt;p&gt;SyncTrayzor&#39;s auto-update mechanism will periodically call a script (found in &lt;code&gt;server/version_check.php&lt;/code&gt;, hosted on a server of mine) to find out if there&#39;s an upgrade available. It will disclose your current SyncTrayzor version, and the package you downloaded (installer/portable and x64/x86). It will also reveal your IP address, which is unavoidable.&lt;/p&gt; 
&lt;p&gt;You can turn off auto-updates in the Settings, but in that case you are responsible for manually checking for updates.&lt;/p&gt; 
&lt;p&gt;Usage information, details of your computer / network / syncthing setup / etc are not reported.&lt;/p&gt; 
&lt;h2&gt;How can I be sure that I&#39;m not downloading a virus?&lt;/h2&gt; 
&lt;p&gt;You can be paranoid and build everything from source (after auditing the source), or you can trust that I&#39;m a good person who&#39;s trusted by the Syncthing developers.&lt;/p&gt; 
&lt;p&gt;You can verify that this GitHub account hasn&#39;t been compromised and is releasing malicious downloads by following the steps in the &lt;a href=&quot;https://github.com/GermanCoding/SyncTrayzor/tree/master/security&quot;&gt;Security README&lt;/a&gt;. This process also lets you verify that Syncthing&#39;s developers trust me to release non-malicious software.&lt;/p&gt; 
&lt;h2&gt;What will SyncTrayzor do to Syncthing?&lt;/h2&gt; 
&lt;p&gt;It&#39;s worth noting that SyncTrayzor will override the &#39;GUI Listen Address&#39; and &#39;API Key&#39; in Syncthing&#39;s configuration. This is because it needs to fully control these values, in order to ensure that it can communicate with Syncthing.&lt;/p&gt; 
&lt;p&gt;However, you can set these values in File -&amp;gt; Settings, if you want to customise them.&lt;/p&gt; 
&lt;h2&gt;What will SyncTrayzor do to my system?&lt;/h2&gt; 
&lt;p&gt;Good question. The answer depends on whether you installed SyncTrayzor using the installer, or are running it standalone.&lt;/p&gt; 
&lt;h3&gt;Installed&lt;/h3&gt; 
&lt;p&gt;The Installed version of SyncTrayzor will install itself into &lt;code&gt;C:\Program Files\SyncTrayzor&lt;/code&gt; or &lt;code&gt;%LocalAppData%\Programs\SyncTrayzor&lt;/code&gt; for all-users or current-user version respectively.&lt;/p&gt; 
&lt;p&gt;By default, SyncTrayzor will put its own configuration in &lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Roaming\SyncTrayzor&lt;/code&gt;, and let Syncthing use its default folder for its database, which is &lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Local\Syncthing&lt;/code&gt;. It will also create a registry key at &lt;code&gt;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\SyncTrayzor&lt;/code&gt; the first time that it is run, which will let it start when you log in.&lt;/p&gt; 
&lt;p&gt;You can delete this registry key by unchecking &quot;Automatically start on login&quot; in the settings.&lt;/p&gt; 
&lt;p&gt;You can set a custom home path for Syncthing in the settings if you wish (Settings -&amp;gt; Syncthing -&amp;gt; Advanced -&amp;gt; Syncthing Custom Home Path). This is useful if you want to keep the copy of Syncthing managed by SyncTrayzor separate from another copy running on your machine.&lt;/p&gt; 
&lt;p&gt;The auto-update mechanism may download updates to &lt;code&gt;%TEMP%\SyncTrayzor&lt;/code&gt;. This location is periodically cleared out.&lt;/p&gt; 
&lt;h3&gt;Portable&lt;/h3&gt; 
&lt;p&gt;SyncTrayzor Portable will put its own configuration in &lt;code&gt;SyncTrayzorPortable\data&lt;/code&gt;, and tell Syncthing to use &lt;code&gt;SyncTrayzorPortable\data\syncthing&lt;/code&gt; for its database. This means that, when manually upgrading, you can simply move the &#39;data&#39; folder over to move all your settings and database.&lt;/p&gt; 
&lt;p&gt;The portable version won&#39;t start on login by default. If you check &quot;Automatically start on login&quot; in the settings, then a registry key will be created at &lt;code&gt;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\SyncTrayzor&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The auto-update mechanism may download updates to &lt;code&gt;%TEMP%\SyncTrayzor&lt;/code&gt;. This location is periodically cleared out.&lt;/p&gt; 
&lt;h2&gt;Migrating between &quot;raw&quot; Syncthing, Portable, and Installed SyncTrayzor&lt;/h2&gt; 
&lt;p&gt;Here&#39;s a handy table of what you need to copy where if you&#39;re migrating between different combinations of &quot;raw&quot; Syncthing, SyncTrayzor Installed, and SyncTrayzor Portable.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;From&lt;/th&gt; 
   &lt;th&gt;To&lt;/th&gt; 
   &lt;th&gt;Actions&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&quot;raw&quot; Syncthing&lt;/td&gt; 
   &lt;td&gt;SyncTrayzor Installed&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&quot;raw&quot; Syncthing&lt;/td&gt; 
   &lt;td&gt;SyncTrayzor Portable&lt;/td&gt; 
   &lt;td&gt;Copy the contents of &lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Local\Syncthing&lt;/code&gt; into the &lt;code&gt;data\syncthing&lt;/code&gt; folder inside the portable directory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SyncTrayzor Installed&lt;/td&gt; 
   &lt;td&gt;&quot;raw&quot; Syncthing&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SyncTrayzor Installed&lt;/td&gt; 
   &lt;td&gt;SyncTrayzor Portable&lt;/td&gt; 
   &lt;td&gt;
    &lt;ol&gt;
     &lt;li&gt;Copy the contents of &lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Local\Syncthing&lt;/code&gt; into the &lt;code&gt;data\syncthing&lt;/code&gt; folder inside the portable directory&lt;/li&gt;
     &lt;li&gt;Copy &lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Roaming\SyncTrayzor\config.xml&lt;/code&gt; to &lt;code&gt;data\config.xml&lt;/code&gt;&lt;/li&gt;
    &lt;/ol&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SyncTrayzor Portable&lt;/td&gt; 
   &lt;td&gt;&quot;raw&quot; Syncthing&lt;/td&gt; 
   &lt;td&gt;Copy the contents of the &lt;code&gt;data\syncthing\&lt;/code&gt; folder inside the portable directly into &lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Local\Syncthing&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SyncTrayzor Portable&lt;/td&gt; 
   &lt;td&gt;SyncTrayzor Installed&lt;/td&gt; 
   &lt;td&gt;
    &lt;ol&gt;
     &lt;li&gt;Copy the contents of the &lt;code&gt;data\syncthing&lt;/code&gt; folder inside the portable directory into &lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Local\Syncthing&lt;/code&gt;&lt;/li&gt;
     &lt;li&gt;Copy &lt;code&gt;data\config.xml&lt;/code&gt; to &lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Roaming\SyncTrayzor\config.xml&lt;/code&gt;&lt;/li&gt;
    &lt;/ol&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Backups&lt;/h2&gt; 
&lt;p&gt;For the installed version of SyncTrayzor, in order to save your configuration (both Syncthing&#39;s and SyncTrayzor&#39;s), you will need to backup the following paths:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Roaming\SyncTrayzor&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Local\Syncthing&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using Syncthing beta releases&lt;/h2&gt; 
&lt;h3&gt;Installed&lt;/h3&gt; 
&lt;p&gt;SyncTrayzor keeps two copies of syncthing.exe.&lt;/p&gt; 
&lt;p&gt;The copy that is executed is at &lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Roaming\SyncTrayzor\syncthing.exe&lt;/code&gt;. This one is writable by the user, allowing Syncthing to auto-upgrade.&lt;/p&gt; 
&lt;p&gt;There&#39;s also a backup copy in SyncTrayzors main install directory. This one is copied to &lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Roaming\SyncTrayzor\syncthing.exe&lt;/code&gt; if that one does not exist (SyncTrayzor has never been run before for that user, for example). SyncTrayzor will attempt to upgrade this version when copying it.&lt;/p&gt; 
&lt;p&gt;If you want to manually upgrade (e.g. to a beta version) you should download Syncthing from &lt;a href=&quot;https://github.com/syncthing/syncthing/releases&quot;&gt;the releases page&lt;/a&gt;, and replace the &lt;code&gt;syncthing.exe&lt;/code&gt; in &lt;code&gt;C:\Users\&amp;lt;You&amp;gt;\AppData\Roaming\SyncTrayzor&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Portable&lt;/h3&gt; 
&lt;p&gt;SyncTrayzor keeps two copies of syncthing.exe.&lt;/p&gt; 
&lt;p&gt;There&#39;s a copy in &lt;code&gt;data\syncthing.exe&lt;/code&gt;, which is the one which is run. There&#39;s also a copy next to &lt;code&gt;SyncTrayzor.exe&lt;/code&gt;, which is used if the one in &lt;code&gt;data\&lt;/code&gt; is missing.&lt;/p&gt; 
&lt;p&gt;If you want to manually upgrade (e.g. to a beta version) you should download Syncthing from &lt;a href=&quot;https://github.com/syncthing/syncthing/releases&quot;&gt;the releases page&lt;/a&gt;, and replace the one at &lt;code&gt;data\syncthing.exe&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Building from Source&lt;/h2&gt; 
&lt;p&gt;You&#39;ll need the &lt;a href=&quot;https://aka.ms/vs/17/release/vc_redist.x64.exe&quot;&gt;VC++ redist&lt;/a&gt; (2022+ release) installed. Most Windows machines have it already. Next, you need to install the &lt;a href=&quot;https://dotnet.microsoft.com/en-us/download&quot;&gt;.NET SDK&lt;/a&gt;, currently 8.0 LTS. Some IDEs, like Visual Studio Code or JetBrains Rider can also help you in setting this up.&lt;/p&gt; 
&lt;p&gt;Clone/download the repository, open &lt;code&gt;src\SyncTrayzor.sln&lt;/code&gt; in your IDE, and compile. If you&#39;ve compiled .NET programs before, this should be familiar.&lt;/p&gt; 
&lt;p&gt;You&#39;ll also need to &lt;a href=&quot;https://github.com/syncthing/syncthing/releases&quot;&gt;download syncthing.exe&lt;/a&gt; and place it in the binary output folder as appropriate (SyncTrayzor will guide you to the exact location in an error message, if required).&lt;/p&gt; 
&lt;h2&gt;Notes for System Administrators&lt;/h2&gt; 
&lt;p&gt;The installer is built using Inno Setup, and has various command-line options, &lt;a href=&quot;http://www.jrsoftware.org/ishelp/index.php?topic=setupcmdline&quot;&gt;documented here&lt;/a&gt;. If you pass the &lt;code&gt;/silent&lt;/code&gt; command-line flag when SyncTrayzor won&#39;t be launched when the installer completes: add &lt;code&gt;/StartSyncTrayzor&lt;/code&gt; to override this (which also causes SyncTrayzor to be launched minimized).&lt;/p&gt; 
&lt;p&gt;There are various parameters inside the file &lt;code&gt;SyncTrayzor.exe.config&lt;/code&gt; which can be customised by system administrators, including the default SyncTrayzor configuration (used to create the user&#39;s SyncTrayzor config file when SyncTrayzor is first launched). To override these, pass the flag &lt;code&gt;/SyncTrayzorExeConfig=&quot;Path\To\Customized\SyncTrayzor.exe.config&quot;&lt;/code&gt; to the installer -- the specified &lt;code&gt;SyncTrayzor.exe.config&lt;/code&gt; will overwrite the default.&lt;/p&gt; 
&lt;p&gt;Note that the contents / structure of &lt;code&gt;SyncTrayzor.exe.config&lt;/code&gt; may change between releases. Using the wrong version may cause a crash, or incorrect behaviour.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/eShop</title>
      <link>https://github.com/dotnet/eShop</link>
      <description>&lt;p&gt;A reference .NET application implementing an eCommerce site&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;eShop Reference Application - &quot;AdventureWorks&quot;&lt;/h1&gt; 
&lt;p&gt;A reference .NET application implementing an e-commerce website using a services-based architecture using &lt;a href=&quot;https://learn.microsoft.com/dotnet/aspire/&quot;&gt;.NET Aspire&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotnet/eShop/main/img/eshop_architecture.png&quot; alt=&quot;eShop Reference Application architecture diagram&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/dotnet/eShop/main/img/eshop_homepage.png&quot; alt=&quot;eShop homepage screenshot&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;This version of eShop is based on .NET 9.&lt;/p&gt; 
&lt;p&gt;Previous eShop versions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/dotnet/eShop/tree/release/8.0&quot;&gt;.NET 8&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clone the eShop repository: &lt;a href=&quot;https://github.com/dotnet/eshop&quot;&gt;https://github.com/dotnet/eshop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/install/&quot;&gt;Install &amp;amp; start Docker Desktop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Windows with Visual Studio&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href=&quot;https://visualstudio.microsoft.com/vs/&quot;&gt;Visual Studio 2022 version 17.10 or newer&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Select the following workloads: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;ASP.NET and web development&lt;/code&gt; workload.&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;.NET Aspire SDK&lt;/code&gt; component in &lt;code&gt;Individual components&lt;/code&gt;.&lt;/li&gt; 
     &lt;li&gt;Optional: &lt;code&gt;.NET Multi-platform App UI development&lt;/code&gt; to run client apps&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run the following commands in a Powershell &amp;amp; Terminal running as &lt;code&gt;Administrator&lt;/code&gt; to automatically configure your environment with the required tools to build and run this application. (Note: A restart is required and included in the script below.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;install-Module -Name Microsoft.WinGet.Configuration -AllowPrerelease -AcceptLicense -Force
$env:Path = [System.Environment]::GetEnvironmentVariable(&quot;Path&quot;,&quot;Machine&quot;) + &quot;;&quot; + [System.Environment]::GetEnvironmentVariable(&quot;Path&quot;,&quot;User&quot;)
get-WinGetConfiguration -file .\.configurations\vside.dsc.yaml | Invoke-WinGetConfiguration -AcceptConfigurationAgreements
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;From Dev Home go to &lt;code&gt;Machine Configuration -&amp;gt; Clone repositories&lt;/code&gt;. Enter the URL for this repository. In the confirmation screen look for the section &lt;code&gt;Configuration File Detected&lt;/code&gt; and click &lt;code&gt;Run File&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Mac, Linux, &amp;amp; Windows without Visual Studio&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the latest &lt;a href=&quot;https://dot.net/download?cid=eshop&quot;&gt;.NET 9 SDK&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run the following commands in a Powershell &amp;amp; Terminal running as &lt;code&gt;Administrator&lt;/code&gt; to automatically configuration your environment with the required tools to build and run this application. (Note: A restart is required after running the script below.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Install Visual Studio Code and related extensions&lt;/h5&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;install-Module -Name Microsoft.WinGet.Configuration -AllowPrerelease -AcceptLicense  -Force
$env:Path = [System.Environment]::GetEnvironmentVariable(&quot;Path&quot;,&quot;Machine&quot;) + &quot;;&quot; + [System.Environment]::GetEnvironmentVariable(&quot;Path&quot;,&quot;User&quot;)
get-WinGetConfiguration -file .\.configurations\vscode.dsc.yaml | Invoke-WinGetConfiguration -AcceptConfigurationAgreements
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: These commands may require &lt;code&gt;sudo&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Optional: Install &lt;a href=&quot;https://code.visualstudio.com/docs/csharp/get-started&quot;&gt;Visual Studio Code with C# Dev Kit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Optional: Install &lt;a href=&quot;https://learn.microsoft.com/dotnet/maui/get-started/installation?tabs=visual-studio-code&quot;&gt;.NET MAUI Workload&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When running on Mac with Apple Silicon (M series processor), Rosetta 2 for grpc-tools.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Running the solution&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Remember to ensure that Docker is started&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;(Windows only) Run the application from Visual Studio:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open the &lt;code&gt;eShop.Web.slnf&lt;/code&gt; file in Visual Studio&lt;/li&gt; 
 &lt;li&gt;Ensure that &lt;code&gt;eShop.AppHost.csproj&lt;/code&gt; is your startup project&lt;/li&gt; 
 &lt;li&gt;Hit Ctrl-F5 to launch Aspire&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or run the application from your terminal:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;dotnet run --project src/eShop.AppHost/eShop.AppHost.csproj
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then look for lines like this in the console output in order to find the URL to open the Aspire dashboard:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;Login to the dashboard at: http://localhost:19888/login?t=uniquelogincodeforyou
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may need to install ASP.NET Core HTTPS development certificates first, and then close all browser tabs. Learn more at &lt;a href=&quot;https://aka.ms/aspnet/https-trust-dev-cert&quot;&gt;https://aka.ms/aspnet/https-trust-dev-cert&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Azure Open AI&lt;/h3&gt; 
&lt;p&gt;When using Azure OpenAI, inside &lt;em&gt;eShop.AppHost/appsettings.json&lt;/em&gt;, add the following section:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;  &quot;ConnectionStrings&quot;: {
    &quot;OpenAi&quot;: &quot;Endpoint=xxx;Key=xxx;&quot;
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace the values with your own. Then, in the eShop.AppHost &lt;em&gt;Program.cs&lt;/em&gt;, set this value to &lt;strong&gt;true&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;bool useOpenAI = false;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here&#39;s additional guidance on the &lt;a href=&quot;https://learn.microsoft.com/dotnet/aspire/azureai/azureai-openai-component?tabs=dotnet-cli&quot;&gt;.NET Aspire OpenAI component&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Use Azure Developer CLI&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;a href=&quot;https://aka.ms/azd&quot;&gt;Azure Developer CLI&lt;/a&gt; to run this project on Azure with only a few commands. Follow the next instructions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the latest or update to the latest &lt;a href=&quot;https://aka.ms/azure-dev/install&quot;&gt;Azure Developer CLI (azd)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Log in &lt;code&gt;azd&lt;/code&gt; (if you haven&#39;t done it before) to your Azure account:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;azd auth login
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Initialize &lt;code&gt;azd&lt;/code&gt; from the root of the repo.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;azd init
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;During init:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Select &lt;code&gt;Use code in the current directory&lt;/code&gt;. Azd will automatically detect the .NET Aspire project.&lt;/li&gt; 
   &lt;li&gt;Confirm &lt;code&gt;.NET (Aspire)&lt;/code&gt; and continue.&lt;/li&gt; 
   &lt;li&gt;Select which services to expose to the Internet (exposing &lt;code&gt;webapp&lt;/code&gt; is enough to test the sample).&lt;/li&gt; 
   &lt;li&gt;Finalize the initialization by giving a name to your environment.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create Azure resources and deploy the sample by running:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;azd up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The operation takes a few minutes the first time it is ever run for an environment.&lt;/li&gt; 
 &lt;li&gt;At the end of the process, &lt;code&gt;azd&lt;/code&gt; will display the &lt;code&gt;url&lt;/code&gt; for the webapp. Follow that link to test the sample.&lt;/li&gt; 
 &lt;li&gt;You can run &lt;code&gt;azd up&lt;/code&gt; after saving changes to the sample to re-deploy and update the sample.&lt;/li&gt; 
 &lt;li&gt;Report any issues to &lt;a href=&quot;https://github.com/Azure/azure-dev/issues&quot;&gt;azure-dev&lt;/a&gt; repo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/azure/developer/azure-developer-cli/troubleshoot?tabs=Browser&quot;&gt;FAQ and troubleshoot&lt;/a&gt; for azd.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;For more information on contributing to this repo, read &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/eShop/main/CONTRIBUTING.md&quot;&gt;the contribution documentation&lt;/a&gt; and &lt;a href=&quot;https://raw.githubusercontent.com/dotnet/eShop/main/CODE-OF-CONDUCT.md&quot;&gt;the Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sample data&lt;/h3&gt; 
&lt;p&gt;The sample catalog data is defined in &lt;a href=&quot;https://github.com/dotnet/eShop/raw/main/src/Catalog.API/Setup/catalog.json&quot;&gt;catalog.json&lt;/a&gt;. Those product names, descriptions, and brand names are fictional and were generated using &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/chatgpt&quot;&gt;GPT-35-Turbo&lt;/a&gt;, and the corresponding &lt;a href=&quot;https://github.com/dotnet/eShop/tree/main/src/Catalog.API/Pics&quot;&gt;product images&lt;/a&gt; were generated using &lt;a href=&quot;https://openai.com/dall-e-3&quot;&gt;DALL·E 3&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;eShop on Azure&lt;/h2&gt; 
&lt;p&gt;For a version of this app configured for deployment on Azure, please view &lt;a href=&quot;https://github.com/Azure-Samples/eShopOnAzure&quot;&gt;the eShop on Azure&lt;/a&gt; repo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TechnitiumSoftware/DnsServer</title>
      <link>https://github.com/TechnitiumSoftware/DnsServer</link>
      <description>&lt;p&gt;Technitium DNS Server&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://technitium.com/dns/&quot;&gt; &lt;img src=&quot;https://technitium.com/img/logo.png&quot; alt=&quot;Technitium DNS Server&quot; /&gt;&lt;br /&gt; &lt;b&gt;Technitium DNS Server&lt;/b&gt; &lt;/a&gt;&lt;br /&gt; &lt;br /&gt; &lt;b&gt;Self host a DNS server for privacy &amp;amp; security&lt;/b&gt;&lt;br /&gt; &lt;b&gt;Block ads &amp;amp; malware at DNS level for your entire network!&lt;/b&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://technitium.com/dns/ScreenShot1.png&quot; alt=&quot;Technitium DNS Server&quot; /&gt; &lt;/p&gt; 
&lt;p&gt;Technitium DNS Server is an open source authoritative as well as recursive DNS server that can be used for self hosting a DNS server for privacy &amp;amp; security. It works out-of-the-box with no or minimal configuration and provides a user friendly web console accessible using any modern web browser.&lt;/p&gt; 
&lt;p&gt;Nobody really bothers about domain name resolution since it works automatically behind the scenes and is complex to understand. Most computer software use the operating system&#39;s DNS resolver that usually query the configured ISP&#39;s DNS server using UDP protocol. This way works well for most people but, your ISP can see and control what website you can visit even when the website employ HTTPS security. Not only that, some ISPs can redirect, block or inject content into websites you visit even when you use a different DNS provider like Google DNS or Cloudflare DNS. Having Technitium DNS Server configured to use &lt;a href=&quot;https://en.wikipedia.org/wiki/DNS_over_TLS&quot;&gt;DNS-over-TLS&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/DNS_over_HTTPS&quot;&gt;DNS-over-HTTPS&lt;/a&gt;, or &lt;a href=&quot;https://www.ietf.org/rfc/rfc9250.html&quot;&gt;DNS-over-QUIC&lt;/a&gt; forwarders, these privacy &amp;amp; security issues can be mitigated very effectively.&lt;/p&gt; 
&lt;p&gt;Be it a home network or an organization&#39;s network, having a locally running DNS server gives you more insights into your network and helps to understand it better using the DNS logs and stats. It improves overall performance since most queries are served from the DNS cache making web sites load faster by not having to wait for frequent DNS resolutions. It also gives you an additional control over your network allowing you to block domain names network wide and also allows you to route your DNS traffic securely using encrypted DNS protocols.&lt;/p&gt; 
&lt;h1&gt;Sponsored By&lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://althatech.com/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://technitium.com/img/logo-althatech.png&quot; width=&quot;250&quot; alt=&quot;Altha Technology - Censorship Resistant Data Services&quot; title=&quot;Altha Technology - Censorship Resistant Data Services&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://www.bartellhotels.com/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://technitium.com/img/logo-bartell-hotels.png&quot; width=&quot;300&quot; alt=&quot;Bartell Hotels - San Diego&#39;s Unforgettable Locations&quot; title=&quot;Bartell Hotels - San Diego&#39;s Unforgettable Locations&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.wavspeed.com/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://technitium.com/img/logo-wavspeed.png&quot; width=&quot;350&quot; alt=&quot;Technology Investors and Integrators | WavSpeed Inc | Texas&quot; title=&quot;Technology Investors and Integrators | WavSpeed Inc | Texas&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Works on Windows, Linux, macOS and Raspberry Pi.&lt;/li&gt; 
 &lt;li&gt;Docker image available on &lt;a href=&quot;https://hub.docker.com/r/technitium/dns-server&quot;&gt;Docker Hub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Installs in just a minute and works out-of-the-box with zero configuration.&lt;/li&gt; 
 &lt;li&gt;Block ads &amp;amp; malware using one or more block list URLs.&lt;/li&gt; 
 &lt;li&gt;Supports working as an authoritative as well as a recursive DNS server.&lt;/li&gt; 
 &lt;li&gt;High performance DNS server based on async IO that can serve millions of requests per minute even on a commodity desktop PC hardware (load tested on Intel i7-8700 CPU with more than 100,000 request/second over Gigabit Ethernet).&lt;/li&gt; 
 &lt;li&gt;Self host &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7858.html&quot;&gt;DNS-over-TLS&lt;/a&gt;, &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc8484.html&quot;&gt;DNS-over-HTTPS&lt;/a&gt;, and &lt;a href=&quot;https://www.ietf.org/rfc/rfc9250.html&quot;&gt;DNS-over-QUIC&lt;/a&gt; DNS services on your network.&lt;/li&gt; 
 &lt;li&gt;DNS-over-HTTPS implementation supports HTTP/1.1, HTTP/2, and HTTP/3 transport protocols.&lt;/li&gt; 
 &lt;li&gt;Supports DNS over &lt;a href=&quot;https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt&quot;&gt;PROXY protocol&lt;/a&gt; version 1 and 2 for both UDP and TCP transports.&lt;/li&gt; 
 &lt;li&gt;Use public DNS resolvers like Cloudflare, Google, Quad9, and AdGuard with &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7858.html&quot;&gt;DNS-over-TLS&lt;/a&gt;, &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc8484.html&quot;&gt;DNS-over-HTTPS&lt;/a&gt;, or &lt;a href=&quot;https://www.ietf.org/rfc/rfc9250.html&quot;&gt;DNS-over-QUIC&lt;/a&gt; protocols as forwarders.&lt;/li&gt; 
 &lt;li&gt;Support for latency based name server selection algorithm that works with concurrency feature for both recursive resolution and forwarders.&lt;/li&gt; 
 &lt;li&gt;Advanced caching with features like serve stale, prefetching and auto prefetching.&lt;/li&gt; 
 &lt;li&gt;Persistent caching feature that saves cache to disk when DNS server restarts.&lt;/li&gt; 
 &lt;li&gt;DNS rebinding attack protection feature available with DNS Rebinding Protection App.&lt;/li&gt; 
 &lt;li&gt;DNSSEC validation support with RSA, ECDSA &amp;amp; EdDSA algorithms for recursive resolver, forwarders, and conditional forwarders with NSEC and NSEC3 support.&lt;/li&gt; 
 &lt;li&gt;DNSSEC support for all supported DNS transport protocols including encrypted DNS protocols.&lt;/li&gt; 
 &lt;li&gt;DANE TLSA &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6698&quot;&gt;RFC 6698&lt;/a&gt; record type support. This includes support for automatically generating the hash values using certificates in PEM format.&lt;/li&gt; 
 &lt;li&gt;SVCB &amp;amp; HTTPS &lt;a href=&quot;https://www.ietf.org/archive/id/draft-ietf-dnsop-svcb-https-12.html&quot;&gt;draft-ietf-dnsop-svcb-https&lt;/a&gt; record type support.&lt;/li&gt; 
 &lt;li&gt;URI &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7553.html&quot;&gt;RFC 7553&lt;/a&gt; record type support.&lt;/li&gt; 
 &lt;li&gt;SSHFP &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc4255.html&quot;&gt;RFC 4255&lt;/a&gt; record type support.&lt;/li&gt; 
 &lt;li&gt;CNAME cloaking feature to block domain names that resolve to CNAME which are blocked.&lt;/li&gt; 
 &lt;li&gt;QNAME minimization support in recursive resolver &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc9156.html&quot;&gt;RFC 9156&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;QNAME case randomization support for UDP transport protocol &lt;a href=&quot;https://datatracker.ietf.org/doc/html/draft-vixie-dnsext-dns0x20-00&quot;&gt;draft-vixie-dnsext-dns0x20-00&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;DNAME record &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6672&quot;&gt;RFC 6672&lt;/a&gt; support.&lt;/li&gt; 
 &lt;li&gt;ANAME proprietary record support to allow using CNAME like feature at zone apex (CNAME flattening). Supports multiple ANAME records at both zone apex and sub domains.&lt;/li&gt; 
 &lt;li&gt;APP proprietary record support that allows custom DNS Apps to directly handle DNS requests and return a custom DNS response based on any business logic.&lt;/li&gt; 
 &lt;li&gt;Support for features like Split Horizon and Geolocation based responses using DNS Apps feature.&lt;/li&gt; 
 &lt;li&gt;Support for REGEX based block lists with different block lists for different client IP addresses or subnet using Advanced Blocking DNS App.&lt;/li&gt; 
 &lt;li&gt;Primary, Secondary, Stub, and Conditional Forwarder zone support.&lt;/li&gt; 
 &lt;li&gt;Static stub zone support implemented in Conditional Forwarder zone to force a domain name to resolve via given name servers using NS records.&lt;/li&gt; 
 &lt;li&gt;Supports Catalog Zones &lt;a href=&quot;https://datatracker.ietf.org/doc/rfc9432/&quot;&gt;RFC 9432&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Supports record aging where the records with expiry set are automatically removed from the zone.&lt;/li&gt; 
 &lt;li&gt;Bulk conditional forwarding support using Advanced Forwarding DNS App.&lt;/li&gt; 
 &lt;li&gt;DNSSEC signed zones support with RSA, ECDSA &amp;amp; EdDSA algorithms.&lt;/li&gt; 
 &lt;li&gt;DNSSEC support for both NSEC and NSEC3.&lt;/li&gt; 
 &lt;li&gt;Zone transfer with AXFR and IXFR &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc1995.html&quot;&gt;RFC 1995&lt;/a&gt; and DNS NOTIFY &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc1996.html&quot;&gt;RFC 1996&lt;/a&gt; support.&lt;/li&gt; 
 &lt;li&gt;Zone transfer over TLS (XFR-over-TLS) &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc9103.html&quot;&gt;RFC 9103&lt;/a&gt; support.&lt;/li&gt; 
 &lt;li&gt;Zone transfer over QUIC (XFR-over-QUIC) &lt;a href=&quot;https://www.ietf.org/rfc/rfc9250.html&quot;&gt;RFC 9250&lt;/a&gt; support.&lt;/li&gt; 
 &lt;li&gt;Support for zone validation using ZONEMD records &lt;a href=&quot;https://datatracker.ietf.org/doc/rfc8976/&quot;&gt;RFC 8976&lt;/a&gt; for Secondary zones.&lt;/li&gt; 
 &lt;li&gt;Dynamic DNS Updates &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc2136&quot;&gt;RFC 2136&lt;/a&gt; support with security policy.&lt;/li&gt; 
 &lt;li&gt;Secret key transaction authentication (TSIG) &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc8945&quot;&gt;RFC 8945&lt;/a&gt; support for zone transfers.&lt;/li&gt; 
 &lt;li&gt;EDNS(0) &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6891&quot;&gt;RFC6891&lt;/a&gt; support.&lt;/li&gt; 
 &lt;li&gt;EDNS Client Subnet (ECS) &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7871&quot;&gt;RFC 7871&lt;/a&gt; support for recursive resolution and forwarding.&lt;/li&gt; 
 &lt;li&gt;Extended DNS Errors &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc8914&quot;&gt;RFC 8914&lt;/a&gt; support.&lt;/li&gt; 
 &lt;li&gt;DNS64 function &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc6147&quot;&gt;RFC 6147&lt;/a&gt; support for use by IPv6 only clients using the DNS64 App.&lt;/li&gt; 
 &lt;li&gt;Support to host DNSBL / RBL block lists &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc5782&quot;&gt;RFC 5782&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Multi-user role based access with non-expiring API token support.&lt;/li&gt; 
 &lt;li&gt;Self host your domain names on your own DNS server.&lt;/li&gt; 
 &lt;li&gt;Wildcard sub domain support.&lt;/li&gt; 
 &lt;li&gt;Enable/disable zones and records to allow testing with ease.&lt;/li&gt; 
 &lt;li&gt;Built-in DNS Client with option to import responses to local zone.&lt;/li&gt; 
 &lt;li&gt;Supports out-of-order DNS request processing for DNS-over-TCP and DNS-over-TLS protocols &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7766#section-7&quot;&gt;RFC 7766&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Built-in DHCP Server that can work for multiple networks.&lt;/li&gt; 
 &lt;li&gt;IPv6 support in DNS server core.&lt;/li&gt; 
 &lt;li&gt;HTTP &amp;amp; SOCKS5 proxy support which can be configured to route DNS over &lt;a href=&quot;https://www.torproject.org/&quot;&gt;Tor Network&lt;/a&gt; or use &lt;a href=&quot;https://blog.cloudflare.com/welcome-hidden-resolver/&quot;&gt;Cloudflare&#39;s hidden DNS resolver&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Web console portal for easy configuration using any web browser.&lt;/li&gt; 
 &lt;li&gt;Built in HTTP API to allow 3rd party apps to control and configure the DNS server.&lt;/li&gt; 
 &lt;li&gt;Built-in system logging and query logging.&lt;/li&gt; 
 &lt;li&gt;Open source cross-platform .NET 8 implementation hosted on &lt;a href=&quot;https://github.com/TechnitiumSoftware/DnsServer&quot;&gt;GitHub&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Planned Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clustering support to manage two or more DNS servers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;a href=&quot;https://download.technitium.com/dns/DnsServerSetup.zip&quot;&gt;Download setup installer&lt;/a&gt; for easy installation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux &amp;amp; Raspberry Pi&lt;/strong&gt;: Follow install instructions from &lt;a href=&quot;https://blog.technitium.com/2017/11/running-dns-server-on-ubuntu-linux.html&quot;&gt;this blog post&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-Platform&lt;/strong&gt;: &lt;a href=&quot;https://download.technitium.com/dns/DnsServerPortable.tar.gz&quot;&gt;Download portable app&lt;/a&gt; to run on any platform that has .NET 8 installed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Pull the official image from &lt;a href=&quot;https://hub.docker.com/r/technitium/dns-server&quot;&gt;Docker Hub&lt;/a&gt;. Use the &lt;a href=&quot;https://github.com/TechnitiumSoftware/DnsServer/raw/master/docker-compose.yml&quot;&gt;docker-compose.yml&lt;/a&gt; example to create a new container and edit it as required for your deployments. For more details and troubleshooting read the &lt;a href=&quot;https://blog.technitium.com/2017/11/running-dns-server-on-ubuntu-linux.html&quot;&gt;install instructions&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Build Instructions&lt;/h1&gt; 
&lt;p&gt;You can build the DNS server from source and install it manually by following the &lt;a href=&quot;https://github.com/TechnitiumSoftware/DnsServer/raw/master/build.md&quot;&gt;Build Instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Docker Environment Variables&lt;/h1&gt; 
&lt;p&gt;Technitium DNS Server supports environment variables to allow initializing the config when the DNS server starts for the first time. Read the &lt;a href=&quot;https://github.com/TechnitiumSoftware/DnsServer/raw/master/DockerEnvironmentVariables.md&quot;&gt;environment variable documentation&lt;/a&gt; for complete details.&lt;/p&gt; 
&lt;h1&gt;API Documentation&lt;/h1&gt; 
&lt;p&gt;The DNS server HTTP API allows any 3rd party app or script to configure the DNS server. The HTTP API is used by the web console and thus all the actions that the web console does can be performed via the API. Read the &lt;a href=&quot;https://github.com/TechnitiumSoftware/DnsServer/raw/master/APIDOCS.md&quot;&gt;HTTP API documentation&lt;/a&gt; for complete details.&lt;/p&gt; 
&lt;h1&gt;Help Topics&lt;/h1&gt; 
&lt;p&gt;Read the latest &lt;a href=&quot;https://go.technitium.com/?id=25&quot;&gt;online help topics&lt;/a&gt; which contains the DNS Server user manual and covers frequently asked questions.&lt;/p&gt; 
&lt;h1&gt;Support&lt;/h1&gt; 
&lt;p&gt;For support, send an email to &lt;a href=&quot;mailto:support@technitium.com&quot;&gt;support@technitium.com&lt;/a&gt;. For any issues, feedback, or feature request, create an issue on &lt;a href=&quot;https://github.com/TechnitiumSoftware/DnsServer/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Join &lt;a href=&quot;https://www.reddit.com/r/technitium/&quot;&gt;/r/technitium&lt;/a&gt; on Reddit.&lt;/p&gt; 
&lt;h1&gt;Donate&lt;/h1&gt; 
&lt;p&gt;Make contribution to Technitium and help making new software, updates, and features possible.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.patreon.com/technitium&quot;&gt;Donate Now!&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Blog Posts&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2024/10/how-to-configure-catalog-zones-for.html&quot;&gt;Technitium Blog: How To Configure Catalog Zones For Automatic Provisioning Of Secondary Zones&lt;/a&gt; (Oct 2024)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2024/09/technitium-dns-server-v13-released.html&quot;&gt;Technitium Blog: Technitium DNS Server v13 Released!&lt;/a&gt; (Sept 2024)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2024/02/technitium-dns-server-v12-released.html&quot;&gt;Technitium Blog: Technitium DNS Server v12 Released!&lt;/a&gt; (Feb 2024)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2023/05/for-dnssec-and-why-dane-is-needed.html&quot;&gt;Technitium Blog: For DNSSEC And Why DANE Is Needed&lt;/a&gt; (May 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2023/03/how-to-auto-renew-ssl-certificates-with.html&quot;&gt;Technitium Blog: How To Auto Renew SSL Certificates With Certbot Using DNS Challenge&lt;/a&gt; (Mar 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2023/02/configuring-dns-over-quic-and-https3.html&quot;&gt;Technitium Blog: Configuring DNS-over-QUIC and HTTPS/3 For Technitium DNS Server&lt;/a&gt; (Feb 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2023/02/technitium-dns-server-v11-released.html&quot;&gt;Technitium Blog: Technitium DNS Server v11 Released!&lt;/a&gt; (Feb 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2022/11/technitium-dns-server-v10-released.html&quot;&gt;Technitium Blog: Technitium DNS Server v10 Released!&lt;/a&gt; (Nov 2022)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2022/09/technitium-dns-server-v9-released.html&quot;&gt;Technitium Blog: Technitium DNS Server v9 Released!&lt;/a&gt; (Sept 2022)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2022/07/how-to-secure-your-domain-name-with-.html&quot;&gt;Technitium Blog: How To Secure Your Domain Name With DNSSEC&lt;/a&gt; (Jul 2022)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2022/06/how-to-self-host-your-own-domain-name.html&quot;&gt;Technitium Blog: How To Self Host Your Own Domain Name&lt;/a&gt; (Jun 2022)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2022/03/technitium-dns-server-v8-released.html&quot;&gt;Technitium Blog: Technitium DNS Server v8 Released!&lt;/a&gt; (Mar 2022)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2021/07/running-root-server-locally-on-your-dns.html&quot;&gt;Technitium Blog: Running A Root Server Locally On Your DNS Resolver&lt;/a&gt; (Jul 2021)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://romailler.ch/2021/04/15/misc-pihole_over_dot/&quot;&gt;Yolan Romailler: Being ad-free on Android without rooting&lt;/a&gt; (Apr 2021)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2021/03/creating-and-running-dns-apps-on.html&quot;&gt;Technitium Blog: Creating And Running DNS Apps On Technitium DNS Server&lt;/a&gt; (Mar 2021)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2020/07/how-to-host-your-own-dns-over-https-and.html&quot;&gt;Technitium Blog: How To Host Your Own DNS-over-HTTPS And DNS-over-TLS Services&lt;/a&gt; (Oct 2020)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2020/07/how-to-disable-firefox-dns-over-https.html&quot;&gt;Technitium Blog: How To Disable Firefox DNS-over-HTTPS On Your Network&lt;/a&gt; (Jul 2020)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2020/07/how-to-enforce-google-safe-search-and.html&quot;&gt;Technitium Blog: How To Enforce Google Safe Search And YouTube Restricted Mode On Your Network&lt;/a&gt; (Jul 2020)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2020/07/technitium-dns-server-v5-released.html&quot;&gt;Technitium Blog: Technitium DNS Server v5 Released!&lt;/a&gt; (Jul 2020)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.toptal.com/web/encrypted-safe-with-esni-doh-dot&quot;&gt;Brian Wojtczak: Keep It Encrypted, Keep It Safe: Working with ESNI, DoH, and DoT&lt;/a&gt; (Jan 2020)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://iwantmore.pizza/posts/dnscat2-over-doh.html&quot;&gt;phra&#39;s blog: Exfiltrate Like a Pro: Using DNS over HTTPS as a C2 Channel&lt;/a&gt; (Aug 2019)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.hanselman.com/blog/ExploringDNSWithTheNETCoreBasedTechnitiumDNSServer.aspx&quot;&gt;Scott Hanselman: Exploring DNS with the .NET Core based Technitium DNS Server&lt;/a&gt; (Apr 2019)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2019/01/turn-raspberry-pi-into-network-wide-dns.html&quot;&gt;Technitium Blog: Turn Raspberry Pi Into Network Wide DNS Server&lt;/a&gt; (Jan 2019)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2018/10/blocking-internet-ads-using-dns-sinkhole.html&quot;&gt;Technitium Blog: Blocking Internet Ads Using DNS Sinkhole&lt;/a&gt; (Oct 2018)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2018/06/configuring-dns-server-for-privacy.html&quot;&gt;Technitium Blog: Configuring DNS Server For Privacy &amp;amp; Security&lt;/a&gt; (Jun 2018)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2018/06/technitium-dns-server-v13-released.html&quot;&gt;Technitium Blog: Technitium DNS Server v1.3 Released!&lt;/a&gt; (Jun 2018)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2017/11/running-dns-server-on-ubuntu-linux.html&quot;&gt;Technitium Blog: Running Technitium DNS Server on Ubuntu Linux&lt;/a&gt; (Nov 2017)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.technitium.com/2017/11/technitium-dns-server-released.html&quot;&gt;Technitium Blog: Technitium DNS Server Released!&lt;/a&gt; (Nov 2017)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LibreHardwareMonitor/LibreHardwareMonitor</title>
      <link>https://github.com/LibreHardwareMonitor/LibreHardwareMonitor</link>
      <description>&lt;p&gt;Libre Hardware Monitor is free software that can monitor the temperature sensors, fan speeds, voltages, load and clock speeds of your computer.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LibreHardwareMonitor&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/raw/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/LibreHardwareMonitor/LibreHardwareMonitor&quot; alt=&quot;GitHub license&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/LibreHardwareMonitorLib/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/LibreHardwareMonitorLib&quot; alt=&quot;Nuget&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/LibreHardwareMonitorLib/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/LibreHardwareMonitorLib?label=nuget-pre&quot; alt=&quot;Nuget (with prereleases)&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/LibreHardwareMonitorLib/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/dt/LibreHardwareMonitorLib?label=nuget-downloads&quot; alt=&quot;Nuget&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Libre Hardware Monitor, a fork of Open Hardware Monitor, is free software that can monitor the temperature sensors, fan speeds, voltages, load and clock speeds of your computer.&lt;/p&gt; 
&lt;h2&gt;What&#39;s included?&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;.NET&lt;/th&gt; 
   &lt;th&gt;Build Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LibreHardwareMonitor&lt;/strong&gt; &lt;br /&gt; Windows Forms based application that presents all data in a graphical interface&lt;/td&gt; 
   &lt;td&gt;.NET Framework 4.7.2&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/actions&quot;&gt;&lt;img src=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LibreHardwareMonitorLib&lt;/strong&gt; &lt;br /&gt; Library that allows you to use all features in your own application&lt;/td&gt; 
   &lt;td&gt;.NET Framework 4.7.2, .NET 8.0, and .NET 9.0&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/actions&quot;&gt;&lt;img src=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/workflows/CI/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;What can it do?&lt;/h2&gt; 
&lt;p&gt;You can read information from devices such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Motherboards&lt;/li&gt; 
 &lt;li&gt;Intel and AMD processors&lt;/li&gt; 
 &lt;li&gt;NVIDIA and AMD graphics cards&lt;/li&gt; 
 &lt;li&gt;HDD, SSD and NVMe hard drives&lt;/li&gt; 
 &lt;li&gt;Network cards&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Where can I download it?&lt;/h2&gt; 
&lt;p&gt;You can download the latest release &lt;a href=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/releases&quot;&gt;here&lt;/a&gt;. You can also install it using WinGet:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;winget install LibreHardwareMonitor.LibreHardwareMonitor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nightly builds&lt;/h3&gt; 
&lt;p&gt;If you have a &lt;strong&gt;GitHub&lt;/strong&gt; account, you can download nightly builds &lt;a href=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/actions&quot;&gt;here&lt;/a&gt;. Otherwise, you can download the &lt;em&gt;latest&lt;/em&gt; nightly build &lt;a href=&quot;https://nightly.link/LibreHardwareMonitor/LibreHardwareMonitor/workflows/master/master/LibreHardwareMonitor-net472.zip&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How can I help improve it?&lt;/h2&gt; 
&lt;p&gt;The LibreHardwareMonitor team welcomes feedback and contributions!&lt;br /&gt; You can check if it works properly on your motherboard. For many manufacturers, the way of reading data differs a bit, so if you notice any inaccuracies, please send us a pull request. If you have any suggestions or improvements, don&#39;t hesitate to create an issue.&lt;/p&gt; 
&lt;h2&gt;Developer information&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Integrate the library in own application&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add the &lt;a href=&quot;https://www.nuget.org/packages/LibreHardwareMonitorLib/&quot;&gt;LibreHardwareMonitorLib&lt;/a&gt; NuGet package to your application.&lt;/li&gt; 
 &lt;li&gt;Use the sample code below.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Sample code&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;public class UpdateVisitor : IVisitor
{
    public void VisitComputer(IComputer computer)
    {
        computer.Traverse(this);
    }
    public void VisitHardware(IHardware hardware)
    {
        hardware.Update();
        foreach (IHardware subHardware in hardware.SubHardware) subHardware.Accept(this);
    }
    public void VisitSensor(ISensor sensor) { }
    public void VisitParameter(IParameter parameter) { }
}

public void Monitor()
{
    Computer computer = new Computer
    {
        IsCpuEnabled = true,
        IsGpuEnabled = true,
        IsMemoryEnabled = true,
        IsMotherboardEnabled = true,
        IsControllerEnabled = true,
        IsNetworkEnabled = true,
        IsStorageEnabled = true
    };

    computer.Open();
    computer.Accept(new UpdateVisitor());

    foreach (IHardware hardware in computer.Hardware)
    {
        Console.WriteLine(&quot;Hardware: {0}&quot;, hardware.Name);
        
        foreach (IHardware subhardware in hardware.SubHardware)
        {
            Console.WriteLine(&quot;\tSubhardware: {0}&quot;, subhardware.Name);
            
            foreach (ISensor sensor in subhardware.Sensors)
            {
                Console.WriteLine(&quot;\t\tSensor: {0}, value: {1}&quot;, sensor.Name, sensor.Value);
            }
        }

        foreach (ISensor sensor in hardware.Sensors)
        {
            Console.WriteLine(&quot;\tSensor: {0}, value: {1}&quot;, sensor.Name, sensor.Value);
        }
    }
    
    computer.Close();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Administrator rights&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Some sensors require administrator privileges to access the data. Restart your IDE with admin privileges, or add an &lt;a href=&quot;https://learn.microsoft.com/en-us/windows/win32/sbscs/application-manifests&quot;&gt;app.manifest&lt;/a&gt; file to your project with requestedExecutionLevel on requireAdministrator.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;LibreHardwareMonitor is free and open source software licensed under MPL 2.0. Some parts of LibreHardwareMonitor are licensed under different terms, see &lt;a href=&quot;https://github.com/LibreHardwareMonitor/LibreHardwareMonitor/raw/master/THIRD-PARTY-NOTICES.txt&quot;&gt;THIRD-PARTY-LICENSES&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>files-community/Files</title>
      <link>https://github.com/files-community/Files</link>
      <description>&lt;p&gt;A modern file manager that helps users organize their files and folders.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Files hero image&quot; src=&quot;https://raw.githubusercontent.com/files-community/Files/main/assets/ReadmeHero.png&quot; /&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://files.community/&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Files-Website-F9B81F&quot; alt=&quot;Files Website&quot; /&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://github.com/files-community/Files/actions/workflows/ci.yml&quot;&gt; &lt;img src=&quot;https://github.com/files-community/Files/actions/workflows/ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Files CI Status&quot; /&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://crowdin.com/project/files-app&quot;&gt; &lt;img src=&quot;https://badges.crowdin.net/files-app/localized.svg?sanitize=true&quot; alt=&quot;Files Localization Status&quot; /&gt;&lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://discord.gg/files&quot;&gt; &lt;img src=&quot;https://img.shields.io/discord/725513575971684472?label=Discord&amp;amp;color=7289da&quot; alt=&quot;Files Discord&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Files is a modern file manager that helps users organize their files and folders. Our mission with Files is to build the best file manager for Windows, and we’re proud to be building it out in the open so everyone can participate. User feedback helps shape the features we work on, &amp;amp; the bug reports on GitHub help to make Files more reliable. Built and maintained by the open-source community, Files features robust multitasking experiences, file tags, deep integrations, and an intuitive design.&lt;/p&gt; 
&lt;h2&gt;Installing and running Files&lt;/h2&gt; 
&lt;p&gt;Files is a community-driven project that depends on your support to grow and improve. Please consider purchasing Files through the Microsoft Store or supporting us on GitHub if you use the classic installer.&lt;/p&gt; 
&lt;p&gt;You can also use the preview version alongside the stable release to get early access to new features and improvements.&lt;/p&gt; 
&lt;p align=&quot;left&quot;&gt; 
 &lt;!-- Store Badge --&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://apps.microsoft.com/detail/9NGHP3DX8HDX?launch=true&amp;amp;mode=full&quot;&gt; 
  &lt;picture&gt; 
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./assets/StoreBadge-dark.png&quot; height=&quot;80&quot; /&gt; 
   &lt;img src=&quot;https://raw.githubusercontent.com/files-community/Files/main/assets/StoreBadge-light.png&quot; height=&quot;80&quot; /&gt; 
  &lt;/picture&gt; &lt;/a&gt;   
 &lt;!-- Classic Installer Badge --&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://files.community/appinstallers/Files.stable.appinstaller&quot;&gt; 
  &lt;picture&gt; 
   &lt;source media=&quot;(prefers-color-scheme: light)&quot; srcset=&quot;./assets/ClassicInstallerBadge-dark.png&quot; height=&quot;80&quot; /&gt; 
   &lt;img src=&quot;https://raw.githubusercontent.com/files-community/Files/main/assets/ClassicInstallerBadge-light.png&quot; height=&quot;80&quot; /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;Instructions for building the source code can be found on our &lt;a href=&quot;https://files.community/docs/contributing/building-from-source&quot;&gt;documentation site&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Files&lt;/h2&gt; 
&lt;p&gt;Want to contribute to this project? Let us know with an &lt;a href=&quot;https://github.com/files-community/Files/issues&quot;&gt;issue&lt;/a&gt; that communicates your intent to create a &lt;a href=&quot;https://github.com/files-community/Files/pulls&quot;&gt;pull request&lt;/a&gt;. Also, view our &lt;a href=&quot;https://github.com/files-community/Files/raw/main/.github/CONTRIBUTING.md&quot;&gt;contributing guidelines&lt;/a&gt; to make sure you&#39;re up to date on the coding conventions.&lt;/p&gt; 
&lt;p&gt;Looking for a place to start? Check out the &lt;a href=&quot;https://github.com/orgs/files-community/projects/3/views/2&quot;&gt;task board&lt;/a&gt;, where you can sort tasks by size and priority.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/files-community/Files/main/assets/FilesScreenshot.png&quot; alt=&quot;Files&quot; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flow-Launcher/Flow.Launcher</title>
      <link>https://github.com/Flow-Launcher/Flow.Launcher</link>
      <description>&lt;p&gt;🔍 Quick file search &amp; app launcher for Windows with community-made plugins&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://flowlauncher.com&quot;&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207167068-2196d2a3-2caa-4856-958b-a780fbda95c6.gif&quot; width=&quot;500&quot; /&gt; &lt;/a&gt;&lt;br /&gt; &lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207168016-85d0dd16-1f3b-4d42-9d37-0e0d5a596ead.png&quot; width=&quot;400&quot; /&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://img.shields.io/maintenance/yes/3000&quot; /&gt; &lt;a href=&quot;https://crowdin.com/project/flow-launcher&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/flow-launcher/localized.svg?sanitize=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://ci.appveyor.com/project/JohnTheGr8/flow-launcher/branch/dev&quot;&gt;&lt;img src=&quot;https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva?svg=true&amp;amp;retina=true&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/Flow-Launcher/Flow.Launcher/total.svg?sanitize=true&quot; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;img src=&quot;https://img.shields.io/github/release-date/Flow-Launcher/Flow.Launcher&quot; /&gt; &lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/Flow-Launcher/Flow.Launcher&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://flowlauncher.com/docs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Documentation-7389D8&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.gg/AvgAQgh&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/727828229250875472?color=7389D8&amp;amp;labelColor=6A7EC2&amp;amp;label=Community&amp;amp;logo=discord&amp;amp;logoColor=white&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; A quick file search and app launcher for Windows with community-made plugins.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; Dedicated to making your work flow more seamless. Search everything from applications, files, bookmarks, YouTube, Twitter and more. Flow will continue to evolve, designed to be open and built with the community at heart.&lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;sub&gt;Remember to star it, flow will love you more :)&lt;/sub&gt;&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot; /&gt; 
&lt;h4 align=&quot;center&quot;&gt; &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#-getting-started&quot;&gt;Getting Started&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#-features&quot;&gt;Features&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#-plugins&quot;&gt;Plugins&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#%EF%B8%8F-hotkeys&quot;&gt;Hotkeys&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#sponsors&quot;&gt;Sponsors&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#-questionssuggestions&quot;&gt;Questions/Suggestions&lt;/a&gt; • &lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#development&quot;&gt;Development&lt;/a&gt; • &lt;a href=&quot;https://flowlauncher.com/docs&quot;&gt;Docs&lt;/a&gt; &lt;/h4&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot; /&gt; 
&lt;h2&gt;🚗 Getting Started&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/releases/latest/download/Flow-Launcher-Setup.exe&quot;&gt;Windows 10+ Installer&lt;/a&gt; or &lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/releases/latest/download/Flow-Launcher-Portable.zip&quot;&gt;Portable Version&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Winget&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;winget install &quot;Flow Launcher&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Scoop&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;scoop install Flow-Launcher
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Chocolatey&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;choco install Flow-Launcher
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;When installing for the first time Windows may raise an issue about security due to code not being signed, if you downloaded from this repo then you are good to continue the set up.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Or download the &lt;a href=&quot;https://github.com/Flow-Launcher/Prereleases/releases&quot;&gt;early access version&lt;/a&gt;.&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot; /&gt; 
&lt;h2&gt;🎁 Features&lt;/h2&gt; 
&lt;h3&gt;Applications &amp;amp; Files&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/145332614-74909973-f6eb-47c2-8235-289931e30718.png&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search for apps, files or file contents.&lt;/li&gt; 
 &lt;li&gt;Supports Everything and Windows Index.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/145018796-658b7c24-a34f-46b6-98d4-cf4f636d8b60.png&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support search using environment variable paths.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Web Searches &amp;amp; URLs&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144517502-5325de01-d0d9-4c2e-aafb-33c3f5d82f81.png&quot; width=&quot;400&quot; /&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144831031-0e01e8ea-3247-4ba4-a7b4-48b0db620bc1.png&quot; width=&quot;400&quot; /&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/222829602-aabb1144-db5c-4250-b5ae-66f8342e4ae4.png&quot; width=&quot;400&quot; /&gt; 
&lt;h3&gt;Browser Bookmarks&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207143428-e6406306-4f1e-4c24-917d-d2a333d5dc2b.png&quot; width=&quot;400&quot; /&gt; 
&lt;h3&gt;System Commands&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144517557-9b5b82fc-6408-48a0-af59-69b385a0782e.png&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provides system related commands. shutdown, lock, settings, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/Flow-Launcher/Flow.Launcher/dev/#system-command-list&quot;&gt;System command list&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Calculator&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207142449-7de0c30d-8d5b-4331-967e-f3e78c17ea93.png&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Do mathematical calculations and copy the result to clipboard.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Shell Command&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207142197-9e910147-96a9-466e-bbc4-b1163314ef59.png&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run batch and PowerShell commands as Administrator or a different user.&lt;/li&gt; 
 &lt;li&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt; to Run as Administrator.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Explorer&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207145376-fbb68ec2-93b9-4b0f-befe-0aeb792367a7.png&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Save file or folder locations for quick access.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Windows &amp;amp; Control Panel Settings&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207140658-52c1bea6-5b14-4db8-ae35-acc65e6bda85.png&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search for Windows &amp;amp; Control Panel settings.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Dialog Jump&lt;/h3&gt; 
&lt;img src=&quot;https://github.com/user-attachments/assets/046c00da-6e4e-4960-8424-b413852300ad&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search for a file/folder and quickly jump to its path in the Open/Save As dialog window.&lt;/li&gt; 
 &lt;li&gt;Use &lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;G&lt;/kbd&gt; to quickly jump the Open/Save As dialog window path to the path of the active file manager.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Drag &amp;amp; Drop&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207159486-1993510f-09f2-4e33-bba7-4ca59ca1bc5a.png&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Drag a file/folder to File Explorer, or even Discord.&lt;/li&gt; 
 &lt;li&gt;Copy/move behavior can be change via &lt;kbd&gt;Ctrl&lt;/kbd&gt; or &lt;kbd&gt;Shift&lt;/kbd&gt;, and the operation is displayed on the mouse cursor.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Priority&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144517677-857a2b0a-4b94-4be0-bc89-f35723ecddf9.png&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prioritise the order of each plugin&#39;s results.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Preview Panel&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207159213-662999d3-2c18-4256-b473-c417efca0069.png&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;kbd&gt;F1&lt;/kbd&gt; to toggle the preview panel.&lt;/li&gt; 
 &lt;li&gt;Media files will be displayed as large images, otherwise a large icon and full path will be displayed.&lt;/li&gt; 
 &lt;li&gt;Turn on preview permanently via Settings (Always Preview).&lt;/li&gt; 
 &lt;li&gt;Use &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;+&lt;/kbd&gt;/&lt;kbd&gt;-&lt;/kbd&gt; and &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;[&lt;/kbd&gt;/&lt;kbd&gt;]&lt;/kbd&gt; to adjust search window width and height quickly if the preview area is too narrow.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Customizations&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144693887-1b92ed16-dca1-4b7e-8644-5e9524cdfb31.gif&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Window size adjustment, animation, and sound&lt;/li&gt; 
 &lt;li&gt;Color Scheme (aka Dark Mode)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144527796-7c06ca31-d933-4f6b-9eb0-4fb06fa94384.png&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;There are various themes and you also can make your own.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Date &amp;amp; Time Display In Search Window&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207159348-8b0c7a2b-0836-4764-916b-e0236087f7f3.png&quot; width=&quot;400&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Display date and time in search window.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 Languages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports languages from Chinese to Italian and more.&lt;/li&gt; 
 &lt;li&gt;Supports Pinyin (拼音) search.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://crowdin.com/project/flow-launcher&quot;&gt;Crowdin&lt;/a&gt; support for language translations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Supported languages&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;English&lt;/li&gt; 
  &lt;li&gt;中文&lt;/li&gt; 
  &lt;li&gt;中文（繁体）&lt;/li&gt; 
  &lt;li&gt;Українська&lt;/li&gt; 
  &lt;li&gt;Русский&lt;/li&gt; 
  &lt;li&gt;Français&lt;/li&gt; 
  &lt;li&gt;日本語&lt;/li&gt; 
  &lt;li&gt;Dutch&lt;/li&gt; 
  &lt;li&gt;Polski&lt;/li&gt; 
  &lt;li&gt;Dansk&lt;/li&gt; 
  &lt;li&gt;de, Deutsch&lt;/li&gt; 
  &lt;li&gt;ko, 한국어&lt;/li&gt; 
  &lt;li&gt;Srpski&lt;/li&gt; 
  &lt;li&gt;Српски&lt;/li&gt; 
  &lt;li&gt;Português&lt;/li&gt; 
  &lt;li&gt;Português (Brasil)&lt;/li&gt; 
  &lt;li&gt;Spanish&lt;/li&gt; 
  &lt;li&gt;es-419, Spanish (Latin America)&lt;/li&gt; 
  &lt;li&gt;Italiano&lt;/li&gt; 
  &lt;li&gt;Norsk Bokmål&lt;/li&gt; 
  &lt;li&gt;Slovenčina&lt;/li&gt; 
  &lt;li&gt;Türkçe&lt;/li&gt; 
  &lt;li&gt;čeština&lt;/li&gt; 
  &lt;li&gt;اللغة العربية&lt;/li&gt; 
  &lt;li&gt;Tiếng Việt&lt;/li&gt; 
  &lt;li&gt;עברית&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Portable&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fully portable.&lt;/li&gt; 
 &lt;li&gt;Type &lt;code&gt;flow user data&lt;/code&gt; to open your saved user settings folder. They are located at: 
  &lt;ul&gt; 
   &lt;li&gt;If using roaming: &lt;code&gt;%APPDATA%\FlowLauncher&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;If using portable, by default: &lt;code&gt;%localappdata%\FlowLauncher\app-&amp;lt;VersionOfYourFlowLauncher&amp;gt;\UserData&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Type &lt;code&gt;open log location&lt;/code&gt; to open your logs folder, they are saved along with your user settings folder.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎮 Game Mode&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/207144711-0c5f8b2b-4b1b-44c8-b23e-c123f6b05146.png&quot; width=&quot;200&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pause hotkey activation when you are playing games.&lt;/li&gt; 
 &lt;li&gt;When in search window use &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;F12&lt;/kbd&gt; to toggle on/off.&lt;/li&gt; 
 &lt;li&gt;Type &lt;code&gt;Toggle Game Mode&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot; /&gt; 
&lt;h2&gt;📦 Plugins&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support wide range of plugins. Visit &lt;a href=&quot;https://www.flowlauncher.com/plugins/&quot;&gt;here&lt;/a&gt; for our plugin portfolio.&lt;/li&gt; 
 &lt;li&gt;Publish your own plugin to flow! Create plugins in:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://flowlauncher.com/docs/#/develop-dotnet-plugins&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/147870065-4096f233-147c-434e-a3ac-69519582605f.png&quot; width=&quot;64&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Flow-Launcher/plugin-samples/tree/master/HelloWorldFSharp&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/26427004/156536959-dfdc7be8-4b59-4587-9c6a-a297903e4ce1.png&quot; width=&quot;64&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.flowlauncher.com/docs/#/py-develop-plugins&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/147870066-7599eb15-0333-468e-82e8-4d432ceb5a45.png&quot; width=&quot;64&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://flowlauncher.com/docs/#/nodejs-develop-plugins&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/147870071-d67c736b-0748-428f-a283-14587696dfa3.png&quot; width=&quot;64&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://flowlauncher.com/docs/#/nodejs-develop-plugins&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/147870069-9bde6fe6-d50c-4d85-8fde-fe5ae921ab8c.png&quot; width=&quot;64&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/fow5040/Flow.Launcher.Plugin.SpotifyPremium&quot;&gt;SpotifyPremium&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533469-da920295-8c36-46e8-89eb-a9cdd94b74ef.png&quot; width=&quot;400&quot; /&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/Garulf/Steam-Search&quot;&gt;Steam Search&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533523-afd79dca-a444-40e5-b2d9-6d3fe3aaece1.png&quot; width=&quot;400&quot; /&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/liberize/Flow.Launcher.Plugin.ClipboardHistory&quot;&gt;Clipboard History&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533481-58e473fd-38d9-4604-861f-ad870770967d.png&quot; width=&quot;400&quot; /&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/Garulf/HA-Commander&quot;&gt;Home Assistant Commander&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533538-3caa2944-3037-4755-87b9-70fa918d2efa.png&quot; width=&quot;400&quot; /&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher.Plugin.Color&quot;&gt;Colors&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533487-2caff162-a8f6-4577-af3f-d1b05d423ee4.png&quot; width=&quot;400&quot; /&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/JohnTheGr8/Flow.Plugin.Github&quot;&gt;GitHub&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533497-8677f800-95c5-4758-8ca3-c96333ee1943.png&quot; width=&quot;400&quot; /&gt; 
&lt;h3&gt;&lt;a href=&quot;https://github.com/taooceros/Flow.Plugin.WindowWalker&quot;&gt;Window Walker&lt;/a&gt;&lt;/h3&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144533517-07bf011f-726c-4221-8657-0e442eca8a82.png&quot; width=&quot;400&quot; /&gt; 
&lt;p&gt;......and &lt;a href=&quot;https://flowlauncher.com/docs/#/plugins&quot;&gt;more!&lt;/a&gt;&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot; /&gt; 
&lt;h3&gt;🛒 Plugin Store&lt;/h3&gt; 
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Flow-Launcher/Flow.Launcher.PluginsManifest@plugin_api_v2/assets/plugin_store.png&quot; width=&quot;700&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;You can view the full plugin list or quickly install a plugin via the Plugin Store menu inside Settings&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;or type &lt;code&gt;pm&lt;/code&gt; &lt;code&gt;install&lt;/code&gt;/&lt;code&gt;uninstall&lt;/code&gt;/&lt;code&gt;update&lt;/code&gt; + the plugin name in the search window,&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot; /&gt; 
&lt;h2&gt;⌨️ Hotkeys&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Hotkey&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Space&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Open search window (default and configurable)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Enter&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Execute&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Open containing folder&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Run as admin&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;↑&lt;/kbd&gt;/&lt;kbd&gt;↓&lt;/kbd&gt;, &lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Tab&lt;/kbd&gt;/&lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Previous / Next result&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;←&lt;/kbd&gt;/&lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Back to result / Open Context Menu&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;O&lt;/kbd&gt; , &lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;Enter&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Open Context Menu&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Autocomplete&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;F1&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Toggle Preview Panel (default and configurable)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Esc&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Back to results / hide search window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Copy folder / file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Copy folder / file path&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;I&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Open Flow&#39;s settings&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;R&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Run the current query again (refresh results)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;F5&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Reload all plugin data&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;F12&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Toggle Game Mode when in search window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;+&lt;/kbd&gt;,&lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Adjust maximum results shown&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;[&lt;/kbd&gt;,&lt;kbd&gt;]&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Adjust search window width&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;H&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Open search history&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Backspace&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Back to previous directory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;/&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Previous / Next Page&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;System Command List&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Shutdown&lt;/td&gt; 
   &lt;td&gt;Shutdown computer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Restart&lt;/td&gt; 
   &lt;td&gt;Restart computer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Restart With Advanced Boot Options&lt;/td&gt; 
   &lt;td&gt;Restart the computer with Advanced Boot option for safe and debugging modes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Log Off/Sign Out&lt;/td&gt; 
   &lt;td&gt;Log off&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Lock&lt;/td&gt; 
   &lt;td&gt;Lock computer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sleep&lt;/td&gt; 
   &lt;td&gt;Put computer to sleep&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hibernate&lt;/td&gt; 
   &lt;td&gt;Hibernate computer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Empty Recycle Bin&lt;/td&gt; 
   &lt;td&gt;Empty recycle bin&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Open Recycle Bin&lt;/td&gt; 
   &lt;td&gt;Open recycle bin&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Exit&lt;/td&gt; 
   &lt;td&gt;Close Flow Launcher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Save Settings&lt;/td&gt; 
   &lt;td&gt;Save all Flow Launcher settings&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Restart Flow Launcher&lt;/td&gt; 
   &lt;td&gt;Restart Flow Launcher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Settings&lt;/td&gt; 
   &lt;td&gt;Tweak this app&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Reload Plugin Data&lt;/td&gt; 
   &lt;td&gt;Refreshes plugin data with new content&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Check For Update&lt;/td&gt; 
   &lt;td&gt;Check for new Flow Launcher update&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Open Log Location&lt;/td&gt; 
   &lt;td&gt;Open Flow Launcher&#39;s log location&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Index Option&lt;/td&gt; 
   &lt;td&gt;Open Windows Search Index window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Flow Launcher Tips&lt;/td&gt; 
   &lt;td&gt;Visit Flow Launcher&#39;s documentation for more help and how to use tips&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Flow Launcher UserData Folder&lt;/td&gt; 
   &lt;td&gt;Open the location where Flow Launcher&#39;s settings are stored&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Toggle Game Mode&lt;/td&gt; 
   &lt;td&gt;Toggle Game Mode&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Set Flow Launcher Theme&lt;/td&gt; 
   &lt;td&gt;Set the Flow Launcher Theme&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;💁‍♂️ Tips&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://flowlauncher.com/docs/#/usage-tips&quot;&gt;More tips&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot; /&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://coderabbit.ai/&quot;&gt; &lt;img src=&quot;https://github.com/Flow-Launcher/Flow.Launcher/assets/6903107/7c996d74-0c69-4011-922f-a95ca7e874b0&quot; width=&quot;30%&quot; alt=&quot;Coderabbit Logo&quot; /&gt; &lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href=&quot;https://github.com/TheBestPessimist&quot;&gt; &lt;img src=&quot;https://avatars.githubusercontent.com/u/4482210?v=4&quot; width=&quot;10%&quot; /&gt; &lt;/a&gt; &lt;a href=&quot;https://github.com/AjmalParkar006&quot;&gt; &lt;img src=&quot;https://avatars.githubusercontent.com/u/76547256?v=4&quot; width=&quot;10%&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://appwrite.io&quot;&gt; &lt;img src=&quot;https://appwrite.io/assets/logotype/white.svg?sanitize=true&quot; width=&quot;30%&quot; alt=&quot;Appwrite Logo&quot; /&gt; &lt;/a&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a href=&quot;https://github.com/itsonlyfrans&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46535667?v=4&quot; width=&quot;10%&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/atilford&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/13649625?v=4&quot; width=&quot;10%&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/andreqramos&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/49326063?v=4&quot; width=&quot;10%&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Yuba4&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/46278200?v=4&quot; width=&quot;10%&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Mavrik327&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/121626149?v=4&quot; width=&quot;10%&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/tikkatek&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/26571381?v=4&quot; width=&quot;10%&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/patrickdobler&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/16536946?v=4&quot; width=&quot;10%&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/benflap&quot;&gt;&lt;img src=&quot;https://avatars.githubusercontent.com/u/62034481?v=4&quot; width=&quot;10%&quot; /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Mentions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dev.to/appwrite/appwrite-loves-open-source-why-i-chose-to-support-flow-launcher-54pj&quot;&gt;Why I Chose to Support Flow-Launcher&lt;/a&gt; - Appwrite&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.softpedia.com/get/System/Launchers-Shutdown-Tools/Flow-Launcher.shtml&quot;&gt;Softpedia Editor&#39;s Pick&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot; /&gt; 
&lt;h2&gt;❔ Questions/Suggestions&lt;/h2&gt; 
&lt;p&gt;Yes please, let us know in the &lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/discussions/categories/q-a&quot;&gt;Q&amp;amp;A&lt;/a&gt; section. &lt;strong&gt;Join our community on &lt;a href=&quot;https://discord.gg/AvgAQgh&quot;&gt;Discord&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;img src=&quot;https://user-images.githubusercontent.com/6903107/144858082-8b654daf-60fb-4ee6-89b2-6183b73510d1.png&quot; width=&quot;100%&quot; /&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Localization&lt;/h3&gt; 
&lt;p&gt;Our project localization is based on &lt;a href=&quot;https://crowdin.com&quot;&gt;Crowdin&lt;/a&gt;. If you would like to change them, please go to &lt;a href=&quot;https://crowdin.com/project/flow-launcher&quot;&gt;https://crowdin.com/project/flow-launcher&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;New changes&lt;/h3&gt; 
&lt;p&gt;All changes to flow are captured via pull requests. Some new changes will have been merged but still pending release, this means whilst a change may not exist in the current release, it may very well have been accepted and merged into the dev branch and available as a pre-release download. It is therefore a good idea that before you start to make changes, search through the open and closed pull requests to make sure the change you intend to make is not already done.&lt;/p&gt; 
&lt;p&gt;Each of the pull requests will be marked with a milestone indicating the planned release version for the change.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Contributions are very welcome, in addition to the main project(C#) there are also &lt;a href=&quot;https://github.com/Flow-Launcher/docs&quot;&gt;documentation&lt;/a&gt;(md), &lt;a href=&quot;https://github.com/Flow-Launcher/flow-launcher.github.io&quot;&gt;website&lt;/a&gt;(html/css) and &lt;a href=&quot;https://github.com/Flow-Launcher&quot;&gt;others&lt;/a&gt; that can be contributed to. If you are unsure of a change you want to make, let us know in the &lt;a href=&quot;https://github.com/Flow-Launcher/Flow.Launcher/discussions/categories/ideas&quot;&gt;Discussions&lt;/a&gt;, otherwise feel free to put in a pull request.&lt;/p&gt; 
&lt;p&gt;You will find the main goals of flow placed under the &lt;a href=&quot;https://github.com/orgs/Flow-Launcher/projects/4&quot;&gt;Projects board&lt;/a&gt;, so feel free to contribute on that. If you would like to make small incremental changes, feel free to do so as well.&lt;/p&gt; 
&lt;p&gt;Get in touch if you like to join the Flow-Launcher Team and help build this great tool.&lt;/p&gt; 
&lt;h3&gt;Developing/Debugging&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Flow Launcher&#39;s target framework is .Net 9&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install Visual Studio 2022 (v17.12+)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install .Net 9 SDK&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;via Visual Studio installer&lt;/li&gt; 
   &lt;li&gt;via winget &lt;code&gt;winget install Microsoft.DotNet.SDK.9&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Manually from &lt;a href=&quot;https://dotnet.microsoft.com/en-us/download/dotnet/9.0&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LykosAI/StabilityMatrix</title>
      <link>https://github.com/LykosAI/StabilityMatrix</link>
      <description>&lt;p&gt;Multi-Platform Package Manager for Stable Diffusion&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stability Matrix&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/LykosAI/StabilityMatrix/actions/workflows/build.yml&quot;&gt;&lt;img src=&quot;https://github.com/LykosAI/StabilityMatrix/actions/workflows/build.yml/badge.svg?sanitize=true&quot; alt=&quot;Build&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://discord.com/invite/TUrgfECxHz&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1115555685476868168?logo=discord&amp;amp;logoColor=white&amp;amp;label=Discord%20Server&quot; alt=&quot;Discord Server&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/LykosAI/StabilityMatrix/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/LykosAI/StabilityMatrix?label=Latest%20Stable&amp;amp;link=https%3A%2F%2Fgithub.com%2FLykosAI%2FStabilityMatrix%2Freleases%2Flatest&quot; alt=&quot;Latest Stable&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://lykos.ai/downloads&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fcdn.lykos.ai%2Fupdate-v3.json&amp;amp;query=%24.updates.preview%5B%22win-x64%22%5D.version&amp;amp;prefix=v&amp;amp;label=Latest%20Preview&amp;amp;color=b57400&amp;amp;cacheSeconds=60&amp;amp;link=https%3A%2F%2Flykos.ai%2Fdownloads&quot; alt=&quot;Latest Preview&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://lykos.ai/downloads&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fcdn.lykos.ai%2Fupdate-v3.json&amp;amp;query=%24.updates.development%5B%22win-x64%22%5D.version&amp;amp;prefix=v&amp;amp;label=Latest%20Dev&amp;amp;color=880c21&amp;amp;cacheSeconds=60&amp;amp;link=https%3A%2F%2Flykos.ai%2Fdownloads&quot; alt=&quot;Latest Dev&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.lykos.ai/static/sm-banner-rounded.webp&quot; alt=&quot;Header image for Stability Matrix, Multi-Platform Package Manager and Inference UI for Stable Diffusion&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/LykosAI/StabilityMatrix/releases/latest/download/StabilityMatrix-win-x64.zip&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Windows%2010,%2011-%230079d5.svg?style=for-the-badge&amp;amp;logo=Windows%2011&amp;amp;logoColor=white&quot; alt=&quot;Windows&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/LykosAI/StabilityMatrix/releases/latest/download/StabilityMatrix-linux-x64.zip&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Linux%20(AppImage)-FCC624?style=for-the-badge&amp;amp;logo=linux&amp;amp;logoColor=black&quot; alt=&quot;Linux (AppImage)&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aur.archlinux.org/packages/stabilitymatrix&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Arch%20Linux%20(AUR)-1793D1?style=for-the-badge&amp;amp;logo=archlinux&amp;amp;logoColor=white&quot; alt=&quot;Arch Linux (AUR)&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/LykosAI/StabilityMatrix/releases/latest/download/StabilityMatrix-macos-arm64.dmg&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/mac%20os%20%28apple%20silicon%29-000000?style=for-the-badge&amp;amp;logo=macos&amp;amp;logoColor=F0F0F0&quot; alt=&quot;macOS&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Multi-Platform Package Manager and Inference UI for Stable Diffusion&lt;/p&gt; 
&lt;h3&gt;🖱️ One click install and update for Stable Diffusion Web UI Packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Panchovix/stable-diffusion-webui-reForge&quot;&gt;Stable Diffusion WebUI reForge&lt;/a&gt;, &lt;a href=&quot;https://github.com/lllyasviel/stable-diffusion-webui-forge&quot;&gt;Stable Diffusion WebUI Forge&lt;/a&gt;, &lt;a href=&quot;https://github.com/lshqqytiger/stable-diffusion-webui-amdgpu-forge&quot;&gt;Stable Diffusion WebUI AMDGPU Forge&lt;/a&gt; &lt;a href=&quot;https://github.com/AUTOMATIC1111/stable-diffusion-webui&quot;&gt;Automatic 1111&lt;/a&gt;, &lt;a href=&quot;https://github.com/lshqqytiger/stable-diffusion-webui-directml&quot;&gt;Automatic 1111 DirectML&lt;/a&gt;, &lt;a href=&quot;https://github.com/anapnoe/stable-diffusion-webui-ux&quot;&gt;SD Web UI-UX&lt;/a&gt;, &lt;a href=&quot;https://github.com/vladmandic/automatic&quot;&gt;SD.Next&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/lllyasviel/Fooocus&quot;&gt;Fooocus&lt;/a&gt;, &lt;a href=&quot;https://github.com/MoonRide303/Fooocus-MRE&quot;&gt;Fooocus MRE&lt;/a&gt;, &lt;a href=&quot;https://github.com/fenneishi/Fooocus-ControlNet-SDXL&quot;&gt;Fooocus ControlNet SDXL&lt;/a&gt;, &lt;a href=&quot;https://github.com/runew0lf/RuinedFooocus&quot;&gt;Ruined Fooocus&lt;/a&gt;, &lt;a href=&quot;https://github.com/mashb1t/Fooocus&quot;&gt;Fooocus - mashb1t&#39;s 1-Up Edition&lt;/a&gt;, &lt;a href=&quot;https://github.com/metercai/SimpleSDXL/&quot;&gt;SimpleSDXL&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/comfyanonymous/ComfyUI&quot;&gt;ComfyUI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Stability-AI/StableSwarmUI&quot;&gt;StableSwarmUI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/VoltaML/voltaML-fast-stable-diffusion&quot;&gt;VoltaML&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/invoke-ai/InvokeAI&quot;&gt;InvokeAI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/sdfxai/sdfx&quot;&gt;SDFX&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/bmaltais/kohya_ss&quot;&gt;Kohya&#39;s GUI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/Nerogar/OneTrainer&quot;&gt;OneTrainer&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/cocktailpeanut/fluxgym&quot;&gt;FluxGym&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://github.com/THUDM/CogVideo&quot;&gt;CogVideo&lt;/a&gt; via &lt;a href=&quot;https://github.com/pinokiofactory/cogstudio&quot;&gt;CogStudio&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Manage plugins / extensions for supported packages (&lt;a href=&quot;https://github.com/AUTOMATIC1111/stable-diffusion-webui&quot;&gt;Automatic1111&lt;/a&gt;, &lt;a href=&quot;https://github.com/comfyanonymous/ComfyUI&quot;&gt;Comfy UI&lt;/a&gt;, &lt;a href=&quot;https://github.com/anapnoe/stable-diffusion-webui-ux&quot;&gt;SD Web UI-UX&lt;/a&gt;, and &lt;a href=&quot;https://github.com/vladmandic/automatic&quot;&gt;SD.Next&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Easily install or update Python dependencies for each package&lt;/li&gt; 
 &lt;li&gt;Embedded Git and Python dependencies, with no need for either to be globally installed&lt;/li&gt; 
 &lt;li&gt;Fully portable - move Stability Matrix&#39;s Data Directory to a new drive or computer at any time&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✨ Inference - A Reimagined Interface for Stable Diffusion, Built-In to Stability Matrix&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Powerful auto-completion and syntax highlighting using a formal language grammar&lt;/li&gt; 
 &lt;li&gt;Workspaces open in tabs that save and load from &lt;code&gt;.smproj&lt;/code&gt; project files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://cdn.lykos.ai/static/sm-banner-inference-rounded.webp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizable dockable and float panels&lt;/li&gt; 
 &lt;li&gt;Generated images contain Inference Project, ComfyUI Nodes, and A1111-compatible metadata&lt;/li&gt; 
 &lt;li&gt;Drag and drop gallery images or files to load states&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img style=&quot;width: 80%; height: 80%&quot; src=&quot;https://github.com/LykosAI/StabilityMatrix/assets/13956642/4341cc34-a584-4e9c-bb3b-276009bdae80&quot; alt=&quot;&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;🚀 Launcher with syntax highlighted terminal emulator, routed GUI input prompts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Launch arguments editor with predefined or custom options for each Package install&lt;/li&gt; 
 &lt;li&gt;Configurable Environment Variables&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img style=&quot;width: 80%; height: 80%&quot; src=&quot;https://github.com/LykosAI/StabilityMatrix/assets/13956642/75456866-9d95-47c6-8c0a-fdc19443ee02&quot; alt=&quot;&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;🗃️ Checkpoint Manager, configured to be shared by all Package installs&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Option to find CivitAI metadata and preview thumbnails for new local imports&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;☁️ Model Browser to import from &lt;a href=&quot;https://civitai.com/&quot;&gt;CivitAI&lt;/a&gt; and &lt;a href=&quot;https://huggingface.co/&quot;&gt;HuggingFace&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automatically imports to the associated model folder depending on the model type&lt;/li&gt; 
 &lt;li&gt;Downloads relevant metadata files and preview image&lt;/li&gt; 
 &lt;li&gt;Pause and resume downloads, even after closing the app&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img style=&quot;width: 80%; height: 80%&quot; src=&quot;https://github.com/LykosAI/StabilityMatrix/assets/13956642/30b9f610-6033-4307-8d92-7d72b93cd73e&quot; alt=&quot;&quot; /&gt; &lt;/p&gt; 
&lt;h3&gt;Shared model directory for all your packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Import local models by simple drag and drop&lt;/li&gt; 
 &lt;li&gt;Option to automatically find CivitAI metadata and preview thumbnails for new local imports&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img style=&quot;width: 80%; height: 80%&quot; src=&quot;https://github.com/LykosAI/StabilityMatrix/assets/13956642/d42d1c53-67a4-45a0-b009-21400d44e17e&quot; alt=&quot;&quot; /&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find connected metadata for existing models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;img style=&quot;width: 80%; height: 80%&quot; src=&quot;https://cdn.lykos.ai/static/sc-checkpoints-find-connected.gif&quot; alt=&quot;&quot; /&gt; &lt;/p&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;p&gt;Stability Matrix is now available in the following languages, thanks to our community contributors:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🇺🇸 English&lt;/li&gt; 
 &lt;li&gt;🇯🇵 日本語 
  &lt;ul&gt; 
   &lt;li&gt;kgmkm_mkgm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🇨🇳 中文（简体，繁体） 
  &lt;ul&gt; 
   &lt;li&gt;jimlovewine&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🇮🇹 Italiano 
  &lt;ul&gt; 
   &lt;li&gt;Marco Capelli&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🇫🇷 Français 
  &lt;ul&gt; 
   &lt;li&gt;eephyne&lt;/li&gt; 
   &lt;li&gt;Greg&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🇪🇸 Español 
  &lt;ul&gt; 
   &lt;li&gt;Carlos Baena&lt;/li&gt; 
   &lt;li&gt;Lautaroturina&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🇷🇺 Русский 
  &lt;ul&gt; 
   &lt;li&gt;aolko&lt;/li&gt; 
   &lt;li&gt;den1251&lt;/li&gt; 
   &lt;li&gt;vanja-san&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🇹🇷 Türkçe 
  &lt;ul&gt; 
   &lt;li&gt;Progesor&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🇩🇪 Deutsch 
  &lt;ul&gt; 
   &lt;li&gt;Mario da Graca&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🇵🇹 Português 
  &lt;ul&gt; 
   &lt;li&gt;nextosai&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🇧🇷 Português (Brasil) 
  &lt;ul&gt; 
   &lt;li&gt;jbostroski&lt;/li&gt; 
   &lt;li&gt;thiagojramos&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🇰🇷 한국어 
  &lt;ul&gt; 
   &lt;li&gt;maakcode&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🇺🇦 Українська 
  &lt;ul&gt; 
   &lt;li&gt;rodtty&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🇨🇿 Čeština 
  &lt;ul&gt; 
   &lt;li&gt;PEKArt!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you would like to contribute a translation, please create an issue or contact us on Discord. Include an email where we&#39;ll send an invite to our &lt;a href=&quot;https://poeditor.com/&quot;&gt;POEditor&lt;/a&gt; project.&lt;/p&gt; 
&lt;h2&gt;Disclaimers&lt;/h2&gt; 
&lt;p&gt;All trademarks, logos, and brand names are the property of their respective owners. All company, product and service names used in this document and licensed applications are for identification purposes only. Use of these names, trademarks, and brands does not imply endorsement. Please note that we do not have any involvement in cryptocurrencies. Any accounts you see claiming otherwise are scams. Please be careful. The only official source of information for Lykos AI is &lt;a href=&quot;https://lykos.ai&quot;&gt;https://lykos.ai&lt;/a&gt; or our &lt;a href=&quot;https://discord.com/invite/TUrgfECxHz&quot;&gt;Discord Server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository maintains the latest source code release for Stability Matrix, and is licensed under the &lt;a href=&quot;https://www.gnu.org/licenses/agpl-3.0.en.html&quot;&gt;GNU Affero General Public License&lt;/a&gt;. Binaries and executable releases are licensed under the &lt;a href=&quot;https://lykos.ai/license&quot;&gt;End User License Agreement&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/mcp</title>
      <link>https://github.com/microsoft/mcp</link>
      <description>&lt;p&gt;Catalog of official Microsoft MCP (Model Context Protocol) server implementations for AI-powered data access and tool integration&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🌟 Microsoft MCP Servers&lt;/h1&gt; 
&lt;h2&gt;📘 What is MCP?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Model Context Protocol (MCP)&lt;/strong&gt; is an open protocol that standardizes how applications provide context to large language models (LLMs). It allows AI applications to connect with various data sources and tools in a consistent manner, enhancing their capabilities and flexibility. MCP follows a client-server architecture:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Hosts&lt;/strong&gt;: Applications like AI assistants or IDEs that initiate connections.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Clients&lt;/strong&gt;: Connectors within the host application that maintain 1:1 connections with servers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Servers&lt;/strong&gt;: Services that provide context and capabilities through the standardized MCP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more details, visit the &lt;a href=&quot;https://modelcontextprotocol.io&quot;&gt;official MCP website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📁 Which MCP Servers are built from this repository?&lt;/h2&gt; 
&lt;p&gt;This repository contains core libraries, test frameworks, engineering systems, pipelines, and tooling for Microsoft MCP Server contributors to unify engineering investments; and reduce duplication and divergence:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;MCP Server&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;README&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Source Code&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;CHANGELOG&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Releases&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Documentation&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Troubleshooting&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Azure MCP&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Azure.Mcp.Server/README.md&quot;&gt;Azure MCP README&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Azure.Mcp.Server&quot;&gt;Azure MCP Source Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Azure.Mcp.Server/CHANGELOG.md&quot;&gt;Azure MCP CHANGELOG&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/releases?q=Azure.Mcp.Server-0&quot;&gt;Azure MCP Releases&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/azure/developer/azure-mcp-server/&quot;&gt;Azure MCP Documentation&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Azure.Mcp.Server/TROUBLESHOOTING.md&quot;&gt;Azure MCP Troubleshooting&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Azure.Mcp.Server/SUPPORT.md&quot;&gt;Azure MCP Support&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;Microsoft Fabric MCP&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Fabric.Mcp.Server/README.md&quot;&gt;Fabric MCP README&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Fabric.Mcp.Server&quot;&gt;Fabric MCP Source Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Fabric.Mcp.Server/CHANGELOG.md&quot;&gt;Fabric MCP CHANGELOG&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/releases?q=Fabric.Mcp.Server-0&quot;&gt;Fabric MCP Releases&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/fabric/&quot;&gt;Fabric Documentation&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Fabric.Mcp.Server/TROUBLESHOOTING.md&quot;&gt;Fabric MCP Troubleshooting&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/raw/main/servers/Fabric.Mcp.Server/SUPPORT.md&quot;&gt;Fabric MCP Support&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;📚 Which MCP Servers are available from Microsoft?&lt;/h2&gt; 
&lt;h3&gt;&lt;img height=&quot;18&quot; width=&quot;18&quot; src=&quot;https://cdn-dynmedia-1.microsoft.com/is/content/microsoftcorp/acom_social_icon_azure&quot; alt=&quot;Microsoft Azure Logo&quot; /&gt; Azure&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/mcp/tree/main/servers/Azure.Mcp.Server#readme&quot;&gt;microsoft/mcp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: All Azure MCP tools in a single server. The Azure MCP Server implements the MCP specification to create a seamless connection between AI agents and Azure services. Azure MCP Server can be used alone or with the GitHub Copilot for Azure extension in VS Code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;CLOUD AND INFRASTRUCTURE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://vscode.dev/redirect?url=vscode:extension/ms-azuretools.vscode-azure-mcp-server&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Azure_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Azure MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://vscode.dev/redirect?url=vscode-insiders:extension/ms-azuretools.vscode-azure-mcp-server&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Azure_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Azure MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=github-copilot-azure.GitHubCopilotForAzure2022&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Azure_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Azure MCP in Visual Studio&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://plugins.jetbrains.com/plugin/8053&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/IntelliJ%20IDEA-Install%20Azure%20MCP%20Server-1495b1?style=flat-square&amp;amp;logo=intellijidea&amp;amp;logoColor=white&quot; alt=&quot;Install Azure MCP Server&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✨ Azure AI Foundry&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/azure-ai-foundry/mcp-foundry&quot;&gt;azure-ai-foundry/mcp-foundry&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: A Model Context Protocol server for Azure AI Foundry, providing a unified set of tools for models, knowledge, evaluation, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;CLOUD AND INFRASTRUCTURE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://vscode.dev/redirect?url=vscode:mcp/install?%7B%22name%22%3A%22ai_foundry_server%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22--prerelease%3Dallow%22%2C%22--from%22%2C%22git%2Bhttps%3A%2F%2Fgithub.com%2Fazure-ai-foundry%2Fmcp-foundry.git%22%2C%22run-azure-ai-foundry-mcp%22%2C%22--envFile%22%2C%22%24%7BworkspaceFolder%7D%2F.env%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_AI_Foundry_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=ffffff&quot; alt=&quot;Install Azure AI Foundry MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://vscode.dev/redirect?url=vscode-insiders:mcp/install?%7B%22name%22%3A%22ai_foundry_server%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22--prerelease%3Dallow%22%2C%22--from%22%2C%22git%2Bhttps%3A%2F%2Fgithub.com%2Fazure-ai-foundry%2Fmcp-foundry.git%22%2C%22run-azure-ai-foundry-mcp%22%2C%22--envFile%22%2C%22%24%7BworkspaceFolder%7D%2F.env%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_AI_Foundry_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=ffffff&quot; alt=&quot;Install Azure AI Foundry in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22ai_foundry_server%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22--prerelease%3Dallow%22%2C%22--from%22%2C%22git%2Bhttps%3A%2F%2Fgithub.com%2Fazure-ai-foundry%2Fmcp-foundry.git%22%2C%22run-azure-ai-foundry-mcp%22%2C%22--envFile%22%2C%22%24%7BworkspaceFolder%7D%2F.env%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Azure_AI_Foundry_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Azure AI Foundry in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img height=&quot;18&quot; width=&quot;18&quot; src=&quot;https://cdn-dynmedia-1.microsoft.com/is/content/microsoftcorp/1062064-Products-1.2-24x24&quot; alt=&quot;Microsoft Azure DevOps Logo&quot; /&gt; Azure DevOps&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/azure-devops-mcp&quot;&gt;Azure DevOps MCP Server - Public Preview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: This TypeScript project provides a local MCP server for Azure DevOps, enabling you to perform a wide range of Azure DevOps tasks directly from your code editor.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=ado&amp;amp;type=stdio&amp;amp;command=npx&amp;amp;args=%5B%22-y%22%2C%22%40azure-devops%2Fmcp%22%2C%22%24%7Binput%3Aado_org%7D%22%5D&amp;amp;inputs=%5B%7B%22id%22%3A%22ado_org%22%2C%22type%22%3A%22promptString%22%2C%22description%22%3A%22Azure%20DevOps%20organization%20name%20(e.g.%20contoso)%22%7D%5D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Azure_DevOps_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Azure DevOps in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=ado&amp;amp;quality=insiders&amp;amp;type=stdio&amp;amp;command=npx&amp;amp;args=%5B%22-y%22%2C%22%40azure-devops%2Fmcp%22%2C%22%24%7Binput%3Aado_org%7D%22%5D&amp;amp;inputs=%5B%7B%22id%22%3A%22ado_org%22%2C%22type%22%3A%22promptString%22%2C%22description%22%3A%22Azure%20DevOps%20organization%20name%20(e.g.%20contoso)%22%7D%5D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Azure_Devops_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Azure DevOps in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/microsoft/azure-devops-mcp/raw/main/docs/GETTINGSTARTED.md#%EF%B8%8F-visual-studio-2022--github-copilot&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Azure_DevOps_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Azure DevOps in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;☸️ Azure Kubernetes Service (AKS)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/Azure/aks-mcp&quot;&gt;Azure/aks-mcp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: An MCP server that enables AI assistants to interact with Azure Kubernetes Service (AKS) clusters. It serves as a bridge between AI tools and AKS, translating natural language requests into AKS operations and returning the results in a format the AI tools can understand.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;CLOUD AND INFRASTRUCTURE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://vscode.dev/redirect?url=vscode:extension/ms-kubernetes-tools.vscode-aks-tools&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_AKS_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install AKS MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://vscode.dev/redirect?url=vscode-insiders:extension/ms-kubernetes-tools.vscode-aks-tools&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_AKS_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install AKS MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/Azure/aks-mcp&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_AKS_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install AKS MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img height=&quot;18&quot; width=&quot;18&quot; src=&quot;https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png&quot; alt=&quot;GitHub Logo&quot; /&gt; GitHub&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/github/github-mcp-server&quot;&gt;github/github-mcp-server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: Access GitHub repositories, issues, and pull requests through secure API integration.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;REMOTE&lt;/code&gt; - &lt;code&gt;https://api.githubcopilot.com/mcp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=github&amp;amp;config=%7B%22type%22%3A%20%22http%22%2C%22url%22%3A%20%22https%3A%2F%2Fapi.githubcopilot.com%2Fmcp%2F%22%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_GitHub_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install GitHub MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=github&amp;amp;config=%7B%22type%22%3A%20%22http%22%2C%22url%22%3A%20%22https%3A%2F%2Fapi.githubcopilot.com%2Fmcp%2F%22%7D&amp;amp;quality=insiders&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_GitHub_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install GitHub MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22github%22%2C%22type%22%3A%22http%22%2C%22url%22%3A%22https%3A%2F%2Fapi.githubcopilot.com%2Fmcp%2F%22%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_GitHub_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install GitHub MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img height=&quot;18&quot; width=&quot;18&quot; src=&quot;https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png&quot; alt=&quot;GitHub Logo&quot; /&gt; GitHub Awesome-Copilot&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/github/awesome-copilot&quot;&gt;github/awesome-copilot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: Community-contributed instructions, prompts, and configurations to help you make the most of GitHub Copilot.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://aka.ms/awesome-copilot/mcp/vscode&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Awesome_Copilot_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Awesome Copilot MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/awesome-copilot/mcp/vscode-insiders&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Awesome_Copilot_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Awesome Copilot MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/awesome-copilot/mcp/vs&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Awesome_Copilot_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📝 Markitdown&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/markitdown&quot;&gt;microsoft/markitdown&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: A specialized MCP server for Markdown processing and manipulation. Enables AI models to read, write, and transform Markdown content with robust parsing and formatting capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://vscode.dev/redirect?url=vscode:mcp/install?%7B%22name%22%3A%22markitdown%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22markitdown-mcp%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Markitdown_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=ffffff&quot; alt=&quot;Install Markitdown MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://vscode.dev/redirect?url=vscode-insiders:mcp/install?%7B%22name%22%3A%22markitdown%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22markitdown-mcp%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Markitdown_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=ffffff&quot; alt=&quot;Install Markitdown MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22markitdown%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22markitdown-mcp%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Markitdown_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Markitdown MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💻 Microsoft 365 Agents Toolkit&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/OfficeDev/microsoft-365-agents-toolkit/&quot;&gt;OfficeDev/microsoft-365-agents-toolkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: The Microsoft 365 Agents Toolkit MCP Server is a Model Context Protocol (MCP) server that provides a seamless connection between AI agents and developers for building apps and agents for Microsoft 365 and Microsoft 365 Copilot.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://vscode.dev/redirect?url=vscode:extension/TeamsDevApp.ms-teams-vscode-extension&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Microsoft_365_Agents_Toolkit-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Microsoft 365 Agents Toolkit in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://vscode.dev/redirect?url=vscode-insiders:extension/TeamsDevApp.ms-teams-vscode-extension&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Microsoft_365_Agents_Toolkit-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Microsoft 365 Agents Toolkit in VS Code Insiders&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📊 Microsoft Clarity&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/clarity-mcp-server&quot;&gt;microsoft/clarity-mcp-server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: This is a Model Context Protocol (MCP) server for the Microsoft Clarity data export API. It allows you to fetch analytics data from Clarity using Claude for Desktop or other MCP-compatible clients.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DATA AND ANALYTICS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/clarity-mcp-server&quot;&gt;microsoft/clarity-mcp-server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🗃️ Microsoft Dataverse&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://go.microsoft.com/fwlink/?linkid=2320176&quot;&gt;Microsoft Dataverse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: Chat over your business data using NL - Discover tables, run queries, retrieve data, insert or update records, and execute custom prompts grounded in business knowledge and context.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DATA AND ANALYTICS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://go.microsoft.com/fwlink/?linkid=2320176&quot;&gt;Microsoft Dataverse&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💻 Microsoft Dev Box&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://www.npmjs.com/package/@microsoft/devbox-mcp?activeTab=readme&quot;&gt;@microsoft/devbox-mcp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: An MCP server for Microsoft Dev Box. Enables natural language interactions for developer-focused operations like managing Dev Boxes, configuring environments, and handling pools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=DevBox&amp;amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40microsoft%2Fdevbox-mcp%40latest%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Dev_Box_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Dev Box MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=DevBox&amp;amp;config=%7B%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40microsoft%2Fdevbox-mcp%40latest%22%5D%7D&amp;amp;quality=insiders&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Dev_Box_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Dev Box MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22DevBox%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40microsoft%2Fdevbox-mcp%40latest%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Dev_Box_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Dev Box MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img height=&quot;18&quot; width=&quot;18&quot; src=&quot;https://learn.microsoft.com/fabric/media/fabric-icon.png&quot; alt=&quot;Microsoft Fabric Logo&quot; /&gt; Microsoft Fabric (Public Preview)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/mcp/tree/main/servers/Fabric.Mcp.Server#readme&quot;&gt;microsoft/mcp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: A local-first MCP server providing AI agents with comprehensive access to Microsoft Fabric&#39;s public APIs, item definitions, and best practices. Enables AI-assisted development for all Fabric workloads without connecting to live environments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DATA AND ANALYTICS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/mcp/tree/main/servers/Fabric.Mcp.Server#readme&quot;&gt;microsoft/mcp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛢️ Microsoft Fabric Real-Time Intelligence&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://aka.ms/rti.mcp.repo&quot;&gt;RTI MCP Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: This server enables AI agents to interact with Fabric RTI services by providing tools through the MCP interface, allowing for seamless data querying and analysis capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DATA AND ANALYTICS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=ms-fabric-rti&amp;amp;config=%7B%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22microsoft-fabric-rti-mcp%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Microsoft_Fabric_RTI_MCP_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Fabric RTI MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=ms-fabric-rti&amp;amp;config=%7B%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22microsoft-fabric-rti-mcp%22%5D%7D&amp;amp;quality=insiders&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Microsoft_Fabric_RTI_MCP_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Fabric RTI MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22ms-fabric-rti%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22uvx%22%2C%22args%22%3A%5B%22microsoft-fabric-rti-mcp%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Microsoft_Fabric_RTI_MCP_Server-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Fabric RTI MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📁 Microsoft Files&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/files-mcp-server&quot;&gt;microsoft/files-mcp-server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: Provides a declarative control plane for managing file-based resources, supporting AI workflows that involve static files and documentation synchronization.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/files-mcp-server&quot;&gt;microsoft/files-mcp-server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📚 Microsoft Learn&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoftdocs/mcp&quot;&gt;microsoftdocs/mcp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: AI assistant with real-time access to official Microsoft documentation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;PRODUCTIVITY&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;REMOTE&lt;/code&gt; - &lt;code&gt;https://learn.microsoft.com/api/mcp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://vscode.dev/redirect/mcp/install?name=microsoft.docs.mcp&amp;amp;config=%7B%22type%22%3A%22http%22%2C%22url%22%3A%22https%3A%2F%2Flearn.microsoft.com%2Fapi%2Fmcp%22%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Microsoft_Docs_MCP-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Microsoft Learn MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://insiders.vscode.dev/redirect/mcp/install?name=microsoft.docs.mcp&amp;amp;config=%7B%22type%22%3A%22http%22%2C%22url%22%3A%22https%3A%2F%2Flearn.microsoft.com%2Fapi%2Fmcp%22%7D&amp;amp;quality=insiders&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Microsoft_Docs_MCP-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Microsoft Learn MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22microsoft.docs.mcp%22%2C%22type%22%3A%22http%22%2C%22url%22%3A%22https%3A%2F%2Flearn.microsoft.com%2Fapi%2Fmcp%22%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Microsoft_Docs_MCP-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Microsoft Learn MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛢️ Microsoft SQL&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://aka.ms/MssqlMcp&quot;&gt;MSSQL MCP Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: Chat with your business data the new agentic way using natural language and AI. Connect to any SQL database—from ground (on-premises) to Azure cloud to Microsoft Fabric via a simple connection string. Discover and define table schemas, manage tables, and perform CRUD operations through conversational prompts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://aka.ms/MssqlMcp&quot;&gt;MSSQL MCP Server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💻 NuGet MCP Server&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/NuGet/Home&quot;&gt;NuGet/Home&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: This is a Model Context Protocol (MCP) server for NuGet, enabling advanced tooling and automation scenarios for NuGet package management.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://www.nuget.org/packages/NuGet.Mcp.Server&quot;&gt;Nuget MCP Server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎭 Playwright&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REPOSITORY&lt;/strong&gt;: &lt;a href=&quot;https://github.com/microsoft/playwright-mcp&quot;&gt;microsoft/playwright-mcp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;: This server enables LLMs to interact with web pages through structured accessibility snapshots, bypassing the need for screenshots or visually-tuned models.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CATEGORY&lt;/strong&gt;: &lt;code&gt;DEVELOPER TOOLS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TYPE&lt;/strong&gt;: &lt;code&gt;Local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;INSTALL&lt;/strong&gt;: &lt;a href=&quot;https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522playwright%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522%2540playwright%252Fmcp%2540latest%2522%255D%257D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code-Install_Playwright_MCP-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Playwright MCP in VS Code&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%257B%2522name%2522%253A%2522playwright%2522%252C%2522command%2522%253A%2522npx%2522%252C%2522args%2522%253A%255B%2522%2540playwright%252Fmcp%2540latest%2522%255D%257D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/VS_Code_Insiders-Install_Playwright_MCP-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white&quot; alt=&quot;Install Playwright MCP in VS Code Insiders&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/vs/mcp-install?%7B%22name%22%3A%22playwright%22%2C%22type%22%3A%22stdio%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22%40playwright%2Fmcp%40latest%22%5D%7D&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Visual_Studio-Install_Playwright_MCP-C16FDE?style=flat-square&amp;amp;logo=visualstudio&amp;amp;logoColor=white&quot; alt=&quot;Install Playwright MCP in Visual Studio&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏗️ Looking for starter templates that use MCP?&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://azure.github.io/awesome-azd/?tags=mcp&quot;&gt;Azure Developer CLI (azd) templates&lt;/a&gt; tagged with MCP.&lt;/p&gt; 
&lt;h2&gt;📎 Related Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/mcp/tree/main/Resources&quot;&gt;Microsoft MCP Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://modelcontextprotocol.io/introduction&quot;&gt;MCP Pattern Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://modelcontextprotocol.io/sdk&quot;&gt;MCP SDKs and Building Blocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://spec.modelcontextprotocol.io/specification/&quot;&gt;MCP Specification&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href=&quot;https://www.microsoft.com/legal/intellectualproperty/trademarks/usage/general&quot;&gt;Microsoft&#39;s Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party&#39;s policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yaobiao131/downkyicore</title>
      <link>https://github.com/yaobiao131/downkyicore</link>
      <description>&lt;p&gt;哔哩下载姬(跨平台版)downkyi，哔哩哔哩网站视频下载工具，支持批量下载，支持8K、HDR、杜比视界，提供工具箱（音视频提取、去水印等）。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;哔哩下载姬(跨平台版)&lt;/h1&gt; 
&lt;div align=&quot;center&quot;&gt; 
 &lt;p&gt;&lt;a href=&quot;https://github.com/yaobiao131/downkyicore/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/yaobiao131/downkyicore&quot; alt=&quot;GitHub Repo stars&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/network&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/yaobiao131/downkyicore&quot; alt=&quot;GitHub forks&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/yaobiao131/downkyicore&quot; alt=&quot;GitHub issues&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/yaobiao131/downkyicore&quot; alt=&quot;LICENSE&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;下载&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/yaobiao131/downkyicore/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/yaobiao131/downkyicore&quot; alt=&quot;GitHub release (latest by date)&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release-date/yaobiao131/downkyicore&quot; alt=&quot;GitHub Release Date&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/yaobiao131/downkyicore/releases/latest&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/yaobiao131/downkyicore/total&quot; alt=&quot;GitHub all releases&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/yaobiao131/downkyicore/main/CHANGELOG.md&quot;&gt;更新日志&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于&lt;a href=&quot;https://github.com/leiurayer/downkyi&quot;&gt;哔哩下载姬Windows版&lt;/a&gt;和&lt;a href=&quot;https://github.com/AvaloniaUI/Avalonia&quot;&gt;AvaloniaUI&lt;/a&gt;制作的跨平台版本(支持Windows、linux、macOS)。&lt;/li&gt; 
 &lt;li&gt;开发这个版本目的是由于本人日常使用macOS，当我想下载up视频是偶然间发现了&lt;a href=&quot;https://github.com/leiurayer/downkyi&quot;&gt;哔哩下载姬Windows版&lt;/a&gt;，发现很好用，就是不能支持macOS使用，就基于AvaloniaUI重新开发了一个跨平台版本。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;使用说明&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;软件自带.NET6、ffmpeg、aria2运行环境、无需自行安装&lt;/li&gt; 
 &lt;li&gt;默认下载路径: 
  &lt;ul&gt; 
   &lt;li&gt;Windows: 软件运行目录下的Media文件夹&lt;/li&gt; 
   &lt;li&gt;macOS: ~/Library/Application Support/DownKyi/Media&lt;/li&gt; 
   &lt;li&gt;linux: ~/.config/DownKyi/Media&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;免责申明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;本软件只提供视频解析，不提供任何资源上传、存储到服务器的功能。&lt;/li&gt; 
 &lt;li&gt;本软件仅解析来自B站的内容，不会对解析到的音视频进行二次编码，部分视频会进行有限的格式转换、拼接等操作。&lt;/li&gt; 
 &lt;li&gt;本软件解析得到的所有内容均来自B站UP主上传、分享，其版权均归原作者所有。内容提供者、上传者(UP主)应对其提供、上传的内容承担全部责任。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;本软件提供的所有内容，仅可用作学习交流使用，未经原作者授权，禁止用于其他用途。请在下载24小时内删除。为尊重作者版权，请前往资源的原始发布网站观看，支持原创，谢谢。&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;因使用本软件产生的版权问题，软件作者概不负责。&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>OrchardCMS/OrchardCore</title>
      <link>https://github.com/OrchardCMS/OrchardCore</link>
      <description>&lt;p&gt;Orchard Core is an open-source modular and multi-tenant application framework built with ASP.NET Core, and a content management system (CMS) built on top of that framework.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Orchard Core&lt;/h1&gt; 
&lt;p&gt;Orchard Core is an open-source, modular, multi-tenant application framework and CMS for ASP.NET Core.&lt;/p&gt; 
&lt;p&gt;Orchard Core consists of two distinct projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Orchard Core Framework&lt;/strong&gt;: An application framework for building modular, multi-tenant applications on ASP.NET Core.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Orchard Core CMS&lt;/strong&gt;: A Web Content Management System (CMS) built on top of the Orchard Core Framework.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/OrchardCMS/OrchardCore/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-BSD--3--Clause-blue.svg?sanitize=true&quot; alt=&quot;BSD-3-Clause License&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://docs.orchardcore.net/&quot;&gt;&lt;img src=&quot;https://readthedocs.org/projects/orchardcore/badge/&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://gurubase.io/g/orchard-core&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Gurubase-Ask%20Orchard%20Core%20Guru-006BFF&quot; alt=&quot;Gurubase&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://crowdin.com/project/orchard-core&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/orchard-core/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://orchardcore.net/discord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/551136772243980291?color=%237289DA&amp;amp;label=OrchardCore&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Build Status&lt;/h2&gt; 
&lt;p&gt;Stable (&lt;code&gt;release/2.2&lt;/code&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/actions?query=workflow%3A%22Release+-+CI%22&quot;&gt;&lt;img src=&quot;https://github.com/OrchardCMS/OrchardCore/actions/workflows/release_ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/OrchardCore.Application.Cms.Targets&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/OrchardCore.Application.Cms.Targets.svg?sanitize=true&quot; alt=&quot;NuGet&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Nightly (&lt;code&gt;main&lt;/code&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/actions?query=workflow%3A%22Preview+-+CI%22&quot;&gt;&lt;img src=&quot;https://github.com/OrchardCMS/OrchardCore/actions/workflows/preview_ci.yml/badge.svg?sanitize=true&quot; alt=&quot;Build status&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://cloudsmith.io/~orchardcore/repos/preview/packages/detail/nuget/OrchardCore.Application.Cms.Targets/latest/&quot;&gt;&lt;img src=&quot;https://api-prd.cloudsmith.io/badges/version/orchardcore/preview/nuget/OrchardCore.Application.Cms.Targets/latest/x/?render=true&amp;amp;badge_token=gAAAAABey9hKFD_C-ZIpLvayS3HDsIjIorQluDs53KjIdlxoDz6Ntt1TzvMNJp7a_UWvQbsfN5nS7_0IbxCyqHZsjhmZP6cBkKforo-NqwrH5-E6QCrJ3D8%3D&quot; alt=&quot;Cloudsmith&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Project Status: v2.2.0&lt;/h2&gt; 
&lt;p&gt;The software is production-ready, and capable of serving large mission-critical applications as well, and we&#39;re not aware of any fundamental bugs or missing features we deem crucial. Orchard Core continues to evolve, with each version bringing new improvements, and keeping up with the cutting-edge of .NET.&lt;/p&gt; 
&lt;p&gt;Check out &lt;a href=&quot;https://docs.orchardcore.net/en/latest/reference/&quot;&gt;the Reference of Built-in Modules&lt;/a&gt; to see what kind of features Orchard Core provides built-in.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/milestones&quot;&gt;issue milestones&lt;/a&gt; for information on what we have planned for the next releases and what are the priorities.&lt;/p&gt; 
&lt;h2&gt;Getting Started and Documentation&lt;/h2&gt; 
&lt;p&gt;The documentation can be accessed under &lt;a href=&quot;https://docs.orchardcore.net/&quot;&gt;https://docs.orchardcore.net/&lt;/a&gt;. See the homepage for an overview, and &lt;a href=&quot;https://docs.orchardcore.net/en/latest/getting-started/&quot;&gt;the getting started docs&lt;/a&gt; on how to start building apps with Orchard Core. If you&#39;d just like to test drive Orchard Core as a user, check out &lt;a href=&quot;https://docs.orchardcore.net/en/latest/getting-started/test-drive-orchard-core/&quot;&gt;Test drive Orchard Core&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Help and Support&lt;/h2&gt; 
&lt;p&gt;Need assistance with Orchard Core? We&#39;ve got you covered! Here are several ways to connect with our community for support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Search for Answers:&lt;/strong&gt; Use the &lt;a href=&quot;https://gurubase.io/g/orchard-core&quot;&gt;Gurubase AI model&lt;/a&gt; to find answers to your questions quickly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Report Bugs or Suggest Features:&lt;/strong&gt; If you&#39;ve encountered a bug or have an idea for a new feature, please open an issue in our &lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/issues&quot;&gt;issue tracker&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ask Questions or Get Feedback:&lt;/strong&gt; For guidance on specific tasks or to receive feedback on your code, feel free to start a &lt;a href=&quot;https://github.com/OrchardCMS/OrchardCore/discussions&quot;&gt;discussion&lt;/a&gt; with the community.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Join the Conversation:&lt;/strong&gt; Connect with other Orchard Core users in real-time on our &lt;a href=&quot;https://orchardcore.net/discord&quot;&gt;Discord server&lt;/a&gt; to chat and share ideas.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We&#39;re here to help you succeed with Orchard Core!&lt;/p&gt; 
&lt;h2&gt;Get in Touch&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://twitter.com/orchardcms&quot;&gt;X (Twitter)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://orchardcore.net/linkedin&quot;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/OrchardCore&quot;&gt;Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://orchardcore.net/discord&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Please report security issues privately, via email, to &lt;a href=&quot;mailto:contact@orchardcore.net&quot;&gt;contact@orchardcore.net&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Local Communities&lt;/h3&gt; 
&lt;p&gt;中文资源&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://shang.qq.com/wpa/qunwpa?idkey=48721591a71ee7586316604a7a4ee99d26fd977c6120370a06585085a5936f62&quot;&gt;&lt;img src=&quot;https://docs.orchardcore.net/en/latest/assets/images/orchard-core-cn-community-logo.png&quot; alt=&quot;Orchard Core CN 中文讨论组&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;It&#39;s great that you&#39;re thinking about contributing to Orchard Core! You&#39;d join &lt;a href=&quot;https://docs.orchardcore.net/en/latest/community/contributors/&quot;&gt;our wonderful community of contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the docs &lt;a href=&quot;https://docs.orchardcore.net/en/latest/contributing/&quot;&gt;on contributing to Orchard Core&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Preview Package Feed&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://cloudsmith.com&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/OSS%20hosting%20by-cloudsmith-blue?logo=cloudsmith&amp;amp;style=for-the-badge&quot; alt=&quot;Hosted By: Cloudsmith&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;NuGet package repository hosting for the preview feed is graciously provided by &lt;a href=&quot;https://cloudsmith.com&quot;&gt;Cloudsmith&lt;/a&gt;. Check out &lt;a href=&quot;https://docs.orchardcore.net/en/latest/getting-started/preview-package-source/&quot;&gt;the docs on using the preview package feed&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Cloudsmith is the only fully hosted, cloud-native, universal package management solution, that enables your organization to create, store, and share packages in any format, to any place, with total confidence.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;See &lt;a href=&quot;https://docs.orchardcore.net/en/latest/contributing/#code-of-conduct&quot;&gt;our Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;.NET Foundation&lt;/h2&gt; 
&lt;p&gt;This project is supported by the &lt;a href=&quot;http://www.dotnetfoundation.org&quot;&gt;.NET Foundation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/PowerToys</title>
      <link>https://github.com/microsoft/PowerToys</link>
      <description>&lt;p&gt;Microsoft PowerToys is a collection of utilities that help you customize Windows and streamline everyday tasks&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft PowerToys&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/images/overview/PT_hero_image.png&quot; alt=&quot;Hero image for Microsoft PowerToys&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://aka.ms/powertoys-docs&quot;&gt;How to use PowerToys&lt;/a&gt; | &lt;a href=&quot;https://aka.ms/installPowerToys&quot;&gt;Downloads &amp;amp; Release notes&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/#contributing&quot;&gt;Contributing to PowerToys&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/#whats-happening&quot;&gt;What&#39;s Happening&lt;/a&gt; | &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/#powertoys-roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Microsoft PowerToys is a set of utilities for power users to tune and streamline their Windows experience for greater productivity. For more info on &lt;a href=&quot;https://aka.ms/powertoys-docs&quot;&gt;PowerToys overviews and how to use the utilities&lt;/a&gt;, or any other tools and resources for &lt;a href=&quot;https://learn.microsoft.com/windows/dev-environment/overview&quot;&gt;Windows development environments&lt;/a&gt;, head over to &lt;a href=&quot;https://aka.ms/powertoys-docs&quot;&gt;learn.microsoft.com&lt;/a&gt;!&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Current utilities:&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_AdvancedPaste&quot;&gt;Advanced Paste&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_AoT&quot;&gt;Always on Top&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_Awake&quot;&gt;PowerToys Awake&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ColorPicker&quot;&gt;Color Picker&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_CmdNotFound&quot;&gt;Command Not Found&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_CmdPal&quot;&gt;Command Palette&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_CropAndLock&quot;&gt;Crop And Lock&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_EnvironmentVariables&quot;&gt;Environment Variables&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_FancyZones&quot;&gt;FancyZones&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_FileExplorerAddOns&quot;&gt;File Explorer Add-ons&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_FileLocksmith&quot;&gt;File Locksmith&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_HostsFileEditor&quot;&gt;Hosts File Editor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ImageResizer&quot;&gt;Image Resizer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_KeyboardManager&quot;&gt;Keyboard Manager&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_MouseUtilities&quot;&gt;Mouse Utilities&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_MouseWithoutBorders&quot;&gt;Mouse Without Borders&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_NewPlus&quot;&gt;New+&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_PastePlain&quot;&gt;Paste as Plain Text&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_Peek&quot;&gt;Peek&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_PowerRename&quot;&gt;PowerRename&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_PowerToysRun&quot;&gt;PowerToys Run&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_QuickAccent&quot;&gt;Quick Accent&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_RegistryPreview&quot;&gt;Registry Preview&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ScreenRuler&quot;&gt;Screen Ruler&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ShortcutGuide&quot;&gt;Shortcut Guide&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_TextExtractor&quot;&gt;Text Extractor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_Workspaces&quot;&gt;Workspaces&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://aka.ms/PowerToysOverview_ZoomIt&quot;&gt;ZoomIt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Installing and running Microsoft PowerToys&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 11 or Windows 10 version 2004 (code name 20H1 / build number 19041) or newer.&lt;/li&gt; 
 &lt;li&gt;x64 or ARM64 processor&lt;/li&gt; 
 &lt;li&gt;Our installer will install the following items: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://go.microsoft.com/fwlink/p/?LinkId=2124703&quot;&gt;Microsoft Edge WebView2 Runtime&lt;/a&gt; bootstrapper. This will install the latest version.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Via GitHub with EXE [Recommended]&lt;/h3&gt; 
&lt;p&gt;Go to the &lt;a href=&quot;https://aka.ms/installPowerToys&quot;&gt;Microsoft PowerToys GitHub releases page&lt;/a&gt; and click on &lt;code&gt;Assets&lt;/code&gt; at the bottom to show the files available in the release. Please use the appropriate PowerToys installer that matches your machine&#39;s architecture and install scope. For most, it is &lt;code&gt;x64&lt;/code&gt; and per-user.&lt;/p&gt; 
&lt;!-- items that need to be updated release to release --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Filename&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per user - x64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.94.0/PowerToysUserSetup-0.94.0-x64.exe&quot;&gt;PowerToysUserSetup-0.94.0-x64.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per user - ARM64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.94.0/PowerToysUserSetup-0.94.0-arm64.exe&quot;&gt;PowerToysUserSetup-0.94.0-arm64.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Machine wide - x64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.94.0/PowerToysSetup-0.94.0-x64.exe&quot;&gt;PowerToysSetup-0.94.0-x64.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Machine wide - ARM64&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/microsoft/PowerToys/releases/download/v0.94.0/PowerToysSetup-0.94.0-arm64.exe&quot;&gt;PowerToysSetup-0.94.0-arm64.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;This is our preferred method.&lt;/p&gt; 
&lt;h3&gt;Via Microsoft Store&lt;/h3&gt; 
&lt;p&gt;Install from the &lt;a href=&quot;https://aka.ms/getPowertoys&quot;&gt;Microsoft Store&#39;s PowerToys page&lt;/a&gt;. You must be using the &lt;a href=&quot;https://blogs.windows.com/windowsExperience/2021/06/24/building-a-new-open-microsoft-store-on-windows-11/&quot;&gt;new Microsoft Store&lt;/a&gt;, which is available for both Windows 11 and Windows 10.&lt;/p&gt; 
&lt;h3&gt;Via WinGet&lt;/h3&gt; 
&lt;p&gt;Download PowerToys from &lt;a href=&quot;https://github.com/microsoft/winget-cli#installing-the-client&quot;&gt;WinGet&lt;/a&gt;. Updating PowerToys via winget will respect the current PowerToys installation scope. To install PowerToys, run the following command from the command line / PowerShell:&lt;/p&gt; 
&lt;h4&gt;User scope installer [default]&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;winget install Microsoft.PowerToys -s winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Machine-wide scope installer&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-powershell&quot;&gt;winget install --scope machine Microsoft.PowerToys -s winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other install methods&lt;/h3&gt; 
&lt;p&gt;There are &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/unofficialInstallMethods.md&quot;&gt;community driven install methods&lt;/a&gt; such as Chocolatey and Scoop. If these are your preferred install solutions, you can find the install instructions there.&lt;/p&gt; 
&lt;h2&gt;Third-Party Run Plugins&lt;/h2&gt; 
&lt;p&gt;There is a collection of &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/thirdPartyRunPlugins.md&quot;&gt;third-party plugins&lt;/a&gt; created by the community that aren&#39;t distributed with PowerToys.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions of all types. Besides coding features / bug fixes, other ways to assist include spec writing, design, documentation, and finding bugs. We are excited to work with the power user community to build a set of tools for helping you get the most out of Windows.&lt;/p&gt; 
&lt;p&gt;We ask that &lt;strong&gt;before you start work on a feature that you would like to contribute&lt;/strong&gt;, please read our &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/CONTRIBUTING.md&quot;&gt;Contributor&#39;s Guide&lt;/a&gt;. We would be happy to work with you to figure out the best approach, provide guidance and mentorship throughout feature development, and help avoid any wasted or duplicate effort.&lt;/p&gt; 
&lt;p&gt;Most contributions require you to agree to a &lt;a href=&quot;https://cla.opensource.microsoft.com&quot;&gt;Contributor License Agreement (CLA)&lt;/a&gt; declaring that you grant us the rights to use your contribution and that you have permission to do so.&lt;/p&gt; 
&lt;p&gt;For guidance on developing for PowerToys, please read the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/devdocs&quot;&gt;developer docs&lt;/a&gt; for a detailed breakdown. This includes how to setup your computer to compile.&lt;/p&gt; 
&lt;h2&gt;What&#39;s Happening&lt;/h2&gt; 
&lt;h3&gt;PowerToys Roadmap&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href=&quot;https://github.com/microsoft/PowerToys/wiki/Roadmap&quot;&gt;prioritized roadmap&lt;/a&gt; of features and utilities that the core team is focusing on.&lt;/p&gt; 
&lt;h3&gt;0.94 - Sep 2025 Update&lt;/h3&gt; 
&lt;p&gt;In this release, we focused on new features, stability, optimization improvements, and automation.&lt;/p&gt; 
&lt;p&gt;For an in-depth look at the latest changes, visit the &lt;a href=&quot;https://aka.ms/powertoys-releaseblog&quot;&gt;release blog&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;✨Highlights&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;PowerToys Settings added a Settings search with fuzzy matching, suggestions, a results page, and UX polish to make finding options faster.&lt;/li&gt; 
 &lt;li&gt;A comprehensive hotkey conflict detection system was introduced in Settings to surface and help resolve conflicting shortcuts. Note that the default hotkey settings (Win+Ctrl+Shift+T, Win+Ctrl+V, Win+Ctrl+T, Win+Shift+T) may overlap with existing Windows system shortcuts. This is expected. You can resolve the conflict by assigning different hotkeys.&lt;/li&gt; 
 &lt;li&gt;Mouse Utilities added a “Gliding cursor” accessibility feature to Mouse Pointer Crosshairs for single‑button cursor movement and clicking. Thanks &lt;a href=&quot;https://github.com/mikehall-ms&quot;&gt;@mikehall-ms&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;The installer was upgraded to WiX 5 after WiX 3 reached end-of-life; this move improved installer security, reliability, and community support.&lt;/li&gt; 
 &lt;li&gt;Tons of bug fixes and improvements for Command Palette, including visual updates and new support for filters on ListPages (handy for extension developers).&lt;/li&gt; 
 &lt;li&gt;Hosts Editor now has a “No leading spaces” option so active host entries can start at column 0 even if others are disabled. Thanks &lt;a href=&quot;https://github.com/mohammed-saalim&quot;&gt;@mohammed-saalim&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Context menu registration was moved from the installer to runtime to avoid loading disabled modules (runtime registrations).&lt;/li&gt; 
 &lt;li&gt;Quick Accent now supports Maltese, and frequently used accents appear first (and are remembered across sessions). Thanks &lt;a href=&quot;https://github.com/rovercoder&quot;&gt;@rovercoder&lt;/a&gt;! &lt;a href=&quot;https://github.com/davidegiacometti&quot;&gt;@davidegiacometti&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Always On Top&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed the border hover cursor so it shows the arrow instead of the wait cursor. Thanks &lt;a href=&quot;https://github.com/davidegiacometti&quot;&gt;@davidegiacometti&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Command Palette&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Applied single-click activation only to pointer input; keyboard always activates immediately. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Let context menus open at the cursor by removing window-bound constraints. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Made error messages clearer with timestamps, HRESULTs, and full details for easier diagnosis. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Prevented crashes and improved robustness when updating providers without commands. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Ensured the Settings window reliably comes to the front when opened. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Replaced the Clipboard History icon with a colorful Fluent icon. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Hardened ContentIcon to avoid duplicate parenting and improve diagnostics. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Standardized null checks using C# pattern matching for safer behavior.&lt;/li&gt; 
 &lt;li&gt;Improved accessibility by focusing the activation shortcut dialog and making text reachable. Thanks &lt;a href=&quot;https://github.com/chatasweetie&quot;&gt;@chatasweetie&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Moved the extension SDK to a stable Windows SDK and cleaned up message namespaces.&lt;/li&gt; 
 &lt;li&gt;Added path shortcuts: ~ to home, and / or \ to system root, plus UNC support. Thanks &lt;a href=&quot;https://github.com/davidegiacometti&quot;&gt;@davidegiacometti&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed a race in cancellation handling to avoid InvalidOperationException. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Aligned separator styling with WinUI 3 for consistent visuals. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added ARM64 PDBs to the Extensions SDK NuGet for better debugging.&lt;/li&gt; 
 &lt;li&gt;Added single-select filters to DynamicListPage and updated Windows Services sample.&lt;/li&gt; 
 &lt;li&gt;Updated main page placeholder text to better describe what can be searched. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Removed explicit WinAppSDK/WebView2 dependencies from toolkit and API. Thanks &lt;a href=&quot;https://github.com/rluengen&quot;&gt;@rluengen&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added a local keyboard hook to handle the GoBack key reliably. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Propagated alias changes safely and resolved conflicts across view models.&lt;/li&gt; 
 &lt;li&gt;Allowed providers to override Dispose with a virtual method.&lt;/li&gt; 
 &lt;li&gt;Fixed memory leaks by cleaning up removed or cancelled list items.&lt;/li&gt; 
 &lt;li&gt;Sorted DateTime extension results by relevance for better usability.&lt;/li&gt; 
 &lt;li&gt;Reduced search text “jiggling” by avoiding redundant change notifications.&lt;/li&gt; 
 &lt;li&gt;Centralized automation notifications in a UIHelper for better accessibility. Thanks &lt;a href=&quot;https://github.com/chatasweetie&quot;&gt;@chatasweetie&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Preserved Adaptive Card action types during trimming via DynamicDependency.&lt;/li&gt; 
 &lt;li&gt;Added an acrylic backdrop and refined styling to the context menu. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Prevented disposed pages and Settings windows from handling stale messages. Thanks &lt;a href=&quot;https://github.com/jiripolasek&quot;&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Made the extension API easier to evolve without breaking clients.&lt;/li&gt; 
 &lt;li&gt;Added “evil” sample pages to help reproduce tricky bugs.&lt;/li&gt; 
 &lt;li&gt;Fixed WinGet trim-safety issues by replacing LINQ with manual iteration.&lt;/li&gt; 
 &lt;li&gt;Cancelled stale list fetches to avoid older results overwriting newer ones in CmdPal.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Command Palette extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Improved empty states and ranking logic for multiple extensions. Thanks &lt;a href=&quot;https://github.com/htcfreek&quot;&gt;@htcfreek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added app icons to the All Apps &quot;Run&quot; context command when available.&lt;/li&gt; 
 &lt;li&gt;Restored missing builtin icons by standardizing extension dependencies.&lt;/li&gt; 
 &lt;li&gt;Unblocked local deployment by adding WinAppSDK to two sample extensions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hosts File Editor&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added a &quot;No leading spaces&quot; option so active hosts entries can start at column 0 even when others are disabled. Thanks &lt;a href=&quot;https://github.com/mohammed-saalim&quot;&gt;@mohammed-saalim&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Image Resizer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed Image Resizer localization by installing satellite resources under the WinUI 3 apps culture path.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mouse Utilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Introduced &quot;Gliding cursor&quot; to control the pointer and click with a single hotkey for better accessibility. Thanks &lt;a href=&quot;https://github.com/mikehall-ms&quot;&gt;@mikehall-ms&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mouse Without Borders&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Blocked Easy Mouse from switching machines during fullscreen apps, with an allow-list for exceptions. Thanks &lt;a href=&quot;https://github.com/dot-tb&quot;&gt;@dot-tb&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Peek&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added Visual Studio shared project file types to XML preview and fixed bgcode handler registration. Thanks &lt;a href=&quot;https://github.com/rezanid&quot;&gt;@rezanid&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixes bgcode preview handler registration and events for reliable previews. Thanks &lt;a href=&quot;https://github.com/pedrolamas&quot;&gt;@pedrolamas&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PowerRename&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Changed the Explorer accelerator key to PowErRename to avoid clashing with the New menu. Thanks &lt;a href=&quot;https://github.com/aaron-ni&quot;&gt;@aaron-ni&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Accent&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Remembered character usage across sessions so frequently used accents appear first. Thanks &lt;a href=&quot;https://github.com/davidegiacometti&quot;&gt;@davidegiacometti&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added Maltese language support with specific characters and the Euro symbol. Thanks &lt;a href=&quot;https://github.com/rovercoder&quot;&gt;@rovercoder&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Reduced GPU usage issues by making the window Topmost only when the picker is visible. Thanks &lt;a href=&quot;https://github.com/daverayment&quot;&gt;@daverayment&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Settings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added telemetry to track usage of the new shortcut conflict detection workflow.&lt;/li&gt; 
 &lt;li&gt;Moved the shutdown action from the title bar to a footer menu item with confirmation. Thanks &lt;a href=&quot;https://github.com/davidegiacometti&quot;&gt;@davidegiacometti&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Implemented comprehensive hotkey conflict detection with a dedicated resolution dialog.&lt;/li&gt; 
 &lt;li&gt;Added branded visuals for Office and Copilot keys in the KeyVisual control.&lt;/li&gt; 
 &lt;li&gt;Introduced Settings search with fuzzy matching and navigation to specific controls.&lt;/li&gt; 
 &lt;li&gt;Corrected Spanish localization so product names like Awake remain in English across Settings and OOBE.&lt;/li&gt; 
 &lt;li&gt;Simplified the Advanced Paste description in Settings for quicker reading and consistent capitalization. Thanks &lt;a href=&quot;https://github.com/OldUser101&quot;&gt;@OldUser101&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Localized conflict messages in the conflict window and dialog.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Upgraded the installer to WiX 5 with silent &quot;Files in Use&quot; handling for smoother winget installs.&lt;/li&gt; 
 &lt;li&gt;Switched Win10 context menu modules to runtime registration and added cleanup on uninstall to avoid stale entries.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Adds docs for building the installer locally and testing winget installs.&lt;/li&gt; 
 &lt;li&gt;Fixed a broken style guide link in developer documentation. Thanks &lt;a href=&quot;https://github.com/denizmaral&quot;&gt;@denizmaral&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Excluded test and coverage DLLs from BinSkim scans to cut false positives and speed up security analysis.&lt;/li&gt; 
 &lt;li&gt;Simplified NOTICE maintenance by removing version numbers and filtering out Microsoft/System packages.&lt;/li&gt; 
 &lt;li&gt;Improved NuGet dependency validation to prevent package downgrades and catch issues during restore.&lt;/li&gt; 
 &lt;li&gt;Updated UTF.Unknown to a modern version to improve compatibility without breaking changes. Thanks &lt;a href=&quot;https://github.com/304NotModified&quot;&gt;@304NotModified&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Refreshed package catalog in CI before installing dependencies to prevent Linux workflow failures.&lt;/li&gt; 
 &lt;li&gt;Refactored CmdPal tests with dependency injection and added coverage for queries and settings.&lt;/li&gt; 
 &lt;li&gt;Added unit tests to verify Close on Enter swaps Copy/Save as expected. Thanks &lt;a href=&quot;https://github.com/mohammed-saalim&quot;&gt;@mohammed-saalim&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added accessibility IDs to CmdPal UI for stable UI tests.&lt;/li&gt; 
 &lt;li&gt;Rewrote system command tests with a new test base and cleaner patterns.&lt;/li&gt; 
 &lt;li&gt;Added unit tests for WebSearch and Shell extensions with mockable settings.&lt;/li&gt; 
 &lt;li&gt;Added unit tests and abstractions for Apps and Bookmarks extensions.&lt;/li&gt; 
 &lt;li&gt;Cleans up AI‑generated tests; adds meaningful query tests across extensions.&lt;/li&gt; 
 &lt;li&gt;Removed the obsolete debug dialog from Settings for a smoother developer loop.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;What is being planned over the next few releases&lt;/h3&gt; 
&lt;p&gt;For &lt;a href=&quot;https://github.com/microsoft/PowerToys/issues?q=is%3Aissue+milestone%3A%22PowerToys+0.95%22&quot;&gt;v0.95&lt;/a&gt;, we&#39;ll work on the items below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Continued Command Palette polish&lt;/li&gt; 
 &lt;li&gt;Working on Shortcut Guide v2 (Thanks &lt;a href=&quot;https://github.com/noraa-junker&quot;&gt;@noraa-junker&lt;/a&gt;!)&lt;/li&gt; 
 &lt;li&gt;Upgrading Keyboard Manager&#39;s editor UI&lt;/li&gt; 
 &lt;li&gt;UI tweaking utility with day/night theme switcher&lt;/li&gt; 
 &lt;li&gt;DSC v3 support for top utilities&lt;/li&gt; 
 &lt;li&gt;New UI automation tests&lt;/li&gt; 
 &lt;li&gt;Stability, bug fixes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;PowerToys Community&lt;/h2&gt; 
&lt;p&gt;The PowerToys team is extremely grateful to have the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/COMMUNITY.md&quot;&gt;support of an amazing active community&lt;/a&gt;. The work you do is incredibly important. PowerToys wouldn’t be nearly what it is today without your help filing bugs, updating documentation, guiding the design, or writing features. We want to say thank you and take time to recognize your work. Month by month, you directly help make PowerToys a better piece of software.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/PowerToys/main/CODE_OF_CONDUCT.md&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Privacy Statement&lt;/h2&gt; 
&lt;p&gt;The application logs basic diagnostic data (telemetry). For more privacy information and what we collect, see our &lt;a href=&quot;https://aka.ms/powertoys-data-and-privacy-documentation&quot;&gt;PowerToys Data and Privacy documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>0x7c13/Notepads</title>
      <link>https://github.com/0x7c13/Notepads</link>
      <description>&lt;p&gt;A modern, lightweight text editor with a minimalist design.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img width=&quot;128&quot; align=&quot;center&quot; src=&quot;https://raw.githubusercontent.com/0x7c13/Notepads/master/src/Notepads/Assets/appicon_ws.gif&quot; /&gt; &lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt; Notepads &lt;/h1&gt; 
&lt;p align=&quot;center&quot;&gt; A modern, lightweight text editor with a minimalist design. &lt;/p&gt; 
&lt;p align=&quot;center&quot;&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://www.microsoft.com/store/apps/9nhl4nsc67wm&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/Microsoft%20Store-Download-orange.svg?style=flat-square&quot; alt=&quot;Store link&quot; /&gt; &lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://github.com/0x7c13/Notepads/releases&quot;&gt; &lt;img src=&quot;https://img.shields.io/github/release/0x7c13/notepads.svg?label=latest%20version&amp;amp;style=flat-square&quot; alt=&quot;Releases&quot; /&gt; &lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot;&gt; &lt;img src=&quot;https://img.shields.io/badge/platform-Windows%20%7C%20UWP-yellow.svg?style=flat-square&quot; alt=&quot;Platform&quot; /&gt; &lt;/a&gt; &lt;a style=&quot;text-decoration:none&quot; href=&quot;https://discord.gg/VqetCub&quot;&gt; &lt;img src=&quot;https://img.shields.io/discord/588473626651787274.svg?style=flat-square&quot; alt=&quot;Discord&quot; /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;What is Notepads and why do I care?&lt;/h2&gt; 
&lt;p&gt;I have been waiting long enough for a modern Windows 10 notepad app to come before I decided to create one myself. Don’t get me wrong, Notepad++, VS Code, and Sublime are great text editors. I have used them all and I will continue to use them in the future. However, they are either too heavy or look less appealing. There are times that I just wanted to use Windows notepad for things like writing notes or editing config files. So I decided to create a win32 notepad replacement here and try to give it a modern look and feel. Most importantly, it has to be blazingly fast and appeals to everyone.&lt;/p&gt; 
&lt;p&gt;So here comes the “Notepads” 🎉 (s stands for Sets).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fluent design with a built-in tab system.&lt;/li&gt; 
 &lt;li&gt;Blazingly fast and lightweight.&lt;/li&gt; 
 &lt;li&gt;Launch from the command line or PowerShell by typing: &lt;code&gt;notepads&lt;/code&gt; or &lt;code&gt;notepads %FilePath%&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Multi-line handwriting support.&lt;/li&gt; 
 &lt;li&gt;Built-in Markdown live preview.&lt;/li&gt; 
 &lt;li&gt;Built-in diff viewer (preview your changes).&lt;/li&gt; 
 &lt;li&gt;Session snapshot and multi-instances.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/0x7c13/Notepads/master/ScreenShots/1.png?raw=true&quot; alt=&quot;Screenshot Dark&quot; title=&quot;Dark&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/0x7c13/Notepads/master/ScreenShots/2.png?raw=true&quot; alt=&quot;Screenshot Markdown&quot; title=&quot;Markdown&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/0x7c13/Notepads/master/ScreenShots/3.png?raw=true&quot; alt=&quot;Screenshot DiffViewer&quot; title=&quot;DiffViewer&quot; /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/0x7c13/Notepads/master/ScreenShots/4.png?raw=true&quot; alt=&quot;Screenshot Light&quot; title=&quot;Light&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Shortcuts:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ctrl+N/T to create new tab.&lt;/li&gt; 
 &lt;li&gt;Ctrl+(Shift)+Tab to switch between tabs.&lt;/li&gt; 
 &lt;li&gt;Ctrl+Num(1-9) to quickly switch to specified tab.&lt;/li&gt; 
 &lt;li&gt;Ctrl+&quot;+&quot;/&quot;-&quot; for zooming. Ctrl+&quot;0&quot; to reset zooming to default.&lt;/li&gt; 
 &lt;li&gt;Ctrl+L/R to change text flow direction. (LTR/RTL)&lt;/li&gt; 
 &lt;li&gt;Alt+P to toggle preview split view for Markdown file.&lt;/li&gt; 
 &lt;li&gt;Alt+D to toggle side-by-side diff viewer.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Platform limitations (UWP):&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;You won&#39;t be able to save files to system folders due to UWP restriction (windows, system32, etc.).&lt;/li&gt; 
 &lt;li&gt;You cannot associate potentially harmful file types (.cmd, .bat etc.) with Notepads.&lt;/li&gt; 
 &lt;li&gt;Notepads does not work well with large files; the file size limit is set to 1MB for now. I will add large file support later.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloads:&lt;/h2&gt; 
&lt;p&gt;Notepads is available in the Microsoft Store. You can get the latest version of Notepads here for free: &lt;a href=&quot;https://www.microsoft.com/store/apps/9nhl4nsc67wm&quot;&gt;Microsoft Store Link&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also use the Windows Package Manager to install notepads:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;winget install &quot;Notepads App&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Changelog:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0x7c13/Notepads/releases&quot;&gt;Notepads Releases&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer and Privacy statement:&lt;/h2&gt; 
&lt;p&gt;To be 100% transparent:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Notepads does not and will never collect user information in terms of user privacy.&lt;/li&gt; 
 &lt;li&gt;I will not track your IP.&lt;/li&gt; 
 &lt;li&gt;I will not record your typings or read any of your files created in Notepads including file name and file path.&lt;/li&gt; 
 &lt;li&gt;No typings or files will be sent to me or third parties.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;I am using analytics service &quot;AppCenter&quot; to collect basic usage data plus some minimum telemetry to help me debug runtime errors. Here is the thread I made clear on this topic: &lt;a href=&quot;https://github.com/0x7c13/Notepads/issues/334&quot;&gt;https://github.com/0x7c13/Notepads/issues/334&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Feel free to review the source code or build your own version of Notepads since it is 100% open sourced.&lt;/p&gt; 
&lt;h4&gt;More to read here: [&lt;a href=&quot;https://raw.githubusercontent.com/0x7c13/Notepads/master/PRIVACY.md&quot;&gt;Privacy Policy&lt;/a&gt;]&lt;/h4&gt; 
&lt;p&gt;TL;DR: You might notice that I work for Microsoft but Notepads is my personal project that I accomplish during free time (to empower every person and every organization on the planet to achieve more😃). I do not work for the Windows team, nor do I work for a Microsoft UX/App team. I am not expert on creating Windows apps either. I learned how to code UWP as soon as I started this project, so don’t put too much hope on me or treat it as a project sponsored by Microsoft.&lt;/p&gt; 
&lt;h2&gt;Contributing:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/0x7c13/Notepads/master/CONTRIBUTING.md&quot;&gt;How to contribute?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Notepads is free and open source, if you like my work, please consider: 
  &lt;ul&gt; 
   &lt;li&gt;Star this project on GitHub&lt;/li&gt; 
   &lt;li&gt;Leave me a review &lt;a href=&quot;https://www.microsoft.com/store/apps/9nhl4nsc67wm&quot;&gt;here&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://ko-fi.com/D1D6Y3C6&quot;&gt;&lt;img src=&quot;https://www.ko-fi.com/img/githubbutton_sm.svg?sanitize=true&quot; alt=&quot;ko-fi&quot; /&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dependencies and References:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/windows-toolkit/WindowsCommunityToolkit&quot;&gt;Windows Community Toolkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/Xaml-Controls-Gallery&quot;&gt;XAML Controls Gallery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/microsoft-ui-xaml&quot;&gt;Windows UI Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/WilliamABradley/ColorCode-Universal&quot;&gt;ColorCode Universal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/CharsetDetector/UTF-unknown&quot;&gt;UTF Unknown&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mmanela/diffplex&quot;&gt;DiffPlex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/Win2D&quot;&gt;Win2D&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Special Thanks:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;http://zhouyiwork.com/&quot;&gt;Yi Zhou&lt;/a&gt; - App icon designer, Notepads App Icon (old) is greatly inspired by the new icon for Windows Terminal.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/mah-qurashy&quot;&gt;Mahmoud Qurashy&lt;/a&gt; - App icon and file icon(s) designer, creator of the new Notepads App Icon.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Alexandru Sterpu - App Tester, who helped me a lot during preview/beta testing.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Code Contributors: &lt;a href=&quot;https://github.com/chenghanzou&quot;&gt;DanverZ&lt;/a&gt;, &lt;a href=&quot;https://github.com/BernhardWebstudio&quot;&gt;BernhardWebstudio&lt;/a&gt;, &lt;a href=&quot;https://github.com/AmionSky&quot;&gt;Csányi István&lt;/a&gt;, &lt;a href=&quot;https://github.com/MairwunNx&quot;&gt;Pavel Erokhin&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sergio0694&quot;&gt;Sergio Pedri&lt;/a&gt;, &lt;a href=&quot;https://github.com/pinholucas&quot;&gt;Lucas Pinho B. Santos&lt;/a&gt;, &lt;a href=&quot;https://github.com/soumyamahunt&quot;&gt;Soumya Ranjan Mahunt&lt;/a&gt;, &lt;a href=&quot;https://github.com/be5invis&quot;&gt;Belleve Invis&lt;/a&gt;, &lt;a href=&quot;https://github.com/Maickonn&quot;&gt;Maickonn Richard&lt;/a&gt;, &lt;a href=&quot;https://github.com/XamDR&quot;&gt;Xam&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Documentation Contributors: &lt;a href=&quot;https://github.com/sercraig&quot;&gt;Craig S.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Localization Contributors:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[fr-FR][French (France)]: &lt;a href=&quot;https://github.com/frousselet&quot;&gt;François Rousselet&lt;/a&gt;, &lt;a href=&quot;https://github.com/FJduFou&quot;&gt;François-Joseph du Fou&lt;/a&gt;, &lt;a href=&quot;https://github.com/ArmandDelessert&quot;&gt;Armand Delessert&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[es-ES][Spanish (Spain)]: &lt;a href=&quot;https://github.com/joseppinilla&quot;&gt;Jose Pinilla&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[zh-CN][Chinese (S)]: &lt;a href=&quot;https://github.com/lindexi&quot;&gt;lindexi&lt;/a&gt;, &lt;a href=&quot;https://github.com/walterlv&quot;&gt;walterlv&lt;/a&gt;, &lt;a href=&quot;https://github.com/0x7c13&quot;&gt;0x7c13&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[hu-HU][Hungarian (Hungary)]: &lt;a href=&quot;https://github.com/AmionSky&quot;&gt;Csányi István&lt;/a&gt;, &lt;a href=&quot;https://github.com/KristofKekesi&quot;&gt;Kristóf Kékesi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[tr-TR][Turkish (Turkey)]: &lt;a href=&quot;https://github.com/validatedev&quot;&gt;Mert Can Demir&lt;/a&gt;, &lt;a href=&quot;https://github.com/EmirhakanTanhan&quot;&gt;Emirhakan Tanhan&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[ja-JP][Japanese (Japan)]: &lt;a href=&quot;https://github.com/pnp0a03&quot;&gt;Mamoru Satoh&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[de-DE][German (Germany)]/[de-CH][German (Switzerland)]: &lt;a href=&quot;https://github.com/WalterWolf49&quot;&gt;Walter Wolf&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[ru-RU][Russian (Russia)]: &lt;a href=&quot;https://github.com/MairwunNx&quot;&gt;Pavel Erokhin&lt;/a&gt;, &lt;a href=&quot;https://github.com/krlvm&quot;&gt;krlvm&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[fi-FI][Finnish (Finland)]: &lt;a href=&quot;https://github.com/sauihdik&quot;&gt;Esa Elo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[uk-UA][Ukrainian (Ukraine)]: &lt;a href=&quot;https://github.com/Tarik02&quot;&gt;Taras Fomin aka Tarik02&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[it-IT][Italian (Italy)]: &lt;a href=&quot;https://github.com/guari&quot;&gt;Andrea Guarinoni&lt;/a&gt;, &lt;a href=&quot;https://github.com/66Bunz&quot;&gt;Bunz&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[cs-CZ][Czech (Czech Republic)]: &lt;a href=&quot;https://github.com/JanRajnoha&quot;&gt;Jan Rajnoha&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[pt-BR][Portuguese (Brazil)]: &lt;a href=&quot;https://github.com/pinholucas&quot;&gt;Lucas Pinho B. Santos&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[ko-KR][Korean (Korea)]: &lt;a href=&quot;https://github.com/tdh8316&quot;&gt;Donghyeok Tak&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[hi-IN][Hindi (India)]/[or-IN][Odia (India)]: &lt;a href=&quot;https://github.com/soumyamahunt&quot;&gt;Soumya Ranjan Mahunt&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[pl-PL][Polish (Poland)]: &lt;a href=&quot;https://github.com/Daxxxis&quot;&gt;Daxxxis&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[ka-GE][Georgian (Georgia)]: &lt;a href=&quot;https://github.com/gmaza&quot;&gt;guram mazanashvili&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[hr-HR][Croatian (Croatia)]: &lt;a href=&quot;https://github.com/milotype&quot;&gt;milotype&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[zh-TW][Chinese (T)]: &lt;a href=&quot;https://github.com/SeaBao&quot;&gt;Tony Yao&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[pt-PT][Portuguese (Portugal)]: &lt;a href=&quot;https://github.com/oleitao&quot;&gt;O.Leitão&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[sr-Latn][Serbian (Latin)]: &lt;a href=&quot;https://github.com/bzzrak&quot;&gt;bzzrak&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[sr-cyrl][Serbian (Cyrillic)]: &lt;a href=&quot;https://github.com/bzzrak&quot;&gt;bzzrak&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[nl-NL][Dutch (Netherlands)]: &lt;a href=&quot;https://github.com/Stephan-P&quot;&gt;Stephan Paternotte&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Notepads CI/CD pipeline: Built with ❤ by &lt;a href=&quot;https://pipeline.foundation&quot;&gt;Pipeline Foundation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/0&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/0&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/1&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/1&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/2&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/2&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/3&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/3&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/4&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/4&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/5&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/5&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/6&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/6&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/links/7&quot;&gt;&lt;img src=&quot;https://sourcerer.io/fame/0x7c13/0x7c13/Notepads/images/7&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Stay tuned 📢:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/VqetCub&quot;&gt;Notepads Discord Server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>SuperStudio/SuperCom</title>
      <link>https://github.com/SuperStudio/SuperCom</link>
      <description>&lt;p&gt;SuperCom 是一款串口调试工具&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/README.md&quot;&gt;中文&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/README_EN.md&quot;&gt;English&lt;/a&gt;&lt;/p&gt; 
&lt;h1 align=&quot;center&quot;&gt;SuperCom&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/#&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/.NET%20Framework-4.7.2-d.svg?sanitize=true&quot; alt=&quot;.NET CORE&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/#&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Platform-Win-brightgreen.svg?sanitize=true&quot; alt=&quot;Platform&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/#&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/license-GPL%203.0-blue&quot; alt=&quot;LICENSE&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/SuperStudio/SuperCom&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/SuperStudio/SuperCom?label=Star%20this%20repo&quot; alt=&quot;Star&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/SuperStudio/SuperCom/fork&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/forks/SuperStudio/SuperCom?label=Fork%20this%20repo&quot; alt=&quot;Fork&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;SuperCom 是&lt;strong&gt;超级串口调试工具&lt;/strong&gt;，用于 Window 串口日志的采集、存储、可视化等功能&lt;/p&gt; 
&lt;p&gt;下载地址：&lt;a href=&quot;https://github.com/SuperStudio/SuperCom/releases&quot;&gt;点此下载&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://imgse.com/i/p9reenx&quot;&gt;&lt;img src=&quot;https://s1.ax1x.com/2023/05/10/p9reenx.png&quot; alt=&quot;p9reenx.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://api.star-history.com/svg?repos=SuperStudio/SuperCom&amp;amp;type=Date&quot; alt=&quot;star-history&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;关于&lt;/h1&gt; 
&lt;p&gt;SuperCom 是一款&lt;strong&gt;美观&lt;/strong&gt;、&lt;strong&gt;流畅&lt;/strong&gt;、&lt;strong&gt;功能丰富&lt;/strong&gt;、&lt;strong&gt;高效&lt;/strong&gt;的串口调试工具，支持以下特点：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;同时打开多个串口进行监听&lt;/li&gt; 
 &lt;li&gt;串口日志自动保存&lt;/li&gt; 
 &lt;li&gt;串口日志支持滚屏/固定&lt;/li&gt; 
 &lt;li&gt;可以设置波特率、位大小等串口设置&lt;/li&gt; 
 &lt;li&gt;可发送各种 AT 指令&lt;/li&gt; 
 &lt;li&gt;具有各种特性&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;贡献者&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/itldg&quot; target=&quot;_blank&quot;&gt;&lt;img style=&quot;border-radius:50%!important&quot; width=&quot;64px&quot; alt=&quot;itldg&quot; src=&quot;https://avatars.githubusercontent.com/u/13432299?s=64&amp;amp;v=4&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;使用文档&lt;/h1&gt; 
&lt;p&gt;用户文档：&lt;a href=&quot;https://github.com/SuperStudio/SuperCom/wiki&quot;&gt;Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;开发者文档：&lt;a href=&quot;https://github.com/SuperStudio/SuperCom/wiki/20_Developer&quot;&gt;Developer&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;创新特性&lt;/h1&gt; 
&lt;h2&gt;语法高亮&lt;/h2&gt; 
&lt;img src=&quot;https://s1.ax1x.com/2023/05/10/p9renHK.png&quot; alt=&quot;image-20230109234347852&quot; style=&quot;zoom:80%;&quot; /&gt; 
&lt;p&gt;可自定义语法高亮&lt;/p&gt; 
&lt;img src=&quot;https://s1.ax1x.com/2023/05/10/p9reQ4e.png&quot; alt=&quot;image-20230109234412138&quot; style=&quot;zoom:80%;&quot; /&gt; 
&lt;h2&gt;命令自动运行&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/Image/1.gif&quot; alt=&quot;1&quot; style=&quot;zoom:80%;&quot; /&gt; 
&lt;p&gt;或者&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/Image/2.gif&quot; alt=&quot;2&quot; style=&quot;zoom:80%;&quot; /&gt; 
&lt;h2&gt;快捷键&lt;/h2&gt; 
&lt;img src=&quot;https://s1.ax1x.com/2023/05/10/p9re33d.png&quot; alt=&quot;image-20230109234634330&quot; style=&quot;zoom:80%;&quot; /&gt; 
&lt;h2&gt;插件与皮肤&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/Image/3.gif&quot; alt=&quot;3&quot; style=&quot;zoom:80%;&quot; /&gt; 
&lt;p&gt;切换皮肤&lt;/p&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/Image/4.gif&quot; alt=&quot;4&quot; style=&quot;zoom:80%;&quot; /&gt; 
&lt;h2&gt;在线升级&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/Image/5.gif&quot; alt=&quot;5&quot; style=&quot;zoom:80%;&quot; /&gt; 
&lt;h2&gt;HEX 与字符串互转&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/Image/hex.gif&quot; alt=&quot;hex&quot; style=&quot;zoom:80%;&quot; /&gt; 
&lt;h2&gt;时间戳与北京时间互转&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/Image/time.gif&quot; alt=&quot;time&quot; style=&quot;zoom:80%;&quot; /&gt; 
&lt;h2&gt;格式化 JSON 与合并行&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/SuperStudio/SuperCom/master/Image/6.gif&quot; alt=&quot;6&quot; style=&quot;zoom:80%;&quot; /&gt; 
&lt;h1&gt;分支说明&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;分支名&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;master&lt;/td&gt; 
   &lt;td&gt;主分支，其它用户拉取的主要代码，同时也是 PR 的目标分支&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;dev-chao&lt;/td&gt; 
   &lt;td&gt;私人的开发分支，避免影响到他人拉取&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;release_20220930&lt;/td&gt; 
   &lt;td&gt;发布分支，用于各个项目引用，保证稳定的依赖关系&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;（理论）每 3 个月更新一次 release 分支&lt;/p&gt; 
&lt;h1&gt;关于虚拟化串口&lt;/h1&gt; 
&lt;p&gt;工具来源于：&lt;a href=&quot;https://sourceforge.net/p/com0com/&quot;&gt;com0com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;该工具命令行用法如下&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Usage:
  [options] &amp;lt;command&amp;gt;

Options:
  --output &amp;lt;file&amp;gt;              - file for output, default is console
  --wait [+]&amp;lt;to&amp;gt;               - wait &amp;lt;to&amp;gt; seconds for install completion. If
                                 &amp;lt;to&amp;gt; has &#39;+&#39; prefix then ask user to continue
                                 waiting after &amp;lt;to&amp;gt; seconds elapsing
                                 (by default &amp;lt;to&amp;gt; is 0 - no wait)
  --detail-prms                - show detailed parameters
  --silent                     - suppress dialogs if possible
  --no-update                  - do not update driver while install command
                                 execution (the other install command w/o this
                                 option expected later)
  --no-update-fnames           - do not update friendly names
  --show-fnames                - show friendly names activity

Commands:
  install &amp;lt;n&amp;gt; &amp;lt;prmsA&amp;gt; &amp;lt;prmsB&amp;gt;  - install a pair of linked ports with
   or                            identifiers CNCA&amp;lt;n&amp;gt; and CNCB&amp;lt;n&amp;gt;
  install &amp;lt;prmsA&amp;gt; &amp;lt;prmsB&amp;gt;        (by default &amp;lt;n&amp;gt; is the first not used number),
                                 set their parameters to &amp;lt;prmsA&amp;gt; and &amp;lt;prmsB&amp;gt;
  install                      - can be used to update driver after execution
                                 of install commands with --no-update option
  remove &amp;lt;n&amp;gt;                   - remove a pair of linked ports with
                                 identifiers CNCA&amp;lt;n&amp;gt; and CNCB&amp;lt;n&amp;gt;
  disable all                  - disable all ports in current hardware profile
  enable all                   - enable all ports in current hardware profile
  change &amp;lt;portid&amp;gt; &amp;lt;prms&amp;gt;       - set parameters &amp;lt;prms&amp;gt; for port with
                                 identifier &amp;lt;portid&amp;gt;
  list                         - for each port show its identifier and
                                 parameters
  preinstall                   - preinstall driver
  update                       - update driver
  reload                       - reload driver
  uninstall                    - uninstall all ports and the driver
  infclean                     - clean old INF files
  busynames &amp;lt;pattern&amp;gt;          - show names that already in use and match the
                                 &amp;lt;pattern&amp;gt; (wildcards: &#39;*&#39; and &#39;?&#39;)
  updatefnames                 - update friendly names
  listfnames                   - for each bus and port show its identifier and
                                 friendly name
  quit                         - quit
  help                         - print this help

Syntax of port parameters string:
  -                       - use driver&#39;s defaults for all parameters
  *                       - use current settings for all parameters
  &amp;lt;par&amp;gt;=&amp;lt;val&amp;gt;[,...]       - set value &amp;lt;val&amp;gt; for each parameter &amp;lt;par&amp;gt;

Parameters:
  PortName=&amp;lt;portname&amp;gt;     - set port name to &amp;lt;portname&amp;gt;
                            (port identifier by default)
  EmuBR={yes|no}          - enable/disable baud rate emulation in the direction
                            to the paired port (disabled by default)
  EmuOverrun={yes|no}     - enable/disable buffer overrun (disabled by default)
  EmuNoise=&amp;lt;n&amp;gt;            - probability in range 0-0.99999999 of error per
                            character frame in the direction to the paired port
                            (0 by default)
  AddRTTO=&amp;lt;n&amp;gt;             - add &amp;lt;n&amp;gt; milliseconds to the total time-out period
                            for read operations (0 by default)
  AddRITO=&amp;lt;n&amp;gt;             - add &amp;lt;n&amp;gt; milliseconds to the maximum time allowed to
                            elapse between the arrival of two characters for
                            read operations (0 by default)
  PlugInMode={yes|no}     - enable/disable plug-in mode, the plug-in mode port
                            is hidden and can&#39;t be open if the paired port is
                            not open (disabled by default)
  ExclusiveMode={yes|no}  - enable/disable exclusive mode, the exclusive mode
                            port is hidden if it is open (disabled by default)
  HiddenMode={yes|no}     - enable/disable hidden mode, the hidden mode port is
                            hidden as it is possible for port enumerators
                            (disabled by default)
  AllDataBits={yes|no}    - enable/disable all data bits transfer disregard
                            data bits setting (disabled by default)
  cts=[!]&amp;lt;p&amp;gt;              - wire CTS pin to &amp;lt;p&amp;gt; (rrts by default)
  dsr=[!]&amp;lt;p&amp;gt;              - wire DSR pin to &amp;lt;p&amp;gt; (rdtr by default)
  dcd=[!]&amp;lt;p&amp;gt;              - wire DCD pin to &amp;lt;p&amp;gt; (rdtr by default)
  ri=[!]&amp;lt;p&amp;gt;               - wire RI pin to &amp;lt;p&amp;gt; (!on by default)

The possible values of &amp;lt;p&amp;gt; above can be rrts, lrts, rdtr, ldtr, rout1, lout1,
rout2, lout2 (remote/local RTS/DTR/OUT1/OUT2), ropen, lopen (logical ON if
remote/local port is open) or on (logical ON). The exclamation sign (!) can be
used to invert the value.

Special values:
  -                       - use driver&#39;s default value
  *                       - use current setting

If parameter &#39;PortName=COM#&#39; is used then the Ports class installer will be
invoked to set the real port name. The Ports class installer selects the COM
port number and sets the real port name to COM&amp;lt;n&amp;gt;, where &amp;lt;n&amp;gt; is the selected
port number. Thereafter use parameter RealPortName=COM&amp;lt;n&amp;gt; to change the real
port name.

Examples:
  install - -
  install 5 * *
  remove 0
  install PortName=COM2 PortName=COM4
  install PortName=COM5,EmuBR=yes,EmuOverrun=yes -
  change CNCA0 EmuBR=yes,EmuOverrun=yes
  change CNCA0 PortName=-
  list
  uninstall
  busynames COM?*

command&amp;gt;

&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>2dust/v2rayN</title>
      <link>https://github.com/2dust/v2rayN</link>
      <description>&lt;p&gt;A GUI client for Windows, Linux and macOS, support Xray and sing-box and others&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;v2rayN&lt;/h1&gt; 
&lt;p&gt;A GUI client for Windows, Linux and macOS, support &lt;a href=&quot;https://github.com/XTLS/Xray-core&quot;&gt;Xray&lt;/a&gt; and &lt;a href=&quot;https://github.com/SagerNet/sing-box&quot;&gt;sing-box&lt;/a&gt; and &lt;a href=&quot;https://github.com/2dust/v2rayN/wiki/List-of-supported-cores&quot;&gt;others&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/2dust/v2rayN/commits/master&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/commit-activity/m/2dust/v2rayN&quot; alt=&quot;GitHub commit activity&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.codefactor.io/repository/github/2dust/v2rayn&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/2dust/v2rayn/badge&quot; alt=&quot;CodeFactor&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/2dust/v2rayN/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/2dust/v2rayN/latest/total?logo=github&quot; alt=&quot;GitHub Releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://t.me/v2rayn&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Chat%20on-Telegram-brightgreen.svg?sanitize=true&quot; alt=&quot;Chat on Telegram&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href=&quot;https://github.com/2dust/v2rayN/wiki&quot;&gt;Wiki&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Telegram Channel&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://t.me/github_2dust&quot;&gt;github_2dust&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/semantic-kernel</title>
      <link>https://github.com/microsoft/semantic-kernel</link>
      <description>&lt;p&gt;Integrate cutting-edge LLM technology quickly and easily into your apps&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Semantic Kernel&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Build intelligent AI agents and multi-agent systems with this enterprise-ready orchestration framework&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/raw/main/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/license/microsoft/semantic-kernel&quot; alt=&quot;License: MIT&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://pypi.org/project/semantic-kernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/pypi/v/semantic-kernel&quot; alt=&quot;Python package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/Microsoft.SemanticKernel/&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/Microsoft.SemanticKernel&quot; alt=&quot;Nuget package&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;&lt;img src=&quot;https://img.shields.io/discord/1063152441819942922?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=d82679&quot; alt=&quot;Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Semantic Kernel?&lt;/h2&gt; 
&lt;p&gt;Semantic Kernel is a model-agnostic SDK that empowers developers to build, orchestrate, and deploy AI agents and multi-agent systems. Whether you&#39;re building a simple chatbot or a complex multi-agent workflow, Semantic Kernel provides the tools you need with enterprise-grade reliability and flexibility.&lt;/p&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt;: 3.10+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.NET&lt;/strong&gt;: .NET 8.0+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Java&lt;/strong&gt;: JDK 17+&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OS Support&lt;/strong&gt;: Windows, macOS, Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Model Flexibility&lt;/strong&gt;: Connect to any LLM with built-in support for &lt;a href=&quot;https://platform.openai.com/docs/introduction&quot;&gt;OpenAI&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/products/ai-services/openai-service&quot;&gt;Azure OpenAI&lt;/a&gt;, &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt;, &lt;a href=&quot;https://www.nvidia.com/en-us/ai-data-science/products/nim-microservices/&quot;&gt;NVidia&lt;/a&gt; and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent Framework&lt;/strong&gt;: Build modular AI agents with access to tools/plugins, memory, and planning capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Agent Systems&lt;/strong&gt;: Orchestrate complex workflows with collaborating specialist agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plugin Ecosystem&lt;/strong&gt;: Extend with native code functions, prompt templates, OpenAPI specs, or Model Context Protocol (MCP)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vector DB Support&lt;/strong&gt;: Seamless integration with &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/search/search-what-is-azure-search&quot;&gt;Azure AI Search&lt;/a&gt;, &lt;a href=&quot;https://www.elastic.co/&quot;&gt;Elasticsearch&lt;/a&gt;, &lt;a href=&quot;https://docs.trychroma.com/getting-started&quot;&gt;Chroma&lt;/a&gt;, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multimodal Support&lt;/strong&gt;: Process text, vision, and audio inputs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Local Deployment&lt;/strong&gt;: Run with &lt;a href=&quot;https://ollama.com/&quot;&gt;Ollama&lt;/a&gt;, &lt;a href=&quot;https://lmstudio.ai/&quot;&gt;LMStudio&lt;/a&gt;, or &lt;a href=&quot;https://onnx.ai/&quot;&gt;ONNX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Process Framework&lt;/strong&gt;: Model complex business processes with a structured workflow approach&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise Ready&lt;/strong&gt;: Built for observability, security, and stable APIs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;First, set the environment variable for your AI Services:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Azure OpenAI:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;export AZURE_OPENAI_API_KEY=AAA....
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;or OpenAI directly:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;export OPENAI_API_KEY=sk-...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;pip install semantic-kernel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;.NET&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;dotnet add package Microsoft.SemanticKernel
dotnet add package Microsoft.SemanticKernel.Agents.Core
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Java&lt;/h3&gt; 
&lt;p&gt;See &lt;a href=&quot;https://github.com/microsoft/semantic-kernel-java/raw/main/BUILD.md&quot;&gt;semantic-kernel-java build&lt;/a&gt; for instructions.&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;h3&gt;Basic Agent - Python&lt;/h3&gt; 
&lt;p&gt;Create a simple assistant that responds to user prompts:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import asyncio
from semantic_kernel.agents import ChatCompletionAgent
from semantic_kernel.connectors.ai.open_ai import AzureChatCompletion

async def main():
    # Initialize a chat agent with basic instructions
    agent = ChatCompletionAgent(
        service=AzureChatCompletion(),
        name=&quot;SK-Assistant&quot;,
        instructions=&quot;You are a helpful assistant.&quot;,
    )

    # Get a response to a user message
    response = await agent.get_response(messages=&quot;Write a haiku about Semantic Kernel.&quot;)
    print(response.content)

asyncio.run(main()) 

# Output:
# Language&#39;s essence,
# Semantic threads intertwine,
# Meaning&#39;s core revealed.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Basic Agent - .NET&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using Microsoft.SemanticKernel;
using Microsoft.SemanticKernel.Agents;

var builder = Kernel.CreateBuilder();
builder.AddAzureOpenAIChatCompletion(
                Environment.GetEnvironmentVariable(&quot;AZURE_OPENAI_DEPLOYMENT&quot;),
                Environment.GetEnvironmentVariable(&quot;AZURE_OPENAI_ENDPOINT&quot;),
                Environment.GetEnvironmentVariable(&quot;AZURE_OPENAI_API_KEY&quot;)
                );
var kernel = builder.Build();

ChatCompletionAgent agent =
    new()
    {
        Name = &quot;SK-Agent&quot;,
        Instructions = &quot;You are a helpful assistant.&quot;,
        Kernel = kernel,
    };

await foreach (AgentResponseItem&amp;lt;ChatMessageContent&amp;gt; response 
    in agent.InvokeAsync(&quot;Write a haiku about Semantic Kernel.&quot;))
{
    Console.WriteLine(response.Message);
}

// Output:
// Language&#39;s essence,
// Semantic threads intertwine,
// Meaning&#39;s core revealed.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Agent with Plugins - Python&lt;/h3&gt; 
&lt;p&gt;Enhance your agent with custom tools (plugins) and structured output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import asyncio
from typing import Annotated
from pydantic import BaseModel
from semantic_kernel.agents import ChatCompletionAgent
from semantic_kernel.connectors.ai.open_ai import AzureChatCompletion, OpenAIChatPromptExecutionSettings
from semantic_kernel.functions import kernel_function, KernelArguments

class MenuPlugin:
    @kernel_function(description=&quot;Provides a list of specials from the menu.&quot;)
    def get_specials(self) -&amp;gt; Annotated[str, &quot;Returns the specials from the menu.&quot;]:
        return &quot;&quot;&quot;
        Special Soup: Clam Chowder
        Special Salad: Cobb Salad
        Special Drink: Chai Tea
        &quot;&quot;&quot;

    @kernel_function(description=&quot;Provides the price of the requested menu item.&quot;)
    def get_item_price(
        self, menu_item: Annotated[str, &quot;The name of the menu item.&quot;]
    ) -&amp;gt; Annotated[str, &quot;Returns the price of the menu item.&quot;]:
        return &quot;$9.99&quot;

class MenuItem(BaseModel):
    price: float
    name: str

async def main():
    # Configure structured output format
    settings = OpenAIChatPromptExecutionSettings()
    settings.response_format = MenuItem

    # Create agent with plugin and settings
    agent = ChatCompletionAgent(
        service=AzureChatCompletion(),
        name=&quot;SK-Assistant&quot;,
        instructions=&quot;You are a helpful assistant.&quot;,
        plugins=[MenuPlugin()],
        arguments=KernelArguments(settings)
    )

    response = await agent.get_response(messages=&quot;What is the price of the soup special?&quot;)
    print(response.content)

    # Output:
    # The price of the Clam Chowder, which is the soup special, is $9.99.

asyncio.run(main()) 
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Agent with Plugin - .NET&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using System.ComponentModel;
using Microsoft.SemanticKernel;
using Microsoft.SemanticKernel.Agents;
using Microsoft.SemanticKernel.ChatCompletion;

var builder = Kernel.CreateBuilder();
builder.AddAzureOpenAIChatCompletion(
                Environment.GetEnvironmentVariable(&quot;AZURE_OPENAI_DEPLOYMENT&quot;),
                Environment.GetEnvironmentVariable(&quot;AZURE_OPENAI_ENDPOINT&quot;),
                Environment.GetEnvironmentVariable(&quot;AZURE_OPENAI_API_KEY&quot;)
                );
var kernel = builder.Build();

kernel.Plugins.Add(KernelPluginFactory.CreateFromType&amp;lt;MenuPlugin&amp;gt;());

ChatCompletionAgent agent =
    new()
    {
        Name = &quot;SK-Assistant&quot;,
        Instructions = &quot;You are a helpful assistant.&quot;,
        Kernel = kernel,
        Arguments = new KernelArguments(new PromptExecutionSettings() { FunctionChoiceBehavior = FunctionChoiceBehavior.Auto() })

    };

await foreach (AgentResponseItem&amp;lt;ChatMessageContent&amp;gt; response 
    in agent.InvokeAsync(&quot;What is the price of the soup special?&quot;))
{
    Console.WriteLine(response.Message);
}

sealed class MenuPlugin
{
    [KernelFunction, Description(&quot;Provides a list of specials from the menu.&quot;)]
    public string GetSpecials() =&amp;gt;
        &quot;&quot;&quot;
        Special Soup: Clam Chowder
        Special Salad: Cobb Salad
        Special Drink: Chai Tea
        &quot;&quot;&quot;;

    [KernelFunction, Description(&quot;Provides the price of the requested menu item.&quot;)]
    public string GetItemPrice(
        [Description(&quot;The name of the menu item.&quot;)]
        string menuItem) =&amp;gt;
        &quot;$9.99&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multi-Agent System - Python&lt;/h3&gt; 
&lt;p&gt;Build a system of specialized agents that can collaborate:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import asyncio
from semantic_kernel.agents import ChatCompletionAgent, ChatHistoryAgentThread
from semantic_kernel.connectors.ai.open_ai import AzureChatCompletion, OpenAIChatCompletion

billing_agent = ChatCompletionAgent(
    service=AzureChatCompletion(), 
    name=&quot;BillingAgent&quot;, 
    instructions=&quot;You handle billing issues like charges, payment methods, cycles, fees, discrepancies, and payment failures.&quot;
)

refund_agent = ChatCompletionAgent(
    service=AzureChatCompletion(),
    name=&quot;RefundAgent&quot;,
    instructions=&quot;Assist users with refund inquiries, including eligibility, policies, processing, and status updates.&quot;,
)

triage_agent = ChatCompletionAgent(
    service=OpenAIChatCompletion(),
    name=&quot;TriageAgent&quot;,
    instructions=&quot;Evaluate user requests and forward them to BillingAgent or RefundAgent for targeted assistance.&quot;
    &quot; Provide the full answer to the user containing any information from the agents&quot;,
    plugins=[billing_agent, refund_agent],
)

thread: ChatHistoryAgentThread = None

async def main() -&amp;gt; None:
    print(&quot;Welcome to the chat bot!\n  Type &#39;exit&#39; to exit.\n  Try to get some billing or refund help.&quot;)
    while True:
        user_input = input(&quot;User:&amp;gt; &quot;)

        if user_input.lower().strip() == &quot;exit&quot;:
            print(&quot;\n\nExiting chat...&quot;)
            return False

        response = await triage_agent.get_response(
            messages=user_input,
            thread=thread,
        )

        if response:
            print(f&quot;Agent :&amp;gt; {response}&quot;)

# Agent :&amp;gt; I understand that you were charged twice for your subscription last month, and I&#39;m here to assist you with resolving this issue. Here’s what we need to do next:

# 1. **Billing Inquiry**:
#    - Please provide the email address or account number associated with your subscription, the date(s) of the charges, and the amount charged. This will allow the billing team to investigate the discrepancy in the charges.

# 2. **Refund Process**:
#    - For the refund, please confirm your subscription type and the email address associated with your account.
#    - Provide the dates and transaction IDs for the charges you believe were duplicated.

# Once we have these details, we will be able to:

# - Check your billing history for any discrepancies.
# - Confirm any duplicate charges.
# - Initiate a refund for the duplicate payment if it qualifies. The refund process usually takes 5-10 business days after approval.

# Please provide the necessary details so we can proceed with resolving this issue for you.


if __name__ == &quot;__main__&quot;:
    asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Where to Go Next&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;📖 Try our &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide&quot;&gt;Getting Started Guide&lt;/a&gt; or learn about &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/frameworks/agent/&quot;&gt;Building Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔌 Explore over 100 &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/get-started/detailed-samples&quot;&gt;Detailed Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 Learn about core Semantic Kernel &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/concepts/kernel&quot;&gt;Concepts&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;API References&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/microsoft.semantickernel?view=semantic-kernel-dotnet&quot;&gt;C# API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/python/api/semantic-kernel/semantic_kernel?view=semantic-kernel-python&quot;&gt;Python API reference&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h3&gt;Common Issues&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Authentication Errors&lt;/strong&gt;: Check that your API key environment variables are correctly set&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Availability&lt;/strong&gt;: Verify your Azure OpenAI deployment or OpenAI model access&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Getting Help&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check our &lt;a href=&quot;https://github.com/microsoft/semantic-kernel/issues&quot;&gt;GitHub issues&lt;/a&gt; for known problems&lt;/li&gt; 
 &lt;li&gt;Search the &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;Discord community&lt;/a&gt; for solutions&lt;/li&gt; 
 &lt;li&gt;Include your SDK version and full error messages when asking for help&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Join the community&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions and suggestions to the SK community! One of the easiest ways to participate is to engage in discussions in the GitHub repository. Bug reports and fixes are welcome!&lt;/p&gt; 
&lt;p&gt;For new features, components, or extensions, please open an issue and discuss with us before sending a PR. This is to avoid rejection as we might be taking the core in a different direction, but also to consider the impact on the larger ecosystem.&lt;/p&gt; 
&lt;p&gt;To learn more and get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Read the &lt;a href=&quot;https://aka.ms/sk/learn&quot;&gt;documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Learn how to &lt;a href=&quot;https://learn.microsoft.com/en-us/semantic-kernel/support/contributing&quot;&gt;contribute&lt;/a&gt; to the project&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://github.com/microsoft/semantic-kernel/discussions&quot;&gt;GitHub discussions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ask questions in the &lt;a href=&quot;https://aka.ms/SKDiscord&quot;&gt;Discord community&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Attend &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/COMMUNITY.md&quot;&gt;regular office hours and SK community events&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow the team on our &lt;a href=&quot;https://aka.ms/sk/blog&quot;&gt;blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributor Wall of Fame&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/semantic-kernel/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=microsoft/semantic-kernel&quot; alt=&quot;semantic-kernel contributors&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/&quot;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information, see the &lt;a href=&quot;https://opensource.microsoft.com/codeofconduct/faq/&quot;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&quot;mailto:opencode@microsoft.com&quot;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href=&quot;https://raw.githubusercontent.com/microsoft/semantic-kernel/main/LICENSE&quot;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>builtbybel/Flyoobe</title>
      <link>https://github.com/builtbybel/Flyoobe</link>
      <description>&lt;p&gt;Fly through your Windows 11 setup 🐝&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🐝 Flyoobe (ex-Flyby11) – Windows Setup Assistant&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;No specs? No problem!&lt;/em&gt;&lt;/p&gt; 
&lt;img width=&quot;1024&quot; height=&quot;1024&quot; alt=&quot;Flyoobe_mockup2&quot; src=&quot;https://github.com/user-attachments/assets/8096fa8f-e1b5-4f88-8dfd-938327177aea&quot; /&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📢 Quick Note for Returning Users&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Flyoobe is the natural evolution of Flyby11.&lt;/strong&gt;&lt;br /&gt; The classic Flyby11 upgrader still exists and is included inside Flyoobe,&lt;br /&gt; plus it&#39;s also available as a &lt;strong&gt;separate download&lt;/strong&gt; if you only want the minimal upgrade tool.&lt;/p&gt; 
&lt;p&gt;You can now &lt;strong&gt;choose&lt;/strong&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
   &lt;th&gt;Features&lt;/th&gt; 
   &lt;th&gt;Download&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Flyoobe&lt;/strong&gt; (New)&lt;/td&gt; 
   &lt;td&gt;Upgrade + OOBE Toolkit&lt;/td&gt; 
   &lt;td&gt;• Windows 10 → 11 upgrades&lt;br /&gt;• OOBE customization&lt;br /&gt;• Tweaks &amp;amp; Debloat&lt;br /&gt;• Scriptable setup extensions&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/builtbybel/Flyoobe/releases/latest&quot;&gt;⬇ Download Flyoobe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Flyby11&lt;/strong&gt; (Classic)&lt;/td&gt; 
   &lt;td&gt;Upgrade Only&lt;/td&gt; 
   &lt;td&gt;• Win10 → Win11 Inplace upgrade&lt;br /&gt;• Hardware check bypass&lt;br /&gt;• Minimal footprint&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/builtbybel/Flyoobe/releases/latest&quot;&gt;⬇ Download Flyby11 Classic&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🐝 Why Flyoobe?&lt;/h2&gt; 
&lt;p&gt;Originally, &lt;strong&gt;Flyby11&lt;/strong&gt; was a simple patcher to remove the restrictions stopping you from installing Windows 11 (24H2) on unsupported hardware.&lt;br /&gt; Old PC? No TPM, no Secure Boot, unsupported CPU? Flyby11 let you install Windows 11 anyway.&lt;/p&gt; 
&lt;p&gt;After helping thousands upgrade, one thing became clear:&lt;br /&gt; &lt;strong&gt;Bypassing checks is only half the battle.&lt;/strong&gt;&lt;br /&gt; We needed a &lt;strong&gt;full setup solution&lt;/strong&gt; — one that respects user choices instead of Microsoft&#39;s defaults.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Flyoobe&lt;/strong&gt; was the next step:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Skip the fluff&lt;/li&gt; 
 &lt;li&gt;Remove the junk&lt;/li&gt; 
 &lt;li&gt;Take full control from first boot&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Because your PC should work for you, not the other way around.&lt;br /&gt; Flyoobe keeps the original idea alive and pushes it even further.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;No complicated steps.&lt;br /&gt; &lt;strong&gt;Just run the tool&lt;/strong&gt; (see &lt;a href=&quot;https://github.com/builtbybel/Flyoobe/releases/latest&quot;&gt;&quot;Releases&quot;&lt;/a&gt;),&lt;br /&gt; unpack if needed, and you&#39;ll be running Windows 11 on your “unsupported” machine in no time.&lt;br /&gt; Think of it as sneaking through the back door without anyone noticing.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛠 Technical Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Flyoobe method:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Uses Windows Server variant of setup → skips TPM, Secure Boot, CPU checks&lt;/li&gt; 
 &lt;li&gt;Still installs &lt;strong&gt;normal Windows 11&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;ISO download/mount handled automatically (via &lt;a href=&quot;https://github.com/pbatard/Fido&quot;&gt;Fido script&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Matches Microsoft’s own documented workaround for upgrading unsupported devices (&lt;a href=&quot;https://support.microsoft.com/en-us/windows/ways-to-install-windows-11-e0edbbfb-cfc5-4011-868b-2ce77ac7c70e&quot;&gt;source&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;💡 Why Keep Flyoobe Alive?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Upgrade freedom&lt;/strong&gt; – Don’t ditch a perfectly fine PC just because Microsoft says so&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Eco-friendly&lt;/strong&gt; – Less e-waste from forced upgrades&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Save money&lt;/strong&gt; – No need for new hardware if yours still works&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⚠ Disclaimer&lt;/h2&gt; 
&lt;p&gt;Flyby11/Flyoobe uses known, currently working methods to bypass Windows 11 24H2 restrictions.&lt;br /&gt; &lt;strong&gt;POPCNT requirement&lt;/strong&gt; cannot be bypassed — needed for Win11 24H2.&lt;br /&gt; Introduced a compatibility checker in v2.3 to warn if unsupported.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📚 FAQ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;❓ Will my unsupported device still get Windows 11 updates?&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Short answer:&lt;/strong&gt; Yes — for now. But there are no guarantees.&lt;/p&gt; 
 &lt;p&gt;Microsoft says: &lt;em&gt;&quot;These devices aren&#39;t guaranteed to receive updates.&quot;&lt;/em&gt;&lt;br /&gt; 📄 &lt;a href=&quot;https://support.microsoft.com/en-us/windows/windows-11-on-devices-that-don-t-meet-minimum-system-requirements-0b2dc4a2-5933-4ad4-9c09-ef0a331518f1&quot;&gt;Source – Microsoft Support&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Reality: Most still get monthly security updates, but:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Likely no automatic major version upgrades&lt;/li&gt; 
  &lt;li&gt;Future updates may fail if new hardware features are required&lt;/li&gt; 
  &lt;li&gt;Microsoft could block updates anytime&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Bottom line: Works today — but unsupported means you accept the risk. 😎&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;❤️ Support Development&lt;/h2&gt; 
&lt;p&gt;If Flyby11 or Flyoobe has helped you, consider supporting its continued development.&lt;br /&gt; Every bit helps keep the project alive and improving. 🙏💌☕&lt;/p&gt; 
&lt;p&gt;👉 &lt;a href=&quot;https://www.paypal.com/donate?hosted_button_id=MY7HX4QLYR4KG&quot;&gt;&lt;strong&gt;Donate here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PowerShell/PowerShell</title>
      <link>https://github.com/PowerShell/PowerShell</link>
      <description>&lt;p&gt;PowerShell for every system!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/assets/ps_black_64.svg?sanitize=true&quot; alt=&quot;logo&quot; /&gt; PowerShell&lt;/h1&gt; 
&lt;p&gt;Welcome to the PowerShell GitHub Community! &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/overview&quot;&gt;PowerShell&lt;/a&gt; is a cross-platform (Windows, Linux, and macOS) automation and configuration tool/framework that works well with your existing tools and is optimized for dealing with structured data (e.g. JSON, CSV, XML, etc.), REST APIs, and object models. It includes a command-line shell, an associated scripting language, and a framework for processing cmdlets.&lt;/p&gt; 
&lt;h2&gt;Windows PowerShell vs. PowerShell 7+&lt;/h2&gt; 
&lt;p&gt;Although this repository started as a fork of the Windows PowerShell codebase, changes made in this repository are not ported back to Windows PowerShell 5.1. This also means that &lt;a href=&quot;https://github.com/PowerShell/PowerShell/issues&quot;&gt;issues tracked here&lt;/a&gt; are only for PowerShell 7.x and higher. Windows PowerShell specific issues should be reported with the &lt;a href=&quot;https://support.microsoft.com/windows/send-feedback-to-microsoft-with-the-feedback-hub-app-f59187f8-8739-22d6-ba93-f66612949332&quot;&gt;Feedback Hub app&lt;/a&gt;, by choosing &quot;Apps &amp;gt; PowerShell&quot; in the category.&lt;/p&gt; 
&lt;h2&gt;New to PowerShell?&lt;/h2&gt; 
&lt;p&gt;If you are new to PowerShell and want to learn more, we recommend reviewing the &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/learn/more-powershell-learning&quot;&gt;getting started&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;Get PowerShell&lt;/h2&gt; 
&lt;p&gt;PowerShell is supported on Windows, macOS, and a variety of Linux platforms. For more information, see &lt;a href=&quot;https://learn.microsoft.com/powershell/scripting/install/installing-powershell&quot;&gt;Installing PowerShell&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Upgrading PowerShell&lt;/h2&gt; 
&lt;p&gt;For best results when upgrading, you should use the same install method you used when you first installed PowerShell. The update method is different for each platform and install method.&lt;/p&gt; 
&lt;h2&gt;Community Dashboard&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://aka.ms/PSPublicDashboard&quot;&gt;Dashboard&lt;/a&gt; with visualizations for community contributions and project status using PowerShell, Azure, and PowerBI.&lt;/p&gt; 
&lt;p&gt;For more information on how and why we built this dashboard, check out this &lt;a href=&quot;https://devblogs.microsoft.com/powershell/powershell-open-source-community-dashboard/&quot;&gt;blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Discussions&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://docs.github.com/discussions/quickstart&quot;&gt;GitHub Discussions&lt;/a&gt; is a feature to enable free and open discussions within the community for topics that are not related to code, unlike issues.&lt;/p&gt; 
&lt;p&gt;This is an experiment we are trying in our repositories, to see if it helps move discussions out of issues so that issues remain actionable by the team or members of the community. There should be no expectation that PowerShell team members are regular participants in these discussions. Individual PowerShell team members may choose to participate in discussions, but the expectation is that community members help drive discussions so that team members can focus on issues.&lt;/p&gt; 
&lt;p&gt;Create or join a &lt;a href=&quot;https://github.com/PowerShell/PowerShell/discussions&quot;&gt;discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Chat&lt;/h2&gt; 
&lt;p&gt;Want to chat with other members of the PowerShell community?&lt;/p&gt; 
&lt;p&gt;There are dozens of topic-specific channels on our community-driven PowerShell Virtual User Group, which you can join on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitter.im/PowerShell/PowerShell&quot;&gt;Gitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://discord.gg/PowerShell&quot;&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://web.libera.chat/#powershell&quot;&gt;IRC&lt;/a&gt; on Libera.Chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://aka.ms/psslack&quot;&gt;Slack&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Build status of nightly builds&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Azure CI (Windows)&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Azure CI (Linux)&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Azure CI (macOS)&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;CodeFactor Grade&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://powershell.visualstudio.com/PowerShell/_build?definitionId=32&quot;&gt;&lt;img src=&quot;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-Windows-daily&quot; alt=&quot;windows-nightly-image&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://powershell.visualstudio.com/PowerShell/_build?definitionId=23&quot;&gt;&lt;img src=&quot;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-linux-daily?branchName=master&quot; alt=&quot;linux-nightly-image&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://powershell.visualstudio.com/PowerShell/_build?definitionId=24&quot;&gt;&lt;img src=&quot;https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-macos-daily?branchName=master&quot; alt=&quot;macOS-nightly-image&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://www.codefactor.io/repository/github/powershell/powershell&quot;&gt;&lt;img src=&quot;https://www.codefactor.io/repository/github/powershell/powershell/badge&quot; alt=&quot;cf-image&quot; /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Developing and Contributing&lt;/h2&gt; 
&lt;p&gt;Want to contribute to PowerShell? Please start with the &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/CONTRIBUTING.md&quot;&gt;Contribution Guide&lt;/a&gt; to learn how to develop and contribute.&lt;/p&gt; 
&lt;p&gt;If you are developing .NET Core C# applications targeting PowerShell Core, &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/FAQ.md#where-do-i-get-the-powershell-core-sdk-package&quot;&gt;check out our FAQ&lt;/a&gt; to learn more about the PowerShell SDK NuGet package.&lt;/p&gt; 
&lt;p&gt;Also, make sure to check out our &lt;a href=&quot;https://github.com/powershell/powershell-rfc&quot;&gt;PowerShell-RFC repository&lt;/a&gt; for request-for-comments (RFC) documents to submit and give comments on proposed and future designs.&lt;/p&gt; 
&lt;h2&gt;Building PowerShell&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Linux&lt;/th&gt; 
   &lt;th&gt;Windows&lt;/th&gt; 
   &lt;th&gt;macOS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/building/linux.md&quot;&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/building/windows-core.md&quot;&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/building/macos.md&quot;&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you have any problems building PowerShell, please start by consulting the developer &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/FAQ.md&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Downloading the Source Code&lt;/h2&gt; 
&lt;p&gt;You can clone the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;git clone https://github.com/PowerShell/PowerShell.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, see &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/docs/git&quot;&gt;working with the PowerShell repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;For support, see the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/.github/SUPPORT.md&quot;&gt;Support Section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Legal and Licensing&lt;/h2&gt; 
&lt;p&gt;PowerShell is licensed under the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/tree/master/LICENSE.txt&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Docker Containers&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Important] The PowerShell container images are now &lt;a href=&quot;https://github.com/PowerShell/Announcements/issues/75&quot;&gt;maintained by the .NET team&lt;/a&gt;. The containers at &lt;code&gt;mcr.microsoft.com/powershell&lt;/code&gt; are currently not maintained.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;License: By requesting and using the Container OS Image for Windows containers, you acknowledge, understand, and consent to the Supplemental License Terms available on &lt;a href=&quot;https://mcr.microsoft.com/en-us/product/powershell/tags&quot;&gt;Microsoft Artifact Registry&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Telemetry&lt;/h3&gt; 
&lt;p&gt;Please visit our &lt;a href=&quot;https://learn.microsoft.com/powershell/module/microsoft.powershell.core/about/about_telemetry&quot;&gt;about_Telemetry&lt;/a&gt; topic to read details about telemetry gathered by PowerShell.&lt;/p&gt; 
&lt;h2&gt;Governance&lt;/h2&gt; 
&lt;p&gt;The governance policy for the PowerShell project is described the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/raw/master/docs/community/governance.md&quot;&gt;PowerShell Governance&lt;/a&gt; document.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/CODE_OF_CONDUCT.md&quot;&gt;Code of Conduct&lt;/a&gt; before participating in this project.&lt;/p&gt; 
&lt;h2&gt;&lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/SECURITY.md&quot;&gt;Security Policy&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;For any security issues, please see our &lt;a href=&quot;https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/SECURITY.md&quot;&gt;Security Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/openai-dotnet</title>
      <link>https://github.com/openai/openai-dotnet</link>
      <description>&lt;p&gt;The official .NET library for the OpenAI API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI .NET API library&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.nuget.org/packages/OpenAI&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/v/openai.svg?sanitize=true&quot; alt=&quot;NuGet stable version&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://www.nuget.org/packages/OpenAI/absoluteLatest&quot;&gt;&lt;img src=&quot;https://img.shields.io/nuget/vpre/openai.svg?sanitize=true&quot; alt=&quot;NuGet preview version&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The OpenAI .NET library provides convenient access to the OpenAI REST API from .NET applications.&lt;/p&gt; 
&lt;p&gt;It is generated from our &lt;a href=&quot;https://github.com/openai/openai-openapi&quot;&gt;OpenAPI specification&lt;/a&gt; in collaboration with Microsoft.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#getting-started&quot;&gt;Getting started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#install-the-nuget-package&quot;&gt;Install the NuGet package&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#using-the-client-library&quot;&gt;Using the client library&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#namespace-organization&quot;&gt;Namespace organization&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#using-the-async-api&quot;&gt;Using the async API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#using-the-openaiclient-class&quot;&gt;Using the &lt;code&gt;OpenAIClient&lt;/code&gt; class&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-dependency-injection&quot;&gt;How to use dependency injection&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-chat-completions-with-streaming&quot;&gt;How to use chat completions with streaming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-chat-completions-with-tools-and-function-calling&quot;&gt;How to use chat completions with tools and function calling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-chat-completions-with-structured-outputs&quot;&gt;How to use chat completions with structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-chat-completions-with-audio&quot;&gt;How to use chat completions with audio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-responses-with-streaming-and-reasoning&quot;&gt;How to use responses with streaming and reasoning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-responses-with-file-search&quot;&gt;How to use responses with file search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-responses-with-web-search&quot;&gt;How to use responses with web search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-generate-text-embeddings&quot;&gt;How to generate text embeddings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-generate-images&quot;&gt;How to generate images&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-transcribe-audio&quot;&gt;How to transcribe audio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-assistants-with-retrieval-augmented-generation-rag&quot;&gt;How to use assistants with retrieval augmented generation (RAG)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-use-assistants-with-streaming-and-vision&quot;&gt;How to use assistants with streaming and vision&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#how-to-work-with-azure-openai&quot;&gt;How to work with Azure OpenAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#advanced-scenarios&quot;&gt;Advanced scenarios&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#using-protocol-methods&quot;&gt;Using protocol methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#mock-a-client-for-testing&quot;&gt;Mock a client for testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#automatically-retrying-errors&quot;&gt;Automatically retrying errors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/#observability&quot;&gt;Observability&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;To call the OpenAI REST API, you will need an API key. To obtain one, first &lt;a href=&quot;https://platform.openai.com/signup&quot;&gt;create a new OpenAI account&lt;/a&gt; or &lt;a href=&quot;https://platform.openai.com/login&quot;&gt;log in&lt;/a&gt;. Next, navigate to the &lt;a href=&quot;https://platform.openai.com/account/api-keys&quot;&gt;API key page&lt;/a&gt; and select &quot;Create new secret key&quot;, optionally naming the key. Make sure to save your API key somewhere safe and do not share it with anyone.&lt;/p&gt; 
&lt;h3&gt;Install the NuGet package&lt;/h3&gt; 
&lt;p&gt;Add the client library to your .NET project by installing the &lt;a href=&quot;https://www.nuget.org/&quot;&gt;NuGet&lt;/a&gt; package via your IDE or by running the following command in the .NET CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cli&quot;&gt;dotnet add package OpenAI
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you would like to try the latest preview version, remember to append the &lt;code&gt;--prerelease&lt;/code&gt; command option.&lt;/p&gt; 
&lt;p&gt;Note that the code examples included below were written using &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/8.0&quot;&gt;.NET 8&lt;/a&gt;. The OpenAI .NET library is compatible with all .NET Standard 2.0 applications, but the syntax used in some of the code examples in this document may depend on newer language features.&lt;/p&gt; 
&lt;h2&gt;Using the client library&lt;/h2&gt; 
&lt;p&gt;The full API of this library can be found in the &lt;a href=&quot;https://github.com/openai/openai-dotnet/raw/main/api/OpenAI.netstandard2.0.cs&quot;&gt;OpenAI.netstandard2.0.cs&lt;/a&gt; file, and there are many &lt;a href=&quot;https://github.com/openai/openai-dotnet/tree/main/examples&quot;&gt;code examples&lt;/a&gt; to help. For instance, the following snippet illustrates the basic use of the chat completions API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Chat;

ChatClient client = new(model: &quot;gpt-4o&quot;, apiKey: Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

ChatCompletion completion = client.CompleteChat(&quot;Say &#39;this is a test.&#39;&quot;);

Console.WriteLine($&quot;[ASSISTANT]: {completion.Content[0].Text}&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;While you can pass your API key directly as a string, it is highly recommended that you keep it in a secure location and instead access it via an environment variable or configuration file as shown above to avoid storing it in source control.&lt;/p&gt; 
&lt;h3&gt;Using a custom base URL and API key&lt;/h3&gt; 
&lt;p&gt;If you need to connect to an alternative API endpoint (for example, a proxy or self-hosted OpenAI-compatible LLM), you can specify a custom base URL and API key using the &lt;code&gt;ApiKeyCredential&lt;/code&gt; and &lt;code&gt;OpenAIClientOptions&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI;
using OpenAI.Chat;

ChatClient client = new(
    model: &quot;MODEL_NAME&quot;,
    credential: new ApiKeyCredential(Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;)),
    options: new OpenAIClientOptions() 
    { 
        Endpoint = new Uri(&quot;BASE_URL&quot;)
    }
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;CHAT_MODEL&lt;/code&gt; with your model name and &lt;code&gt;BASE_URL&lt;/code&gt; with your endpoint URI. This is useful when working with OpenAI-compatible APIs or custom deployments.&lt;/p&gt; 
&lt;h3&gt;Namespace organization&lt;/h3&gt; 
&lt;p&gt;The library is organized into namespaces by feature areas in the OpenAI REST API. Each namespace contains a corresponding client class.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Namespace&lt;/th&gt; 
   &lt;th&gt;Client class&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Assistants&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AssistantClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Audio&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AudioClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Batch&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;BatchClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Chat&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ChatClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Embeddings&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;EmbeddingClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Evals&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;EvaluationClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.FineTuning&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;FineTuningClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Files&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OpenAIFileClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Images&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ImageClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Models&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OpenAIModelClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Moderations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ModerationClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Realtime&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;RealtimeClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.Responses&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OpenAIResponseClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OpenAI.VectorStores&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;VectorStoreClient&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Using the async API&lt;/h3&gt; 
&lt;p&gt;Every client method that performs a synchronous API call has an asynchronous variant in the same client class. For instance, the asynchronous variant of the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method is &lt;code&gt;CompleteChatAsync&lt;/code&gt;. To rewrite the call above using the asynchronous counterpart, simply &lt;code&gt;await&lt;/code&gt; the call to the corresponding async variant:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;ChatCompletion completion = await client.CompleteChatAsync(&quot;Say &#39;this is a test.&#39;&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using the &lt;code&gt;OpenAIClient&lt;/code&gt; class&lt;/h3&gt; 
&lt;p&gt;In addition to the namespaces mentioned above, there is also the parent &lt;code&gt;OpenAI&lt;/code&gt; namespace itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This namespace contains the &lt;code&gt;OpenAIClient&lt;/code&gt; class, which offers certain conveniences when you need to work with multiple feature area clients. Specifically, you can use an instance of this class to create instances of the other clients and have them share the same implementation details, which might be more efficient.&lt;/p&gt; 
&lt;p&gt;You can create an &lt;code&gt;OpenAIClient&lt;/code&gt; by specifying the API key that all clients will use for authentication:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIClient client = new(Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, to create an instance of an &lt;code&gt;AudioClient&lt;/code&gt;, for example, you can call the &lt;code&gt;OpenAIClient&lt;/code&gt;&#39;s &lt;code&gt;GetAudioClient&lt;/code&gt; method by passing the OpenAI model that the &lt;code&gt;AudioClient&lt;/code&gt; will use, just as if you were using the &lt;code&gt;AudioClient&lt;/code&gt; constructor directly. If necessary, you can create additional clients of the same type to target different models.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;AudioClient ttsClient = client.GetAudioClient(&quot;tts-1&quot;);
AudioClient whisperClient = client.GetAudioClient(&quot;whisper-1&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use dependency injection&lt;/h2&gt; 
&lt;p&gt;The OpenAI clients are &lt;strong&gt;thread-safe&lt;/strong&gt; and can be safely registered as &lt;strong&gt;singletons&lt;/strong&gt; in ASP.NET Core&#39;s Dependency Injection container. This maximizes resource efficiency and HTTP connection reuse.&lt;/p&gt; 
&lt;p&gt;Register the &lt;code&gt;ChatClient&lt;/code&gt; as a singleton in your &lt;code&gt;Program.cs&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;builder.Services.AddSingleton&amp;lt;ChatClient&amp;gt;(serviceProvider =&amp;gt;
{
    var apiKey = Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;);
    var model = &quot;gpt-4o&quot;;

    return new ChatClient(model, apiKey);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then inject and use the client in your controllers or services:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[ApiController]
[Route(&quot;api/[controller]&quot;)]
public class ChatController : ControllerBase
{
    private readonly ChatClient _chatClient;

    public ChatController(ChatClient chatClient)
    {
        _chatClient = chatClient;
    }

    [HttpPost(&quot;complete&quot;)]
    public async Task&amp;lt;IActionResult&amp;gt; CompleteChat([FromBody] string message)
    {
        ChatCompletion completion = await _chatClient.CompleteChatAsync(message);
        
        return Ok(new { response = completion.Content[0].Text });
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use chat completions with streaming&lt;/h2&gt; 
&lt;p&gt;When you request a chat completion, the default behavior is for the server to generate it in its entirety before sending it back in a single response. Consequently, long chat completions can require waiting for several seconds before hearing back from the server. To mitigate this, the OpenAI REST API supports the ability to stream partial results back as they are being generated, allowing you to start processing the beginning of the completion before it is finished.&lt;/p&gt; 
&lt;p&gt;The client library offers a convenient approach to working with streaming chat completions. If you wanted to re-write the example from the previous section using streaming, rather than calling the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method, you would call its &lt;code&gt;CompleteChatStreaming&lt;/code&gt; method instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;CollectionResult&amp;lt;StreamingChatCompletionUpdate&amp;gt; completionUpdates = client.CompleteChatStreaming(&quot;Say &#39;this is a test.&#39;&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice that the returned value is a &lt;code&gt;CollectionResult&amp;lt;StreamingChatCompletionUpdate&amp;gt;&lt;/code&gt; instance, which can be enumerated to process the streaming response chunks as they arrive:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Console.Write($&quot;[ASSISTANT]: &quot;);
foreach (StreamingChatCompletionUpdate completionUpdate in completionUpdates)
{
    if (completionUpdate.ContentUpdate.Count &amp;gt; 0)
    {
        Console.Write(completionUpdate.ContentUpdate[0].Text);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can do this asynchronously by calling the &lt;code&gt;CompleteChatStreamingAsync&lt;/code&gt; method to get an &lt;code&gt;AsyncCollectionResult&amp;lt;StreamingChatCompletionUpdate&amp;gt;&lt;/code&gt; and enumerate it using &lt;code&gt;await foreach&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;AsyncCollectionResult&amp;lt;StreamingChatCompletionUpdate&amp;gt; completionUpdates = client.CompleteChatStreamingAsync(&quot;Say &#39;this is a test.&#39;&quot;);

Console.Write($&quot;[ASSISTANT]: &quot;);
await foreach (StreamingChatCompletionUpdate completionUpdate in completionUpdates)
{
    if (completionUpdate.ContentUpdate.Count &amp;gt; 0)
    {
        Console.Write(completionUpdate.ContentUpdate[0].Text);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use chat completions with tools and function calling&lt;/h2&gt; 
&lt;p&gt;In this example, you have two functions. The first function can retrieve a user&#39;s current geographic location (e.g., by polling the location service APIs of the user&#39;s device), while the second function can query the weather in a given location (e.g., by making an API call to some third-party weather service). You want the model to be able to call these functions if it deems it necessary to have this information in order to respond to a user request as part of generating a chat completion. For illustrative purposes, consider the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;private static string GetCurrentLocation()
{
    // Call the location API here.
    return &quot;San Francisco&quot;;
}

private static string GetCurrentWeather(string location, string unit = &quot;celsius&quot;)
{
    // Call the weather API here.
    return $&quot;31 {unit}&quot;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start by creating two &lt;code&gt;ChatTool&lt;/code&gt; instances using the static &lt;code&gt;CreateFunctionTool&lt;/code&gt; method to describe each function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;private static readonly ChatTool getCurrentLocationTool = ChatTool.CreateFunctionTool(
    functionName: nameof(GetCurrentLocation),
    functionDescription: &quot;Get the user&#39;s current location&quot;
);

private static readonly ChatTool getCurrentWeatherTool = ChatTool.CreateFunctionTool(
    functionName: nameof(GetCurrentWeather),
    functionDescription: &quot;Get the current weather in a given location&quot;,
    functionParameters: BinaryData.FromBytes(&quot;&quot;&quot;
        {
            &quot;type&quot;: &quot;object&quot;,
            &quot;properties&quot;: {
                &quot;location&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;description&quot;: &quot;The city and state, e.g. Boston, MA&quot;
                },
                &quot;unit&quot;: {
                    &quot;type&quot;: &quot;string&quot;,
                    &quot;enum&quot;: [ &quot;celsius&quot;, &quot;fahrenheit&quot; ],
                    &quot;description&quot;: &quot;The temperature unit to use. Infer this from the specified location.&quot;
                }
            },
            &quot;required&quot;: [ &quot;location&quot; ]
        }
        &quot;&quot;&quot;u8.ToArray())
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create a &lt;code&gt;ChatCompletionOptions&lt;/code&gt; instance and add both to its &lt;code&gt;Tools&lt;/code&gt; property. You will pass the &lt;code&gt;ChatCompletionOptions&lt;/code&gt; as an argument in your calls to the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;List&amp;lt;ChatMessage&amp;gt; messages = 
[
    new UserChatMessage(&quot;What&#39;s the weather like today?&quot;),
];

ChatCompletionOptions options = new()
{
    Tools = { getCurrentLocationTool, getCurrentWeatherTool },
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When the resulting &lt;code&gt;ChatCompletion&lt;/code&gt; has a &lt;code&gt;FinishReason&lt;/code&gt; property equal to &lt;code&gt;ChatFinishReason.ToolCalls&lt;/code&gt;, it means that the model has determined that one or more tools must be called before the assistant can respond appropriately. In those cases, you must first call the function specified in the &lt;code&gt;ChatCompletion&lt;/code&gt;&#39;s &lt;code&gt;ToolCalls&lt;/code&gt; and then call the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method again while passing the function&#39;s result as an additional &lt;code&gt;ChatRequestToolMessage&lt;/code&gt;. Repeat this process as needed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;bool requiresAction;

do
{
    requiresAction = false;
    ChatCompletion completion = client.CompleteChat(messages, options);

    switch (completion.FinishReason)
    {
        case ChatFinishReason.Stop:
            {
                // Add the assistant message to the conversation history.
                messages.Add(new AssistantChatMessage(completion));
                break;
            }

        case ChatFinishReason.ToolCalls:
            {
                // First, add the assistant message with tool calls to the conversation history.
                messages.Add(new AssistantChatMessage(completion));

                // Then, add a new tool message for each tool call that is resolved.
                foreach (ChatToolCall toolCall in completion.ToolCalls)
                {
                    switch (toolCall.FunctionName)
                    {
                        case nameof(GetCurrentLocation):
                            {
                                string toolResult = GetCurrentLocation();
                                messages.Add(new ToolChatMessage(toolCall.Id, toolResult));
                                break;
                            }

                        case nameof(GetCurrentWeather):
                            {
                                // The arguments that the model wants to use to call the function are specified as a
                                // stringified JSON object based on the schema defined in the tool definition. Note that
                                // the model may hallucinate arguments too. Consequently, it is important to do the
                                // appropriate parsing and validation before calling the function.
                                using JsonDocument argumentsJson = JsonDocument.Parse(toolCall.FunctionArguments);
                                bool hasLocation = argumentsJson.RootElement.TryGetProperty(&quot;location&quot;, out JsonElement location);
                                bool hasUnit = argumentsJson.RootElement.TryGetProperty(&quot;unit&quot;, out JsonElement unit);

                                if (!hasLocation)
                                {
                                    throw new ArgumentNullException(nameof(location), &quot;The location argument is required.&quot;);
                                }

                                string toolResult = hasUnit
                                    ? GetCurrentWeather(location.GetString(), unit.GetString())
                                    : GetCurrentWeather(location.GetString());
                                messages.Add(new ToolChatMessage(toolCall.Id, toolResult));
                                break;
                            }

                        default:
                            {
                                // Handle other unexpected calls.
                                throw new NotImplementedException();
                            }
                    }
                }

                requiresAction = true;
                break;
            }

        case ChatFinishReason.Length:
            throw new NotImplementedException(&quot;Incomplete model output due to MaxTokens parameter or token limit exceeded.&quot;);

        case ChatFinishReason.ContentFilter:
            throw new NotImplementedException(&quot;Omitted content due to a content filter flag.&quot;);

        case ChatFinishReason.FunctionCall:
            throw new NotImplementedException(&quot;Deprecated in favor of tool calls.&quot;);

        default:
            throw new NotImplementedException(completion.FinishReason.ToString());
    }
} while (requiresAction);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use chat completions with structured outputs&lt;/h2&gt; 
&lt;p&gt;Beginning with the &lt;code&gt;gpt-4o-mini&lt;/code&gt;, &lt;code&gt;gpt-4o-mini-2024-07-18&lt;/code&gt;, and &lt;code&gt;gpt-4o-2024-08-06&lt;/code&gt; model snapshots, structured outputs are available for both top-level response content and tool calls in the chat completion and assistants APIs. For information about the feature, see &lt;a href=&quot;https://platform.openai.com/docs/guides/structured-outputs/introduction&quot;&gt;the Structured Outputs guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use structured outputs to constrain chat completion content, set an appropriate &lt;code&gt;ChatResponseFormat&lt;/code&gt; as in the following example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;List&amp;lt;ChatMessage&amp;gt; messages =
[
    new UserChatMessage(&quot;How can I solve 8x + 7 = -23?&quot;),
];

ChatCompletionOptions options = new()
{
    ResponseFormat = ChatResponseFormat.CreateJsonSchemaFormat(
        jsonSchemaFormatName: &quot;math_reasoning&quot;,
        jsonSchema: BinaryData.FromBytes(&quot;&quot;&quot;
            {
                &quot;type&quot;: &quot;object&quot;,
                &quot;properties&quot;: {
                    &quot;steps&quot;: {
                        &quot;type&quot;: &quot;array&quot;,
                        &quot;items&quot;: {
                            &quot;type&quot;: &quot;object&quot;,
                            &quot;properties&quot;: {
                                &quot;explanation&quot;: { &quot;type&quot;: &quot;string&quot; },
                                &quot;output&quot;: { &quot;type&quot;: &quot;string&quot; }
                            },
                            &quot;required&quot;: [&quot;explanation&quot;, &quot;output&quot;],
                            &quot;additionalProperties&quot;: false
                        }
                    },
                    &quot;final_answer&quot;: { &quot;type&quot;: &quot;string&quot; }
                },
                &quot;required&quot;: [&quot;steps&quot;, &quot;final_answer&quot;],
                &quot;additionalProperties&quot;: false
            }
            &quot;&quot;&quot;u8.ToArray()),
        jsonSchemaIsStrict: true)
};

ChatCompletion completion = client.CompleteChat(messages, options);

using JsonDocument structuredJson = JsonDocument.Parse(completion.Content[0].Text);

Console.WriteLine($&quot;Final answer: {structuredJson.RootElement.GetProperty(&quot;final_answer&quot;)}&quot;);
Console.WriteLine(&quot;Reasoning steps:&quot;);

foreach (JsonElement stepElement in structuredJson.RootElement.GetProperty(&quot;steps&quot;).EnumerateArray())
{
    Console.WriteLine($&quot;  - Explanation: {stepElement.GetProperty(&quot;explanation&quot;)}&quot;);
    Console.WriteLine($&quot;    Output: {stepElement.GetProperty(&quot;output&quot;)}&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use chat completions with audio&lt;/h2&gt; 
&lt;p&gt;Starting with the &lt;code&gt;gpt-4o-audio-preview&lt;/code&gt; model, chat completions can process audio input and output.&lt;/p&gt; 
&lt;p&gt;This example demonstrates:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Configuring the client with the supported &lt;code&gt;gpt-4o-audio-preview&lt;/code&gt; model&lt;/li&gt; 
 &lt;li&gt;Supplying user audio input on a chat completion request&lt;/li&gt; 
 &lt;li&gt;Requesting model audio output from the chat completion operation&lt;/li&gt; 
 &lt;li&gt;Retrieving audio output from a &lt;code&gt;ChatCompletion&lt;/code&gt; instance&lt;/li&gt; 
 &lt;li&gt;Using past audio output as &lt;code&gt;ChatMessage&lt;/code&gt; conversation history&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Chat audio input and output is only supported on specific models, beginning with gpt-4o-audio-preview
ChatClient client = new(&quot;gpt-4o-audio-preview&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

// Input audio is provided to a request by adding an audio content part to a user message
string audioFilePath = Path.Combine(&quot;Assets&quot;, &quot;realtime_whats_the_weather_pcm16_24khz_mono.wav&quot;);
byte[] audioFileRawBytes = File.ReadAllBytes(audioFilePath);
BinaryData audioData = BinaryData.FromBytes(audioFileRawBytes);
List&amp;lt;ChatMessage&amp;gt; messages =
    [
        new UserChatMessage(ChatMessageContentPart.CreateInputAudioPart(audioData, ChatInputAudioFormat.Wav)),
    ];

// Output audio is requested by configuring ChatCompletionOptions to include the appropriate
// ResponseModalities values and corresponding AudioOptions.
ChatCompletionOptions options = new()
{
    ResponseModalities = ChatResponseModalities.Text | ChatResponseModalities.Audio,
    AudioOptions = new(ChatOutputAudioVoice.Alloy, ChatOutputAudioFormat.Mp3),
};

ChatCompletion completion = client.CompleteChat(messages, options);

void PrintAudioContent()
{
    if (completion.OutputAudio is ChatOutputAudio outputAudio)
    {
        Console.WriteLine($&quot;Response audio transcript: {outputAudio.Transcript}&quot;);
        string outputFilePath = $&quot;{outputAudio.Id}.mp3&quot;;
        using (FileStream outputFileStream = File.OpenWrite(outputFilePath))
        {
            outputFileStream.Write(outputAudio.AudioBytes);
        }
        Console.WriteLine($&quot;Response audio written to file: {outputFilePath}&quot;);
        Console.WriteLine($&quot;Valid on followup requests until: {outputAudio.ExpiresAt}&quot;);
    }
}

PrintAudioContent();

// To refer to past audio output, create an assistant message from the earlier ChatCompletion, use the earlier
// response content part, or use ChatMessageContentPart.CreateAudioPart(string) to manually instantiate a part.

messages.Add(new AssistantChatMessage(completion));
messages.Add(&quot;Can you say that like a pirate?&quot;);

completion = client.CompleteChat(messages, options);

PrintAudioContent();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Streaming is highly parallel: &lt;code&gt;StreamingChatCompletionUpdate&lt;/code&gt; instances can include a &lt;code&gt;OutputAudioUpdate&lt;/code&gt; that may contain any of:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;Id&lt;/code&gt; of the streamed audio content, which can be referenced by subsequent &lt;code&gt;AssistantChatMessage&lt;/code&gt; instances via &lt;code&gt;ChatAudioReference&lt;/code&gt; once the streaming response is complete; this may appear across multiple &lt;code&gt;StreamingChatCompletionUpdate&lt;/code&gt; instances but will always be the same value when present&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;ExpiresAt&lt;/code&gt; value that describes when the &lt;code&gt;Id&lt;/code&gt; will no longer be valid for use with &lt;code&gt;ChatAudioReference&lt;/code&gt; in subsequent requests; this typically appears once and only once, in the final &lt;code&gt;StreamingOutputAudioUpdate&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Incremental &lt;code&gt;TranscriptUpdate&lt;/code&gt; and/or &lt;code&gt;AudioBytesUpdate&lt;/code&gt; values, which can incrementally consumed and, when concatenated, form the complete audio transcript and audio output for the overall response; many of these typically appear&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use responses with streaming and reasoning&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIResponseClient client = new(
    model: &quot;o3-mini&quot;,
    apiKey: Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

OpenAIResponse response = await client.CreateResponseAsync(
    userInputText: &quot;What&#39;s the optimal strategy to win at poker?&quot;,
    new ResponseCreationOptions()
    {
        ReasoningOptions = new ResponseReasoningOptions()
        {
            ReasoningEffortLevel = ResponseReasoningEffortLevel.High,
        },
    });

await foreach (StreamingResponseUpdate update
    in client.CreateResponseStreamingAsync(
        userInputText: &quot;What&#39;s the optimal strategy to win at poker?&quot;,
        new ResponseCreationOptions()
        {
            ReasoningOptions = new ResponseReasoningOptions()
            {
                ReasoningEffortLevel = ResponseReasoningEffortLevel.High,
            },
        }))
{
    if (update is StreamingResponseOutputItemAddedUpdate itemUpdate
        &amp;amp;&amp;amp; itemUpdate.Item is ReasoningResponseItem reasoningItem)
    {
        Console.WriteLine($&quot;[Reasoning] ({reasoningItem.Status})&quot;);
    }
    else if (update is StreamingResponseOutputItemAddedUpdate itemDone
        &amp;amp;&amp;amp; itemDone.Item is ReasoningResponseItem reasoningDone)
    {
        Console.WriteLine($&quot;[Reasoning DONE] ({reasoningDone.Status})&quot;);
    }
    else if (update is StreamingResponseOutputTextDeltaUpdate delta)
    {
        Console.Write(delta.Delta);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use responses with file search&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIResponseClient client = new(
    model: &quot;gpt-4o-mini&quot;,
    apiKey: Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

ResponseTool fileSearchTool
    = ResponseTool.CreateFileSearchTool(
        vectorStoreIds: [ExistingVectorStoreForTest.Id]);
OpenAIResponse response = await client.CreateResponseAsync(
    userInputText: &quot;According to available files, what&#39;s the secret number?&quot;,
    new ResponseCreationOptions()
    {
        Tools = { fileSearchTool }
    });

foreach (ResponseItem outputItem in response.OutputItems)
{
    if (outputItem is FileSearchCallResponseItem fileSearchCall)
    {
        Console.WriteLine($&quot;[file_search] ({fileSearchCall.Status}): {fileSearchCall.Id}&quot;);
        foreach (string query in fileSearchCall.Queries)
        {
            Console.WriteLine($&quot;  - {query}&quot;);
        }
    }
    else if (outputItem is MessageResponseItem message)
    {
        Console.WriteLine($&quot;[{message.Role}] {message.Content.FirstOrDefault()?.Text}&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use responses with web search&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIResponseClient client = new(
    model: &quot;gpt-4o-mini&quot;,
    apiKey: Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

OpenAIResponse response = await client.CreateResponseAsync(
    userInputText: &quot;What&#39;s a happy news headline from today?&quot;,
    new ResponseCreationOptions()
    {
        Tools = { ResponseTool.CreateWebSearchTool() },
    });

foreach (ResponseItem item in response.OutputItems)
{
    if (item is WebSearchCallResponseItem webSearchCall)
    {
        Console.WriteLine($&quot;[Web search invoked]({webSearchCall.Status}) {webSearchCall.Id}&quot;);
    }
    else if (item is MessageResponseItem message)
    {
        Console.WriteLine($&quot;[{message.Role}] {message.Content?.FirstOrDefault()?.Text}&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to generate text embeddings&lt;/h2&gt; 
&lt;p&gt;In this example, you want to create a trip-planning website that allows customers to write a prompt describing the kind of hotel that they are looking for and then offers hotel recommendations that closely match this description. To achieve this, it is possible to use text embeddings to measure the relatedness of text strings. In summary, you can get embeddings of the hotel descriptions, store them in a vector database, and use them to build a search index that you can query using the embedding of a given customer&#39;s prompt.&lt;/p&gt; 
&lt;p&gt;To generate a text embedding, use &lt;code&gt;EmbeddingClient&lt;/code&gt; from the &lt;code&gt;OpenAI.Embeddings&lt;/code&gt; namespace:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Embeddings;

EmbeddingClient client = new(&quot;text-embedding-3-small&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

string description = &quot;Best hotel in town if you like luxury hotels. They have an amazing infinity pool, a spa,&quot;
    + &quot; and a really helpful concierge. The location is perfect -- right downtown, close to all the tourist&quot;
    + &quot; attractions. We highly recommend this hotel.&quot;;

OpenAIEmbedding embedding = client.GenerateEmbedding(description);
ReadOnlyMemory&amp;lt;float&amp;gt; vector = embedding.ToFloats();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice that the resulting embedding is a list (also called a vector) of floating point numbers represented as an instance of &lt;code&gt;ReadOnlyMemory&amp;lt;float&amp;gt;&lt;/code&gt;. By default, the length of the embedding vector will be 1536 when using the &lt;code&gt;text-embedding-3-small&lt;/code&gt; model or 3072 when using the &lt;code&gt;text-embedding-3-large&lt;/code&gt; model. Generally, larger embeddings perform better, but using them also tends to cost more in terms of compute, memory, and storage. You can reduce the dimensions of the embedding by creating an instance of the &lt;code&gt;EmbeddingGenerationOptions&lt;/code&gt; class, setting the &lt;code&gt;Dimensions&lt;/code&gt; property, and passing it as an argument in your call to the &lt;code&gt;GenerateEmbedding&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;EmbeddingGenerationOptions options = new() { Dimensions = 512 };

OpenAIEmbedding embedding = client.GenerateEmbedding(description, options);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to generate images&lt;/h2&gt; 
&lt;p&gt;In this example, you want to build an app to help interior designers prototype new ideas based on the latest design trends. As part of the creative process, an interior designer can use this app to generate images for inspiration simply by describing the scene in their head as a prompt. As expected, high-quality, strikingly dramatic images with finer details deliver the best results for this application.&lt;/p&gt; 
&lt;p&gt;To generate an image, use &lt;code&gt;ImageClient&lt;/code&gt; from the &lt;code&gt;OpenAI.Images&lt;/code&gt; namespace:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Images;

ImageClient client = new(&quot;dall-e-3&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generating an image always requires a &lt;code&gt;prompt&lt;/code&gt; that describes what should be generated. To further tailor the image generation to your specific needs, you can create an instance of the &lt;code&gt;ImageGenerationOptions&lt;/code&gt; class and set the &lt;code&gt;Quality&lt;/code&gt;, &lt;code&gt;Size&lt;/code&gt;, and &lt;code&gt;Style&lt;/code&gt; properties accordingly. Note that you can also set the &lt;code&gt;ResponseFormat&lt;/code&gt; property of &lt;code&gt;ImageGenerationOptions&lt;/code&gt; to &lt;code&gt;GeneratedImageFormat.Bytes&lt;/code&gt; in order to receive the resulting PNG as &lt;code&gt;BinaryData&lt;/code&gt; (instead of the default remote &lt;code&gt;Uri&lt;/code&gt;) if this is convenient for your use case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;string prompt = &quot;The concept for a living room that blends Scandinavian simplicity with Japanese minimalism for&quot;
    + &quot; a serene and cozy atmosphere. It&#39;s a space that invites relaxation and mindfulness, with natural light&quot;
    + &quot; and fresh air. Using neutral tones, including colors like white, beige, gray, and black, that create a&quot;
    + &quot; sense of harmony. Featuring sleek wood furniture with clean lines and subtle curves to add warmth and&quot;
    + &quot; elegance. Plants and flowers in ceramic pots adding color and life to a space. They can serve as focal&quot;
    + &quot; points, creating a connection with nature. Soft textiles and cushions in organic fabrics adding comfort&quot;
    + &quot; and softness to a space. They can serve as accents, adding contrast and texture.&quot;;

ImageGenerationOptions options = new()
{
    Quality = GeneratedImageQuality.High,
    Size = GeneratedImageSize.W1792xH1024,
    Style = GeneratedImageStyle.Vivid,
    ResponseFormat = GeneratedImageFormat.Bytes
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, call the &lt;code&gt;ImageClient&lt;/code&gt;&#39;s &lt;code&gt;GenerateImage&lt;/code&gt; method by passing the prompt and the &lt;code&gt;ImageGenerationOptions&lt;/code&gt; instance as arguments:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;GeneratedImage image = client.GenerateImage(prompt, options);
BinaryData bytes = image.ImageBytes;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For illustrative purposes, you could then save the generated image to local storage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using FileStream stream = File.OpenWrite($&quot;{Guid.NewGuid()}.png&quot;);
bytes.ToStream().CopyTo(stream);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to transcribe audio&lt;/h2&gt; 
&lt;p&gt;In this example, an audio file is transcribed using the Whisper speech-to-text model, including both word- and audio-segment-level timestamp information.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Audio;

AudioClient client = new(&quot;whisper-1&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

string audioFilePath = Path.Combine(&quot;Assets&quot;, &quot;audio_houseplant_care.mp3&quot;);

AudioTranscriptionOptions options = new()
{
    ResponseFormat = AudioTranscriptionFormat.Verbose,
    TimestampGranularities = AudioTimestampGranularities.Word | AudioTimestampGranularities.Segment,
};

AudioTranscription transcription = client.TranscribeAudio(audioFilePath, options);

Console.WriteLine(&quot;Transcription:&quot;);
Console.WriteLine($&quot;{transcription.Text}&quot;);

Console.WriteLine();
Console.WriteLine($&quot;Words:&quot;);
foreach (TranscribedWord word in transcription.Words)
{
    Console.WriteLine($&quot;  {word.Word,15} : {word.StartTime.TotalMilliseconds,5:0} - {word.EndTime.TotalMilliseconds,5:0}&quot;);
}

Console.WriteLine();
Console.WriteLine($&quot;Segments:&quot;);
foreach (TranscribedSegment segment in transcription.Segments)
{
    Console.WriteLine($&quot;  {segment.Text,90} : {segment.StartTime.TotalMilliseconds,5:0} - {segment.EndTime.TotalMilliseconds,5:0}&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use assistants with retrieval augmented generation (RAG)&lt;/h2&gt; 
&lt;p&gt;In this example, you have a JSON document with the monthly sales information of different products, and you want to build an assistant capable of analyzing it and answering questions about it.&lt;/p&gt; 
&lt;p&gt;To achieve this, use both &lt;code&gt;OpenAIFileClient&lt;/code&gt; from the &lt;code&gt;OpenAI.Files&lt;/code&gt; namespace and &lt;code&gt;AssistantClient&lt;/code&gt; from the &lt;code&gt;OpenAI.Assistants&lt;/code&gt; namespace.&lt;/p&gt; 
&lt;p&gt;Important: The Assistants REST API is currently in beta. As such, the details are subject to change, and correspondingly the &lt;code&gt;AssistantClient&lt;/code&gt; is attributed as &lt;code&gt;[Experimental]&lt;/code&gt;. To use it, you must suppress the &lt;code&gt;OPENAI001&lt;/code&gt; warning first.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using OpenAI.Assistants;
using OpenAI.Files;

OpenAIClient openAIClient = new(Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));
OpenAIFileClient fileClient = openAIClient.GetOpenAIFileClient();
AssistantClient assistantClient = openAIClient.GetAssistantClient();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here is an example of what the JSON document might look like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;using Stream document = BinaryData.FromBytes(&quot;&quot;&quot;
    {
        &quot;description&quot;: &quot;This document contains the sale history data for Contoso products.&quot;,
        &quot;sales&quot;: [
            {
                &quot;month&quot;: &quot;January&quot;,
                &quot;by_product&quot;: {
                    &quot;113043&quot;: 15,
                    &quot;113045&quot;: 12,
                    &quot;113049&quot;: 2
                }
            },
            {
                &quot;month&quot;: &quot;February&quot;,
                &quot;by_product&quot;: {
                    &quot;113045&quot;: 22
                }
            },
            {
                &quot;month&quot;: &quot;March&quot;,
                &quot;by_product&quot;: {
                    &quot;113045&quot;: 16,
                    &quot;113055&quot;: 5
                }
            }
        ]
    }
    &quot;&quot;&quot;u8.ToArray()).ToStream();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Upload this document to OpenAI using the &lt;code&gt;OpenAIFileClient&lt;/code&gt;&#39;s &lt;code&gt;UploadFile&lt;/code&gt; method, ensuring that you use &lt;code&gt;FileUploadPurpose.Assistants&lt;/code&gt; to allow your assistant to access it later:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIFile salesFile = fileClient.UploadFile(
    document,
    &quot;monthly_sales.json&quot;,
    FileUploadPurpose.Assistants);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a new assistant using an instance of the &lt;code&gt;AssistantCreationOptions&lt;/code&gt; class to customize it. Here, we use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A friendly &lt;code&gt;Name&lt;/code&gt; for the assistant, as will display in the Playground&lt;/li&gt; 
 &lt;li&gt;Tool definition instances for the tools that the assistant should have access to; here, we use &lt;code&gt;FileSearchToolDefinition&lt;/code&gt; to process the sales document we just uploaded and &lt;code&gt;CodeInterpreterToolDefinition&lt;/code&gt; so we can analyze and visualize the numeric data&lt;/li&gt; 
 &lt;li&gt;Resources for the assistant to use with its tools, here using the &lt;code&gt;VectorStoreCreationHelper&lt;/code&gt; type to automatically make a new vector store that indexes the sales file; alternatively, you could use &lt;code&gt;VectorStoreClient&lt;/code&gt; to manage the vector store separately&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;AssistantCreationOptions assistantOptions = new()
{
    Name = &quot;Example: Contoso sales RAG&quot;,
    Instructions =
        &quot;You are an assistant that looks up sales data and helps visualize the information based&quot;
        + &quot; on user queries. When asked to generate a graph, chart, or other visualization, use&quot;
        + &quot; the code interpreter tool to do so.&quot;,
    Tools =
    {
        new FileSearchToolDefinition(),
        new CodeInterpreterToolDefinition(),
    },
    ToolResources = new()
    {
        FileSearch = new()
        {
            NewVectorStores =
            {
                new VectorStoreCreationHelper([salesFile.Id]),
            }
        }
    },
};

Assistant assistant = assistantClient.CreateAssistant(&quot;gpt-4o&quot;, assistantOptions);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create a new thread. For illustrative purposes, you could include an initial user message asking about the sales information of a given product and then use the &lt;code&gt;AssistantClient&lt;/code&gt;&#39;s &lt;code&gt;CreateThreadAndRun&lt;/code&gt; method to get it started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;ThreadCreationOptions threadOptions = new()
{
    InitialMessages = { &quot;How well did product 113045 sell in February? Graph its trend over time.&quot; }
};

ThreadRun threadRun = assistantClient.CreateThreadAndRun(assistant.Id, threadOptions);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Poll the status of the run until it is no longer queued or in progress:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;do
{
    Thread.Sleep(TimeSpan.FromSeconds(1));
    threadRun = assistantClient.GetRun(threadRun.ThreadId, threadRun.Id);
} while (!threadRun.Status.IsTerminal);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything went well, the terminal status of the run will be &lt;code&gt;RunStatus.Completed&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, you can use the &lt;code&gt;AssistantClient&lt;/code&gt;&#39;s &lt;code&gt;GetMessages&lt;/code&gt; method to retrieve the messages associated with this thread, which now include the responses from the assistant to the initial user message.&lt;/p&gt; 
&lt;p&gt;For illustrative purposes, you could print the messages to the console and also save any images produced by the assistant to local storage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;CollectionResult&amp;lt;ThreadMessage&amp;gt; messages
    = assistantClient.GetMessages(threadRun.ThreadId, new MessageCollectionOptions() { Order = MessageCollectionOrder.Ascending });

foreach (ThreadMessage message in messages)
{
    Console.Write($&quot;[{message.Role.ToString().ToUpper()}]: &quot;);
    foreach (MessageContent contentItem in message.Content)
    {
        if (!string.IsNullOrEmpty(contentItem.Text))
        {
            Console.WriteLine($&quot;{contentItem.Text}&quot;);

            if (contentItem.TextAnnotations.Count &amp;gt; 0)
            {
                Console.WriteLine();
            }

            // Include annotations, if any.
            foreach (TextAnnotation annotation in contentItem.TextAnnotations)
            {
                if (!string.IsNullOrEmpty(annotation.InputFileId))
                {
                    Console.WriteLine($&quot;* File citation, file ID: {annotation.InputFileId}&quot;);
                }
                if (!string.IsNullOrEmpty(annotation.OutputFileId))
                {
                    Console.WriteLine($&quot;* File output, new file ID: {annotation.OutputFileId}&quot;);
                }
            }
        }
        if (!string.IsNullOrEmpty(contentItem.ImageFileId))
        {
            OpenAIFile imageInfo = fileClient.GetFile(contentItem.ImageFileId);
            BinaryData imageBytes = fileClient.DownloadFile(contentItem.ImageFileId);
            using FileStream stream = File.OpenWrite($&quot;{imageInfo.Filename}.png&quot;);
            imageBytes.ToStream().CopyTo(stream);

            Console.WriteLine($&quot;&amp;lt;image: {imageInfo.Filename}.png&amp;gt;&quot;);
        }
    }
    Console.WriteLine();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And it would yield something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[USER]: How well did product 113045 sell in February? Graph its trend over time.

[ASSISTANT]: Product 113045 sold 22 units in February【4:0†monthly_sales.json】.

Now, I will generate a graph to show its sales trend over time.

* File citation, file ID: file-hGOiwGNftMgOsjbynBpMCPFn

[ASSISTANT]: &amp;lt;image: 015d8e43-17fe-47de-af40-280f25452280.png&amp;gt;
The sales trend for Product 113045 over the past three months shows that:

- In January, 12 units were sold.
- In February, 22 units were sold, indicating significant growth.
- In March, sales dropped slightly to 16 units.

The graph above visualizes this trend, showing a peak in sales during February.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to use assistants with streaming and vision&lt;/h2&gt; 
&lt;p&gt;This example shows how to use the v2 Assistants API to provide image data to an assistant and then stream the run&#39;s response.&lt;/p&gt; 
&lt;p&gt;As before, you will use a &lt;code&gt;OpenAIFileClient&lt;/code&gt; and an &lt;code&gt;AssistantClient&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIClient openAIClient = new(Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));
OpenAIFileClient fileClient = openAIClient.GetOpenAIFileClient();
AssistantClient assistantClient = openAIClient.GetAssistantClient();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For this example, we will use both image data from a local file as well as an image located at a URL. For the local data, we upload the file with the &lt;code&gt;Vision&lt;/code&gt; upload purpose, which would also allow it to be downloaded and retrieved later.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;OpenAIFile pictureOfAppleFile = fileClient.UploadFile(
    Path.Combine(&quot;Assets&quot;, &quot;images_apple.png&quot;),
    FileUploadPurpose.Vision);

Uri linkToPictureOfOrange = new(&quot;https://raw.githubusercontent.com/openai/openai-dotnet/refs/heads/main/examples/Assets/images_orange.png&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create a new assistant with a vision-capable model like &lt;code&gt;gpt-4o&lt;/code&gt; and a thread with the image information referenced:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;Assistant assistant = assistantClient.CreateAssistant(
    &quot;gpt-4o&quot;,
    new AssistantCreationOptions()
    {
        Instructions = &quot;When asked a question, attempt to answer very concisely. &quot;
            + &quot;Prefer one-sentence answers whenever feasible.&quot;
    });

AssistantThread thread = assistantClient.CreateThread(new ThreadCreationOptions()
{
    InitialMessages =
        {
            new ThreadInitializationMessage(
                MessageRole.User,
                [
                    &quot;Hello, assistant! Please compare these two images for me:&quot;,
                    MessageContent.FromImageFileId(pictureOfAppleFile.Id),
                    MessageContent.FromImageUri(linkToPictureOfOrange),
                ]),
        }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the assistant and thread prepared, use the &lt;code&gt;CreateRunStreaming&lt;/code&gt; method to get an enumerable &lt;code&gt;CollectionResult&amp;lt;StreamingUpdate&amp;gt;&lt;/code&gt;. You can then iterate over this collection with &lt;code&gt;foreach&lt;/code&gt;. For async calling patterns, use &lt;code&gt;CreateRunStreamingAsync&lt;/code&gt; and iterate over the &lt;code&gt;AsyncCollectionResult&amp;lt;StreamingUpdate&amp;gt;&lt;/code&gt; with &lt;code&gt;await foreach&lt;/code&gt;, instead. Note that streaming variants also exist for &lt;code&gt;CreateThreadAndRunStreaming&lt;/code&gt; and &lt;code&gt;SubmitToolOutputsToRunStreaming&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;CollectionResult&amp;lt;StreamingUpdate&amp;gt; streamingUpdates = assistantClient.CreateRunStreaming(
    thread.Id,
    assistant.Id,
    new RunCreationOptions()
    {
        AdditionalInstructions = &quot;When possible, try to sneak in puns if you&#39;re asked to compare things.&quot;,
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, to handle the &lt;code&gt;StreamingUpdates&lt;/code&gt; as they arrive, you can use the &lt;code&gt;UpdateKind&lt;/code&gt; property on the base &lt;code&gt;StreamingUpdate&lt;/code&gt; and/or downcast to a specifically desired update type, like &lt;code&gt;MessageContentUpdate&lt;/code&gt; for &lt;code&gt;thread.message.delta&lt;/code&gt; events or &lt;code&gt;RequiredActionUpdate&lt;/code&gt; for streaming tool calls.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;foreach (StreamingUpdate streamingUpdate in streamingUpdates)
{
    if (streamingUpdate.UpdateKind == StreamingUpdateReason.RunCreated)
    {
        Console.WriteLine($&quot;--- Run started! ---&quot;);
    }
    if (streamingUpdate is MessageContentUpdate contentUpdate)
    {
        Console.Write(contentUpdate.Text);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will yield streamed output from the run like the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;--- Run started! ---
The first image depicts a multicolored apple with a blend of red and green hues, while the second image shows an orange with a bright, textured orange peel; one might say it’s comparing apples to oranges!
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How to work with Azure OpenAI&lt;/h2&gt; 
&lt;p&gt;For Azure OpenAI scenarios use the &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net&quot;&gt;Azure SDK&lt;/a&gt; and more specifically the &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-net/raw/main/sdk/openai/Azure.AI.OpenAI/README.md&quot;&gt;Azure OpenAI client library for .NET&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Azure OpenAI client library for .NET is a companion to this library and all common capabilities between OpenAI and Azure OpenAI share the same scenario clients, methods, and request/response types. It is designed to make Azure specific scenarios straightforward, with extensions for Azure-specific concepts like Responsible AI content filter results and On Your Data integration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c#&quot;&gt;AzureOpenAIClient azureClient = new(
    new Uri(&quot;https://your-azure-openai-resource.com&quot;),
    new DefaultAzureCredential());
ChatClient chatClient = azureClient.GetChatClient(&quot;my-gpt-35-turbo-deployment&quot;);

ChatCompletion completion = chatClient.CompleteChat(
    [
        // System messages represent instructions or other guidance about how the assistant should behave
        new SystemChatMessage(&quot;You are a helpful assistant that talks like a pirate.&quot;),
        // User messages represent user input, whether historical or the most recen tinput
        new UserChatMessage(&quot;Hi, can you help me?&quot;),
        // Assistant messages in a request represent conversation history for responses
        new AssistantChatMessage(&quot;Arrr! Of course, me hearty! What can I do for ye?&quot;),
        new UserChatMessage(&quot;What&#39;s the best way to train a parrot?&quot;),
    ]);

Console.WriteLine($&quot;{completion.Role}: {completion.Content[0].Text}&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Advanced scenarios&lt;/h2&gt; 
&lt;h3&gt;Using protocol methods&lt;/h3&gt; 
&lt;p&gt;In addition to the client methods that use strongly-typed request and response objects, the .NET library also provides &lt;em&gt;protocol methods&lt;/em&gt; that enable more direct access to the REST API. Protocol methods are &quot;binary in, binary out&quot; accepting &lt;code&gt;BinaryContent&lt;/code&gt; as request bodies and providing &lt;code&gt;BinaryData&lt;/code&gt; as response bodies.&lt;/p&gt; 
&lt;p&gt;For example, to use the protocol method variant of the &lt;code&gt;ChatClient&lt;/code&gt;&#39;s &lt;code&gt;CompleteChat&lt;/code&gt; method, pass the request body as &lt;code&gt;BinaryContent&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;ChatClient client = new(&quot;gpt-4o&quot;, Environment.GetEnvironmentVariable(&quot;OPENAI_API_KEY&quot;));

BinaryData input = BinaryData.FromBytes(&quot;&quot;&quot;
    {
       &quot;model&quot;: &quot;gpt-4o&quot;,
       &quot;messages&quot;: [
           {
               &quot;role&quot;: &quot;user&quot;,
               &quot;content&quot;: &quot;Say &#39;this is a test.&#39;&quot;
           }
       ]
    }
    &quot;&quot;&quot;u8.ToArray());

using BinaryContent content = BinaryContent.Create(input);
ClientResult result = client.CompleteChat(content);
BinaryData output = result.GetRawResponse().Content;

using JsonDocument outputAsJson = JsonDocument.Parse(output.ToString());
string message = outputAsJson.RootElement
    .GetProperty(&quot;choices&quot;u8)[0]
    .GetProperty(&quot;message&quot;u8)
    .GetProperty(&quot;content&quot;u8)
    .GetString();

Console.WriteLine($&quot;[ASSISTANT]: {message}&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice how you can then call the resulting &lt;code&gt;ClientResult&lt;/code&gt;&#39;s &lt;code&gt;GetRawResponse&lt;/code&gt; method and retrieve the response body as &lt;code&gt;BinaryData&lt;/code&gt; via the &lt;code&gt;PipelineResponse&lt;/code&gt;&#39;s &lt;code&gt;Content&lt;/code&gt; property.&lt;/p&gt; 
&lt;h3&gt;Mock a client for testing&lt;/h3&gt; 
&lt;p&gt;The OpenAI .NET library has been designed to support mocking, providing key features such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Client methods made virtual to allow overriding.&lt;/li&gt; 
 &lt;li&gt;Model factories to assist in instantiating API output models that lack public constructors.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To illustrate how mocking works, suppose you want to validate the behavior of the following method using the &lt;a href=&quot;https://github.com/devlooped/moq&quot;&gt;Moq&lt;/a&gt; library. Given the path to an audio file, it determines whether it contains a specified secret word:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public bool ContainsSecretWord(AudioClient client, string audioFilePath, string secretWord)
{
    AudioTranscription transcription = client.TranscribeAudio(audioFilePath);
    return transcription.Text.Contains(secretWord);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create mocks of &lt;code&gt;AudioClient&lt;/code&gt; and &lt;code&gt;ClientResult&amp;lt;AudioTranscription&amp;gt;&lt;/code&gt;, set up methods and properties that will be invoked, then test the behavior of the &lt;code&gt;ContainsSecretWord&lt;/code&gt; method. Since the &lt;code&gt;AudioTranscription&lt;/code&gt; class does not provide public constructors, it must be instantiated by the &lt;code&gt;OpenAIAudioModelFactory&lt;/code&gt; static class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;// Instantiate mocks and the AudioTranscription object.

Mock&amp;lt;AudioClient&amp;gt; mockClient = new();
Mock&amp;lt;ClientResult&amp;lt;AudioTranscription&amp;gt;&amp;gt; mockResult = new(null, Mock.Of&amp;lt;PipelineResponse&amp;gt;());
AudioTranscription transcription = OpenAIAudioModelFactory.AudioTranscription(text: &quot;I swear I saw an apple flying yesterday!&quot;);

// Set up mocks&#39; properties and methods.

mockResult
    .SetupGet(result =&amp;gt; result.Value)
    .Returns(transcription);

mockClient.Setup(client =&amp;gt; client.TranscribeAudio(
        It.IsAny&amp;lt;string&amp;gt;(),
        It.IsAny&amp;lt;AudioTranscriptionOptions&amp;gt;()))
    .Returns(mockResult.Object);

// Perform validation.

AudioClient client = mockClient.Object;
bool containsSecretWord = ContainsSecretWord(client, &quot;&amp;lt;audioFilePath&amp;gt;&quot;, &quot;apple&quot;);

Assert.That(containsSecretWord, Is.True);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All namespaces have their corresponding model factory to support mocking with the exception of the &lt;code&gt;OpenAI.Assistants&lt;/code&gt; and &lt;code&gt;OpenAI.VectorStores&lt;/code&gt; namespaces, for which model factories are coming soon.&lt;/p&gt; 
&lt;h3&gt;Automatically retrying errors&lt;/h3&gt; 
&lt;p&gt;By default, the client classes will automatically retry the following errors up to three additional times using exponential backoff:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;408 Request Timeout&lt;/li&gt; 
 &lt;li&gt;429 Too Many Requests&lt;/li&gt; 
 &lt;li&gt;500 Internal Server Error&lt;/li&gt; 
 &lt;li&gt;502 Bad Gateway&lt;/li&gt; 
 &lt;li&gt;503 Service Unavailable&lt;/li&gt; 
 &lt;li&gt;504 Gateway Timeout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Observability&lt;/h3&gt; 
&lt;p&gt;OpenAI .NET library supports experimental distributed tracing and metrics with OpenTelemetry. Check out &lt;a href=&quot;https://raw.githubusercontent.com/openai/openai-dotnet/main/docs/Observability.md&quot;&gt;Observability with OpenTelemetry&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BepInEx/BepInEx</title>
      <link>https://github.com/BepInEx/BepInEx</link>
      <description>&lt;p&gt;Unity / XNA game patcher and plugin framework&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;https://avatars2.githubusercontent.com/u/39589027?s=256&quot; /&gt; &lt;/p&gt; 
&lt;h1&gt;BepInEx&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/bepinex/bepinex/total.svg?sanitize=true&quot; alt=&quot;Github All Releases&quot; /&gt; &lt;img src=&quot;https://img.shields.io/github/release/bepinex/bepinex.svg?sanitize=true&quot; alt=&quot;GitHub release&quot; /&gt; &lt;a href=&quot;https://discord.gg/MpFEDAg&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/7288322/34429117-c74dbd12-ecb8-11e7-896d-46369cd0de5b.png&quot; alt=&quot;BepInEx Discord&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Bepis Injector Extensible&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;BepInEx is a plugin / modding framework for Unity Mono, IL2CPP and .NET framework games (XNA, FNA, MonoGame, etc.)&lt;/p&gt; 
&lt;p&gt;(Currently only Unity Mono has stable releases)&lt;/p&gt; 
&lt;h4&gt;Platform compatibility chart&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Windows&lt;/th&gt; 
   &lt;th&gt;OSX&lt;/th&gt; 
   &lt;th&gt;Linux&lt;/th&gt; 
   &lt;th&gt;ARM&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Unity Mono&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Unity IL2CPP&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✔&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;.NET / XNA&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;Mono&lt;/td&gt; 
   &lt;td&gt;Mono&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;A more comprehensive comparison list of features and compatibility is available at &lt;a href=&quot;https://bepis.io/unity.html&quot;&gt;https://bepis.io/unity.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx/releases&quot;&gt;Latest releases&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://builds.bepinex.dev/projects/bepinex_be&quot;&gt;Bleeding Edge builds&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.bepinex.dev/articles/user_guide/installation/index.html&quot;&gt;How to install (latest releases)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.bepinex.dev/master/articles/user_guide/installation/index.html&quot;&gt;How to install (Bleeding Edge, BepInEx 6)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.bepinex.dev/master/&quot;&gt;User and developer guides&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://discord.gg/MpFEDAg&quot;&gt;Discord server&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Available plugin loaders&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Link to project&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BSIPA&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.BSIPA.Loader&quot;&gt;BepInEx.BSIPA.Loader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;IPA&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/IPALoaderX&quot;&gt;IPALoaderX&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MelonLoader&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.MelonLoader.Loader&quot;&gt;BepInEx.MelonLoader.Loader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MonoMod&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.MonoMod.Loader&quot;&gt;BepInEx.MonoMod.Loader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MuseDashModLoader&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.MDML.Loader&quot;&gt;BepInEx.MDML.Loader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Partiality&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/sinai-dev/BepInEx-Partiality-Wrapper&quot;&gt;BepInEx-Partiality-Wrapper&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sybaris&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.SybarisLoader.Patcher&quot;&gt;BepInEx.SybarisLoader.Patcher&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;UnityInjector&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.UnityInjectorLoader&quot;&gt;BepInEx.UnityInjector.Loader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Unity Mod Manager&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/hacknet-bar/Yan.UMMLoader&quot;&gt;Yan.UMMLoader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uMod&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/BepInEx/BepInEx.uMod.Loader&quot;&gt;BepInEx.uMod.Loader&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Used libraries&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/NeighTools/UnityDoorstop&quot;&gt;NeighTools/UnityDoorstop&lt;/a&gt; - v4.3.0&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BepInEx/HarmonyX&quot;&gt;BepInEx/HarmonyX&lt;/a&gt; - v2.10.2&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/0x0ade/MonoMod&quot;&gt;0x0ade/MonoMod&lt;/a&gt; - v22.7.31.1&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jbevain/cecil&quot;&gt;jbevain/cecil&lt;/a&gt; - v0.10.4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;IL2CPP libraries&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SamboyCoding/Cpp2IL&quot;&gt;SamboyCoding/Cpp2IL&lt;/a&gt; - v2022.0.7.2&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BepInEx/Il2CppInterop&quot;&gt;BepInEx/Il2CppInterop&lt;/a&gt; - v1.4.5&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BepInEx/dotnet-runtime&quot;&gt;BepInEx/dotnet-runtime&lt;/a&gt; - v6.0.7&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The BepInEx project is licensed under the LGPL-2.1 license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kgrzybek/modular-monolith-with-ddd</title>
      <link>https://github.com/kgrzybek/modular-monolith-with-ddd</link>
      <description>&lt;p&gt;Full Modular Monolith application with Domain-Driven Design approach.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Modular Monolith with DDD&lt;/h1&gt; 
&lt;p&gt;Full Modular Monolith .NET application with Domain-Driven Design approach.&lt;/p&gt; 
&lt;h2&gt;Announcement&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/glory_to_ukraine.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Learn, use and benefit from this project only if:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You &lt;strong&gt;condemn Russia and its military aggression against Ukraine&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;recognize that Russia is an occupant that unlawfully invaded a sovereign state&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;support Ukraine&#39;s territorial integrity, including its claims over temporarily occupied territories of Crimea and Donbas&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;reject false narratives perpetuated by Russian state propaganda&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Otherwise, leave this project immediately and educate yourself.&lt;/p&gt; 
&lt;p&gt;Putin, idi nachuj.&lt;/p&gt; 
&lt;h2&gt;CI&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/kgrzybek/modular-monolith-with-ddd/workflows/Build%20Pipeline/badge.svg?sanitize=true&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;FrontEnd application&lt;/h2&gt; 
&lt;p&gt;FrontEnd application : &lt;a href=&quot;https://github.com/kgrzybek/modular-monolith-with-ddd-fe-react&quot;&gt;Modular Monolith With DDD: FrontEnd React application&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#1-introduction&quot;&gt;1. Introduction&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#11-purpose-of-this-repository&quot;&gt;1.1 Purpose of this Repository&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#12-out-of-scope&quot;&gt;1.2 Out of Scope&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#13-reason&quot;&gt;1.3 Reason&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#14-disclaimer&quot;&gt;1.4 Disclaimer&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#15-give-a-star&quot;&gt;1.5 Give a Star&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#16-share-it&quot;&gt;1.6 Share It&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#2-domain&quot;&gt;2. Domain&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#21-description&quot;&gt;2.1 Description&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#22-conceptual-model&quot;&gt;2.2 Conceptual Model&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#23-event-storming&quot;&gt;2.3 Event Storming&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#3-architecture&quot;&gt;3. Architecture&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#30-c4-model&quot;&gt;3.0 C4 Model&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#31-high-level-view&quot;&gt;3.1 High Level View&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#32-module-level-view&quot;&gt;3.2 Module Level View&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#33-api-and-module-communication&quot;&gt;3.3 API and Module Communication&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#34-module-requests-processing-via-cqrs&quot;&gt;3.4 Module Requests Processing via CQRS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#35-domain-model-principles-and-attributes&quot;&gt;3.5 Domain Model Principles and Attributes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#36-cross-cutting-concerns&quot;&gt;3.6 Cross-Cutting Concerns&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#37-modules-integration&quot;&gt;3.7 Modules Integration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#38-internal-processing&quot;&gt;3.8 Internal Processing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#39-security&quot;&gt;3.9 Security&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#310-unit-tests&quot;&gt;3.10 Unit Tests&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#311-architecture-decision-log&quot;&gt;3.11 Architecture Decision Log&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#312-architecture-unit-tests&quot;&gt;3.12 Architecture Unit Tests&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#313-integration-tests&quot;&gt;3.13 Integration Tests&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#314-system-integration-testing&quot;&gt;3.14 System Integration Testing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#315-event-sourcing&quot;&gt;3.15 Event Sourcing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#316-database-change-management&quot;&gt;3.16 Database change management&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#317-continuous-integration&quot;&gt;3.17 Continuous Integration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#318-static-code-analysis&quot;&gt;3.18 Static code analysis&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#319-system-under-test-sut&quot;&gt;3.19 System Under Test SUT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#320-mutation-testing&quot;&gt;3.20 Mutation Testing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#4-technology&quot;&gt;4. Technology&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#5-how-to-run&quot;&gt;5. How to Run&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#6-contribution&quot;&gt;6. Contribution&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#7-roadmap&quot;&gt;7. Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#8-authors&quot;&gt;8. Authors&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#9-license&quot;&gt;9. License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#10-inspirations-and-recommendations&quot;&gt;10. Inspirations and Recommendations&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;1. Introduction&lt;/h2&gt; 
&lt;h3&gt;1.1 Purpose of this Repository&lt;/h3&gt; 
&lt;p&gt;This is a list of the main goals of this repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing how you can implement a &lt;strong&gt;monolith&lt;/strong&gt; application in a &lt;strong&gt;modular&lt;/strong&gt; way&lt;/li&gt; 
 &lt;li&gt;Presentation of the &lt;strong&gt;full implementation&lt;/strong&gt; of an application 
  &lt;ul&gt; 
   &lt;li&gt;This is not another simple application&lt;/li&gt; 
   &lt;li&gt;This is not another proof of concept (PoC)&lt;/li&gt; 
   &lt;li&gt;The goal is to present the implementation of an application that would be ready to run in production&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Showing the application of &lt;strong&gt;best practices&lt;/strong&gt; and &lt;strong&gt;object-oriented programming principles&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of the use of &lt;strong&gt;design patterns&lt;/strong&gt;. When, how and why they can be used&lt;/li&gt; 
 &lt;li&gt;Presentation of some &lt;strong&gt;architectural&lt;/strong&gt; considerations, decisions, approaches&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation using &lt;strong&gt;Domain-Driven Design&lt;/strong&gt; approach (&lt;strong&gt;tactical&lt;/strong&gt; patterns)&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation of &lt;strong&gt;Unit Tests&lt;/strong&gt; for Domain Model (Testable Design in mind)&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation of &lt;strong&gt;Integration Tests&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation of &lt;strong&gt;Event Sourcing&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of &lt;strong&gt;C4 Model&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of &lt;strong&gt;diagram as text&lt;/strong&gt; approach&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1.2 Out of Scope&lt;/h3&gt; 
&lt;p&gt;This is a list of subjects which are out of scope for this repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Business requirements gathering and analysis&lt;/li&gt; 
 &lt;li&gt;System analysis&lt;/li&gt; 
 &lt;li&gt;Domain exploration&lt;/li&gt; 
 &lt;li&gt;Domain distillation&lt;/li&gt; 
 &lt;li&gt;Domain-Driven Design &lt;strong&gt;strategic&lt;/strong&gt; patterns&lt;/li&gt; 
 &lt;li&gt;Architecture evaluation, quality attributes analysis&lt;/li&gt; 
 &lt;li&gt;Integration, system tests&lt;/li&gt; 
 &lt;li&gt;Project management&lt;/li&gt; 
 &lt;li&gt;Infrastructure&lt;/li&gt; 
 &lt;li&gt;Containerization&lt;/li&gt; 
 &lt;li&gt;Software engineering process&lt;/li&gt; 
 &lt;li&gt;Deployment process&lt;/li&gt; 
 &lt;li&gt;Maintenance&lt;/li&gt; 
 &lt;li&gt;Documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1.3 Reason&lt;/h3&gt; 
&lt;p&gt;The reason for creating this repository is the lack of something similar. Most sample applications on GitHub have at least one of the following issues:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Very, very simple - few entities and use cases implemented&lt;/li&gt; 
 &lt;li&gt;Not finished (for example there is no authentication, logging, etc..)&lt;/li&gt; 
 &lt;li&gt;Poorly designed (in my opinion)&lt;/li&gt; 
 &lt;li&gt;Poorly implemented (in my opinion)&lt;/li&gt; 
 &lt;li&gt;Not well described&lt;/li&gt; 
 &lt;li&gt;Assumptions and decisions are not clearly explained&lt;/li&gt; 
 &lt;li&gt;Implements &quot;Orders&quot; domain - yes, everyone knows this domain, but something different is needed&lt;/li&gt; 
 &lt;li&gt;Implemented in old technology&lt;/li&gt; 
 &lt;li&gt;Not maintained&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To sum up, there are some very good examples, but there are far too few of them. This repository has the task of filling this gap at some level.&lt;/p&gt; 
&lt;h3&gt;1.4 Disclaimer&lt;/h3&gt; 
&lt;p&gt;Software architecture should always be created to resolve specific &lt;strong&gt;business problems&lt;/strong&gt;. Software architecture always supports some quality attributes and at the same time does not support others. A lot of other factors influence your software architecture - your team, opinions, preferences, experiences, technical constraints, time, budget, etc.&lt;/p&gt; 
&lt;p&gt;Always functional requirements, quality attributes, technical constraints and other factors should be considered before an architectural decision is made.&lt;/p&gt; 
&lt;p&gt;Because of the above, the architecture and implementation presented in this repository is &lt;strong&gt;one of the many ways&lt;/strong&gt; to solve some problems. Take from this repository as much as you want, use it as you like but remember to &lt;strong&gt;always pick the best solution which is appropriate to the problem class you have&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;1.5 Give a Star&lt;/h3&gt; 
&lt;p&gt;My primary focus in this project is on quality. Creating a good quality product involves a lot of analysis, research and work. It takes a lot of time. If you like this project, learned something or you are using it in your applications, please give it a star &lt;span&gt;⭐&lt;/span&gt;. This is the best motivation for me to continue this work. Thanks!&lt;/p&gt; 
&lt;h3&gt;1.6 Share It&lt;/h3&gt; 
&lt;p&gt;There are very few really good examples of this type of application. If you think this repository makes a difference and is worth it, please share it with your friends and on social networks. I will be extremely grateful.&lt;/p&gt; 
&lt;h2&gt;2. Domain&lt;/h2&gt; 
&lt;h3&gt;2.1 Description&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Domain - A sphere of knowledge, influence, or activity. The subject area to which the user applies a program is the domain of the software. &lt;a href=&quot;http://domainlanguage.com/ddd/reference/&quot;&gt;Domain-Driven Design Reference&lt;/a&gt;, Eric Evans&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The &lt;strong&gt;Meeting Groups&lt;/strong&gt; domain was selected for the purposes of this project based on the &lt;a href=&quot;https://www.meetup.com/&quot;&gt;Meetup.com&lt;/a&gt; system.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Main reasons for selecting this domain:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It is common, a lot of people use the Meetup site to organize or attend meetings&lt;/li&gt; 
 &lt;li&gt;There is a system for it, so everyone can check this implementation against a working site which supports this domain&lt;/li&gt; 
 &lt;li&gt;It is not complex so it is easy to understand&lt;/li&gt; 
 &lt;li&gt;It is not trivial - there are some business rules and logic and it is not just CRUD operations&lt;/li&gt; 
 &lt;li&gt;You don&#39;t need much specific domain knowledge unlike other domains like financing, banking, medical&lt;/li&gt; 
 &lt;li&gt;It is not big so it is easier to implement&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Meetings&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The main business entities are &lt;code&gt;Member&lt;/code&gt;, &lt;code&gt;Meeting Group&lt;/code&gt; and &lt;code&gt;Meeting&lt;/code&gt;. A &lt;code&gt;Member&lt;/code&gt; can create a &lt;code&gt;Meeting Group&lt;/code&gt;, be part of a &lt;code&gt;Meeting Group&lt;/code&gt; or can attend a &lt;code&gt;Meeting&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting Group Member&lt;/code&gt; can be an &lt;code&gt;Organizer&lt;/code&gt; of this group or a normal &lt;code&gt;Member&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Only an &lt;code&gt;Organizer&lt;/code&gt; of a &lt;code&gt;Meeting Group&lt;/code&gt; can create a new &lt;code&gt;Meeting&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting&lt;/code&gt; has attendees, not attendees (&lt;code&gt;Members&lt;/code&gt; which declare they will not attend the &lt;code&gt;Meeting&lt;/code&gt;) and &lt;code&gt;Members&lt;/code&gt; on the &lt;code&gt;Waitlist&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting&lt;/code&gt; can have an attendee limit. If the limit is reached, &lt;code&gt;Members&lt;/code&gt; can only sign up to the &lt;code&gt;Waitlist&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting Attendee&lt;/code&gt; can bring guests to the &lt;code&gt;Meeting&lt;/code&gt;. The number of guests allowed is an attribute of the &lt;code&gt;Meeting&lt;/code&gt;. Bringing guests can be unallowed.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting Attendee&lt;/code&gt; can have one of two roles: &lt;code&gt;Attendee&lt;/code&gt; or &lt;code&gt;Host&lt;/code&gt;. A &lt;code&gt;Meeting&lt;/code&gt; must have at least one &lt;code&gt;Host&lt;/code&gt;. The &lt;code&gt;Host&lt;/code&gt; is a special role which grants permission to edit &lt;code&gt;Meeting&lt;/code&gt; information or change the attendees list.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Member&lt;/code&gt; can comment &lt;code&gt;Meetings&lt;/code&gt;. A &lt;code&gt;Member&lt;/code&gt; can reply to, like other &lt;code&gt;Comments&lt;/code&gt;. &lt;code&gt;Organizer&lt;/code&gt; manages commenting of &lt;code&gt;Meeting&lt;/code&gt; by &lt;code&gt;Meeting Commenting Configuration&lt;/code&gt;. &lt;code&gt;Organizer&lt;/code&gt; can delete any &lt;code&gt;Comment&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;Meeting Group&lt;/code&gt; must have an organizer with active &lt;code&gt;Subscription&lt;/code&gt;. One organizer can cover 3 &lt;code&gt;Meeting Groups&lt;/code&gt; by his &lt;code&gt;Subscription&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, Meeting organizer can set an &lt;code&gt;Event Fee&lt;/code&gt;. Each &lt;code&gt;Meeting Attendee&lt;/code&gt; is obliged to pay the fee. All guests should be paid by &lt;code&gt;Meeting Attendee&lt;/code&gt; too.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Administration&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;To create a new &lt;code&gt;Meeting Group&lt;/code&gt;, a &lt;code&gt;Member&lt;/code&gt; needs to propose the group. A &lt;code&gt;Meeting Group Proposal&lt;/code&gt; is sent to &lt;code&gt;Administrators&lt;/code&gt;. An &lt;code&gt;Administrator&lt;/code&gt; can accept or reject a &lt;code&gt;Meeting Group Proposal&lt;/code&gt;. If a &lt;code&gt;Meeting Group Proposal&lt;/code&gt; is accepted, a &lt;code&gt;Meeting Group&lt;/code&gt; is created.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Payments&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;Member&lt;/code&gt; who is the &lt;code&gt;Payer&lt;/code&gt; can buy the &lt;code&gt;Subscription&lt;/code&gt;. He needs to pay the &lt;code&gt;Subscription Payment&lt;/code&gt;. &lt;code&gt;Subscription&lt;/code&gt; can expire so &lt;code&gt;Subscription Renewal&lt;/code&gt; is required (by &lt;code&gt;Subscription Renewal Payment&lt;/code&gt; payment to keep &lt;code&gt;Subscription&lt;/code&gt; active).&lt;/p&gt; 
&lt;p&gt;When the &lt;code&gt;Meeting&lt;/code&gt; fee is required, the &lt;code&gt;Payer&lt;/code&gt; needs to pay &lt;code&gt;Meeting Fee&lt;/code&gt; (through &lt;code&gt;Meeting Fee Payment&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Users&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;Administrator&lt;/code&gt;, &lt;code&gt;Member&lt;/code&gt; and &lt;code&gt;Payer&lt;/code&gt; is a &lt;code&gt;User&lt;/code&gt;. To be a &lt;code&gt;User&lt;/code&gt;, &lt;code&gt;User Registration&lt;/code&gt; is required and confirmed.&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;User&lt;/code&gt; is assigned one or more &lt;code&gt;User Role&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;User Role&lt;/code&gt; has set of &lt;code&gt;Permissions&lt;/code&gt;. A &lt;code&gt;Permission&lt;/code&gt; defines whether &lt;code&gt;User&lt;/code&gt; can invoke a particular action.&lt;/p&gt; 
&lt;h3&gt;2.2 Conceptual Model&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Conceptual Model - A conceptual model is a representation of a system, made of the composition of concepts that are used to help people know, understand, or simulate a subject the model represents. &lt;a href=&quot;https://en.wikipedia.org/wiki/Conceptual_model&quot;&gt;Wikipedia - Conceptual model&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Conceptual Model&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;PlantUML version: &lt;img src=&quot;https://www.plantuml.com/plantuml/proxy?cache=no&amp;amp;src=https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/PlantUML/Conceptual_Model.puml&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;VisualParadigm version (not maintained, only for demonstration): &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Conceptual_Model.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Conceptual Model of commenting feature&lt;/strong&gt; &lt;img src=&quot;https://www.plantuml.com/plantuml/proxy?src=https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/PlantUML/Commenting_Conceptual_Model.puml&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;2.3 Event Storming&lt;/h3&gt; 
&lt;p&gt;While a Conceptual Model focuses on structures and relationships between them, &lt;strong&gt;behavior&lt;/strong&gt; and &lt;strong&gt;events&lt;/strong&gt; that occur in our domain are more important.&lt;/p&gt; 
&lt;p&gt;There are many ways to show behavior and events. One of them is a light technique called &lt;a href=&quot;https://www.eventstorming.com/&quot;&gt;Event Storming&lt;/a&gt; which is becoming more popular. Below are presented 3 main business processes using this technique: user registration, meeting group creation and meeting organization.&lt;/p&gt; 
&lt;p&gt;Note: Event Storming is a light, live workshop. One of the possible outputs of this workshop is presented here. Even if you are not doing Event Storming workshops, this type of process presentation can be very valuable to you and your stakeholders.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;User Registration process&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/User_Registration.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Meeting Group creation&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Meeting_Group_Creation.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Meeting organization&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Meeting_Organization.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Payments&lt;/strong&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Payments_EventStorming_Design.jpg&quot; alt=&quot;&quot; /&gt; &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Payments_EventStorming_Design_HighRes.jpg&quot;&gt;Download high resolution file&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;3. Architecture&lt;/h2&gt; 
&lt;h3&gt;3.0 C4 Model&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://c4model.com/&quot;&gt;C4 model&lt;/a&gt; is a lean graphical notation technique for modelling the architecture of software systems. &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;As can be found on the website of the author of this model (&lt;a href=&quot;https://simonbrown.je/&quot;&gt;Simon Brown&lt;/a&gt;): &lt;em&gt;The C4 model was created as a way to help software development teams describe and communicate software architecture, both during up-front design sessions and when retrospectively documenting an existing codebase&lt;/em&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Model C4&lt;/em&gt; defines 4 levels (views) of the system architecture: &lt;em&gt;System Context&lt;/em&gt;, &lt;em&gt;Container&lt;/em&gt;, &lt;em&gt;Component&lt;/em&gt; and &lt;em&gt;Code&lt;/em&gt;. Below are examples of each of these levels that describe the architecture of this system. &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: The &lt;a href=&quot;https://plantuml.com/&quot;&gt;PlantUML&lt;/a&gt; (diagram as text) component was used to describe all C4 model levels. Additionally, for levels C1-C3, a &lt;a href=&quot;https://github.com/plantuml-stdlib/C4-PlantUML&quot;&gt;C4-PlantUML&lt;/a&gt; plug-in connecting PlantUML with the C4 model was used&lt;/em&gt;.&lt;/p&gt; 
&lt;h4&gt;3.0.1 C1 System Context&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;http://www.plantuml.com/plantuml/png/7OrDgeD048JtxnGl1z0ca5LMGWuYutIZulIqz0_6d3vZDbLG5Dytc2VruF9tMsikWHHQ_XVttPu0cev-Nds9AOmqItMgtcTXs6Rzd1Djm89HadOiLKgxTiSLY0YSp4a19Hky7f3levrjuV77UNk_Nzg1AhR-0W00&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.2 C2 Container&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/C4/C2_Containers.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.3 C3 Component (high-level)&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/C4/C3_Components.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.4 C3 Component (module-level)&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;http://www.plantuml.com/plantuml/png/jLHFRzCm5B_dKsI1GojjBOKn5QH9wxeTAgrem7QUdEGrjHJRaVqCgX3V7QVUl7XkbnA2BusUVt_y_7xrXK8YKRCoEi8rC8Yhab0U7L6UbJg7U8rOgS_ZiIG_HmN5jKwr0fa9Zi1nb0asDWHU2vmep4kQZkUd9xTrwNvvCsP48KXJUfWBLWbUSwhQB9hbkIlTaMAGC02al539SVmsBUQY5F8yUNEQmRkpZyamn9ESKKuLIe9KS9y57zBfsNGN2twOBtMfNzYy_pIPJ4bTMmcEJzNLTXcPwFj68R27Iw5vJkHca4sEusIvYPUFXuuj81d6lwBOB0TacoV8hA8lEBFRXIFKovrqGBROUj_yZBvStvaz2PRWuFR3CtjKNefSbs2epifMd5lWwAWBlf94eTGPQjcK6Faxxc0tD9N6kxuw98KwVvxZiCLgLbKbpRRJQ_eqoZsON0b6gATlApr8BpX2OTDtlKrLqoNOx6vubJvtGv0qnveJ9BMmojR0oAkIlwCmB_vVoALcvfNRi-FB10dovGxEaQ-Q30yoRsOgS6vizcnhCnKwsdhFPc7k0jy0qlq8BeC-i4vYu1laiSN4fTBp-gf1my0zr4REzX3RLpjPy9W14yqc7DXA6raZ77s3qhwaUn-tUmM64W8RIV5HkvLw8Be4XHnVj3CXZCtV7P0WEOpXXk7WZL7uIMWTY0_VUxklg_u7aLstlzUcLt8unkvD42JjxFR1-gn_2L-tlY-0vvgLVm00&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.5 C4 Code (meeting group aggregate)&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;http://www.plantuml.com/plantuml/png/5OqxheD0303xTugN0x1kg58XvI3HObk0yAwHFqB9wGFDJ3FIJ1xL8flyFRQEaiHfyhz67Fu4i7gMPOirvtGsr1xSew0ss1VxVcRUeIcbL1kQTfKh7SuRH0IjUh01AJgyHi3nZLBTot7V9kvq-GS0&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;3.1 High Level View&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Architecture_high_level.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Module descriptions:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt; - Very thin ASP.NET MVC Core REST API application. Main responsibilities are: 
  &lt;ol&gt; 
   &lt;li&gt;Accept request&lt;/li&gt; 
   &lt;li&gt;Authenticate and authorize request (using User Access module)&lt;/li&gt; 
   &lt;li&gt;Delegate work to specific module sending Command or Query&lt;/li&gt; 
   &lt;li&gt;Return response&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User Access&lt;/strong&gt; - responsible for user authentication and authorization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Registrations&lt;/strong&gt; - responsible for user registration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Meetings&lt;/strong&gt; - implements Meetings Bounded Context: creating meeting groups, meetings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Administration&lt;/strong&gt; - implements Administration Bounded Context: implements administrative tasks like meeting group proposal verification&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Payments&lt;/strong&gt; - implements Payments Bounded Context: implements all functionalities associated with payments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;In Memory Events Bus&lt;/strong&gt; - Publish/Subscribe implementation to asynchronously integrate all modules using events (&lt;a href=&quot;https://en.wikipedia.org/wiki/Event-driven_architecture&quot;&gt;Event Driven Architecture&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Key assumptions:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;API contains no application logic&lt;/li&gt; 
 &lt;li&gt;API communicates with Modules using a small interface to send Queries and Commands&lt;/li&gt; 
 &lt;li&gt;Each Module has its own interface which is used by API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modules communicate each other only asynchronously using Events Bus&lt;/strong&gt; - direct method calls are not allowed&lt;/li&gt; 
 &lt;li&gt;Each Module &lt;strong&gt;has it&#39;s own data&lt;/strong&gt; in a separate schema - shared data is not allowed 
  &lt;ul&gt; 
   &lt;li&gt;Module data could be moved into separate databases if desired&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Modules can only have a dependency on the integration events assembly of other Module (see &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#32-module-level-view&quot;&gt;Module level view&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Each Module has its own &lt;a href=&quot;https://freecontent.manning.com/dependency-injection-in-net-2nd-edition-understanding-the-composition-root/&quot;&gt;Composition Root&lt;/a&gt;, which implies that each Module has its own Inversion-of-Control container&lt;/li&gt; 
 &lt;li&gt;API as a host needs to initialize each module and each module has an initialization method&lt;/li&gt; 
 &lt;li&gt;Each Module is &lt;strong&gt;highly encapsulated&lt;/strong&gt; - only required types and members are public, the rest are internal or private&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.2 Module Level View&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Module_level_diagram.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Each Module has &lt;a href=&quot;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&quot;&gt;Clean Architecture&lt;/a&gt; and consists of the following submodules (assemblies):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Application&lt;/strong&gt; - the application logic submodule which is responsible for requests processing: use cases, domain events, integration events, internal commands.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Domain&lt;/strong&gt; - Domain Model in Domain-Driven Design terms implements the applicable &lt;a href=&quot;https://martinfowler.com/bliki/BoundedContext.html&quot;&gt;Bounded Context&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Infrastructure&lt;/strong&gt; - infrastructural code responsible for module initialization, background processing, data access, communication with Events Bus and other external components or systems&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IntegrationEvents&lt;/strong&gt; - &lt;strong&gt;Contracts&lt;/strong&gt; published to the Events Bus; only this assembly can be called by other modules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/VSSolution.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Application, Domain and Infrastructure assemblies could be merged into one assembly. Some people like horizontal layering or more decomposition, some don&#39;t. Implementing the Domain Model or Infrastructure in separate assembly allows encapsulation using the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/internal&quot;&gt;&lt;code&gt;internal&lt;/code&gt;&lt;/a&gt; keyword. Sometimes Bounded Context logic is not worth it because it is too simple. As always, be pragmatic and take whatever approach you like.&lt;/p&gt; 
&lt;h3&gt;3.3 API and Module Communication&lt;/h3&gt; 
&lt;p&gt;The API only communicates with Modules in two ways: during module initialization and request processing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Module initialization&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each module has a static &lt;code&gt;Initialize&lt;/code&gt; method which is invoked in the API &lt;code&gt;Startup&lt;/code&gt; class. All configuration needed by this module should be provided as arguments to this method. All services are configured during initialization and the Composition Root is created using the Inversion-of-Control Container.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public static void Initialize(
    string connectionString,
    IExecutionContextAccessor executionContextAccessor,
    ILogger logger,
    EmailsConfiguration emailsConfiguration)
{
    var moduleLogger = logger.ForContext(&quot;Module&quot;, &quot;Meetings&quot;);

    ConfigureCompositionRoot(connectionString, executionContextAccessor, moduleLogger, emailsConfiguration);

    QuartzStartup.Initialize(moduleLogger);

    EventsBusStartup.Initialize(moduleLogger);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Request processing&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each module has the same interface signature exposed to the API. It contains 3 methods: command with result, command without result and query.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public interface IMeetingsModule
{
    Task&amp;lt;TResult&amp;gt; ExecuteCommandAsync&amp;lt;TResult&amp;gt;(ICommand&amp;lt;TResult&amp;gt; command);

    Task ExecuteCommandAsync(ICommand command);

    Task&amp;lt;TResult&amp;gt; ExecuteQueryAsync&amp;lt;TResult&amp;gt;(IQuery&amp;lt;TResult&amp;gt; query);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some people say that processing a command should not return a result. This is an understandable approach but sometimes impractical, especially when you want to immediately return the ID of a newly created resource. Sometimes the boundary between Command and Query is blurry. One example is &lt;code&gt;AuthenticateCommand&lt;/code&gt; - it returns a token but it is not a query because it has a side effect.&lt;/p&gt; 
&lt;h3&gt;3.4 Module Requests Processing via CQRS&lt;/h3&gt; 
&lt;p&gt;Processing of Commands and Queries is separated by applying the architectural style/pattern &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/architecture/patterns/cqrs&quot;&gt;Command Query Responsibility Segregation (CQRS)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/CQRS.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Commands are processed using &lt;em&gt;Write Model&lt;/em&gt; which is implemented using DDD tactical patterns:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class CreateNewMeetingGroupCommandHandler : ICommandHandler&amp;lt;CreateNewMeetingGroupCommand&amp;gt;
{
    private readonly IMeetingGroupRepository _meetingGroupRepository;
    private readonly IMeetingGroupProposalRepository _meetingGroupProposalRepository;

    internal CreateNewMeetingGroupCommandHandler(
        IMeetingGroupRepository meetingGroupRepository,
        IMeetingGroupProposalRepository meetingGroupProposalRepository)
    {
        _meetingGroupRepository = meetingGroupRepository;
        _meetingGroupProposalRepository = meetingGroupProposalRepository;
    }

    public async Task Handle(CreateNewMeetingGroupCommand request, CancellationToken cancellationToken)
    {
        var meetingGroupProposal = await _meetingGroupProposalRepository.GetByIdAsync(request.MeetingGroupProposalId);

        var meetingGroup = meetingGroupProposal.CreateMeetingGroup();

        await _meetingGroupRepository.AddAsync(meetingGroup);

        
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Queries are processed using &lt;em&gt;Read Model&lt;/em&gt; which is implemented by executing raw SQL statements on database views:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class GetAllMeetingGroupsQueryHandler : IQueryHandler&amp;lt;GetAllMeetingGroupsQuery, List&amp;lt;MeetingGroupDto&amp;gt;&amp;gt;
{
    private readonly ISqlConnectionFactory _sqlConnectionFactory;

    internal GetAllMeetingGroupsQueryHandler(ISqlConnectionFactory sqlConnectionFactory)
    {
        _sqlConnectionFactory = sqlConnectionFactory;
    }

    public async Task&amp;lt;List&amp;lt;MeetingGroupDto&amp;gt;&amp;gt; Handle(GetAllMeetingGroupsQuery request, CancellationToken cancellationToken)
    {
        var connection = _sqlConnectionFactory.GetOpenConnection();

        const string sql = $&quot;&quot;&quot;
                           SELECT 
                                [MeetingGroup].[Id] as [{nameof(MeetingGroupDto.Id)}] , 
                                [MeetingGroup].[Name] as [{nameof(MeetingGroupDto.Name)}], 
                                [MeetingGroup].[Description] as [{nameof(MeetingGroupDto.Description)}] 
                                [MeetingGroup].[LocationCountryCode] as [{nameof(MeetingGroupDto.LocationCountryCode)}],
                                [MeetingGroup].[LocationCity] as [{nameof(MeetingGroupDto.LocationCity)}]
                           FROM [meetings].[v_MeetingGroups] AS [MeetingGroup]
                           &quot;&quot;&quot;;
        var meetingGroups = await connection.QueryAsync&amp;lt;MeetingGroupDto&amp;gt;(sql);

        return meetingGroups.AsList();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key advantages:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Solution is appropriate to the problem - reading and writing needs are usually different&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;Single Responsibility Principle&lt;/a&gt; (SRP) - one handler does one thing&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href=&quot;https://en.wikipedia.org/wiki/Interface_segregation_principle&quot;&gt;Interface Segregation Principle&lt;/a&gt; (ISP) - each handler implements interface with exactly one method&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href=&quot;https://refactoring.com/catalog/introduceParameterObject.html&quot;&gt;Parameter Object pattern&lt;/a&gt; - Commands and Queries are objects which are easy to serialize/deserialize&lt;/li&gt; 
 &lt;li&gt;Easy way to apply &lt;a href=&quot;https://en.wikipedia.org/wiki/Decorator_pattern&quot;&gt;Decorator pattern&lt;/a&gt; to handle cross-cutting concerns&lt;/li&gt; 
 &lt;li&gt;Supports Loose Coupling by use of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mediator_pattern&quot;&gt;Mediator pattern&lt;/a&gt; - separates invoker of request from handler of request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Disadvantage:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Mediator pattern introduces extra indirection and is harder to reason about which class handles the request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information: &lt;a href=&quot;https://www.kamilgrzybek.com/design/simple-cqrs-implementation-with-raw-sql-and-ddd/&quot;&gt;Simple CQRS implementation with raw SQL and DDD&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.5 Domain Model Principles and Attributes&lt;/h3&gt; 
&lt;p&gt;The Domain Model, which is the central and most critical part in the system, should be designed with special attention. Here are some key principles and attributes which are applied to Domain Models of each module:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;High level of encapsulation&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All members are &lt;code&gt;private&lt;/code&gt; by default, then &lt;code&gt;internal&lt;/code&gt; - only &lt;code&gt;public&lt;/code&gt; at the very edge.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;High level of PI (Persistence Ignorance)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;No dependencies to infrastructure, databases, etc. All classes are &lt;a href=&quot;https://en.wikipedia.org/wiki/Plain_old_CLR_object&quot;&gt;POCOs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rich in behavior&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All business logic is located in the Domain Model. No leaks to the application layer or elsewhere.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Low level of Primitive Obsession&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Primitive attributes of Entites grouped together using ValueObjects.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Business language&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All classes, methods and other members are named in business language used in this Bounded Context.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Testable&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The Domain Model is a critical part of the system so it should be easy to test (Testable Design).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class MeetingGroup : Entity, IAggregateRoot
{
    public MeetingGroupId Id { get; private set; }

    private string _name;

    private string _description;

    private MeetingGroupLocation _location;

    private MemberId _creatorId;

    private List&amp;lt;MeetingGroupMember&amp;gt; _members;

    private DateTime _createDate;

    private DateTime? _paymentDateTo;

    internal static MeetingGroup CreateBasedOnProposal(
        MeetingGroupProposalId meetingGroupProposalId,
        string name,
        string description,
        MeetingGroupLocation location, MemberId creatorId)
    {
        return new MeetingGroup(meetingGroupProposalId, name, description, location, creatorId);
    }

     public Meeting CreateMeeting(
            string title,
            MeetingTerm term,
            string description,
            MeetingLocation location,
            int? attendeesLimit,
            int guestsLimit,
            Term rsvpTerm,
            MoneyValue eventFee,
            List&amp;lt;MemberId&amp;gt; hostsMembersIds,
            MemberId creatorId)
        {
            this.CheckRule(new MeetingCanBeOrganizedOnlyByPayedGroupRule(_paymentDateTo));

            this.CheckRule(new MeetingHostMustBeAMeetingGroupMemberRule(creatorId, hostsMembersIds, _members));

            return new Meeting(this.Id,
                title,
                term,
                description,
                location,
                attendeesLimit,
                guestsLimit,
                rsvpTerm,
                eventFee,
                hostsMembersIds,
                creatorId);
        }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.6 Cross-Cutting Concerns&lt;/h3&gt; 
&lt;p&gt;To support &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;Single Responsibility Principle&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&quot;&gt;Don&#39;t Repeat Yourself&lt;/a&gt; principles, the implementation of cross-cutting concerns is done using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Decorator_pattern&quot;&gt;Decorator Pattern&lt;/a&gt;. Each Command processor is decorated by 3 decorators: logging, validation and unit of work.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Decorator.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Logging&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Logging decorator logs execution, arguments and processing of each Command. This way each log inside a processor has the log context of the processing command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class LoggingCommandHandlerDecorator&amp;lt;T&amp;gt; : ICommandHandler&amp;lt;T&amp;gt; where T:ICommand
{
    private readonly ILogger _logger;
    private readonly IExecutionContextAccessor _executionContextAccessor;
    private readonly ICommandHandler&amp;lt;T&amp;gt; _decorated;

    public LoggingCommandHandlerDecorator(
        ILogger logger,
        IExecutionContextAccessor executionContextAccessor,
        ICommandHandler&amp;lt;T&amp;gt; decorated)
    {
        _logger = logger;
        _executionContextAccessor = executionContextAccessor;
        _decorated = decorated;
    }
    public async Task Handle(T command, CancellationToken cancellationToken)
    {
        if (command is IRecurringCommand)
        {
            return await _decorated.Handle(command, cancellationToken);
        }
        using (
            LogContext.Push(
                new RequestLogEnricher(_executionContextAccessor),
                new CommandLogEnricher(command)))
        {
            try
            {
                this._logger.Information(
                    &quot;Executing command {Command}&quot;,
                    command.GetType().Name);

                var result = await _decorated.Handle(command, cancellationToken);

                this._logger.Information(&quot;Command {Command} processed successful&quot;, command.GetType().Name);

                return result;
            }
            catch (Exception exception)
            {
                this._logger.Error(exception, &quot;Command {Command} processing failed&quot;, command.GetType().Name);
                throw;
            }
        }
    }

    private class CommandLogEnricher : ILogEventEnricher
    {
        private readonly ICommand _command;

        public CommandLogEnricher(ICommand command)
        {
            _command = command;
        }
        public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory)
        {
            logEvent.AddOrUpdateProperty(new LogEventProperty(&quot;Context&quot;, new ScalarValue($&quot;Command:{_command.Id.ToString()}&quot;)));
        }
    }

    private class RequestLogEnricher : ILogEventEnricher
    {
        private readonly IExecutionContextAccessor _executionContextAccessor;
        public RequestLogEnricher(IExecutionContextAccessor executionContextAccessor)
        {
            _executionContextAccessor = executionContextAccessor;
        }
        public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory)
        {
            if (_executionContextAccessor.IsAvailable)
            {
                logEvent.AddOrUpdateProperty(new LogEventProperty(&quot;CorrelationId&quot;, new ScalarValue(_executionContextAccessor.CorrelationId)));
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Validation&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Validation decorator performs Command data validation. It checks rules against Command arguments using the FluentValidation library.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class ValidationCommandHandlerDecorator&amp;lt;T&amp;gt; : ICommandHandler&amp;lt;T&amp;gt; where T:ICommand
{
    private readonly IList&amp;lt;IValidator&amp;lt;T&amp;gt;&amp;gt; _validators;
    private readonly ICommandHandler&amp;lt;T&amp;gt; _decorated;

    public ValidationCommandHandlerDecorator(
        IList&amp;lt;IValidator&amp;lt;T&amp;gt;&amp;gt; validators,
        ICommandHandler&amp;lt;T&amp;gt; decorated)
    {
        this._validators = validators;
        _decorated = decorated;
    }

    public Task&amp;lt;Unit&amp;gt; Handle(T command, CancellationToken cancellationToken)
    {
        var errors = _validators
            .Select(v =&amp;gt; v.Validate(command))
            .SelectMany(result =&amp;gt; result.Errors)
            .Where(error =&amp;gt; error != null)
            .ToList();

        if (errors.Any())
        {
            var errorBuilder = new StringBuilder();

            errorBuilder.AppendLine(&quot;Invalid command, reason: &quot;);

            foreach (var error in errors)
            {
                errorBuilder.AppendLine(error.ErrorMessage);
            }

            throw new InvalidCommandException(errorBuilder.ToString(), null);
        }

        return _decorated.Handle(command, cancellationToken);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Unit Of Work&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;All Command processing has side effects. To avoid calling commit on every handler, &lt;code&gt;UnitOfWorkCommandHandlerDecorator&lt;/code&gt; is used. It additionally marks &lt;code&gt;InternalCommand&lt;/code&gt; as processed (if it is Internal Command) and dispatches all Domain Events (as part of &lt;a href=&quot;https://martinfowler.com/eaaCatalog/unitOfWork.html&quot;&gt;Unit Of Work&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class UnitOfWorkCommandHandlerDecorator&amp;lt;T&amp;gt; : ICommandHandler&amp;lt;T&amp;gt; where T:ICommand
{
    private readonly ICommandHandler&amp;lt;T&amp;gt; _decorated;
    private readonly IUnitOfWork _unitOfWork;
    private readonly MeetingsContext _meetingContext;

    public UnitOfWorkCommandHandlerDecorator(
        ICommandHandler&amp;lt;T&amp;gt; decorated,
        IUnitOfWork unitOfWork,
        MeetingsContext meetingContext)
    {
        _decorated = decorated;
        _unitOfWork = unitOfWork;
        _meetingContext = meetingContext;
    }

    public async Task Handle(T command, CancellationToken cancellationToken)
    {
        await this._decorated.Handle(command, cancellationToken);

        if (command is InternalCommandBase)
        {
            var internalCommand =
                await _meetingContext.InternalCommands.FirstOrDefaultAsync(x =&amp;gt; x.Id == command.Id,
                    cancellationToken: cancellationToken);

            if (internalCommand != null)
            {
                internalCommand.ProcessedDate = DateTime.UtcNow;
            }
        }

        await this._unitOfWork.CommitAsync(cancellationToken);

        
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.7 Modules Integration&lt;/h3&gt; 
&lt;p&gt;Integration between modules is strictly &lt;strong&gt;asynchronous&lt;/strong&gt; using Integration Events and the In Memory Event Bus as broker. In this way coupling between modules is minimal and exists only on the structure of Integration Events.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Modules don&#39;t share data&lt;/strong&gt; so it is not possible nor desirable to create a transaction which spans more than one module. To ensure maximum reliability, the &lt;a href=&quot;http://www.kamilgrzybek.com/design/the-outbox-pattern/&quot;&gt;Outbox / Inbox pattern&lt;/a&gt; is used. This pattern provides accordingly &lt;em&gt;&quot;At-Least-Once delivery&quot;&lt;/em&gt; and &lt;em&gt;&quot;At-Least-Once processing&quot;&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/OutboxInbox.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;The Outbox and Inbox is implemented using two SQL tables and a background worker for each module. The background worker is implemented using the Quartz.NET library.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Saving to Outbox:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/OutboxSave.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Processing Outbox:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/OutboxProcessing.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;3.8 Internal Processing&lt;/h3&gt; 
&lt;p&gt;The main principle of this system is that you can change its state only by calling a specific Command.&lt;/p&gt; 
&lt;p&gt;Commands can be called not only by the API, but by the processing module itself. The main use case which implements this mechanism is data processing in eventual consistency mode when we want to process something in a different process and transaction. This applies, for example, to Inbox processing because we want to do something (calling a Command) based on an Integration Event from the Inbox.&lt;/p&gt; 
&lt;p&gt;This idea is taken from Alberto&#39;s Brandolini&#39;s Event Storming picture called &quot;The picture that explains “almost” everything&quot; which shows that every side effect (domain event) is created by invoking a Command on Aggregate. See &lt;a href=&quot;https://xebia.com/blog/eventstorming-cheat-sheet/&quot;&gt;EventStorming cheat sheet&lt;/a&gt; article for more details.&lt;/p&gt; 
&lt;p&gt;Implementation of internal processing is very similar to implementation of the Outbox and Inbox. One SQL table and one background worker for processing. Each internally processing Command must inherit from &lt;code&gt;InternalCommandBase&lt;/code&gt; class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal abstract class InternalCommandBase : ICommand
{
    public Guid Id { get; }

    protected InternalCommandBase(Guid id)
    {
        this.Id = id;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is important because the &lt;code&gt;UnitOfWorkCommandHandlerDecorator&lt;/code&gt; must mark an internal Command as processed during committing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public async Task Handle(T command, CancellationToken cancellationToken)
{
    await this._decorated.Handle(command, cancellationToken);

    if (command is InternalCommandBase)
    {
        var internalCommand =
            await _meetingContext.InternalCommands.FirstOrDefaultAsync(x =&amp;gt; x.Id == command.Id,
                cancellationToken: cancellationToken);

        if (internalCommand != null)
        {
            internalCommand.ProcessedDate = DateTime.UtcNow;
        }
    }

    await this._unitOfWork.CommitAsync(cancellationToken);

    
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.9 Security&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Authentication&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Authentication is implemented using JWT Token and Bearer scheme using IdentityServer. For now, only one authentication method is implemented: forms style authentication (username and password) via the OAuth2 &lt;a href=&quot;https://www.oauth.com/oauth2-servers/access-tokens/password-grant/&quot;&gt;Resource Owner Password Grant Type&lt;/a&gt;. It requires implementation of the &lt;code&gt;IResourceOwnerPasswordValidator&lt;/code&gt; interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class ResourceOwnerPasswordValidator : IResourceOwnerPasswordValidator
{
    private readonly IUserAccessModule _userAccessModule;

    public ResourceOwnerPasswordValidator(IUserAccessModule userAccessModule)
    {
        _userAccessModule = userAccessModule;
    }

    public async Task ValidateAsync(ResourceOwnerPasswordValidationContext context)
    {
        var authenticationResult = await _userAccessModule.ExecuteCommandAsync(new AuthenticateCommand(context.UserName, context.Password));
        if (!authenticationResult.IsAuthenticated)
        {
            context.Result = new GrantValidationResult(
                TokenRequestErrors.InvalidGrant,
                authenticationResult.AuthenticationError);
            return;
        }
        context.Result = new GrantValidationResult(
            authenticationResult.User.Id.ToString(),
            &quot;forms&quot;,
            authenticationResult.User.Claims);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Authorization&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Authorization is achieved by implementing &lt;a href=&quot;https://en.wikipedia.org/wiki/Role-based_access_control&quot;&gt;RBAC (Role Based Access Control)&lt;/a&gt; using Permissions. Permissions are more granular and a much better way to secure your application than Roles alone. Each User has a set of Roles and each Role contains one or more Permission. The User&#39;s set of Permissions is extracted from all Roles the User belongs to. Permissions are always checked on &lt;code&gt;Controller&lt;/code&gt; level - never Roles:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[HttpPost]
[Route(&quot;&quot;)]
[HasPermission(MeetingsPermissions.ProposeMeetingGroup)]
public async Task&amp;lt;IActionResult&amp;gt; ProposeMeetingGroup(ProposeMeetingGroupRequest request)
{
    await _meetingsModule.ExecuteCommandAsync(
        new ProposeMeetingGroupCommand(
            request.Name,
            request.Description,
            request.LocationCity,
            request.LocationCountryCode));

    return Ok();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.10 Unit Tests&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A unit test is an automated piece of code that invokes the unit of work being tested, and then checks some assumptions about a single end result of that unit. A unit test is almost always written using a unit testing framework. It can be written easily and runs quickly. It’s trustworthy, readable, and maintainable. It’s consistent in its results as long as production code hasn’t changed. &lt;a href=&quot;https://www.manning.com/books/the-art-of-unit-testing-second-edition&quot;&gt;Art of Unit Testing 2nd Edition&lt;/a&gt; Roy Osherove&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Attributes of good unit test&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automated&lt;/li&gt; 
 &lt;li&gt;Maintainable&lt;/li&gt; 
 &lt;li&gt;Runs very fast (in ms)&lt;/li&gt; 
 &lt;li&gt;Consistent, Deterministic (always the same result)&lt;/li&gt; 
 &lt;li&gt;Isolated from other tests&lt;/li&gt; 
 &lt;li&gt;Readable&lt;/li&gt; 
 &lt;li&gt;Can be executed by anyone&lt;/li&gt; 
 &lt;li&gt;Testing public API, not internal behavior (overspecification)&lt;/li&gt; 
 &lt;li&gt;Looks like production code&lt;/li&gt; 
 &lt;li&gt;Treated as production code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Unit tests should mainly test business logic (domain model): &lt;br /&gt; &lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/unit_tests.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Each unit test has 3 standard sections: Arrange, Act and Assert:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/UnitTestsGeneral.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Arrange&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Arrange section is responsible for preparing the Aggregate for testing the public method that we want to test. This public method is often called (from the unit tests perspective) the SUT (system under test).&lt;/p&gt; 
&lt;p&gt;Creating an Aggregate ready for testing involves &lt;strong&gt;calling one or more other public constructors/methods&lt;/strong&gt; on the Domain Model. At first it may seem that we are testing too many things at the same time, but this is not true. We need to be one hundred percent sure that the Aggregate is in a state exactly as it will be in production. This can only be ensured when we:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Use only public API of Domain Model&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Don&#39;t use &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.internalsvisibletoattribute?view=netframework-4.8&quot;&gt;InternalsVisibleToAttribute&lt;/a&gt; class 
  &lt;ul&gt; 
   &lt;li&gt;This exposes the Domain Model to the Unit Tests library, removing encapsulation so our tests and production code are treated differently and it is a very bad thing&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Don&#39;t use &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.conditionalattribute?view=netframework-4.8&quot;&gt;ConditionalAttribute&lt;/a&gt; classes - it reduces readability and increases complexity&lt;/li&gt; 
 &lt;li&gt;Don&#39;t create any special constructors/factory methods for tests (even with conditional compilation symbols) 
  &lt;ul&gt; 
   &lt;li&gt;Special constructor/factory method only for unit tests causes duplication of business logic in the test itself and focuses on state - this kind of approach causes the test to be very sensitive to changes and hard to maintain&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Don&#39;t remove encapsulation from Domain Model (for example: change keywords from &lt;code&gt;internal&lt;/code&gt;/&lt;code&gt;private&lt;/code&gt; to &lt;code&gt;public&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Don&#39;t make methods &lt;code&gt;protected&lt;/code&gt; to inherit from tested class and in this way provide access to internal methods/properties&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Isolation of external dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;There are 2 main concepts - stubs and mocks:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A stub is a controllable replacement for an existing dependency (or collaborator) in the system. By using a stub, you can test your code without dealing with the dependency directly.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A mock object is a fake object in the system that decides whether the unit test has passed or failed. It does so by verifying whether the object under test called the fake object as expected. There’s usually no more than one mock per test. &lt;a href=&quot;https://www.manning.com/books/the-art-of-unit-testing-second-edition&quot;&gt;Art of Unit Testing 2nd Edition&lt;/a&gt; Roy Osherove&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Good advice: use stubs if you need to, but try to avoid mocks. Mocking causes us to test too many internal things and leads to overspecification.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. Act&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This section is very easy - we execute &lt;strong&gt;exactly one&lt;/strong&gt; public method on aggregate (SUT).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Assert&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In this section we check expectations. There are only 2 possible outcomes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Method completed and Domain Event(s) published&lt;/li&gt; 
 &lt;li&gt;Business rule was broken&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Simple example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[Test]
public void NewUserRegistration_WithUniqueLogin_IsSuccessful()
{
    // Arrange
    var usersCounter = Substitute.For&amp;lt;IUsersCounter&amp;gt;();

    // Act
    var userRegistration =
        UserRegistration.RegisterNewUser(
            &quot;login&quot;, &quot;password&quot;, &quot;test@email&quot;,
            &quot;firstName&quot;, &quot;lastName&quot;, usersCounter);

    // Assert
    var newUserRegisteredDomainEvent = AssertPublishedDomainEvent&amp;lt;NewUserRegisteredDomainEvent&amp;gt;(userRegistration);
    Assert.That(newUserRegisteredDomainEvent.UserRegistrationId, Is.EqualTo(userRegistration.Id));
}

[Test]
public void NewUserRegistration_WithoutUniqueLogin_BreaksUserLoginMustBeUniqueRule()
{
    // Arrange
    var usersCounter = Substitute.For&amp;lt;IUsersCounter&amp;gt;();
    usersCounter.CountUsersWithLogin(&quot;login&quot;).Returns(x =&amp;gt; 1);

    // Assert
    AssertBrokenRule&amp;lt;UserLoginMustBeUniqueRule&amp;gt;(() =&amp;gt;
    {
        // Act
        UserRegistration.RegisterNewUser(
            &quot;login&quot;, &quot;password&quot;, &quot;test@email&quot;,
            &quot;firstName&quot;, &quot;lastName&quot;, usersCounter);
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Advanced example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[Test]
public void AddAttendee_WhenMemberIsAlreadyAttendeeOfMeeting_IsNotPossible()
{
    // Arrange
    var creatorId = new MemberId(Guid.NewGuid());
    var meetingTestData = CreateMeetingTestData(new MeetingTestDataOptions
    {
        CreatorId = creatorId
    });
    var newMemberId = new MemberId(Guid.NewGuid());
    meetingTestData.MeetingGroup.JoinToGroupMember(newMemberId);
    meetingTestData.Meeting.AddAttendee(meetingTestData.MeetingGroup, newMemberId, 0);

    // Assert
    AssertBrokenRule&amp;lt;MemberCannotBeAnAttendeeOfMeetingMoreThanOnceRule&amp;gt;(() =&amp;gt;
    {
        // Act
        meetingTestData.Meeting.AddAttendee(meetingTestData.MeetingGroup, newMemberId, 0);
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;CreateMeetingTestData&lt;/code&gt; method is an implementation of &lt;a href=&quot;https://blog.ploeh.dk/2009/02/13/SUTFactory/&quot;&gt;SUT Factory&lt;/a&gt; described by Mark Seemann which allows keeping common creation logic in one place:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;protected MeetingTestData CreateMeetingTestData(MeetingTestDataOptions options)
{
    var proposalMemberId = options.CreatorId ?? new MemberId(Guid.NewGuid());
    var meetingProposal = MeetingGroupProposal.ProposeNew(
        &quot;name&quot;, &quot;description&quot;,
        new MeetingGroupLocation(&quot;Warsaw&quot;, &quot;PL&quot;), proposalMemberId);

    meetingProposal.Accept();

    var meetingGroup = meetingProposal.CreateMeetingGroup();

    meetingGroup.UpdatePaymentInfo(DateTime.Now.AddDays(1));

    var meetingTerm = options.MeetingTerm ??
                      new MeetingTerm(DateTime.UtcNow.AddDays(1), DateTime.UtcNow.AddDays(2));

    var rsvpTerm = options.RvspTerm ?? Term.NoTerm;
    var meeting = meetingGroup.CreateMeeting(&quot;title&quot;,
        meetingTerm,
        &quot;description&quot;,
        new MeetingLocation(&quot;Name&quot;, &quot;Address&quot;, &quot;PostalCode&quot;, &quot;City&quot;),
        options.AttendeesLimit,
        options.GuestsLimit,
        rsvpTerm,
        MoneyValue.Zero,
        new List&amp;lt;MemberId&amp;gt;(),
        proposalMemberId);

    DomainEventsTestHelper.ClearAllDomainEvents(meetingGroup);

    return new MeetingTestData(meetingGroup, meeting);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.11 Architecture Decision Log&lt;/h3&gt; 
&lt;p&gt;All Architectural Decisions (AD) are documented in the &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/architecture-decision-log&quot;&gt;Architecture Decision Log (ADL)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;More information about documenting architecture-related decisions in this way : &lt;a href=&quot;https://github.com/joelparkerhenderson/architecture_decision_record&quot;&gt;https://github.com/joelparkerhenderson/architecture_decision_record&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.12 Architecture Unit Tests&lt;/h3&gt; 
&lt;p&gt;In some cases it is not possible to enforce the application architecture, design or established conventions using compiler (compile-time). For this reason, code implementations can diverge from the original design and architecture. We want to minimize this behavior, not only by code review.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;To do this, unit tests of system architecture, design, major conventions and assumptions have been written. In .NET there is special library for this task: &lt;a href=&quot;https://github.com/BenMorris/NetArchTest&quot;&gt;NetArchTest&lt;/a&gt;. This library has been written based on the very popular JAVA architecture unit tests library - &lt;a href=&quot;https://www.archunit.org/&quot;&gt;ArchUnit&lt;/a&gt;.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;Using this kind of tests we can test proper layering of our application, dependencies, encapsulation, immutability, DDD correct implementation, naming, conventions and so on - everything what we need to test. Example:&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/architecture_unit_tests.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;More information about architecture unit tests here: &lt;a href=&quot;https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit&quot;&gt;https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.13 Integration Tests&lt;/h3&gt; 
&lt;h4&gt;Definition&lt;/h4&gt; 
&lt;p&gt;&quot;Integration Test&quot; term is blurred. It can mean test between classes, modules, services, even systems - see &lt;a href=&quot;https://martinfowler.com/bliki/IntegrationTest.html&quot;&gt;this&lt;/a&gt; article (by Martin Fowler). &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;For this reason, the definition of integration test in this project is as follows:&lt;br /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;it verifies how system works in integration with &quot;out-of-process&quot; dependencies - database, messaging system, file system or external API&lt;/li&gt; 
 &lt;li&gt;it tests particular use case&lt;/li&gt; 
 &lt;li&gt;it can be slow (as opposed to Unit Test)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Approach&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Do not mock dependencies over which you have full control&lt;/strong&gt; (like database). Full control dependency means you can always revert all changes (remove side-effects) and no one can notice it. They are not visible to others. See next point, please.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Use &quot;production&quot;, normal, real database version&lt;/strong&gt;. Some use e.g. in memory repository, some use light databases instead &quot;production&quot; version. This is still mocking. Testing makes sense if we have full confidence in testing. You can&#39;t trust the test if you know that the infrastructure in the production environment will vary. Be always as close to production environment as possible.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mock dependencies over which you don&#39;t have control&lt;/strong&gt;. No control dependency means you can&#39;t remove side-effects after interaction with this dependency (external API, messaging system, SMTP server etc.). They can be visible to others.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Implementation&lt;/h4&gt; 
&lt;p&gt;Integration test should test exactly one use case. One use case is represented by one Command/Query processing so CommandHandler/QueryHandler in Application layer is perfect starting point for running the Integration Test:&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/integration_tests.jpg&quot; alt=&quot;&quot; /&gt; For each test, the following preparation steps must be performed:&lt;br /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clear database&lt;/li&gt; 
 &lt;li&gt;Prepare mocks&lt;/li&gt; 
 &lt;li&gt;Initialize testing module&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[SetUp]
public async Task BeforeEachTest()
{
    const string connectionStringEnvironmentVariable =
        &quot;ASPNETCORE_MyMeetings_IntegrationTests_ConnectionString&quot;;
    ConnectionString = Environment.GetEnvironmentVariable(connectionStringEnvironmentVariable, EnvironmentVariableTarget.Machine);
    if (ConnectionString == null)
    {
        throw new ApplicationException(
            $&quot;Define connection string to integration tests database using environment variable: {connectionStringEnvironmentVariable}&quot;);
    }

    using (var sqlConnection = new SqlConnection(ConnectionString))
    {
        await ClearDatabase(sqlConnection);
    }

    Logger = Substitute.For&amp;lt;ILogger&amp;gt;();
    EmailSender = Substitute.For&amp;lt;IEmailSender&amp;gt;();
    EventsBus = new EventsBusMock();
    ExecutionContext = new ExecutionContextMock(Guid.NewGuid());
    
    PaymentsStartup.Initialize(
        ConnectionString,
        ExecutionContext,
        Logger,
        EventsBus,
        false);

    PaymentsModule = new PaymentsModule();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After preparation, test is performed on clear database. Usually, it is the execution of some (or many) Commands and: &lt;br /&gt; a) running a Query or/and &lt;br /&gt; b) verifying mocks &lt;br /&gt; to check the result.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;[TestFixture]
public class MeetingPaymentTests : TestBase
{
    [Test]
    public async Task CreateMeetingPayment_Test()
    {
        PayerId payerId = new PayerId(Guid.NewGuid());
        MeetingId meetingId = new MeetingId(Guid.NewGuid());
        decimal value = 100;
        string currency = &quot;EUR&quot;;
        await PaymentsModule.ExecuteCommandAsync(new CreateMeetingPaymentCommand(Guid.NewGuid(),
            payerId, meetingId, value, currency));

        var payment = await PaymentsModule.ExecuteQueryAsync(new GetMeetingPaymentQuery(meetingId.Value, payerId.Value));

        Assert.That(payment.PayerId, Is.EqualTo(payerId.Value));
        Assert.That(payment.MeetingId, Is.EqualTo(meetingId.Value));
        Assert.That(payment.FeeValue, Is.EqualTo(value));
        Assert.That(payment.FeeCurrency, Is.EqualTo(currency));
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Each Command/Query processing is a separate execution (with different object graph resolution, context, database connection etc.) thanks to Composition Root of each module. This behavior is important and desirable.&lt;/p&gt; 
&lt;h3&gt;3.14 System Integration Testing&lt;/h3&gt; 
&lt;h4&gt;Definition&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/System_integration_testing&quot;&gt;System Integration Testing (SIT)&lt;/a&gt; is performed to verify the interactions between the modules of a software system. It involves the overall testing of a complete system of many subsystem components or elements.&lt;/p&gt; 
&lt;h4&gt;Implementation&lt;/h4&gt; 
&lt;p&gt;Implementation of system integration tests is based on approach of integration testing of modules in isolation (invoking commands and queries) described in the previous section.&lt;/p&gt; 
&lt;p&gt;The problem is that in this case we are dealing with &lt;strong&gt;asynchronous communication&lt;/strong&gt;. Due to asynchrony, our &lt;strong&gt;test must wait for the result&lt;/strong&gt; at certain times.&lt;/p&gt; 
&lt;p&gt;To correctly implement such tests, the &lt;strong&gt;Sampling&lt;/strong&gt; technique and implementation described in the &lt;a href=&quot;https://www.amazon.com/Growing-Object-Oriented-Software-Guided-Tests/dp/0321503627&quot;&gt;Growing Object-Oriented Software, Guided by Tests&lt;/a&gt; book was used:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;An asynchronous test must wait for success and use timeouts to detect failure. This implies that every tested activity must have an observable effect: a test must affect the system so that its observable state becomes different. This sounds obvious but it drives how we think about writing asynchronous tests. If an activity has no observable effect, there is nothing the test can wait for, and therefore no way for the test to synchronize with the system it is testing. There are two ways a test can observe the system: by sampling its observable state or by listening for events that it sends out.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/SystemIntegrationTests.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Test below:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Creates Meeting Group Proposal in Meetings module&lt;/li&gt; 
 &lt;li&gt;Waits until Meeting Group Proposal to verification will be available in Administration module with 10 seconds timeout&lt;/li&gt; 
 &lt;li&gt;Accepts Meeting Group Proposal in Administration module&lt;/li&gt; 
 &lt;li&gt;Waits until Meeting Group is created in Meetings module with 15 seconds timeout&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class CreateMeetingGroupTests : TestBase
{
    [Test]
    public async Task CreateMeetingGroupScenario_WhenProposalIsAccepted()
    {
        var meetingGroupId = await MeetingsModule.ExecuteCommandAsync(
            new ProposeMeetingGroupCommand(&quot;Name&quot;,
            &quot;Description&quot;,
            &quot;Location&quot;,
            &quot;PL&quot;));

        AssertEventually(
            new GetMeetingGroupProposalFromAdministrationProbe(meetingGroupId, AdministrationModule), 
            10000);

        await AdministrationModule.ExecuteCommandAsync(new AcceptMeetingGroupProposalCommand(meetingGroupId));

        AssertEventually(
            new GetCreatedMeetingGroupFromMeetingsProbe(meetingGroupId, MeetingsModule),
            15000);
    }

    private class GetCreatedMeetingGroupFromMeetingsProbe : IProbe
    {
        private readonly Guid _expectedMeetingGroupId;

        private readonly IMeetingsModule _meetingsModule;

        private List&amp;lt;MeetingGroupDto&amp;gt; _allMeetingGroups;

        public GetCreatedMeetingGroupFromMeetingsProbe(
            Guid expectedMeetingGroupId, 
            IMeetingsModule meetingsModule)
        {
            _expectedMeetingGroupId = expectedMeetingGroupId;
            _meetingsModule = meetingsModule;
        }

        public bool IsSatisfied()
        {
            return _allMeetingGroups != null &amp;amp;&amp;amp; 
                   _allMeetingGroups.Any(x =&amp;gt; x.Id == _expectedMeetingGroupId);
        }

        public async Task SampleAsync()
        {
            _allMeetingGroups = await _meetingsModule.ExecuteQueryAsync(new GetAllMeetingGroupsQuery());
        }

        public string DescribeFailureTo() 
            =&amp;gt; $&quot;Meeting group with ID: {_expectedMeetingGroupId} is not created&quot;;
    }

    private class GetMeetingGroupProposalFromAdministrationProbe : IProbe
    {
        private readonly Guid _expectedMeetingGroupProposalId;

        private MeetingGroupProposalDto _meetingGroupProposal;

        private readonly IAdministrationModule _administrationModule;

        public GetMeetingGroupProposalFromAdministrationProbe(Guid expectedMeetingGroupProposalId, IAdministrationModule administrationModule)
        {
            _expectedMeetingGroupProposalId = expectedMeetingGroupProposalId;
            _administrationModule = administrationModule;
        }

        public bool IsSatisfied()
        {
            if (_meetingGroupProposal == null)
            {
                return false;
            }

            if (_meetingGroupProposal.Id == _expectedMeetingGroupProposalId &amp;amp;&amp;amp;
                _meetingGroupProposal.StatusCode == MeetingGroupProposalStatus.ToVerify.Value)
            {
                return true;
            }

            return false;
        }

        public async Task SampleAsync()
        {
            try
            {
                _meetingGroupProposal =
                    await _administrationModule.ExecuteQueryAsync(
                        new GetMeetingGroupProposalQuery(_expectedMeetingGroupProposalId));
            }
            catch
            {
                // ignored
            }
        }

        public string DescribeFailureTo()
            =&amp;gt; $&quot;Meeting group proposal with ID: {_expectedMeetingGroupProposalId} to verification not created&quot;;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Poller class implementation (based on example in the book):&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class Poller
{
    private readonly int _timeoutMillis;

    private readonly int _pollDelayMillis;

    public Poller(int timeoutMillis)
    {
        _timeoutMillis = timeoutMillis;
        _pollDelayMillis = 1000;
    }

    public void Check(IProbe probe)
    {
        var timeout = new Timeout(_timeoutMillis);
        while (!probe.IsSatisfied())
        {
            if (timeout.HasTimedOut())
            {
                throw new AssertErrorException(DescribeFailureOf(probe));
            }

            Thread.Sleep(_pollDelayMillis);
            probe.SampleAsync();
        }
    }

    private static string DescribeFailureOf(IProbe probe)
    {
        return probe.DescribeFailureTo();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.15 Event Sourcing&lt;/h3&gt; 
&lt;h4&gt;Theory&lt;/h4&gt; 
&lt;p&gt;During the implementation of the Payment module, &lt;em&gt;Event Sourcing&lt;/em&gt; was used. &lt;em&gt;Event Sourcing&lt;/em&gt; is a way of preserving the state of our system by recording a sequence of events. No less, no more.&lt;/p&gt; 
&lt;p&gt;It is important here to really restore the state of our application from events. If we collect events only for auditing purposes, it is an &lt;a href=&quot;https://en.wikipedia.org/wiki/Audit_trail&quot;&gt;Audit Log/Trail&lt;/a&gt; - not the &lt;em&gt;Event Sourcing&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;The main elements of &lt;em&gt;Event Sourcing&lt;/em&gt; are as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Events Stream&lt;/li&gt; 
 &lt;li&gt;Objects that are restored based on events. There are 2 types of such objects depending on the purpose: -- Objects responsible for the change of state. In Domain-Driven Design they will be &lt;em&gt;Aggregates&lt;/em&gt;. -- &lt;em&gt;Projections&lt;/em&gt;: read models prepared for a specific purpose&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Subscriptions&lt;/em&gt; : a way to receive information about new events&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Snapshots&lt;/em&gt;: from time to time, objects saved in the traditional way for performance purposes. Mainly used if there are many events to restore the object from the entire event history. (Note: there is currently no snapshot implementation in the project)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_elements.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;Tool&lt;/h4&gt; 
&lt;p&gt;In order not to reinvent the wheel, the &lt;em&gt;SQL Stream Store&lt;/em&gt; library was used. As the &lt;a href=&quot;https://sqlstreamstore.readthedocs.io/en/latest/&quot;&gt;documentation&lt;/a&gt; says:&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;SQL Stream Store is a .NET library to assist with developing applications that use event sourcing or wish to use stream based patterns over a relational database and existing operational infrastructure.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Like every library, it has its limitations and assumptions (I recommend the linked documentation chapter &quot;Things you need to know before adopting&quot;). For me, the most important 2 points from this chapter are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;em&gt;&quot;Subscriptions (and thus projections) are &lt;strong&gt;eventually consistent&lt;/strong&gt; and always will be.&quot;&lt;/em&gt; This means that there will always be an inconsistency time from saving the event to the stream and processing the event by the projector(s).&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;&quot;No support for ambient System.Transaction scopes enforcing the concept of the stream as the consistency and transactional boundary.&quot;&lt;/em&gt; This means that if we save the event to a events stream and want to save something &lt;strong&gt;in the same transaction&lt;/strong&gt;, we must use &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/api/system.transactions.transactionscope?view=net-8.0&quot;&gt;TransactionScope&lt;/a&gt;. If we cannot use &lt;em&gt;TransactionScope&lt;/em&gt; for some reason, we must accept the Eventual Consistency also in this case.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Other popular tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://eventstore.com/&quot;&gt;EventStore&lt;/a&gt; &lt;em&gt;&quot;An industrial-strength database solution built from the ground up for event sourcing.&quot;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://martendb.io/&quot;&gt;Marten&lt;/a&gt; &lt;em&gt;&quot;.NET Transactional Document DB and Event Store on PostgreSQL&quot;&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Implementation&lt;/h4&gt; 
&lt;p&gt;There are 2 main &quot;flows&quot; to handle:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Command handling: change of state - adding new events to stream (writing)&lt;/li&gt; 
 &lt;li&gt;Projection of events to create read models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Command Handling&lt;/h5&gt; 
&lt;p&gt;The whole process looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_command_handling.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;We create / update an aggregate by creating an event&lt;/li&gt; 
 &lt;li&gt;We add changes to the Aggregate Store. This is the class responsible for writing / loading our aggregates. We are not saving changes yet.&lt;/li&gt; 
 &lt;li&gt;As part of Unit Of Work a) Aggregate Store adds events to the stream b) messages are added to the Outbox&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Command Handler:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class BuySubscriptionCommandHandler : ICommandHandler&amp;lt;BuySubscriptionCommand, Guid&amp;gt;
{
    private readonly IAggregateStore _aggregateStore;

    private readonly IPayerContext _payerContext;

    private readonly ISqlConnectionFactory _sqlConnectionFactory;

    public BuySubscriptionCommandHandler(
        IAggregateStore aggregateStore, 
        IPayerContext payerContext, 
        ISqlConnectionFactory sqlConnectionFactory)
    {
        _aggregateStore = aggregateStore;
        _payerContext = payerContext;
        _sqlConnectionFactory = sqlConnectionFactory;
    }

    public async Task&amp;lt;Guid&amp;gt; Handle(BuySubscriptionCommand command, CancellationToken cancellationToken)
    {
        var priceList = await PriceListProvider.GetPriceList(_sqlConnectionFactory.GetOpenConnection());

        var subscriptionPayment = SubscriptionPayment.Buy(
            _payerContext.PayerId,
            SubscriptionPeriod.Of(command.SubscriptionTypeCode),
            command.CountryCode,
            MoneyValue.Of(command.Value, command.Currency),
            priceList);
        
        _aggregateStore.AppendChanges(subscriptionPayment);

        return subscriptionPayment.Id;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;SubscriptionPayment&lt;/code&gt; Aggregate:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SubscriptionPayment : AggregateRoot
{
    private PayerId _payerId;

    private SubscriptionPeriod _subscriptionPeriod;

    private string _countryCode;

    private SubscriptionPaymentStatus _subscriptionPaymentStatus;

    private MoneyValue _value;

    protected override void Apply(IDomainEvent @event)
    {
        this.When((dynamic)@event);
    }

    public static SubscriptionPayment Buy(
        PayerId payerId,
        SubscriptionPeriod period,
        string countryCode,
        MoneyValue priceOffer,
        PriceList priceList)
    {
        var priceInPriceList = priceList.GetPrice(countryCode, period, PriceListItemCategory.New);
        CheckRule(new PriceOfferMustMatchPriceInPriceListRule(priceOffer, priceInPriceList));

        var subscriptionPayment = new SubscriptionPayment();

        var subscriptionPaymentCreated = new SubscriptionPaymentCreatedDomainEvent(
            Guid.NewGuid(),
            payerId.Value,
            period.Code,
            countryCode,
            SubscriptionPaymentStatus.WaitingForPayment.Code,
            priceOffer.Value,
            priceOffer.Currency);

        subscriptionPayment.Apply(subscriptionPaymentCreated);
        subscriptionPayment.AddDomainEvent(subscriptionPaymentCreated);

        return subscriptionPayment;
    }

    private void When(SubscriptionPaymentCreatedDomainEvent @event)
    {
        this.Id = @event.SubscriptionPaymentId;
        _payerId = new PayerId(@event.PayerId);
        _subscriptionPeriod = SubscriptionPeriod.Of(@event.SubscriptionPeriodCode);
        _countryCode = @event.CountryCode;
        _subscriptionPaymentStatus = SubscriptionPaymentStatus.Of(@event.Status);
        _value = MoneyValue.Of(@event.Value, @event.Currency);
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;AggregateRoot&lt;/code&gt; base class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public abstract class AggregateRoot
{
    public Guid Id { get; protected set; }

    public int Version { get; private set; }

    private readonly List&amp;lt;IDomainEvent&amp;gt; _domainEvents;

    protected AggregateRoot()
    {
        _domainEvents = new List&amp;lt;IDomainEvent&amp;gt;();

        Version = -1;
    }

    protected void AddDomainEvent(IDomainEvent @event)
    {
        _domainEvents.Add(@event);
    }

    public IReadOnlyCollection&amp;lt;IDomainEvent&amp;gt; GetDomainEvents() =&amp;gt; _domainEvents.AsReadOnly();

    public void Load(IEnumerable&amp;lt;IDomainEvent&amp;gt; history)
    {
        foreach (var e in history)
        {
            Apply(e);
            Version++;
        }
    }

    protected abstract void Apply(IDomainEvent @event);

    protected static void CheckRule(IBusinessRule rule)
    {
        if (rule.IsBroken())
        {
            throw new BusinessRuleValidationException(rule);
        }
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Aggregate Store implementation with SQL Stream Store library usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SqlStreamAggregateStore : IAggregateStore
{
    private readonly IStreamStore _streamStore;

    private readonly List&amp;lt;IDomainEvent&amp;gt; _appendedChanges;

    private readonly List&amp;lt;AggregateToSave&amp;gt; _aggregatesToSave;

    public SqlStreamAggregateStore(
        ISqlConnectionFactory sqlConnectionFactory)
    {
        _appendedChanges = new List&amp;lt;IDomainEvent&amp;gt;();

        _streamStore =
            new MsSqlStreamStore(
                new MsSqlStreamStoreSettings(sqlConnectionFactory.GetConnectionString())
                    {
                        Schema = DatabaseSchema.Name
                });

        _aggregatesToSave = new List&amp;lt;AggregateToSave&amp;gt;();
    }

    public async Task Save()
    {
        foreach (var aggregateToSave in _aggregatesToSave)
        {
            await _streamStore.AppendToStream(
                GetStreamId(aggregateToSave.Aggregate),
                aggregateToSave.Aggregate.Version,
                aggregateToSave.Messages.ToArray());
        }

        _aggregatesToSave.Clear();
    }

    public async Task&amp;lt;T&amp;gt; Load&amp;lt;T&amp;gt;(AggregateId&amp;lt;T&amp;gt; aggregateId) where T : AggregateRoot
    {
        var streamId = GetStreamId(aggregateId);

        IList&amp;lt;IDomainEvent&amp;gt; domainEvents = new List&amp;lt;IDomainEvent&amp;gt;();
        ReadStreamPage readStreamPage;
        do
        {
            readStreamPage = await _streamStore.ReadStreamForwards(streamId, StreamVersion.Start, maxCount: 100);
            var messages = readStreamPage.Messages;
            foreach (var streamMessage in messages)
            {
                Type type = DomainEventTypeMappings.Dictionary[streamMessage.Type];
                var jsonData = await streamMessage.GetJsonData();
                var domainEvent = JsonConvert.DeserializeObject(jsonData, type) as IDomainEvent;

                domainEvents.Add(domainEvent);
            }
        } while (!readStreamPage.IsEnd);

        var aggregate = (T)Activator.CreateInstance(typeof(T), true);

        aggregate.Load(domainEvents);

        return aggregate;
    }

&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Events Projection&lt;/h5&gt; 
&lt;p&gt;The whole process looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_events_projection.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Special class &lt;code&gt;Subscriptions Manager&lt;/code&gt; subscribes to Events Store (using SQL Store Stream library)&lt;/li&gt; 
 &lt;li&gt;Events Store raises &lt;code&gt;StreamMessageRecievedEvent&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Subscriptions Manager&lt;/code&gt; invokes all projectors&lt;/li&gt; 
 &lt;li&gt;If projector know how to handle given event, it updates particular read model. In current implementation it updates special table in SQL database.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;SubscriptionsManager&lt;/code&gt; class implementation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class SubscriptionsManager
{
    private readonly IStreamStore _streamStore;

    public SubscriptionsManager(
        IStreamStore streamStore)
    {
        _streamStore = streamStore;
    }

    public void Start()
    {
        long? actualPosition;

        using (var scope = PaymentsCompositionRoot.BeginLifetimeScope())
        {
            var checkpointStore = scope.Resolve&amp;lt;ICheckpointStore&amp;gt;();

            actualPosition = checkpointStore.GetCheckpoint(SubscriptionCode.All);
        }

        _streamStore.SubscribeToAll(actualPosition, StreamMessageReceived);
    }

    public void Stop()
    {
        _streamStore.Dispose();
    }

    private static async Task StreamMessageReceived(
        IAllStreamSubscription subscription, StreamMessage streamMessage, CancellationToken cancellationToken)
    {
        var type = DomainEventTypeMappings.Dictionary[streamMessage.Type];
        var jsonData = await streamMessage.GetJsonData(cancellationToken);
        var domainEvent = JsonConvert.DeserializeObject(jsonData, type) as IDomainEvent;

        using var scope = PaymentsCompositionRoot.BeginLifetimeScope();

        var projectors = scope.Resolve&amp;lt;IList&amp;lt;IProjector&amp;gt;&amp;gt;();

        var tasks = projectors
            .Select(async projector =&amp;gt;
            {
                await projector.Project(domainEvent);
            });

        await Task.WhenAll(tasks);

        var checkpointStore = scope.Resolve&amp;lt;ICheckpointStore&amp;gt;();
        await checkpointStore.StoreCheckpoint(SubscriptionCode.All, streamMessage.Position);
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example projector:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;internal class SubscriptionDetailsProjector : ProjectorBase, IProjector
{
    private readonly IDbConnection _connection;

    public SubscriptionDetailsProjector(ISqlConnectionFactory sqlConnectionFactory)
    {
        _connection = sqlConnectionFactory.GetOpenConnection();
    }

    public async Task Project(IDomainEvent @event)
    {
        await When((dynamic) @event);
    }

    private async Task When(SubscriptionRenewedDomainEvent subscriptionRenewed)
    {
        var period = SubscriptionPeriod.GetName(subscriptionRenewed.SubscriptionPeriodCode);
        
        await _connection.ExecuteScalarAsync(&quot;UPDATE payments.SubscriptionDetails &quot; +
                                                &quot;SET &quot; +
                                                    &quot;[Status] = @Status, &quot; +
                                                    &quot;[ExpirationDate] = @ExpirationDate, &quot; +
                                                    &quot;[Period] = @Period &quot; +
                                                &quot;WHERE [Id] = @SubscriptionId&quot;,
            new
            {
                subscriptionRenewed.SubscriptionId,
                subscriptionRenewed.Status,
                subscriptionRenewed.ExpirationDate,
                period
            });
    }

    private async Task When(SubscriptionExpiredDomainEvent subscriptionExpired)
    {
        await _connection.ExecuteScalarAsync(&quot;UPDATE payments.SubscriptionDetails &quot; +
                                             &quot;SET &quot; +
                                             &quot;[Status] = @Status &quot; +
                                             &quot;WHERE [Id] = @SubscriptionId&quot;,
            new
            {
                subscriptionExpired.SubscriptionId,
                subscriptionExpired.Status
            });
    }

    private async Task When(SubscriptionCreatedDomainEvent subscriptionCreated)
    {
        var period = SubscriptionPeriod.GetName(subscriptionCreated.SubscriptionPeriodCode);
        
        await _connection.ExecuteScalarAsync(&quot;INSERT INTO payments.SubscriptionDetails &quot; +
                                       &quot;([Id], [Period], [Status], [CountryCode], [ExpirationDate]) &quot; +
                                       &quot;VALUES (@SubscriptionId, @Period, @Status, @CountryCode, @ExpirationDate)&quot;,
            new
            {
                subscriptionCreated.SubscriptionId,
                period,
                subscriptionCreated.Status,
                subscriptionCreated.CountryCode,
                subscriptionCreated.ExpirationDate
            });
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Sample view of Event Store&lt;/h4&gt; 
&lt;p&gt;Sample &lt;em&gt;Event Store&lt;/em&gt; view after execution of SubscriptionLifecycleTests Integration Test which includes following steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Creating Price List&lt;/li&gt; 
 &lt;li&gt;Buying Subscription&lt;/li&gt; 
 &lt;li&gt;Renewing Subscription&lt;/li&gt; 
 &lt;li&gt;Expiring Subscription&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;looks like this (&lt;em&gt;SQL Stream Store&lt;/em&gt; table - &lt;em&gt;payments.Messages&lt;/em&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_event_store_db_sample.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h3&gt;3.16 Database Change Management&lt;/h3&gt; 
&lt;p&gt;Database change management is accomplished by &lt;em&gt;migrations/transitions&lt;/em&gt; versioning. Additionally, the current state of the database structure is also versioned.&lt;/p&gt; 
&lt;p&gt;Migrations are applied using a simple &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/DatabaseMigrator&quot;&gt;DatabaseMigrator&lt;/a&gt; console application that uses the &lt;a href=&quot;https://dbup.readthedocs.io/en/latest/&quot;&gt;DbUp&lt;/a&gt; library. The current state of the database structure is kept in the &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/ssdt/how-to-create-a-new-database-project&quot;&gt;SSDT Database Project&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The database update is performed by running the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;dotnet DatabaseMigrator.dll &quot;connection_string&quot; &quot;scripts_directory_path&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The entire solution is described in detail in the following articles:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamilgrzybek.com/database/database-change-management/&quot;&gt;Database change management&lt;/a&gt; (theory)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamilgrzybek.com/database/using-database-project-and-dbup-for-database-management/&quot;&gt;Using database project and DbUp for database management&lt;/a&gt; (implementation)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.17 Continuous Integration&lt;/h3&gt; 
&lt;h4&gt;Definition&lt;/h4&gt; 
&lt;p&gt;As defined on &lt;a href=&quot;https://martinfowler.com/articles/continuousIntegration.html&quot;&gt;Martin Fowler&#39;s website&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Continuous Integration is a software development practice where members of a team integrate their work frequently, usually each person integrates at least daily - leading to multiple integrations per day. Each integration is verified by an automated build (including test) to detect integration errors as quickly as possible.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;YAML Implementation [OBSOLETE]&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Originally the build was implemented using yaml and GitHub Actions functionality. Currently, the build is implemented with NUKE (see next section). See &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/.github/workflows/buildPipeline.yml&quot;&gt;buildPipeline.yml&lt;/a&gt;&lt;/em&gt; file history.&lt;/p&gt; 
&lt;h5&gt;Pipeline description&lt;/h5&gt; 
&lt;p&gt;CI was implemented using &lt;a href=&quot;https://docs.github.com/en/actions/getting-started-with-github-actions/about-github-actions&quot;&gt;GitHub Actions&lt;/a&gt;. For this purpose, one workflow, which triggers on Pull Request to &lt;em&gt;master&lt;/em&gt; branch or Push to &lt;em&gt;master&lt;/em&gt; branch was created. It contains 2 jobs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;build test, execute Unit Tests and Architecture Tests&lt;/li&gt; 
 &lt;li&gt;execute Integration Tests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ci.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Steps description&lt;/strong&gt;&lt;br /&gt; a) Checkout repository - clean checkout of git repository &lt;br /&gt; b) Setup .NET - install .NET 8.0 SDK&lt;br /&gt; c) Install dependencies - resolve NuGet packages&lt;br /&gt; d) Build - build solution&lt;br /&gt; e) Run Unit Tests - run automated Unit Tests (see section 3.10)&lt;br /&gt; f) Run Architecture Tests - run automated Architecture Tests (see section 3.12)&lt;br /&gt; g) Initialize containers - setup Docker container for MS SQL Server&lt;br /&gt; h) Wait for SQL Server initialization - after container initialization MS SQL Server is not ready, initialization of server itself takes some time so 30 seconds timeout before execution of next step is needed&lt;br /&gt; i) Create Database - create and initialize database&lt;br /&gt; j) Migrate Database - execute database upgrade using &lt;em&gt;DatabaseMigrator&lt;/em&gt; application (see 3.16 section)&lt;br /&gt; k) Run Integration Tests - perform Integration and System Integration Testing (see section 3.13 and 3.14)&lt;br /&gt;&lt;/p&gt; 
&lt;h5&gt;Workflow definition&lt;/h5&gt; 
&lt;p&gt;Workflow definition: &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/.github/workflows/buildPipeline.yml&quot;&gt;buildPipeline.yml&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;Example workflow execution&lt;/h5&gt; 
&lt;p&gt;Example workflow output:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ci_job1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ci_job2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;h4&gt;NUKE&lt;/h4&gt; 
&lt;p&gt;&lt;a href=&quot;https://nuke.build/&quot;&gt;Nuke&lt;/a&gt; is &lt;em&gt;the cross-platform build automation solution for .NET with C# DSL.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The 2 main advantages of its use over pure yaml defined in GitHub actions are as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You run the same code on local machine and in the build server. See &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/.github/workflows/buildPipeline.yml&quot;&gt;buildPipeline.yml&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;You use C# with all the goodness (debugging, compilation, packages, refactoring and so on)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This is how one of the stage definition looks like (execute Build, Unit Tests, Architecture Tests) &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/build/Build.cs&quot;&gt;Build.cs&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;partial class Build : NukeBuild
{
    /// Support plugins are available for:
    ///   - JetBrains ReSharper        https://nuke.build/resharper
    ///   - JetBrains Rider            https://nuke.build/rider
    ///   - Microsoft VisualStudio     https://nuke.build/visualstudio
    ///   - Microsoft VSCode           https://nuke.build/vscode

    public static int Main () =&amp;gt; Execute&amp;lt;Build&amp;gt;(x =&amp;gt; x.Compile);

    [Parameter(&quot;Configuration to build - Default is &#39;Debug&#39; (local) or &#39;Release&#39; (server)&quot;)]
    readonly Configuration Configuration = IsLocalBuild ? Configuration.Debug : Configuration.Release;

    [Solution] readonly Solution Solution;

    Target Clean =&amp;gt; _ =&amp;gt; _
        .Before(Restore)
        .Executes(() =&amp;gt;
        {
            EnsureCleanDirectory(WorkingDirectory);
        });

    Target Restore =&amp;gt; _ =&amp;gt; _
        .Executes(() =&amp;gt;
        {
            DotNetRestore(s =&amp;gt; s
                .SetProjectFile(Solution));
        });

    Target Compile =&amp;gt; _ =&amp;gt; _
        .DependsOn(Restore)
        .Executes(() =&amp;gt;
        {
            DotNetBuild(s =&amp;gt; s
                .SetProjectFile(Solution)
                .SetConfiguration(Configuration)
                .EnableNoRestore());
        });

    Target UnitTests =&amp;gt; _ =&amp;gt; _
        .DependsOn(Compile)
        .Executes(() =&amp;gt;
        {
            DotNetTest(s =&amp;gt; s
                .SetProjectFile(Solution)
                .SetFilter(&quot;UnitTests&quot;)
                .SetConfiguration(Configuration)
                .EnableNoRestore()
                .EnableNoBuild());
        });

    Target ArchitectureTests =&amp;gt; _ =&amp;gt; _
        .DependsOn(UnitTests)
        .Executes(() =&amp;gt;
        {
            DotNetTest(s =&amp;gt; s
                .SetProjectFile(Solution)
                .SetFilter(&quot;ArchTests&quot;)
                .SetConfiguration(Configuration)
                .EnableNoRestore()
                .EnableNoBuild());
        });

    Target BuildAndUnitTests =&amp;gt; _ =&amp;gt; _
        .Triggers(ArchitectureTests)
        .Executes(() =&amp;gt;
        {
        });
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to see more complex scenario when integration tests are executed (with SQL Server database creation using docker) see &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/build/BuildIntegrationTests.cs&quot;&gt;BuildIntegrationTests.cs&lt;/a&gt; file.&lt;/p&gt; 
&lt;h4&gt;SQL Server database project build&lt;/h4&gt; 
&lt;p&gt;Currently, compilation of database projects is not supported by the .NET Core and dotnet tool. For this reason, the &lt;a href=&quot;https://github.com/rr-wfm/MSBuild.Sdk.SqlProj/&quot;&gt;MSBuild.Sdk.SqlProj&lt;/a&gt; library was used. In order to do that, you need to create .NET standard library, change SDK and create links to scripts folders. Final &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database.Build/CompanyName.MyMeetings.Database.Build.csproj&quot;&gt;database project&lt;/a&gt; looks as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;Project Sdk=&quot;MSBuild.Sdk.SqlProj/1.6.0&quot;&amp;gt;
    &amp;lt;PropertyGroup&amp;gt;
        &amp;lt;TargetFramework&amp;gt;netstandard2.0&amp;lt;/TargetFramework&amp;gt;
    &amp;lt;/PropertyGroup&amp;gt;
    &amp;lt;ItemGroup&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\administration\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\app\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\meetings\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\payments\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\users\**\*.sql&quot; /&amp;gt;
        &amp;lt;Content Include=&quot;..\CompanyName.MyMeetings.Database\Security\**\*.sql&quot; /&amp;gt;
    &amp;lt;/ItemGroup&amp;gt;
&amp;lt;/Project&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.18 Static code analysis&lt;/h3&gt; 
&lt;p&gt;In order to standardize the appearance of the code and increase its readability, the &lt;a href=&quot;https://github.com/DotNetAnalyzers/StyleCopAnalyzers&quot;&gt;StyleCopAnalyzers&lt;/a&gt; library was used. This library implements StyleCop rules using the .NET Compiler Platform and is responsible for the static code analysis.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;Using this library is trivial - it is just added as a NuGet package to all projects. There are many ways to configure rules, but currently the best way to do this is to edit the &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/.editorconfig&quot;&gt;.editorconfig&lt;/a&gt; file. More information can be found at the link above.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note! Static code analysis works best when the following points are met:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Each developer has an IDE that respects the rules and helps to follow them&lt;/li&gt; 
 &lt;li&gt;The rules are checked during the project build process as part of Continuous Integration&lt;/li&gt; 
 &lt;li&gt;The rules are set to &lt;em&gt;help your system grow&lt;/em&gt;. &lt;strong&gt;Static analysis is not a value in itself.&lt;/strong&gt; Some rules may not make complete sense and should be turned off. Other rules may have higher priority. It all depends on the project, company standards and people involved in the project. Be pragmatic.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.19 System Under Test SUT&lt;/h3&gt; 
&lt;p&gt;There is always a need to prepare the entire system in a specific state, e.g. for manual, exploratory, UX / UI tests. The fact that the tests are performed manually does not mean that we cannot automate the preparation phase (Given / Arrange). Thanks to the automation of system state preparation (&lt;a href=&quot;https://en.wikipedia.org/wiki/System_under_test&quot;&gt;System Under Test&lt;/a&gt;), we are able to recreate exactly the same state in any environment. In addition, such automation can be used later to automate the entire test (e.g. through an &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#313-integration-tests&quot;&gt;3.13 Integration Tests&lt;/a&gt;).&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;The implementation of such automation based on the use of NUKE and the test framework is presented below. As in the case of integration testing, we use the public API of modules.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/sut-preparation.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Below is a SUT whose task is to go through the whole process - from setting up a &lt;em&gt;Meeting Group&lt;/em&gt;, through its &lt;em&gt;Payment&lt;/em&gt;, adding a new &lt;em&gt;Meeting&lt;/em&gt; and signing up for it by another user.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;public class CreateMeeting : TestBase
{
    protected override bool PerformDatabaseCleanup =&amp;gt; true;

    [Test]
    public async Task Prepare()
    {
        await UsersFactory.GivenAdmin(
            UserAccessModule,
            &quot;testAdmin@mail.com&quot;,
            &quot;testAdminPass&quot;,
            &quot;Jane Doe&quot;,
            &quot;Jane&quot;,
            &quot;Doe&quot;,
            &quot;testAdmin@mail.com&quot;);

        var userId = await UsersFactory.GivenUser(
            UserAccessModule,
            ConnectionString,
            &quot;adamSmith@mail.com&quot;,
            &quot;adamSmithPass&quot;,
            &quot;Adam&quot;,
            &quot;Smith&quot;,
            &quot;adamSmith@mail.com&quot;);

        ExecutionContextAccessor.SetUserId(userId);

        var meetingGroupId = await MeetingGroupsFactory.GivenMeetingGroup(
            MeetingsModule,
            AdministrationModule,
            ConnectionString,
            &quot;Software Craft&quot;,
            &quot;Group for software craft passionates&quot;,
            &quot;Warsaw&quot;,
            &quot;PL&quot;);

        await TestPriceListManager.AddPriceListItems(PaymentsModule, ConnectionString);

        await TestPaymentsManager.BuySubscription(
            PaymentsModule,
            ExecutionContextAccessor);
        
        SetDate(new DateTime(2022, 7, 1, 10, 0, 0));

        var meetingId = await TestMeetingFactory.GivenMeeting(
            MeetingsModule,
            meetingGroupId,
            &quot;Tactical DDD&quot;,
            new DateTime(2022, 7, 10, 18, 0, 0),
            new DateTime(2022, 7, 10, 20, 0, 0),
            &quot;Meeting about Tactical DDD patterns&quot;,
            &quot;Location Name&quot;,
            &quot;Location Address&quot;,
            &quot;01-755&quot;,
            &quot;Warsaw&quot;,
            50,
            0,
            null,
            null,
            0,
            null,
            new List&amp;lt;Guid&amp;gt;()
        );
        
        var attendeeUserId = await UsersFactory.GivenUser(
            UserAccessModule,
            ConnectionString,
            &quot;rickmorty@mail.com&quot;,
            &quot;rickmortyPass&quot;,
            &quot;Rick&quot;,
            &quot;Morty&quot;,
            &quot;rickmorty@mail.com&quot;);
        
        ExecutionContextAccessor.SetUserId(attendeeUserId);

        await TestMeetingGroupManager.JoinToGroup(MeetingsModule, meetingGroupId);

        await TestMeetingManager.AddAttendee(MeetingsModule, meetingId, guestsNumber: 1);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can create this SUT using following &lt;em&gt;NUKE&lt;/em&gt; target providing connection string and particular test name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt; .\build PrepareSUT --DatabaseConnectionString &quot;connection_string&quot; --SUTTestName CreateMeeting
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.20 Mutation Testing&lt;/h3&gt; 
&lt;h4&gt;Description&lt;/h4&gt; 
&lt;p&gt;Mutation testing is an approach to test and evaluate our existing tests. During mutation testing a special framework modifies pieces of our code and runs our tests. These modifications are called &lt;em&gt;mutations&lt;/em&gt; or &lt;em&gt;mutants&lt;/em&gt;. If a given &lt;em&gt;mutation&lt;/em&gt; does not cause a failure of at least once test, it means that the mutant has &lt;em&gt;survived&lt;/em&gt; so our tests are probably not sufficient.&lt;/p&gt; 
&lt;h4&gt;Example&lt;/h4&gt; 
&lt;p&gt;In this repository, the &lt;a href=&quot;https://stryker-mutator.io/docs/stryker-net/Introduction&quot;&gt;Stryker.NET&lt;/a&gt; framework was used for mutation testing. In the simplest use, after installation, all you need to do is enter the directory of tests that you want to mutate and run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;dotnet stryker
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result of this command is the &lt;em&gt;mutation report file&lt;/em&gt;. Assuming we want to test the unit tests of the Meetings module, such a &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/mutation-tests-reports/mutation-report.html&quot;&gt;report&lt;/a&gt; has been generated. This is its first page:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/mutation_testing_report.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Let us analyze one of the places where the mutant survived. This is the &lt;em&gt;AddNotAttendee&lt;/em&gt; method of the &lt;em&gt;Meeting&lt;/em&gt; class. This method is used to add a &lt;em&gt;Member&lt;/em&gt; to the list of people who have decided not to attend the meeting. According to the logic, if the same person previously indicated that he was going to the &lt;em&gt;Meeting&lt;/em&gt; and later changed his mind, then if there is someone on the &lt;em&gt;Waiting List&lt;/em&gt;, he should be added to the attendees. Based on requirements, this should be the person who signed up on the &lt;em&gt;Waiting List&lt;/em&gt; &lt;strong&gt;first&lt;/strong&gt; (based on &lt;strong&gt;SignUpDate&lt;/strong&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/mutation_testing_example.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;As you can see, the mutation framework changed our sorting in linq query (from default ascending to descending). However, each test was successful, so it means that mutant survived so we don&#39;t have a test that checks the correct sort based on &lt;em&gt;SignUpDate&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;From the example above, one more important thing can be deduced - &lt;strong&gt;code coverage is insufficient&lt;/strong&gt;. In the given example, this code is covered, but our tests do not check the given requirement, therefore our code may have errors. Mutation testing allow to detect such situations. Of course, as with any tool, we should use it wisely, as not every case requires our attention.&lt;/p&gt; 
&lt;h2&gt;4. Technology&lt;/h2&gt; 
&lt;p&gt;List of technologies, frameworks and libraries used for implementation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download&quot;&gt;.NET 8.0&lt;/a&gt; (platform). Note for Visual Studio users: &lt;strong&gt;VS 2019&lt;/strong&gt; is required.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/sql-server/sql-server-editions-express&quot;&gt;MS SQL Server Express&lt;/a&gt; (database)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/ef/core/&quot;&gt;Entity Framework Core 8.0&lt;/a&gt; (ORM Write Model implementation for DDD)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://autofac.org/&quot;&gt;Autofac&lt;/a&gt; (Inversion of Control Container)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://docs.identityserver.io&quot;&gt;IdentityServer4&lt;/a&gt; (Authentication and Authorization)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://serilog.net/&quot;&gt;Serilog&lt;/a&gt; (structured logging)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/khellang/Middleware/tree/master/src/ProblemDetails&quot;&gt;Hellang.Middleware.ProblemDetails&lt;/a&gt; (API Problem Details support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/domaindrivendev/Swashbuckle&quot;&gt;Swashbuckle&lt;/a&gt; (Swagger automated documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/StackExchange/Dapper&quot;&gt;Dapper&lt;/a&gt; (micro ORM for Read Model)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.newtonsoft.com/json&quot;&gt;Newtonsoft.Json&lt;/a&gt; (serialization/deserialization to/from JSON)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.quartz-scheduler.net/&quot;&gt;Quartz.NET&lt;/a&gt; (background processing)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://fluentvalidation.net/&quot;&gt;FluentValidation&lt;/a&gt; (data validation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/jbogard/MediatR&quot;&gt;MediatR&lt;/a&gt; (mediator implementation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.getpostman.com/&quot;&gt;Postman&lt;/a&gt; (API tests)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nunit.org/&quot;&gt;NUnit&lt;/a&gt; (Testing framework)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nsubstitute.github.io/&quot;&gt;NSubstitute&lt;/a&gt; (Testing isolation framework)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.visual-paradigm.com/download/community.jsp&quot;&gt;Visual Paradigm Community Edition&lt;/a&gt; (CASE tool for modeling and documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/BenMorris/NetArchTest&quot;&gt;NetArchTest&lt;/a&gt; (Architecture Unit Tests library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/App-vNext/Polly&quot;&gt;Polly&lt;/a&gt; (Resilience and transient-fault-handling library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/SQLStreamStore&quot;&gt;SQL Stream Store&lt;/a&gt; (Library to assist with Event Sourcing)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dbup.readthedocs.io/en/latest/&quot;&gt;DbUp&lt;/a&gt; (Database migrations deployment)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/ssdt/how-to-create-a-new-database-project&quot;&gt;SSDT Database Project&lt;/a&gt; (Database structure versioning)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/actions&quot;&gt;GitHub Actions&lt;/a&gt; (Continuous Integration workflows implementation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/DotNetAnalyzers/StyleCopAnalyzers&quot;&gt;StyleCopAnalyzers&lt;/a&gt; (Static code analysis library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://plantuml.com&quot;&gt;PlantUML&lt;/a&gt; (UML diagrams from textual description, diagrams as text)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://c4model.com/&quot;&gt;C4 Model&lt;/a&gt; (Model for visualising software architecture)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/plantuml-stdlib/C4-PlantUML&quot;&gt;C4-PlantUML&lt;/a&gt; (C4 Model for PlantUML plugin)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://nuke.build/&quot;&gt;NUKE&lt;/a&gt; (Build automation system)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rr-wfm/MSBuild.Sdk.SqlProj/&quot;&gt;MSBuild.Sdk.SqlProj&lt;/a&gt; (Database project compilation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://stryker-mutator.io/docs/stryker-net/Introduction&quot;&gt;Stryker.NET&lt;/a&gt; (Mutation Testing framework)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;5. How to Run&lt;/h2&gt; 
&lt;h3&gt;Install .NET 8.0 SDK&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://dotnet.microsoft.com/en-us/download/dotnet/8.0&quot;&gt;Download&lt;/a&gt; and install .NET 8.0 SDK&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Create database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and install MS SQL Server Express or other&lt;/li&gt; 
 &lt;li&gt;Create an empty database using &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/CreateDatabase_Windows.sql&quot;&gt;CreateDatabase_Windows.sql&lt;/a&gt; or &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/CreateDatabase_Linux.sql&quot;&gt;CreateDatabase_Linux.sql&lt;/a&gt;. Script adds &lt;strong&gt;app&lt;/strong&gt; schema which is needed for migrations journal table. Change database file path if needed.&lt;/li&gt; 
 &lt;li&gt;Run database migrations using &lt;strong&gt;MigrateDatabase&lt;/strong&gt; NUKE target by executing the build.sh script present in the root folder:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;.\build MigrateDatabase --DatabaseConnectionString &quot;connection_string&quot;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;&quot;connection_string&quot;&lt;/em&gt; - connection string to your database&lt;/p&gt; 
&lt;h3&gt;Seed database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Execute &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/SeedDatabase.sql&quot;&gt;SeedDatabase.sql&lt;/a&gt; script&lt;/li&gt; 
 &lt;li&gt;2 test users will be created - check the script for usernames and passwords&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configure connection string&lt;/h3&gt; 
&lt;p&gt;Set a database connection string called &lt;code&gt;MeetingsConnectionString&lt;/code&gt; in the root of the API project&#39;s appsettings.json or use &lt;a href=&quot;https://blogs.msdn.microsoft.com/mihansen/2017/09/10/managing-secrets-in-net-core-2-0-apps/&quot;&gt;Secrets&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Example config setting in appsettings.json for a database called &lt;code&gt;MyMeetings&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
 &quot;MeetingsConnectionString&quot;: &quot;Server=(localdb)\\mssqllocaldb;Database=MyMeetings;Trusted_Connection=True;&quot;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure startup in IDE&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set the Startup Item in your IDE to the API Project, not IIS Express&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Authenticate&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Once it is running you&#39;ll need a token to make API calls. This is done via OAuth2 &lt;a href=&quot;https://www.oauth.com/oauth2-servers/access-tokens/password-grant/&quot;&gt;Resource Owner Password Grant Type&lt;/a&gt;. By default IdentityServer is configured with the following:&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client_id = ro.client&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client_secret = secret&lt;/code&gt; &lt;strong&gt;(this is literally the value - not a statement that this value is secret!)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;scope = myMeetingsAPI openid profile&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;grant_type = password&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Include the credentials of a test user created in the &lt;a href=&quot;https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/SeedDatabase.sql&quot;&gt;SeedDatabase.sql&lt;/a&gt; script - for example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;username = testMember@mail.com&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;password = testMemberPass&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Example HTTP Request for an Access Token:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-http&quot;&gt;POST /connect/token HTTP/1.1
Host: localhost:5000
 
grant_type=password
&amp;amp;username=testMember@mail.com
&amp;amp;password=testMemberPass
&amp;amp;client_id=ro.client
&amp;amp;client_secret=secret
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will fetch an access token for this user to make authorized API requests using the HTTP request header &lt;code&gt;Authorization: Bearer &amp;lt;access_token&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you use a tool such as Postman to test your API, the token can be fetched and stored within the tool itself and appended to all API calls. Check your tool documentation for instructions.&lt;/p&gt; 
&lt;h3&gt;Run using Docker Compose&lt;/h3&gt; 
&lt;p&gt;You can run whole application using &lt;a href=&quot;https://docs.docker.com/compose/&quot;&gt;docker compose&lt;/a&gt; from root folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It will create following services: &lt;br /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MS SQL Server Database&lt;/li&gt; 
 &lt;li&gt;Database Migrator&lt;/li&gt; 
 &lt;li&gt;Application&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run Integration Tests in Docker&lt;/h3&gt; 
&lt;p&gt;You can run all Integration Tests in Docker (exactly the same process is executed on CI) using &lt;strong&gt;RunAllIntegrationTests&lt;/strong&gt; NUKE target:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;.\build RunAllIntegrationTests
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;6. Contribution&lt;/h2&gt; 
&lt;p&gt;This project is still under analysis and development. I assume its maintenance for a long time and I would appreciate your contribution to it. Please let me know by creating an Issue or Pull Request.&lt;/p&gt; 
&lt;h2&gt;7. Roadmap&lt;/h2&gt; 
&lt;p&gt;List of features/tasks/approaches to add:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Release date&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Domain Model Unit Tests&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2019-09-10&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Architecture Decision Log update&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2019-11-09&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Integration automated tests&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-02-24&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Migration to .NET Core 3.1&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-03-04&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;System Integration Testing&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-03-28&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;More advanced Payments module&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-07-11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Event Sourcing implementation&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-07-11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Database Change Management&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-08-23&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Continuous Integration&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-09-01&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;StyleCop Static Code Analysis&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-09-05&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FrontEnd SPA application&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-11-08&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docker support&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-11-26&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PlantUML Conceptual Model&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-03-22&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;C4 Model&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-03-29&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Meeting comments feature&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-03-30&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NUKE build automation&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-06-15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Database project compilation on CI&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-06-15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;System Under Test implementation&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2022-07-17&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mutation Testing&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2022-08-23&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Migration to .NET 8.0&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2023-12-09&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;NOTE: Please don&#39;t hesitate to suggest something else or a change to the existing code. All proposals will be considered.&lt;/p&gt; 
&lt;h2&gt;8. Authors&lt;/h2&gt; 
&lt;p&gt;Kamil Grzybek&lt;/p&gt; 
&lt;p&gt;Blog: &lt;a href=&quot;https://kamilgrzybek.com&quot;&gt;https://kamilgrzybek.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Twitter: &lt;a href=&quot;https://twitter.com/kamgrzybek&quot;&gt;https://twitter.com/kamgrzybek&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;LinkedIn: &lt;a href=&quot;https://www.linkedin.com/in/kamilgrzybek/&quot;&gt;https://www.linkedin.com/in/kamilgrzybek/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;GitHub: &lt;a href=&quot;https://github.com/kgrzybek&quot;&gt;https://github.com/kgrzybek&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;8.1 Main contributors&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AndreiGanichev&quot;&gt;Andrei Ganichev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/bistok&quot;&gt;Bela Istok&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/AlmarAubel&quot;&gt;Almar Aubel&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;9. License&lt;/h2&gt; 
&lt;p&gt;The project is under &lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;10. Inspirations and Recommendations&lt;/h2&gt; 
&lt;h3&gt;Modular Monolith&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamilgrzybek.com/design/modular-monolith-primer/&quot;&gt;&quot;Modular Monolith: A Primer&quot;&lt;/a&gt; Modular Monolith architecture article series, Kamil Grzybek&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=njDSXUWeik0&quot;&gt;&quot;Modular Monolith Architecture: One to rule them all&quot;&lt;/a&gt; presentation, Kamil Grzybek&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5OjqD-ow8GE&quot;&gt;&quot;Modular Monoliths&quot;&lt;/a&gt; presentation, Simon Brown&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BOvxJaklcr0&quot;&gt;&quot;Majestic Modular Monoliths&quot;&lt;/a&gt; presentation, Axel Fontaine&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/olivergierke/building-better-monoliths-modulithic-applications-with-spring-boot-cd16e6ec-d334-497d-b9f6-3f92d5db035a&quot;&gt;&quot;Building Better Monoliths – Modulithic Applications with Spring Boot&quot;&lt;/a&gt; slides, Oliver Drotbohm&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/bliki/MonolithFirst.html&quot;&gt;&quot;MonolithFirst&quot;&lt;/a&gt; article, Martin Fowler&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://microservices.io/patterns/monolithic.html&quot;&gt;&quot;Pattern: Monolithic Architecture&quot;&lt;/a&gt; pattern description, Chris Richardson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Domain-Driven Design&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215&quot;&gt;&quot;Domain-Driven Design: Tackling Complexity in the Heart of Software&quot;&lt;/a&gt; book, Eric Evans&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Implementing-Domain-Driven-Design-Vaughn-Vernon/dp/0321834577&quot;&gt;&quot;Implementing Domain-Driven Design&quot;&lt;/a&gt; book, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/dp/0134434420&quot;&gt;&quot;Domain-Driven Design Distilled&quot;&lt;/a&gt; book, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design-ebook/dp/B00XLYUA0W&quot;&gt;&quot;Patterns, Principles, and Practices of Domain-Driven Design&quot;&lt;/a&gt; book, Scott Millett, Nick Tune&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Secure-Design-Daniel-Deogun/dp/1617294357&quot;&gt;&quot;Secure By Design&quot;&lt;/a&gt; book, Daniel Deogun, Dan Bergh Johnsson, Daniel Sawano&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Hands-Domain-Driven-Design-NET-ebook/dp/B07C5WSR9B&quot;&gt;&quot;Hands-On Domain-Driven Design with .NET Core: Tackling complexity in the heart of software by putting DDD principles into practice&quot;&lt;/a&gt; book, Alexey Zimarev&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB&quot;&gt;&quot;Domain Modeling Made Functional: Tackle Software Complexity with Domain-Driven Design and F#&quot;&lt;/a&gt; book, Scott Wlaschin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/ddd-by-examples/library&quot;&gt;&quot;DDD by examples - library&quot;&lt;/a&gt; GH repository, Jakub Pilimon, Bartłomiej Słota&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VaughnVernon/IDDD_Samples&quot;&gt;&quot;IDDD_Samples&quot;&lt;/a&gt; GH repository, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/VaughnVernon/IDDD_Samples_NET&quot;&gt;&quot;IDDD_Samples_NET&quot;&lt;/a&gt; GH repository, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/heynickc/awesome-ddd&quot;&gt;&quot;Awesome Domain-Driven Design&quot;&lt;/a&gt; GH repository, Nick Chamberlain&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Application Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/books/eaa.html&quot;&gt;&quot;Patterns of Enterprise Application Architecture&quot;&lt;/a&gt; book, Martin Fowler&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/dependency-injection-principles-practices-patterns&quot;&gt;&quot;Dependency Injection Principles, Practices, and Patterns&quot;&lt;/a&gt; book, Steven van Deursen, Mark Seemann&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Clean-Architecture-Craftsmans-Software-Structure/dp/0134494164&quot;&gt;&quot;Clean Architecture: A Craftsman&#39;s Guide to Software Structure and Design (Robert C. Martin Series&quot;&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&quot;&gt;&quot;The Clean Architecture&quot;&lt;/a&gt; article, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://jeffreypalermo.com/2008/07/the-onion-architecture-part-1/&quot;&gt;&quot;The Onion Architecture&quot;&lt;/a&gt; article series, Jeffrey Palermo&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://web.archive.org/web/20180822100852/http://alistair.cockburn.us/Hexagonal+architecture&quot;&gt;&quot;Hexagonal/Ports &amp;amp; Adapters Architecture&quot;&lt;/a&gt; article, Alistair Cockburn&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://herbertograca.com/2017/11/16/explicit-architecture-01-ddd-hexagonal-onion-clean-cqrs-how-i-put-it-all-together/&quot;&gt;&quot;DDD, Hexagonal, Onion, Clean, CQRS, … How I put it all together&quot;&lt;/a&gt; article, Herberto Graca&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Software Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Software-Architecture-Practice-3rd-Engineering/dp/0321815734&quot;&gt;&quot;Software Architecture in Practice (3rd Edition)&quot;&lt;/a&gt; book, Len Bass, Paul Clements, Rick Kazman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://softwarearchitecturefordevelopers.com/&quot;&gt;&quot;Software Architecture for Developers Vol 1 &amp;amp; 2&quot;&lt;/a&gt; book, Simon Brown&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Just-Enough-Software-Architecture-Risk-Driven/dp/0984618104&quot;&gt;&quot;Just Enough Software Architecture: A Risk-Driven Approach&quot;&lt;/a&gt; book, George H. Fairbanks&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Software-Systems-Architecture-Stakeholders-Perspectives/dp/032171833X/&quot;&gt;&quot;Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives (2nd Edition)&quot;&lt;/a&gt; book, Nick Rozanski, Eóin Woods&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Design-Programmer-Architect-Pragmatic-Programmers/dp/1680502093&quot;&gt;&quot;Design It!: From Programmer to Software Architect (The Pragmatic Programmers)&quot;&lt;/a&gt; book, Michael Keeling&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;System Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.enterpriseintegrationpatterns.com/&quot;&gt;&quot;Enterprise Integration Patterns : Designing, Building, and Deploying Messaging Solutions&quot;&lt;/a&gt; book and catalogue, Gregor Hohpe, Bobby Woolf&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Designing-Data-Intensive-Applications-Reliable-Maintainable/dp/1449373321&quot;&gt;&quot;Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems &quot;&lt;/a&gt; book, Martin Kleppman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Building-Evolutionary-Architectures-Support-Constant/dp/1491986360&quot;&gt;&quot;Building Evolutionary Architectures: Support Constant Change&quot;&lt;/a&gt; book, Neal Ford&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Building-Microservices-Designing-Fine-Grained-Systems/dp/1491950358&quot;&gt;&quot;Building Microservices: Designing Fine-Grained Systems&quot;&lt;/a&gt; book, Sam Newman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Design&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672&quot;&gt;&quot;Refactoring: Improving the Design of Existing Code&quot;&lt;/a&gt; book, Martin Fowler, Kent Beck, John Brant, William Opdyke, Don Roberts&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot;&gt;&quot;Clean Code: A Handbook of Agile Software Craftsmanship&quot;&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Agile-Principles-Patterns-Practices-C/dp/0131857258&quot;&gt;&quot;Agile Principles, Patterns, and Practices in C#&quot;&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Applying-UML-Patterns-Introduction-Object-Oriented/dp/0131489062&quot;&gt;&quot;Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development (3rd Edition)&quot;&lt;/a&gt; book, Craig Larman&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052&quot;&gt;&quot;Working Effectively with Legacy Code&quot;&lt;/a&gt; book, Michael Feathers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670&quot;&gt;&quot;Code Complete: A Practical Handbook of Software Construction, Second Edition&quot;&lt;/a&gt; book, Steve McConnell&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612&quot;&gt;&quot;Design Patterns: Elements of Reusable Object-Oriented Software&quot;&lt;/a&gt; book, Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Craftsmanship&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073&quot;&gt;&quot;The Clean Coder: A Code of Conduct for Professional Programmers&quot;&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X&quot;&gt;&quot;The Pragmatic Programmer: From Journeyman to Master&quot;&lt;/a&gt; book, Andrew Hunt&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Art-Unit-Testing-examples/dp/1617290890&quot;&gt;&quot;The Art of Unit Testing: with examples in C#&quot;&lt;/a&gt; book, Roy Osherove&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit&quot;&gt;&quot;Unit Test Your Architecture with ArchUnit&quot;&lt;/a&gt; article, Jonas Havers&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Unit-Testing-Principles-Practices-Patterns/dp/1617296279&quot;&gt;&quot;Unit Testing Principles, Practices, and Patterns&quot;&lt;/a&gt; book, Vladimir Khorikov&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Growing-Object-Oriented-Software-Guided-Tests/dp/0321503627&quot;&gt;&quot;Growing Object-Oriented Software, Guided by Tests&quot;&lt;/a&gt; book, Steve Freeman, Nat Pryce&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.kamilgrzybek.com/blog/series/automated-tests&quot;&gt;Automated Tests&lt;/a&gt; article series, Kamil Grzybek&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;UML&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/UML-Distilled-Standard-Modeling-Language/dp/0321193687&quot;&gt;&quot;UML Distilled: A Brief Guide to the Standard Object Modeling Language (3rd Edition)&quot;&lt;/a&gt; book, Martin Fowler&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Event Storming&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leanpub.com/introducing_eventstorming&quot;&gt;&quot;Introducing EventStorming&quot;&lt;/a&gt; book, Alberto Brandolini&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/mariuszgil/awesome-eventstorming&quot;&gt;&quot;Awesome EventStorming&quot;&lt;/a&gt; GH repository, Mariusz Gil&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Event Sourcing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Hands-Domain-Driven-Design-NET-ebook/dp/B07C5WSR9B&quot;&gt;&quot;Hands-On Domain-Driven Design with .NET Core: Tackling complexity in the heart of software by putting DDD principles into practice&quot;&lt;/a&gt; book, Alexey Zimarev&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://leanpub.com/esversioning&quot;&gt;&quot;Versioning in an Event Sourced System&quot;&lt;/a&gt; book, Greg Young&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/PacktPublishing/Hands-On-Domain-Driven-Design-with-.NET-Core&quot;&gt;Hands-On-Domain-Driven-Design-with-.NET-Core&lt;/a&gt; GH repository, Alexey Zimarev&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/oskardudycz/EventSourcing.NetCore&quot;&gt;EventSourcing.NetCore&lt;/a&gt; GH repository, Oskar Dudycz&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>rocksdanister/lively</title>
      <link>https://github.com/rocksdanister/lively</link>
      <description>&lt;p&gt;Free and open-source software that allows users to set animated desktop wallpapers and screensavers powered by WinUI 3.&lt;/p&gt;&lt;hr&gt;&lt;p align=&quot;center&quot;&gt; &lt;img alt=&quot;Files Logo&quot; src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/figma_promo_16x9.jpg&quot; width=&quot;450&quot; /&gt; &lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;Lively Wallpaper&lt;/h2&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/release/rocksdanister/lively/all.svg?sanitize=true&quot; alt=&quot;GitHub release&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rocksdanister/lively/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/rocksdanister/lively/total.svg?sanitize=true&quot; alt=&quot;Github all releases&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rocksdanister/lively/stargazers&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/rocksdanister/lively.svg?sanitize=true&quot; alt=&quot;GitHub stars&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rocksdanister/lively/wiki&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Docs-WIP-red.svg?sanitize=true&quot; alt=&quot;Documentation&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/rocksdanister/lively/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/rocksdanister/lively.svg?sanitize=true&quot; alt=&quot;Issues&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://crowdin.com/project/lively-wallpaper&quot;&gt;&lt;img src=&quot;https://badges.crowdin.net/lively-wallpaper/localized.svg?sanitize=true&quot; alt=&quot;Crowdin&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#features&quot;&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#download&quot;&gt;Download&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#support&quot;&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/main_preview.gif&quot; width=&quot;600&quot; height=&quot;338&quot; /&gt; 
&lt;p&gt;Animated desktop wallpapers, bring your desktop to life!&lt;/p&gt; 
&lt;h4&gt;Join Discussions:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/LivelyWallpaper/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/discussions/&quot;&gt;Github&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Wait a sec, preview gif clips take some time to load.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Types Of Wallpapers&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Wallpaper&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
   &lt;th&gt;Interactive&lt;/th&gt; 
   &lt;th&gt;Resolution&lt;/th&gt; 
   &lt;th&gt;Performance&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Video/GIF&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/wallpaper_video.gif&quot; width=&quot;256&quot; height=&quot;144&quot; /&gt;&lt;br /&gt;&lt;a href=&quot;https://www.pexels.com/video/blue-texture-abstract-leaves-7710243/&quot;&gt;Video&lt;/a&gt; by Rostislav Uzunov&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Fixed&lt;/td&gt; 
   &lt;td&gt;Fixed&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Webpage&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/wallpaper_html.gif&quot; width=&quot;256&quot; height=&quot;144&quot; /&gt;&lt;br /&gt;&lt;a href=&quot;http://louie.co.nz/25th_hour/&quot;&gt; 25th Hour&lt;/a&gt; by Loius Coyle&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Variable&lt;/td&gt; 
   &lt;td&gt;Variable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Application/Games&lt;/td&gt; 
   &lt;td&gt;&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/wallpaper_emulator.gif&quot; width=&quot;256&quot; height=&quot;144&quot; /&gt;&lt;br /&gt;Run Unity or Godot games as wallpaper&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Variable&lt;/td&gt; 
   &lt;td&gt;Variable&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Screensavers&lt;/h4&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/screen_saver.gif&quot; width=&quot;600&quot; height=&quot;338&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lively supports Windows screensaver.&lt;/li&gt; 
 &lt;li&gt;Any wallpaper can be used as screensaver.&lt;/li&gt; 
 &lt;li&gt;Multiple monitor supported.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Screen-Saver&quot;&gt;Learn more..&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Automation&lt;/h4&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/rotary_demo.gif&quot; width=&quot;600&quot; height=&quot;338&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lively can be controlled with command line arguments from terminal.&lt;/li&gt; 
 &lt;li&gt;Integrate with other languages like Python or scripting software AutoHotKey.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Command-Line-Controls&quot;&gt;Learn more..&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Lively API&lt;/h4&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/music_api.gif&quot; width=&quot;600&quot; height=&quot;338&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Powerful set of API for developers to create interactive wallpapers.&lt;/li&gt; 
 &lt;li&gt;Get hardware readings, audio graph, music information..&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/API&quot;&gt;Learn more..&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Machine Learning&lt;/h4&gt; 
&lt;img src=&quot;https://raw.githubusercontent.com/rocksdanister/lively/core-separation/resources/wallpaper_depth.gif&quot; width=&quot;600&quot; height=&quot;338&quot; /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Leverage Machine Learning inference to create dynamic wallpapers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Machine-Learning&quot;&gt;Learn more..&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;More Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimal webpage renderer powered by chromium.&lt;/li&gt; 
 &lt;li&gt;Hardware accelerated video playback using mpv/vlc player with customizable video filters.&lt;/li&gt; 
 &lt;li&gt;Easy to use; Just drag&#39;n&#39;drop media or webpages into lively to set as wallpaper.&lt;/li&gt; 
 &lt;li&gt;Latest Windows 11 design using WinUI 3 + WindowsAppSDK framework.&lt;/li&gt; 
 &lt;li&gt;Efficient, Lively is native application designed for Windows.&lt;/li&gt; 
 &lt;li&gt;Fully opensource &amp;amp; free; no blackmagic, no features behind paywall.&lt;/li&gt; 
 &lt;li&gt;Shadertoy.com urls are supported as wallpaper.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Performance&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Wallpaper playback pauses when fullscreen application/games run on the machine (~0% cpu, gpu usage).&lt;/li&gt; 
 &lt;li&gt;Set wallpaper playback rules based on running foreground application.&lt;/li&gt; 
 &lt;li&gt;Can be set to pause wallpaper when running on battery power (laptops.)&lt;/li&gt; 
 &lt;li&gt;Wallpaper automatically pauses when running remote desktop session.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Lively is not officially affiliated with Unity technologies, godot, shadertoy;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;h5&gt;Microsoft Store (Windows 10 1809 or above)&lt;/h5&gt; 
&lt;p&gt;&lt;a href=&quot;https://apps.microsoft.com/store/detail/9NTM2QC6QWS7&quot;&gt;&lt;img src=&quot;https://get.microsoft.com/images/en-us%20dark.svg?sanitize=true&quot; alt=&quot;Get it from Microsoft&quot; width=&quot;142px&quot; height=&quot;52px&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/releases/latest&quot;&gt;Installer (Windows 10 1903 or above)&lt;/a&gt;&lt;/h5&gt; 
&lt;p&gt;Installer may give Smartscreen warning, &lt;a href=&quot;https://github.com/rocksdanister/lively/issues/9&quot;&gt;discussion.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Differences-Between-Distributions&quot;&gt;Which version do I download?&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Are you a Lively fan and want to help out? here are some options..&lt;/p&gt; 
&lt;h4&gt;Programmer&lt;/h4&gt; 
&lt;p&gt;Code contributions are welcome, &lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Contributing-Guidelines&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Designer&lt;/h4&gt; 
&lt;p&gt;Help improve UI/UX of Lively, &lt;a href=&quot;https://github.com/rocksdanister/lively/wiki/Contributing-Guidelines&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Localization&lt;/h4&gt; 
&lt;p&gt;Help translate Lively to more languages, &lt;a href=&quot;https://github.com/rocksdanister/lively-translations&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Suggestions &amp;amp; Bug report&lt;/h4&gt; 
&lt;p&gt;Suggest new features or file bug reports to improve Lively, &lt;a href=&quot;https://github.com/rocksdanister/lively/issues&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Patreon&lt;/h4&gt; 
&lt;p&gt;Financially support Lively by become a patreon member and get your name listed in-app, &lt;a href=&quot;https://patreon.com/rocksdanister&quot;&gt;learn more..&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Spread the word&lt;/h4&gt; 
&lt;p&gt;Star this repository, leave a Microsoft store review or tell your friend.. any help is welcome :)&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Lively is licensed under &lt;a href=&quot;https://github.com/rocksdanister/lively/raw/core-separation/LICENSE&quot;&gt;GPL-v3.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>marticliment/UniGetUI</title>
      <link>https://github.com/marticliment/UniGetUI</link>
      <description>&lt;p&gt;UniGetUI: The Graphical Interface for your package managers. Could be terribly described as a package manager manager to manage your package managers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/icon.png&quot; height=&quot;40&quot; /&gt;UniGetUI (formerly WingetUI)&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/releases/latest/download/UniGetUI.Installer.exe&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/downloads/marticliment/UniGetUI/3.2.0/total?style=for-the-badge&quot; alt=&quot;Downloads@latest&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/marticliment/UniGetUI/releases&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/marticliment/UniGetUI?style=for-the-badge&quot; alt=&quot;Release Version Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/marticliment/UniGetUI/issues&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues/marticliment/UniGetUI?style=for-the-badge&quot; alt=&quot;Issues Badge&quot; /&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/marticliment/UniGetUI/issues?q=is%3Aissue+is%3Aclosed&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/issues-closed/marticliment/UniGetUI?color=%238256d0&amp;amp;style=for-the-badge&quot; alt=&quot;Closed Issues Badge&quot; /&gt;&lt;/a&gt;&lt;br /&gt; The main goal of this project is to create an intuitive GUI for the most common CLI package managers for Windows 10 and 11, such as &lt;a href=&quot;https://learn.microsoft.com/en-us/windows/package-manager/&quot;&gt;WinGet&lt;/a&gt;, &lt;a href=&quot;https://scoop.sh/&quot;&gt;Scoop&lt;/a&gt;, &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/&quot;&gt;Pip&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;Npm&lt;/a&gt;, &lt;a href=&quot;https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-tool-install&quot;&gt;.NET Tool&lt;/a&gt;, &lt;a href=&quot;https://www.powershellgallery.com/&quot;&gt;PowerShell Gallery&lt;/a&gt; and more (Check out the package manager compatibility table)!. With this app, you can easily download, install, update, and uninstall any software published on the supported package managers — and much more!&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/7cb447ca-ee8b-4bce-8561-b9332fb0139a&quot; alt=&quot;image&quot; /&gt; View more screenshots &lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#screenshots&quot;&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#supported-package-managers&quot;&gt;Supported Package Managers Table&lt;/a&gt; for more details!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This project has no connection with any supported package managers — it&#39;s completely unofficial. Be aware that I, the developer of UniGetUI, am NOT responsible for the downloaded software. Proceed with caution&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/actions/workflow/status/marticliment/WingetUI/dotnet-test.yml?branch=main&amp;amp;style=for-the-badge&amp;amp;label=Tests&quot; alt=&quot;GitHub Actions Workflow Status&quot; /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] &lt;strong&gt;The OFFICIAL website for UniGetUI is &lt;a href=&quot;https://www.marticliment.com/unigetui/&quot;&gt;https://www.marticliment.com/unigetui/&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;Any other website should be considered unofficial, despite what they may say.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;🔒 Found a security issue? Please report it via &lt;a href=&quot;https://whitehub.net/programs/unigetui/&quot;&gt;our disclosure program&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support the developer&lt;/h2&gt; 
&lt;p&gt;It really does make a big difference, and is very much appreciated. Thanks :)&lt;br /&gt; &lt;a href=&quot;https://ko-fi.com/P5P86KKPB&quot;&gt;&lt;img src=&quot;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&quot; alt=&quot;ko-fi&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.marticliment.com/unigetui/&quot;&gt;UniGetUI Homepage&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#table-of-contents&quot;&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#update-UniGetUI&quot;&gt;Update UniGetUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#support-the-developer&quot;&gt;Support the developer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#features&quot;&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#supported-package-managers&quot;&gt;Supported Package Managers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#translating-UniGetUI-to-other-languages&quot;&gt;Translating UniGetUI&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#currently-supported-languages&quot;&gt;Currently supported languages&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#contributors&quot;&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#screenshots&quot;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/#frequently-asked-questions&quot;&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/raw/main/cli-arguments.md&quot;&gt;Command-line Arguments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://hellogithub.com/repository/46bec642537f449a857215e39a1d64ae&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=46bec642537f449a857215e39a1d64ae&amp;amp;claim_uid=u6sFoX4hC2HztbD&amp;amp;theme=small&quot; alt=&quot;Featured｜HelloGitHub&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;There are multiple ways to install UniGetUI — choose whichever one you prefer!&lt;/p&gt; 
&lt;h3&gt;Microsoft Store installation (recommended)&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://apps.microsoft.com/detail/xpfftq032ptphf&quot;&gt;&lt;img alt=&quot;alt_text&quot; width=&quot;240px&quot; src=&quot;https://get.microsoft.com/images/en-us%20dark.svg?sanitize=true&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Download UniGetUI installer:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/github/v/release/marticliment/UniGetUI?style=for-the-badge&quot; alt=&quot;GitHub Release&quot; /&gt;&lt;/p&gt; 
&lt;p align=&quot;left&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/releases/latest/download/WingetUI.Installer.exe&quot;&gt;Click here to download UniGetUI&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; 
&lt;h3&gt;Install UniGetUI via WinGet:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/winget/v/MartiCliment.UniGetUI?style=for-the-badge&quot; alt=&quot;WinGet Package Version&quot; /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;winget install --exact --id MartiCliment.UniGetUI --source winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install UniGetUI via Scoop:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/scoop/v/unigetui?bucket=extras&amp;amp;style=for-the-badge&quot; alt=&quot;Scoop version&quot; /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;scoop bucket add extras
scoop install extras/unigetui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install UniGetUI via Chocolatey:&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://img.shields.io/chocolatey/v/wingetui?style=for-the-badge&quot; alt=&quot;Chocolatey Version&quot; /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;choco install wingetui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Update UniGetUI&lt;/h2&gt; 
&lt;p&gt;UniGetUI has a built-in autoupdater. However, it can also be updated like any other package within UniGetUI (since UniGetUI is available from WinGet, Scoop and Chocolatey).&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install, update, and remove software from your system easily at one click: UniGetUI combines the packages from the most used package managers for windows: Winget, Chocolatey, Scoop, Pip, Npm and .NET Tool.&lt;/li&gt; 
 &lt;li&gt;Discover new packages and filter them to easily find the package you want.&lt;/li&gt; 
 &lt;li&gt;View detailed metadata about any package before installing it. Get the direct download URL or the name of the publisher, as well as the size of the download.&lt;/li&gt; 
 &lt;li&gt;Easily bulk-install, update, or uninstall multiple packages at once selecting multiple packages before performing an operation&lt;/li&gt; 
 &lt;li&gt;Automatically update packages, or be notified when updates become available. Skip versions or completely ignore updates on a per-package basis.&lt;/li&gt; 
 &lt;li&gt;Manage your available updates at the touch of a button from the &lt;strong&gt;Widgets pane&lt;/strong&gt; or from &lt;strong&gt;Dev Home&lt;/strong&gt; pane with &lt;a href=&quot;https://apps.microsoft.com/detail/9NB9M5KZ8SLX&quot;&gt;Widgets for UniGetUI&lt;/a&gt;*.&lt;/li&gt; 
 &lt;li&gt;The system tray icon will also show the available updates and installed packages, to efficiently update a program or remove a package from your system.&lt;/li&gt; 
 &lt;li&gt;Easily customize how and where packages are installed. Select different installation options and switches for each package. Install an older version or force to install a 32 bit architecture. [But don&#39;t worry, those options will be saved for future updates for this package*]&lt;/li&gt; 
 &lt;li&gt;Share packages with your friends to show them off that program you found. Here is an example: &lt;a href=&quot;https://marticliment.com/unigetui/share/?pname=Google%20Chrome&amp;amp;pid=Google.Chrome&amp;amp;psource=Winget:%20winget&quot;&gt;Hey @friend, Check out this program!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Export custom lists of packages to then import them to another machine and install those packages with previously specified, custom installation parameters. Setting up machines or configuring a specific software setup has never been easier.&lt;/li&gt; 
 &lt;li&gt;Backup your packages to a local file to easily recover your setup in a matter of seconds when migrating to a new machine*&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Package Managers&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; All package managers do support basic install, update, and uninstall processes, as well as checking for updates, finding new packages, and retrieving details from a package.&lt;/p&gt; 
&lt;img src=&quot;https://marticliment.com/unigetui/extra/supported-managers.svg?sanitize=true&quot; /&gt; 
&lt;p&gt;✅: Supported on UniGetUI&lt;br /&gt; ☑️: Not directly supported but can be easily achieved&lt;br /&gt; ⚠️: May not work in some cases&lt;br /&gt; ❌: Not supported by the Package Manager&lt;br /&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;h1&gt;Translating UniGetUI to other languages&lt;/h1&gt; 
&lt;p&gt;To translate UniGetUI to other languages or to update an old translation, please see &lt;a href=&quot;https://github.com/marticliment/UniGetUI/wiki#translating-wingetui&quot;&gt;Translating UniGetUI - UniGetUI Wiki&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;Currently Supported languages&lt;/h2&gt; 
&lt;!-- Autogenerated translations --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;left&quot;&gt;Language&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;Translated&lt;/th&gt; 
   &lt;th&gt;Translator(s)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/af.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Afrikaans - Afrikaans&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;86%&lt;/td&gt; 
   &lt;td&gt;Hendrik Bezuidenhout&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/sa.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Arabic - عربي‎&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;87%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Abdu11ahAS&quot;&gt;Abdu11ahAS&lt;/a&gt;, &lt;a href=&quot;https://github.com/Abdullah-Dev115&quot;&gt;Abdullah-Dev115&lt;/a&gt;, &lt;a href=&quot;https://github.com/AbdullahAlousi&quot;&gt;AbdullahAlousi&lt;/a&gt;, &lt;a href=&quot;https://github.com/bassuny3003&quot;&gt;bassuny3003&lt;/a&gt;, &lt;a href=&quot;https://github.com/DaRandomCube&quot;&gt;DaRandomCube&lt;/a&gt;, &lt;a href=&quot;https://github.com/FancyCookin&quot;&gt;FancyCookin&lt;/a&gt;, &lt;a href=&quot;https://github.com/IFrxo&quot;&gt;IFrxo&lt;/a&gt;, &lt;a href=&quot;https://github.com/mo9a7i&quot;&gt;mo9a7i&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/by.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Belarusian - беларуская&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;5%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/bthos&quot;&gt;bthos&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/bg.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Bulgarian - български&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;38%&lt;/td&gt; 
   &lt;td&gt;Vasil Kolev&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/bd.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Bangla - বাংলা&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;58%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/fluentmoheshwar&quot;&gt;fluentmoheshwar&lt;/a&gt;, &lt;a href=&quot;https://github.com/itz-rj-here&quot;&gt;itz-rj-here&lt;/a&gt;, Mushfiq Iqbal Rayon, Nilavra Bhattacharya, &lt;a href=&quot;https://github.com/samiulislamsharan&quot;&gt;samiulislamsharan&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ad.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Catalan - Català&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/cz.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Czech - Čeština&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/mlisko&quot;&gt;mlisko&lt;/a&gt;, &lt;a href=&quot;https://github.com/panther7&quot;&gt;panther7&lt;/a&gt;, &lt;a href=&quot;https://github.com/xtorlukas&quot;&gt;xtorlukas&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/dk.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Danish - Dansk&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;81%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/AAUCrisp&quot;&gt;AAUCrisp&lt;/a&gt;, &lt;a href=&quot;https://github.com/bstordrup&quot;&gt;bstordrup&lt;/a&gt;, &lt;a href=&quot;https://github.com/mikkolukas&quot;&gt;mikkolukas&lt;/a&gt;, &lt;a href=&quot;https://github.com/siewers&quot;&gt;siewers&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/de.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; German - Deutsch&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/1270o1&quot;&gt;1270o1&lt;/a&gt;, &lt;a href=&quot;https://github.com/alxhu-dev&quot;&gt;alxhu-dev&lt;/a&gt;, &lt;a href=&quot;https://github.com/Araxxas&quot;&gt;Araxxas&lt;/a&gt;, &lt;a href=&quot;https://github.com/arnowelzel&quot;&gt;arnowelzel&lt;/a&gt;, &lt;a href=&quot;https://github.com/CanePlayz&quot;&gt;CanePlayz&lt;/a&gt;, &lt;a href=&quot;https://github.com/Datacra5H&quot;&gt;Datacra5H&lt;/a&gt;, &lt;a href=&quot;https://github.com/ebnater&quot;&gt;ebnater&lt;/a&gt;, &lt;a href=&quot;https://github.com/martinwilco&quot;&gt;martinwilco&lt;/a&gt;, &lt;a href=&quot;https://github.com/michaelmairegger&quot;&gt;michaelmairegger&lt;/a&gt;, &lt;a href=&quot;https://github.com/Seeloewen&quot;&gt;Seeloewen&lt;/a&gt;, &lt;a href=&quot;https://github.com/TheScarfix&quot;&gt;TheScarfix&lt;/a&gt;, &lt;a href=&quot;https://github.com/tkohlmeier&quot;&gt;tkohlmeier&lt;/a&gt;, &lt;a href=&quot;https://github.com/VfBFan&quot;&gt;VfBFan&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/gr.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Greek - Ελληνικά&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/antwnhsx&quot;&gt;antwnhsx&lt;/a&gt;, &lt;a href=&quot;https://github.com/panos78&quot;&gt;panos78&lt;/a&gt;, &lt;a href=&quot;https://github.com/seijind&quot;&gt;seijind&lt;/a&gt;, &lt;a href=&quot;https://github.com/thunderstrike116&quot;&gt;thunderstrike116&lt;/a&gt;, &lt;a href=&quot;https://github.com/wobblerrrgg&quot;&gt;wobblerrrgg&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ee.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Estonian - Eesti&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;40%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/artjom3729&quot;&gt;artjom3729&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/gb.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; English - English&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/lucadsign&quot;&gt;lucadsign&lt;/a&gt;, &lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;, &lt;a href=&quot;https://github.com/ppvnf&quot;&gt;ppvnf&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/es.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Spanish - Castellano&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apazga&quot;&gt;apazga&lt;/a&gt;, &lt;a href=&quot;https://github.com/dalbitresb12&quot;&gt;dalbitresb12&lt;/a&gt;, &lt;a href=&quot;https://github.com/evaneliasyoung&quot;&gt;evaneliasyoung&lt;/a&gt;, &lt;a href=&quot;https://github.com/guplem&quot;&gt;guplem&lt;/a&gt;, &lt;a href=&quot;https://github.com/JMoreno97&quot;&gt;JMoreno97&lt;/a&gt;, &lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;, &lt;a href=&quot;https://github.com/P10Designs&quot;&gt;P10Designs&lt;/a&gt;, &lt;a href=&quot;https://github.com/rubnium&quot;&gt;rubnium&lt;/a&gt;, &lt;a href=&quot;https://github.com/uKER&quot;&gt;uKER&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ir.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Persian - فارسی‎&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/MobinMardi&quot;&gt;MobinMardi&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/fi.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Finnish - Suomi&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/simakuutio&quot;&gt;simakuutio&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/fil.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Filipino - Filipino&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;96%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/infyProductions&quot;&gt;infyProductions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/fr.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; French - Français&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;BreatFR, &lt;a href=&quot;https://github.com/Entropiness&quot;&gt;Entropiness&lt;/a&gt;, Evans Costa, &lt;a href=&quot;https://github.com/PikPakPik&quot;&gt;PikPakPik&lt;/a&gt;, Rémi Guerrero, &lt;a href=&quot;https://github.com/W1L7dev&quot;&gt;W1L7dev&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Gujarati - ગુજરાતી&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;6%&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Hindi - हिंदी&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;35%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Ashu-r&quot;&gt;Ashu-r&lt;/a&gt;, &lt;a href=&quot;https://github.com/atharva_xoxo&quot;&gt;atharva_xoxo&lt;/a&gt;, &lt;a href=&quot;https://github.com/satanarious&quot;&gt;satanarious&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/hr.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Croatian - Hrvatski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/AndrejFeher&quot;&gt;AndrejFeher&lt;/a&gt;, Ivan Nuić, Stjepan Treger&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/il.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Hebrew - עִבְרִית‎&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/lucadsign&quot;&gt;lucadsign&lt;/a&gt;, &lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;, &lt;a href=&quot;https://github.com/ppvnf&quot;&gt;ppvnf&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/hu.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Hungarian - Magyar&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/gidano&quot;&gt;gidano&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/it.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Italian - Italiano&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;David Senoner, &lt;a href=&quot;https://github.com/giacobot&quot;&gt;giacobot&lt;/a&gt;, &lt;a href=&quot;https://github.com/maicol07&quot;&gt;maicol07&lt;/a&gt;, &lt;a href=&quot;https://github.com/mapi68&quot;&gt;mapi68&lt;/a&gt;, &lt;a href=&quot;https://github.com/mrfranza&quot;&gt;mrfranza&lt;/a&gt;, Rosario Di Mauro&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/id.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Indonesian - Bahasa Indonesia&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/agrinfauzi&quot;&gt;agrinfauzi&lt;/a&gt;, &lt;a href=&quot;https://github.com/arthackrc&quot;&gt;arthackrc&lt;/a&gt;, &lt;a href=&quot;https://github.com/joenior&quot;&gt;joenior&lt;/a&gt;, &lt;a href=&quot;https://github.com/nrarfn&quot;&gt;nrarfn&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/jp.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Japanese - 日本語&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/anmoti&quot;&gt;anmoti&lt;/a&gt;, &lt;a href=&quot;https://github.com/BHCrusher1&quot;&gt;BHCrusher1&lt;/a&gt;, &lt;a href=&quot;https://github.com/nob-swik&quot;&gt;nob-swik&lt;/a&gt;, Nobuhiro Shintaku, sho9029, &lt;a href=&quot;https://github.com/tacostea&quot;&gt;tacostea&lt;/a&gt;, Yuki Takase&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ka.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Georgian - ქართული&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/marticliment&quot;&gt;marticliment&lt;/a&gt;, &lt;a href=&quot;https://github.com/ppvnf&quot;&gt;ppvnf&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Kannada - ಕನ್ನಡ&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;9%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/skanda890&quot;&gt;skanda890&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/kr.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Korean - 한국어&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/jihoon416&quot;&gt;jihoon416&lt;/a&gt;, &lt;a href=&quot;https://github.com/minbert&quot;&gt;minbert&lt;/a&gt;, &lt;a href=&quot;https://github.com/MuscularPuky&quot;&gt;MuscularPuky&lt;/a&gt;, &lt;a href=&quot;https://github.com/shblue21&quot;&gt;shblue21&lt;/a&gt;, &lt;a href=&quot;https://github.com/thejjw&quot;&gt;thejjw&lt;/a&gt;, &lt;a href=&quot;https://github.com/VenusGirl&quot;&gt;VenusGirl&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/lt.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Lithuanian - Lietuvių&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;81%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/dziugas1959&quot;&gt;dziugas1959&lt;/a&gt;, Džiugas Januševičius, &lt;a href=&quot;https://github.com/martyn3z&quot;&gt;martyn3z&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/mk.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Macedonian - Македонски&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;40%&lt;/td&gt; 
   &lt;td&gt;LordDeatHunter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/no.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Norwegian (bokmål)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;69%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/mikaelkw&quot;&gt;mikaelkw&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/no.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Norwegian (nynorsk)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;64%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/yrjarv&quot;&gt;yrjarv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/nl.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Dutch - Nederlands&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/abbydiode&quot;&gt;abbydiode&lt;/a&gt;, &lt;a href=&quot;https://github.com/CateyeNL&quot;&gt;CateyeNL&lt;/a&gt;, &lt;a href=&quot;https://github.com/mia-riezebos&quot;&gt;mia-riezebos&lt;/a&gt;, &lt;a href=&quot;https://github.com/Stephan-P&quot;&gt;Stephan-P&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/pl.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Polish - Polski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/GrzegorzKi&quot;&gt;GrzegorzKi&lt;/a&gt;, &lt;a href=&quot;https://github.com/H4qu3r&quot;&gt;H4qu3r&lt;/a&gt;, &lt;a href=&quot;https://github.com/ikarmus2001&quot;&gt;ikarmus2001&lt;/a&gt;, &lt;a href=&quot;https://github.com/juliazero&quot;&gt;juliazero&lt;/a&gt;, &lt;a href=&quot;https://github.com/KamilZielinski&quot;&gt;KamilZielinski&lt;/a&gt;, &lt;a href=&quot;https://github.com/kwiateusz&quot;&gt;kwiateusz&lt;/a&gt;, &lt;a href=&quot;https://github.com/RegularGvy13&quot;&gt;RegularGvy13&lt;/a&gt;, &lt;a href=&quot;https://github.com/szumsky&quot;&gt;szumsky&lt;/a&gt;, &lt;a href=&quot;https://github.com/ThePhaseless&quot;&gt;ThePhaseless&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/br.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Portuguese (Brazil)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/maisondasilva&quot;&gt;maisondasilva&lt;/a&gt;, &lt;a href=&quot;https://github.com/ppvnf&quot;&gt;ppvnf&lt;/a&gt;, &lt;a href=&quot;https://github.com/Rodrigo-Matsuura&quot;&gt;Rodrigo-Matsuura&lt;/a&gt;, &lt;a href=&quot;https://github.com/thiagojramos&quot;&gt;thiagojramos&lt;/a&gt;, &lt;a href=&quot;https://github.com/wanderleihuttel&quot;&gt;wanderleihuttel&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/pt.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Portuguese (Portugal)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;93%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/100Nome&quot;&gt;100Nome&lt;/a&gt;, &lt;a href=&quot;https://github.com/PoetaGA&quot;&gt;PoetaGA&lt;/a&gt;, &lt;a href=&quot;https://github.com/Putocoroa&quot;&gt;Putocoroa&lt;/a&gt;, &lt;a href=&quot;https://github.com/Tiago_Ferreira&quot;&gt;Tiago_Ferreira&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ro.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Romanian - Română&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/David735453&quot;&gt;David735453&lt;/a&gt;, &lt;a href=&quot;https://github.com/lucadsign&quot;&gt;lucadsign&lt;/a&gt;, &lt;a href=&quot;https://github.com/SilverGreen93&quot;&gt;SilverGreen93&lt;/a&gt;, TZACANEL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ru.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Russian - Русский&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;Alexander, &lt;a href=&quot;https://github.com/bropines&quot;&gt;bropines&lt;/a&gt;, &lt;a href=&quot;https://github.com/Denisskas&quot;&gt;Denisskas&lt;/a&gt;, &lt;a href=&quot;https://github.com/DvladikD&quot;&gt;DvladikD&lt;/a&gt;, &lt;a href=&quot;https://github.com/flatron4eg&quot;&gt;flatron4eg&lt;/a&gt;, Gleb Saygin, &lt;a href=&quot;https://github.com/katrovsky&quot;&gt;katrovsky&lt;/a&gt;, Sergey, sklart, &lt;a href=&quot;https://github.com/solarscream&quot;&gt;solarscream&lt;/a&gt;, &lt;a href=&quot;https://github.com/tapnisu&quot;&gt;tapnisu&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/in.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Sanskrit - संस्कृत भाषा&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;8%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/skanda890&quot;&gt;skanda890&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/sk.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Slovak - Slovenčina&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;8%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/Luk164&quot;&gt;Luk164&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/rs.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Serbian - Srpski&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;73%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/daVinci13&quot;&gt;daVinci13&lt;/a&gt;, &lt;a href=&quot;https://github.com/momcilovicluka&quot;&gt;momcilovicluka&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/al.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Albanian - Shqip&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/RDN000&quot;&gt;RDN000&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/lk.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Sinhala - සිංහල&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;10%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/SashikaSandeepa&quot;&gt;SashikaSandeepa&lt;/a&gt;, &lt;a href=&quot;https://github.com/Savithu-s3&quot;&gt;Savithu-s3&lt;/a&gt;, &lt;a href=&quot;https://github.com/ttheek&quot;&gt;ttheek&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/si.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Slovene - Slovenščina&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;86%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/rumplin&quot;&gt;rumplin&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/se.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Swedish - Svenska&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/curudel&quot;&gt;curudel&lt;/a&gt;, &lt;a href=&quot;https://github.com/Hi-there-how-are-u&quot;&gt;Hi-there-how-are-u&lt;/a&gt;, &lt;a href=&quot;https://github.com/kakmonster&quot;&gt;kakmonster&lt;/a&gt;, &lt;a href=&quot;https://github.com/umeaboy&quot;&gt;umeaboy&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ta.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Tamil - தமிழ்&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;4%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/nochilli&quot;&gt;nochilli&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ph.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Tagalog - Tagalog&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;12%&lt;/td&gt; 
   &lt;td&gt;lasersPew, &lt;a href=&quot;https://github.com/znarfm&quot;&gt;znarfm&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/th.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Thai - ภาษาไทย&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;79%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/apaeisara&quot;&gt;apaeisara&lt;/a&gt;, &lt;a href=&quot;https://github.com/dulapahv&quot;&gt;dulapahv&lt;/a&gt;, &lt;a href=&quot;https://github.com/hanchain&quot;&gt;hanchain&lt;/a&gt;, &lt;a href=&quot;https://github.com/rikoprushka&quot;&gt;rikoprushka&lt;/a&gt;, &lt;a href=&quot;https://github.com/vestearth&quot;&gt;vestearth&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/tr.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Turkish - Türkçe&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/ahmetozmtn&quot;&gt;ahmetozmtn&lt;/a&gt;, &lt;a href=&quot;https://github.com/BerkeA111&quot;&gt;BerkeA111&lt;/a&gt;, [dogancanyr @anzeralp](&lt;a href=&quot;https://github.com/dogancanyr&quot;&gt;https://github.com/dogancanyr&lt;/a&gt; @anzeralp), &lt;a href=&quot;https://github.com/gokberkgs&quot;&gt;gokberkgs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/ua.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Ukrainian - Українська&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;Alex Logvin, Artem Moldovanenko, Operator404, &lt;a href=&quot;https://github.com/Taron-art&quot;&gt;Taron-art&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/pk.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Urdu - اردو&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;81%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/digitio&quot;&gt;digitio&lt;/a&gt;, &lt;a href=&quot;https://github.com/digitpk&quot;&gt;digitpk&lt;/a&gt;, &lt;a href=&quot;https://github.com/hamzaharoon1314&quot;&gt;hamzaharoon1314&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/vn.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Vietnamese - Tiếng Việt&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;&lt;a href=&quot;https://github.com/aethervn2309&quot;&gt;aethervn2309&lt;/a&gt;, &lt;a href=&quot;https://github.com/legendsjoon&quot;&gt;legendsjoon&lt;/a&gt;, &lt;a href=&quot;https://github.com/txavlog&quot;&gt;txavlog&lt;/a&gt;, &lt;a href=&quot;https://github.com/vanlongluuly&quot;&gt;vanlongluuly&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/cn.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Simplified Chinese (China)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;100%&lt;/td&gt; 
   &lt;td&gt;Aaron Liu, adfnekc, &lt;a href=&quot;https://github.com/Ardenet&quot;&gt;Ardenet&lt;/a&gt;, &lt;a href=&quot;https://github.com/arthurfsy2&quot;&gt;arthurfsy2&lt;/a&gt;, &lt;a href=&quot;https://github.com/bai0012&quot;&gt;bai0012&lt;/a&gt;, BUGP Association, ciaran, CnYeSheng, Cololi, &lt;a href=&quot;https://github.com/dongfengweixiao&quot;&gt;dongfengweixiao&lt;/a&gt;, &lt;a href=&quot;https://github.com/enKl03B&quot;&gt;enKl03B&lt;/a&gt;, &lt;a href=&quot;https://github.com/seanyu0&quot;&gt;seanyu0&lt;/a&gt;, &lt;a href=&quot;https://github.com/Sigechaishijie&quot;&gt;Sigechaishijie&lt;/a&gt;, &lt;a href=&quot;https://github.com/SpaceTimee&quot;&gt;SpaceTimee&lt;/a&gt;, &lt;a href=&quot;https://github.com/xiaopangju&quot;&gt;xiaopangju&lt;/a&gt;, Yisme&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;left&quot;&gt;&lt;img src=&quot;https://flagcdn.com/tw.svg?sanitize=true&quot; width=&quot;20&quot; /&gt; &amp;nbsp; Traditional Chinese (Taiwan)&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;99%&lt;/td&gt; 
   &lt;td&gt;Aaron Liu, CnYeSheng, Cololi, &lt;a href=&quot;https://github.com/enKl03B&quot;&gt;enKl03B&lt;/a&gt;, &lt;a href=&quot;https://github.com/Henryliu880922&quot;&gt;Henryliu880922&lt;/a&gt;, &lt;a href=&quot;https://github.com/StarsShine11904&quot;&gt;StarsShine11904&lt;/a&gt;, &lt;a href=&quot;https://github.com/yrctw&quot;&gt;yrctw&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Last updated: Sun Sep 21 00:36:30 2025&lt;/p&gt; 
&lt;!-- END Autogenerated translations --&gt; 
&lt;h1&gt;Contributions&lt;/h1&gt; 
&lt;p&gt;UniGetUI wouldn&#39;t have been possible without the help of our dear contributors. From the person who fixed a typo to the person who improved half of the code, UniGetUI wouldn&#39;t be possible without them! &lt;span&gt;😄&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors:&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/marticliment/UniGetUI/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=marticliment/UniGetUI&quot; alt=&quot;My dear contributors&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h1&gt;Screenshots&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_1.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_2.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_3.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_4.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_5.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_6.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_7.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_8.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_9.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/marticliment/UniGetUI/main/media/UniGetUI_10.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;Frequently asked questions&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: I am unable to install or upgrade a specific Winget package! What should I do?&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;A: This is likely an issue with Winget rather than UniGetUI.&lt;/p&gt; 
&lt;p&gt;Please check if it&#39;s possible to install/upgrade the package through PowerShell or the Command Prompt by using the commands &lt;code&gt;winget upgrade&lt;/code&gt; or &lt;code&gt;winget install&lt;/code&gt;, depending on the situation (for example: &lt;code&gt;winget upgrade --id Microsoft.PowerToys&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;If this doesn&#39;t work, consider asking for help at &lt;a href=&quot;https://github.com/microsoft/winget-cli&quot;&gt;Winget&#39;s project page&lt;/a&gt;.&lt;br /&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: The name of a package is trimmed with ellipsis — how do I see its full name/id?&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;A: This is a known limitation of Winget.&lt;/p&gt; 
&lt;p&gt;For more details, see this issue: &lt;a href=&quot;https://github.com/microsoft/winget-cli/issues/2603&quot;&gt;https://github.com/microsoft/winget-cli/issues/2603&lt;/a&gt;.&lt;br /&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: My antivirus is telling me that UniGetUI is a virus! / My browser is blocking the download of UniGetUI!&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;A: A common reason apps (i.e., executables) get blocked and/or detected as a virus — even when there&#39;s nothing malicious about them, like in the case of UniGetUI — is because a relatively large amount of people are not using them.&lt;/p&gt; 
&lt;p&gt;Combine that with the fact that you might be downloading something recently released, and blocking unknown apps is in many cases a good precaution to take to prevent actual malware.&lt;/p&gt; 
&lt;p&gt;Since UniGetUI is open source and safe to use, whitelist the app in the settings of your antivirus/browser.&lt;br /&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Q: Are Winget/Scoop packages safe?&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;A: UniGetUI, Microsoft, and Scoop aren&#39;t responsible for the packages available for download, which are provided by third parties and can theoretically be compromised.&lt;/p&gt; 
&lt;p&gt;Microsoft has implemented a few checks for the software available on Winget to mitigate the risks of downloading malware. Even so, it&#39;s recommended that you only download software from trusted publishers.&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;&lt;i&gt;Check out the &lt;a href=&quot;https://github.com/marticliment/UniGetUI/wiki&quot;&gt;Wiki&lt;/a&gt; for more information!&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;h2&gt;Command-line parameters:&lt;/h2&gt; 
&lt;p&gt;Check out the full list of parameters &lt;a href=&quot;https://github.com/marticliment/UniGetUI/raw/main/cli-arguments.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fullstackhero/dotnet-starter-kit</title>
      <link>https://github.com/fullstackhero/dotnet-starter-kit</link>
      <description>&lt;p&gt;Production Grade Cloud-Ready .NET 9 Starter Kit (Web API + Blazor Client) with Multitenancy Support, and Clean/Modular Architecture that saves roughly 200+ Development Hours! All Batteries Included.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FullStackHero .NET 9 Starter Kit 🚀&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;With ASP.NET Core Web API &amp;amp; Blazor Client&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;FullStackHero .NET Starter Kit is a starting point for your next &lt;code&gt;.NET 9 Clean Architecture&lt;/code&gt; Solution that incorporates the most essential packages and features your projects will ever need including out-of-the-box Multi-Tenancy support. This project can save well over 200+ hours of development time for your team.&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fullstackhero/dotnet-starter-kit/main/assets/fullstackhero-dotnet-starter-kit.png&quot; alt=&quot;FullStackHero .NET Starter Kit&quot; /&gt;&lt;/p&gt; 
&lt;h1&gt;Important&lt;/h1&gt; 
&lt;p&gt;This project is currently work in progress. The NuGet package is not yet available for v2. For now, you can fork this repository to try it out. &lt;a href=&quot;https://x.com/iammukeshm&quot;&gt;Follow @iammukeshm on X&lt;/a&gt; for project related updates.&lt;/p&gt; 
&lt;h1&gt;Quick Start Guide&lt;/h1&gt; 
&lt;p&gt;As the project is still in beta, the NuGet packages are not yet available. You can try out the project by pulling the code directly from this repository.&lt;/p&gt; 
&lt;p&gt;Prerequisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;.NET 9 SDK installed.&lt;/li&gt; 
 &lt;li&gt;Visual Studio IDE.&lt;/li&gt; 
 &lt;li&gt;Docker Desktop.&lt;/li&gt; 
 &lt;li&gt;PostgreSQL instance running on your machine or docker container.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please follow the below instructions.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork this repository to your local.&lt;/li&gt; 
 &lt;li&gt;Open up the &lt;code&gt;./src/FSH.Starter.sln&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;This would up the FSH Starter solution which has 3 main components. 
  &lt;ol&gt; 
   &lt;li&gt;Aspire Dashboard (set as the default project)&lt;/li&gt; 
   &lt;li&gt;Web API&lt;/li&gt; 
   &lt;li&gt;Blazor&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Now we will have to set the connection string for the API. Navigate to &lt;code&gt;./src/api/server/appsettings.Development.json&lt;/code&gt; and change the &lt;code&gt;ConnectionString&lt;/code&gt; under &lt;code&gt;DatabaseOptions&lt;/code&gt;. Save it.&lt;/li&gt; 
 &lt;li&gt;Once that is done, run the application via Visual Studio, with Aspire as the default project. This will open up Aspire Dashboard at &lt;code&gt;https://localhost:7200/&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;API will be running at &lt;code&gt;https://localhost:7000/swagger/index.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Blazor will be running at &lt;code&gt;https://localhost:7100/&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;🔎 The Project&lt;/h1&gt; 
&lt;h1&gt;✨ Technologies&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;.NET 9&lt;/li&gt; 
 &lt;li&gt;Entity Framework Core 9&lt;/li&gt; 
 &lt;li&gt;Blazor&lt;/li&gt; 
 &lt;li&gt;MediatR&lt;/li&gt; 
 &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;li&gt;Redis&lt;/li&gt; 
 &lt;li&gt;FluentValidation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;👨‍🚀 Architecture&lt;/h1&gt; 
&lt;h1&gt;📬 Service Endpoints&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Endpoint&lt;/th&gt; 
   &lt;th&gt;Method&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/token&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;Generates Token.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;🧪 Running Locally&lt;/h1&gt; 
&lt;h1&gt;🐳 Docker Support&lt;/h1&gt; 
&lt;h1&gt;☁️ Deploying to AWS&lt;/h1&gt; 
&lt;h1&gt;🤝 Contributing&lt;/h1&gt; 
&lt;h1&gt;🍕 Community&lt;/h1&gt; 
&lt;p&gt;Thanks to the community who contribute to this repository! &lt;a href=&quot;https://raw.githubusercontent.com/fullstackhero/dotnet-starter-kit/main/CONTRIBUTING.md&quot;&gt;Submit your PR and join the elite list!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/fullstackhero/dotnet-starter-kit/graphs/contributors&quot;&gt;&lt;img src=&quot;https://contrib.rocks/image?repo=fullstackhero/dotnet-starter-kit&quot; alt=&quot;FullStackHero .NET Starter Kit Contributors&quot; title=&quot;FullStackHero .NET Starter Kit Contributors&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;📝 Notes&lt;/h1&gt; 
&lt;h2&gt;Add Migrations&lt;/h2&gt; 
&lt;p&gt;Navigate to &lt;code&gt;./api/server&lt;/code&gt; and run the following EF CLI commands.&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;dotnet ef migrations add &quot;Add Identity Schema&quot; --project .././migrations/postgresql/ --context IdentityDbContext -o Identity
dotnet ef migrations add &quot;Add Tenant Schema&quot; --project .././migrations/postgresql/ --context TenantDbContext -o Tenant
dotnet ef migrations add &quot;Add Todo Schema&quot; --project .././migrations/postgresql/ --context TodoDbContext -o Todo
dotnet ef migrations add &quot;Add Catalog Schema&quot; --project .././migrations/postgresql/ --context CatalogDbContext -o Catalog
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What&#39;s Pending?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Few Identity Endpoints&lt;/li&gt; 
 &lt;li&gt;Blazor Client&lt;/li&gt; 
 &lt;li&gt;File Storage Service&lt;/li&gt; 
 &lt;li&gt;NuGet Generation Pipeline&lt;/li&gt; 
 &lt;li&gt;Source Code Generation&lt;/li&gt; 
 &lt;li&gt;Searching / Sorting&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;⚖️ LICENSE&lt;/h1&gt; 
&lt;p&gt;MIT © &lt;a href=&quot;https://raw.githubusercontent.com/fullstackhero/dotnet-starter-kit/main/LICENSE&quot;&gt;fullstackhero&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
